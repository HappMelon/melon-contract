{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xB11e62101340eD1b72D16e67d1Ed53B2Fe87fd03",
      "txHash": "0x4cb8d6f672092505016ce4c009806d01ede9c8a4be47bafe50b8930a29e1398f",
      "kind": "uups"
    },
    {
      "address": "0x5Ff86D195677e4F9E7b4d20A904d3f48F150986a",
      "txHash": "0x212c854f34c7e5eb9f5aeb59da4d11819413ad5726467c6a6281091289e0abb6",
      "kind": "uups"
    },
    {
      "address": "0xd9CBa65D921b7919Bb765FE4E79cA567A86Fb0e9",
      "txHash": "0x1ef891e1f7bfa8038f46664028453deb10c341e61dddb436e17464b2f06c6bf9",
      "kind": "uups"
    },
    {
      "address": "0x9804B7B4d4b80F1B32728EDf0f4F24f87B2d980E",
      "txHash": "0x7c6b41934427cb6a942bcaa76152632f5a59062eb78d625c07c93ac32a3fd3ff",
      "kind": "uups"
    },
    {
      "address": "0x68386FaD40442a9D0C189FB087b8633dde79AF5a",
      "txHash": "0x78473633f3a7bc67278a38a3e2e338fceec76328b1670ec6410a12107e61ba79",
      "kind": "uups"
    },
    {
      "address": "0xD27846d59667A7410880fEe153C801Ca41466b20",
      "txHash": "0x92af6bc5ae9769b1bb9eaa90d2c11e13482d0bf903d2887201ac19024f454e33",
      "kind": "uups"
    },
    {
      "address": "0x6CD3582FeFa064067D70F2479C97CA7551E5c506",
      "txHash": "0x4c3af747bce6b1fed2329334bb276370e808da9036dbe0a0dd1fdabbe7603f44",
      "kind": "uups"
    },
    {
      "address": "0x9Fe47058CC28eD2D4927Bd501076277665f64A7C",
      "txHash": "0xe2dcd430cfc04e0b62708d2c7e4109777edec916582981b3ae6d6b7af1f407ea",
      "kind": "uups"
    },
    {
      "address": "0xfc5c951abe2cb439e4C5090f2f73D0db1A2d5C4B",
      "txHash": "0x86f7d49a1a6cb50da1f4be1593c4b1491865dae712304405a8f5375fd96a7087",
      "kind": "uups"
    }
  ],
  "impls": {
    "fd75deb5b27ce00c6ffd983894b1423d41610089ac930fa7de81c8d4005a6423": {
      "address": "0xE9f416D7DDC163E3d6A4620aCe164236B54359A7",
      "txHash": "0xbdb5fdd99692165ff6cda54a75e38ced6ed7e26bca46f07f6e18cc4db7bc5a25",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "owner",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:114"
          },
          {
            "label": "logicAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:114"
          },
          {
            "label": "flareToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:116"
          },
          {
            "label": "proposals",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_struct(Proposal)5112_storage)dyn_storage",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:117"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:118"
          },
          {
            "label": "proposalOptions",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_array(t_struct(Option)5117_storage)dyn_storage)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:118"
          },
          {
            "label": "proposalDeposit",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:119"
          },
          {
            "label": "votingDeposit",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:120"
          },
          {
            "label": "votingRecordsforProposals",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Vote)5122_storage)dyn_storage))",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:121"
          },
          {
            "label": "winningOptionByProposal",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:122"
          },
          {
            "label": "rewardOrPenaltyInSettledProposal",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_int256))",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:123"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Option)5117_storage)dyn_storage": {
            "label": "struct Proposal.Option[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Proposal)5112_storage)dyn_storage": {
            "label": "struct Proposal.Proposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Vote)5122_storage)dyn_storage": {
            "label": "struct Proposal.Vote[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Option)5117_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Proposal.Option[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Vote)5122_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Proposal.Vote[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_int256))": {
            "label": "mapping(uint256 => mapping(address => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Vote)5122_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Proposal.Vote[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Option)5117_storage": {
            "label": "struct Proposal.Option",
            "members": [
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "voteCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Proposal)5112_storage": {
            "label": "struct Proposal.Proposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "isWagered",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Vote)5122_storage": {
            "label": "struct Proposal.Vote",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "49dab415423ebbe7e560c855be2ecead4f49f84b4b6cc1d36bc54ad645064a15": {
      "address": "0xb8fdBf6d11789825F2DB6B13BA90E9477aBec2c9",
      "txHash": "0x40dfcbbdf4705412fbc9d1beccd189908d0c829eff1a43c4ae1f1c472b24fc3d",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "owner",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:89"
          },
          {
            "label": "logicAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:89"
          },
          {
            "label": "mlnTokenAddr",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:91"
          },
          {
            "label": "proposals",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_struct(Proposal)6746_storage)dyn_storage",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:92"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:93"
          },
          {
            "label": "proposalOptions",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_array(t_struct(Option)6751_storage)dyn_storage)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:93"
          },
          {
            "label": "proposalDeposit",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:94"
          },
          {
            "label": "votingDeposit",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:95"
          },
          {
            "label": "votingRecordsforProposals",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Vote)6756_storage)dyn_storage))",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:96"
          },
          {
            "label": "winningOptionByProposal",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:97"
          },
          {
            "label": "rewardOrPenaltyInSettledProposal",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_int256))",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:98"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Option)6751_storage)dyn_storage": {
            "label": "struct Proposal.Option[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Proposal)6746_storage)dyn_storage": {
            "label": "struct Proposal.Proposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Vote)6756_storage)dyn_storage": {
            "label": "struct Proposal.Vote[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Option)6751_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Proposal.Option[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Vote)6756_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Proposal.Vote[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_int256))": {
            "label": "mapping(uint256 => mapping(address => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Vote)6756_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Proposal.Vote[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Option)6751_storage": {
            "label": "struct Proposal.Option",
            "members": [
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "voteCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Proposal)6746_storage": {
            "label": "struct Proposal.Proposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "isWagered",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Vote)6756_storage": {
            "label": "struct Proposal.Vote",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "836caae2c0f4f96dd83c1fc5898b987c7cf45c14aadd9dd80b1bc9fc555fd5d8": {
      "address": "0x03110ad55b2D857D16208A21067cbdCA3d84b7Af",
      "txHash": "0x3ee83a895f6db8f49cc092a4dc2dda8c14e73249c854440ac2718f6efa639a76",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "owner",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:88"
          },
          {
            "label": "logicAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:88"
          },
          {
            "label": "mlnTokenAddr",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:90"
          },
          {
            "label": "proposals",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_struct(Proposal)6746_storage)dyn_storage",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:91"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:92"
          },
          {
            "label": "proposalOptions",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_array(t_struct(Option)6751_storage)dyn_storage)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:92"
          },
          {
            "label": "proposalDeposit",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:93"
          },
          {
            "label": "votingDeposit",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:94"
          },
          {
            "label": "votingRecordsforProposals",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Vote)6756_storage)dyn_storage))",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:95"
          },
          {
            "label": "winningOptionByProposal",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:96"
          },
          {
            "label": "rewardOrPenaltyInSettledProposal",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_int256))",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:97"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Option)6751_storage)dyn_storage": {
            "label": "struct Proposal.Option[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Proposal)6746_storage)dyn_storage": {
            "label": "struct Proposal.Proposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Vote)6756_storage)dyn_storage": {
            "label": "struct Proposal.Vote[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Option)6751_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Proposal.Option[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Vote)6756_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Proposal.Vote[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_int256))": {
            "label": "mapping(uint256 => mapping(address => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Vote)6756_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Proposal.Vote[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Option)6751_storage": {
            "label": "struct Proposal.Option",
            "members": [
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "voteCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Proposal)6746_storage": {
            "label": "struct Proposal.Proposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "isWagered",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Vote)6756_storage": {
            "label": "struct Proposal.Vote",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "9dfdc1ea587f4b2f477d091ab121f7a3c3cc13e21e6975a8f7397f16afdded40": {
      "address": "0xFac9F78a8D40e8D0C4f1e1E04965939b35fd9cdf",
      "txHash": "0x742edc14dd44ac9e0caf807e36b1383f18d4c763a0abe6efb772c938daae6656",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "owner",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:55"
          },
          {
            "label": "logicAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:57"
          },
          {
            "label": "mlnTokenAddr",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:59"
          },
          {
            "label": "proposalInfos",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_struct(ProposalInfo)6728_storage)dyn_storage",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:61"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:63"
          },
          {
            "label": "votingLock",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:65"
          },
          {
            "label": "proposalVotingSituation",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(VoteInfo)6733_storage)dyn_storage))",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:67"
          },
          {
            "label": "proposalWinningOption",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:70"
          },
          {
            "label": "userProposalResults",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_int256))",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:72"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Option)6721_storage)dyn_storage": {
            "label": "struct Proposal.Option[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ProposalInfo)6728_storage)dyn_storage": {
            "label": "struct Proposal.ProposalInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(VoteInfo)6733_storage)dyn_storage": {
            "label": "struct Proposal.VoteInfo[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(VoteInfo)6733_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Proposal.VoteInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_int256))": {
            "label": "mapping(uint256 => mapping(address => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(VoteInfo)6733_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Proposal.VoteInfo[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Option)6721_storage": {
            "label": "struct Proposal.Option",
            "members": [
              {
                "label": "desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "count",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProposalInfo)6728_storage": {
            "label": "struct Proposal.ProposalInfo",
            "members": [
              {
                "label": "founder",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "options",
                "type": "t_array(t_struct(Option)6721_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VoteInfo)6733_storage": {
            "label": "struct Proposal.VoteInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "054f2659b3e99393f0bd7470a36ddf1261a2b5ba2e24a62574c00ac0fd1ad622": {
      "address": "0x6843e7DEcaBe6007099c03a21a26ea8AdA651085",
      "txHash": "0x1980a0b718ed7b19b1c379a950c5f2a48acef3f610d33fbac7ba11e8d80e66ae",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "owner",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:55"
          },
          {
            "label": "logicAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:57"
          },
          {
            "label": "mlnTokenAddr",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:59"
          },
          {
            "label": "proposalInfos",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_struct(ProposalInfo)6728_storage)dyn_storage",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:61"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:63"
          },
          {
            "label": "votingLock",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:65"
          },
          {
            "label": "proposalVotingSituation",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(VoteInfo)6733_storage)dyn_storage))",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:67"
          },
          {
            "label": "proposalWinningOption",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:70"
          },
          {
            "label": "userProposalResults",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_int256))",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:72"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Option)6721_storage)dyn_storage": {
            "label": "struct Proposal.Option[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ProposalInfo)6728_storage)dyn_storage": {
            "label": "struct Proposal.ProposalInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(VoteInfo)6733_storage)dyn_storage": {
            "label": "struct Proposal.VoteInfo[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(VoteInfo)6733_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Proposal.VoteInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_int256))": {
            "label": "mapping(uint256 => mapping(address => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(VoteInfo)6733_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Proposal.VoteInfo[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Option)6721_storage": {
            "label": "struct Proposal.Option",
            "members": [
              {
                "label": "desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "count",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProposalInfo)6728_storage": {
            "label": "struct Proposal.ProposalInfo",
            "members": [
              {
                "label": "founder",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "options",
                "type": "t_array(t_struct(Option)6721_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VoteInfo)6733_storage": {
            "label": "struct Proposal.VoteInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "43455808056e0a42102be616d87df026bed5914b7a514845d119372e541bb7d4": {
      "address": "0x0Fdb789785174C7dc55D5ee4dFd88e0E79CD3522",
      "txHash": "0x1f311a26b11642c314f2a339750e43ed4a0a5b75dd36854836307d8bb3496760",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "owner",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:63"
          },
          {
            "label": "logicAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:65"
          },
          {
            "label": "mlnTokenAddr",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:67"
          },
          {
            "label": "proposalInfos",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_struct(ProposalInfo)6674_storage)dyn_storage",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:69"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:71"
          },
          {
            "label": "votingLock",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:73"
          },
          {
            "label": "voting",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(VoteInfo)6679_storage)dyn_storage))",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:75"
          },
          {
            "label": "winningOption",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:78"
          },
          {
            "label": "userProposalResults",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_int256))",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Option)6667_storage)dyn_storage": {
            "label": "struct Proposal.Option[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ProposalInfo)6674_storage)dyn_storage": {
            "label": "struct Proposal.ProposalInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(VoteInfo)6679_storage)dyn_storage": {
            "label": "struct Proposal.VoteInfo[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(VoteInfo)6679_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Proposal.VoteInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_int256))": {
            "label": "mapping(uint256 => mapping(address => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(VoteInfo)6679_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Proposal.VoteInfo[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Option)6667_storage": {
            "label": "struct Proposal.Option",
            "members": [
              {
                "label": "desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "count",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "voters",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProposalInfo)6674_storage": {
            "label": "struct Proposal.ProposalInfo",
            "members": [
              {
                "label": "founder",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "options",
                "type": "t_array(t_struct(Option)6667_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VoteInfo)6679_storage": {
            "label": "struct Proposal.VoteInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "04b21eebce53a2982c1e127eb7392dc18270d5ee1538822579e52d60fd714331": {
      "address": "0xDca70cF71E45c79e6e6951b89f6a587DcCd650d0",
      "txHash": "0xa63ed99716975ae482d4153768a5dad6e0531193303ba0db5a9940d7ef170afd",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "proposalAddr",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Jury",
            "src": "contracts\\Jury.sol:20"
          },
          {
            "label": "impleAddr",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Jury",
            "src": "contracts\\Jury.sol:21"
          },
          {
            "label": "juryInfos",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(JuryInfo)5666_storage)",
            "contract": "Jury",
            "src": "contracts\\Jury.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Selection)5671_storage)dyn_storage": {
            "label": "struct Jury.Selection[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(JuryInfo)5666_storage)": {
            "label": "mapping(uint256 => struct Jury.JuryInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(JuryInfo)5666_storage": {
            "label": "struct Jury.JuryInfo",
            "members": [
              {
                "label": "winOptionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "selections",
                "type": "t_array(t_struct(Selection)5671_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "deadline",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Selection)5671_storage": {
            "label": "struct Jury.Selection",
            "members": [
              {
                "label": "juror",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "optionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2f6e11682fdbe2c9c6d0f4e26a86c9c09af31339ccda6bdf17b35e97e69bbe64": {
      "address": "0xE20aF1b947616D03Ec77E35C361CE086a4DeA38F",
      "txHash": "0x73a01ae18d0471d101f2ff76f163688dc762fe9731cd38d37077d901563672cf",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "owner",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:63"
          },
          {
            "label": "logicAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:65"
          },
          {
            "label": "mlnTokenAddr",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:67"
          },
          {
            "label": "proposalInfos",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_struct(ProposalInfo)6674_storage)dyn_storage",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:69"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:71"
          },
          {
            "label": "votingLock",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:73"
          },
          {
            "label": "voting",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(VoteInfo)6679_storage)dyn_storage))",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:75"
          },
          {
            "label": "winningOption",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:78"
          },
          {
            "label": "userProposalResults",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_int256))",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Option)6667_storage)dyn_storage": {
            "label": "struct Proposal.Option[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ProposalInfo)6674_storage)dyn_storage": {
            "label": "struct Proposal.ProposalInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(VoteInfo)6679_storage)dyn_storage": {
            "label": "struct Proposal.VoteInfo[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(VoteInfo)6679_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Proposal.VoteInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_int256))": {
            "label": "mapping(uint256 => mapping(address => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(VoteInfo)6679_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Proposal.VoteInfo[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Option)6667_storage": {
            "label": "struct Proposal.Option",
            "members": [
              {
                "label": "desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "count",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "voters",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProposalInfo)6674_storage": {
            "label": "struct Proposal.ProposalInfo",
            "members": [
              {
                "label": "founder",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "options",
                "type": "t_array(t_struct(Option)6667_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VoteInfo)6679_storage": {
            "label": "struct Proposal.VoteInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "65f8a28649fc749f9ab713c1293ae151766af5c231de8a29c0c510a616e94c91": {
      "address": "0x2B1A2F8145aBDB12E05A274B4C82147D78D3BeC8",
      "txHash": "0x6b9de7e3086685fc4ea677fab116888e25f04e790ac736c67c8f5c00a187a525",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "owner",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:68"
          },
          {
            "label": "logicAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:70"
          },
          {
            "label": "mlnTokenAddr",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:72"
          },
          {
            "label": "proposalInfos",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_struct(ProposalInfo)6729_storage)dyn_storage",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:74"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:76"
          },
          {
            "label": "votingLock",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:78"
          },
          {
            "label": "pledgeLock",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:80"
          },
          {
            "label": "pledgeInfos",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_array(t_struct(PledgeInfo)6741_storage)dyn_storage)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:82"
          },
          {
            "label": "voting",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(VoteInfo)6734_storage)dyn_storage))",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:84"
          },
          {
            "label": "winningOption",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:86"
          },
          {
            "label": "userProposalResults",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_int256))",
            "contract": "Proposal",
            "src": "contracts\\Proposal.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Option)6722_storage)dyn_storage": {
            "label": "struct Proposal.Option[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(PledgeInfo)6741_storage)dyn_storage": {
            "label": "struct Proposal.PledgeInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ProposalInfo)6729_storage)dyn_storage": {
            "label": "struct Proposal.ProposalInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(VoteInfo)6734_storage)dyn_storage": {
            "label": "struct Proposal.VoteInfo[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(PledgeInfo)6741_storage)dyn_storage)": {
            "label": "mapping(address => struct Proposal.PledgeInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(VoteInfo)6734_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Proposal.VoteInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_int256))": {
            "label": "mapping(uint256 => mapping(address => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(VoteInfo)6734_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Proposal.VoteInfo[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Option)6722_storage": {
            "label": "struct Proposal.Option",
            "members": [
              {
                "label": "desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "count",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "voters",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PledgeInfo)6741_storage": {
            "label": "struct Proposal.PledgeInfo",
            "members": [
              {
                "label": "deadline",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "margins",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProposalInfo)6729_storage": {
            "label": "struct Proposal.ProposalInfo",
            "members": [
              {
                "label": "founder",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "options",
                "type": "t_array(t_struct(Option)6722_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VoteInfo)6734_storage": {
            "label": "struct Proposal.VoteInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
