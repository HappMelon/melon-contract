{"id":"de66d0d62154728a868ce7d37c42f248","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\nimport \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/IERC1967.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967Upgrade is IERC1967 {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is IERC1822Proxiable, ERC1967Upgrade {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n}\n"},"@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../security/Pausable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract unpausable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_beforeTokenTransfer}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\n        super._beforeTokenTransfer(from, to, amount);\n\n        require(!paused(), \"ERC20Pausable: token transfer while paused\");\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Permit.sol\";\nimport \"../ERC20.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\nimport \"../../../utils/cryptography/EIP712.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../interfaces/IERC4906.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n\n        emit MetadataUpdate(tokenId);\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./ECDSA.sol\";\nimport \"../ShortStrings.sol\";\nimport \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * _Available since v3.4._\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {EIP-5267}.\n     *\n     * _Available since v4.9._\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        override\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _name.toStringWithFallback(_nameFallback),\n            _version.toStringWithFallback(_versionFallback),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant _FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(_FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/Jury.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"./Proposal.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract Jury is Initializable, UUPSUpgradeable {\n    struct JuryInfo {\n        uint256 winOptionId;\n        Selection[] selections;\n        uint256 deadline;\n    }\n\n    struct Selection {\n        address juror;\n        uint256 optionId;\n    }\n\n    address public proposalAddr;\n    address public impleAddr;\n    \n    mapping(uint256 => JuryInfo) public juryInfos;\n\n    error JuryHasBeenCreated(uint256 proposalId);\n    error NotYetDue(uint256 proposalId, uint256 deadline);\n\n    event Fail(uint256 proposalId);\n    event Success(uint256 proposalId);\n    event CreateProposalJury(\n        uint256 proposalId,\n        uint256 winOption,\n        uint256 deadline\n    );\n\n    function initialize(address _proposalAddr) external initializer {\n        proposalAddr = _proposalAddr;\n    }\n\n    function setNewProposal(address _proposalAddr) external {\n        proposalAddr = _proposalAddr;\n    }\n\n    function getDetail(\n        uint256 proposalId\n    ) public view returns (address[] memory jurors, uint256[] memory optionId) {\n        JuryInfo memory juryInfo = juryInfos[proposalId];\n        Selection[] memory selections = juryInfo.selections;\n\n        jurors = new address[](selections.length);\n        optionId = new uint256[](selections.length);\n\n        for (uint256 i = 0; i < selections.length; i++) {\n            Selection memory selection = selections[i];\n            jurors[i] = selection.juror;\n            optionId[i] = selection.optionId;\n        }\n    }\n\n    function deleteById(uint256 proposald) public {\n        delete juryInfos[proposald];\n    }\n\n    function create(\n        uint256 proposalId,\n        uint256 winOptionId,\n        uint256 deadline\n    ) external {\n        if (juryInfos[proposalId].deadline != 0) {\n            revert JuryHasBeenCreated(proposalId);\n        }\n\n        JuryInfo storage newProposalJury = juryInfos[proposalId];\n\n        newProposalJury.winOptionId = winOptionId;\n\n        newProposalJury.deadline = deadline;\n\n        emit CreateProposalJury(proposalId, winOptionId, deadline);\n    }\n\n    function vote(uint256 proposalId, uint256 optionId) external {\n        Selection memory newSelection = Selection({\n            juror: msg.sender,\n            optionId: optionId\n        });\n\n        JuryInfo storage proposalJury = juryInfos[proposalId];\n\n        proposalJury.selections.push(newSelection);\n    }\n\n    function handleResult(uint256 proposalId) external {\n        JuryInfo storage juryInfo = juryInfos[proposalId];\n        Selection[] memory selections = juryInfo.selections;\n        (address[] memory jurors, ) = getDetail(proposalId);\n\n        if (juryInfo.deadline > block.timestamp) {\n            revert NotYetDue(proposalId, juryInfo.deadline);\n        }\n\n        for (uint256 i = 0; i < selections.length; i++) {\n            Selection memory selection = selections[i];\n            if (selection.optionId != juryInfo.winOptionId) {\n                delete (proposalId);\n                emit Fail(proposalId);\n                return;\n            }\n        }\n\n        Proposal(proposalAddr).settle(proposalId, juryInfo.winOptionId, jurors);\n        emit Success(proposalId);\n    }\n\n    function _authorizeUpgrade(\n        address newImplementation\n    ) internal override {\n        impleAddr = newImplementation;\n    }\n}\n"},"contracts/JuryNFTSwap.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./MelonNFT.sol\";\r\nimport \"./Proposal.sol\";\r\n\r\ncontract JuryNFTSwap is IERC721Receiver, Ownable {\r\n    struct NFTListInfo {\r\n        uint tokenId;\r\n        uint price;\r\n        string uri;\r\n        uint gainTime;\r\n    }\r\n\r\n    struct ApplyStartUpNFTInfo {\r\n        uint pledgeAmount;\r\n        address user;\r\n    }\r\n\r\n    uint public immutable COMMON_NFT_LIMIT_PER_USER;\r\n    uint public immutable START_UP_NFT_LIMIT;\r\n\r\n  \r\n\r\n\r\n    MelonNFT public melonNFT;\r\n    NFTListInfo[] public startUpNFTs;\r\n    NFTListInfo[] public commonNFTs;\r\n\r\n    mapping(address => NFTListInfo) public userStartUpNFTs;\r\n    mapping(address => NFTListInfo[]) public userCommonNFTs;\r\n\r\n    ApplyStartUpNFTInfo[] public applyStartUpNFTInfos;\r\n\r\n    mapping(address => uint) public nftLock;\r\n    mapping(uint => NFTListInfo) public infoByTokenId;\r\n\r\n    event HangOut(uint indexed tokenId, uint price);\r\n    event StartUpNFTSending(address indexed buyer, uint tokenId, uint price);\r\n    event BuyNFT(address indexed buyer, uint tokenId, uint price);\r\n    event Redeem(address indexed redeemer, uint tokenId, uint redeemPrice);\r\n    event ApplyStartUpNFT(address indexed user, uint pledgeAmount);\r\n\r\n    error NotListed(uint tokenId);\r\n    error AlreadyListed(uint tokenId);\r\n    error RedemptionTimeNotReached(\r\n        address NFTAddr,\r\n        uint tokenId,\r\n        uint redemptionTime\r\n    );\r\n    error NotNFTOwner(address user, uint tokenId);\r\n    error MaximumNumberOfHoldings(address user, uint holdAmount);\r\n\r\n    modifier isListed(uint tokenId) {\r\n        if (bytes(infoByTokenId[tokenId].uri).length == 0) {\r\n            revert NotListed(tokenId);\r\n        }\r\n        _;\r\n    }\r\n\r\n    modifier isUnListed(uint tokenId) {\r\n        if (bytes(infoByTokenId[tokenId].uri).length > 0) {\r\n            revert AlreadyListed(tokenId);\r\n        }\r\n        _;\r\n    }\r\n\r\n    modifier isOwner(address user, uint tokenId) {\r\n        if (melonNFT.ownerOf(tokenId) != user) {\r\n            revert NotNFTOwner(user, tokenId);\r\n        }\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        address _melonNFTAddr,\r\n        uint _commonNFTsLimitPerUser,\r\n        uint _startUpNFTsLimit\r\n    ) Ownable() {\r\n        melonNFT = MelonNFT(_melonNFTAddr);\r\n        COMMON_NFT_LIMIT_PER_USER = _commonNFTsLimitPerUser;\r\n        START_UP_NFT_LIMIT = _startUpNFTsLimit;\r\n    }\r\n\r\n    function getTotalApplyInfo()\r\n        external\r\n        view\r\n        returns (uint totalApplicants, uint totalPledgedAmount)\r\n    {\r\n        totalApplicants = applyStartUpNFTInfos.length;\r\n        for (uint i = 0; i < totalApplicants; i++) {\r\n            totalPledgedAmount += applyStartUpNFTInfos[i].pledgeAmount;\r\n        }\r\n    }\r\n\r\n    function getApplyStartUpNFTInfos()\r\n        external\r\n        view\r\n        returns (ApplyStartUpNFTInfo[] memory)\r\n    {\r\n        return applyStartUpNFTInfos;\r\n    }\r\n\r\n    function getAllStartUpNFTs() external view returns (NFTListInfo[] memory) {\r\n        return startUpNFTs;\r\n    }\r\n\r\n    function getAllCommonNFTs() external view returns (NFTListInfo[] memory) {\r\n        return commonNFTs;\r\n    }\r\n\r\n    function getUserNFTHolding(\r\n        address user\r\n    ) external view returns (NFTListInfo memory, NFTListInfo[] memory) {\r\n        return (userStartUpNFTs[user], userCommonNFTs[user]);\r\n    }\r\n\r\n    function distributeStartUpNFT(\r\n        address[] memory users,\r\n        uint[] memory tokenIds\r\n    ) external onlyOwner {\r\n        require(\r\n            users.length == tokenIds.length,\r\n            \"Users and tokenIds array lengths must match\"\r\n        );\r\n        clearApplyLock();\r\n        for (uint i = 0; i < users.length; i++) {\r\n            address user = users[i];\r\n            uint tokenId = tokenIds[i];\r\n            NFTListInfo storage info = infoByTokenId[tokenId];\r\n            if (bytes(info.uri).length == 0) {\r\n                revert NotListed(tokenId);\r\n            }\r\n            melonNFT.safeTransferFrom(address(this), user, tokenId);\r\n            info.gainTime = block.timestamp;\r\n            userStartUpNFTs[user] = info;\r\n            delete infoByTokenId[tokenId];\r\n            handleRemove(startUpNFTs, tokenId);\r\n            emit StartUpNFTSending(user, tokenId, info.price);\r\n        }\r\n    }\r\n\r\n    function applyStartUpNFT(uint pledgeAmount) external {\r\n        applyStartUpNFTInfos.push(\r\n            ApplyStartUpNFTInfo({pledgeAmount: pledgeAmount, user: msg.sender})\r\n        );\r\n        nftLock[msg.sender] = pledgeAmount;\r\n        emit ApplyStartUpNFT(msg.sender, pledgeAmount);\r\n    }\r\n\r\n    function initialNFTHangOut(\r\n        uint tokenId,\r\n        uint price\r\n    ) public isOwner(msg.sender, tokenId) isUnListed(tokenId) onlyOwner {\r\n        bool isStartUp = price == 0;\r\n        melonNFT.safeTransferFrom(msg.sender, address(this), tokenId);\r\n        string memory uri = melonNFT.tokenURI(tokenId);\r\n        NFTListInfo memory newListing = NFTListInfo({\r\n            tokenId: tokenId,\r\n            price: price,\r\n            uri: uri,\r\n            gainTime: 0\r\n        });\r\n        if (isStartUp) {\r\n            startUpNFTs.push(newListing);\r\n        } else {\r\n            commonNFTs.push(newListing);\r\n        }\r\n        infoByTokenId[tokenId] = newListing;\r\n        emit HangOut(tokenId, price);\r\n    }\r\n\r\n    function purchaseCommonNFT(\r\n        uint tokenId,\r\n        Proposal proposal\r\n    ) external isListed(tokenId) {\r\n        uint balance = userCommonNFTs[msg.sender].length;\r\n\r\n        if (balance >= COMMON_NFT_LIMIT_PER_USER) {\r\n            revert MaximumNumberOfHoldings(msg.sender, balance);\r\n        }\r\n\r\n        NFTListInfo memory info = infoByTokenId[tokenId];\r\n\r\n        require(\r\n            proposal.getAvailableBalance(msg.sender) >= info.price,\r\n            \"Insufficient balance\"\r\n        );\r\n\r\n        nftLock[msg.sender] += info.price;\r\n\r\n        melonNFT.safeTransferFrom(address(this), msg.sender, tokenId);\r\n\r\n        info.gainTime = block.timestamp;\r\n\r\n        userCommonNFTs[msg.sender].push(info);\r\n\r\n        handleRemove(commonNFTs, tokenId);\r\n        delete infoByTokenId[tokenId];\r\n\r\n        emit BuyNFT(msg.sender, tokenId, info.price);\r\n    }\r\n\r\n    function redeem(\r\n        uint tokenId,\r\n        uint price,\r\n        Proposal proposal\r\n    ) external isOwner(msg.sender, tokenId) isUnListed(tokenId) {\r\n        bool isStartUp = tokenId < START_UP_NFT_LIMIT;\r\n\r\n        melonNFT.safeTransferFrom(msg.sender, address(this), tokenId);\r\n\r\n        string memory uri = melonNFT.tokenURI(tokenId);\r\n\r\n        NFTListInfo memory newListing = NFTListInfo({\r\n            tokenId: tokenId,\r\n            price: price,\r\n            uri: uri,\r\n            gainTime: 0\r\n        });\r\n\r\n        if (isStartUp) {\r\n            startUpNFTs.push(newListing);\r\n            delete userStartUpNFTs[msg.sender];\r\n        } else {\r\n            commonNFTs.push(newListing);\r\n            handleRemove(userCommonNFTs[msg.sender], tokenId);\r\n        }\r\n\r\n        infoByTokenId[tokenId] = newListing;\r\n\r\n        uint curLock = nftLock[msg.sender];\r\n\r\n        if (price >= curLock) {\r\n            nftLock[msg.sender] = 0;\r\n            proposal.addInterest(msg.sender, price - curLock);\r\n        } else {\r\n            nftLock[msg.sender] -= price;\r\n        }\r\n\r\n        emit Redeem(msg.sender, tokenId, price);\r\n    }\r\n\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external pure override returns (bytes4) {\r\n        return this.onERC721Received.selector;\r\n    }\r\n\r\n    function handleRemove(\r\n        NFTListInfo[] storage startUpNFTs,\r\n        uint tokenId\r\n    ) internal {\r\n        for (uint i = 0; i < startUpNFTs.length; i++) {\r\n            if (startUpNFTs[i].tokenId == tokenId) {\r\n                startUpNFTs[i] = startUpNFTs[startUpNFTs.length - 1];\r\n                startUpNFTs.pop();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function clearApplyLock() internal {\r\n        uint applyCount = applyStartUpNFTInfos.length;\r\n        for (uint i = 0; i < applyCount; i++) {\r\n            ApplyStartUpNFTInfo storage applyInfo = applyStartUpNFTInfos[i];\r\n            nftLock[applyInfo.user] -= applyInfo.pledgeAmount;\r\n        }\r\n    }\r\n}\r\n"},"contracts/MelonNFT.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\n\r\n\r\ncontract MelonNFT is ERC721URIStorage, Ownable  {\r\n    uint256 private _nextTokenId;\r\n\r\n    event MintNFT(address indexed to, uint256 tokenId);\r\n\r\n    constructor() ERC721(\"Melon_NFT\", \"MLN_NFT\") Ownable(){}\r\n\r\n    function mint(address to, string memory uri) external onlyOwner {\r\n        uint256 tokenId = _nextTokenId++;\r\n        _safeMint(to, tokenId);\r\n        _setTokenURI(tokenId, uri);\r\n        emit MintNFT(to, tokenId);\r\n    }\r\n\r\n    function burn(uint tokenId) external {\r\n        require(ownerOf(tokenId) == msg.sender, \"You are not the owner of this token\");\r\n        _burn(tokenId);\r\n        return;\r\n    }\r\n\r\n}"},"contracts/MelonToken.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\r\n\r\ncontract MelonToken is ERC20Permit, Ownable, ERC20Pausable {\r\n    constructor()\r\n        ERC20(\"Melon\", \"MLN\")\r\n        ERC20Permit(\"MLN\")\r\n        Ownable()\r\n    {}\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal override(ERC20, ERC20Pausable) {\r\n        super._beforeTokenTransfer(from, to, amount);  \r\n    }\r\n}\r\n"},"contracts/Pledge.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"./Proposal.sol\";\r\n\r\ncontract Pledge {\r\n    struct PledgeInfo {\r\n        uint deadline;\r\n        uint margins;\r\n        uint amount;\r\n    }\r\n\r\n    event NewPledge(\r\n        address indexed user,\r\n        uint256 deadline,\r\n        uint256 margins,\r\n        uint256 amount\r\n    );\r\n\r\n    event PledgeCleared(\r\n        address indexed user,\r\n        uint256 principal,\r\n        uint256 interest,\r\n        uint256 totalAmount\r\n    );\r\n\r\n\r\n    mapping(address => uint256) public pledgeLock; // The amount stack by the user\r\n\r\n    mapping(address => PledgeInfo[]) public pledgeInfos;\r\n\r\n    uint256 public totalPledgedAmount;\r\n\r\n    uint256 public totalPledgers;\r\n\r\n    function createPledge(uint deadline, uint margins, uint amount) external {\r\n        require(\r\n            deadline > block.timestamp,\r\n            \"Deadline must be greater than current time\"\r\n        );\r\n\r\n        PledgeInfo memory pledgeInfo = PledgeInfo(deadline, margins, amount);\r\n\r\n        // Increase the number of pledging users if they are pledging for the first time\r\n        if (pledgeLock[msg.sender] == 0) {\r\n            totalPledgers++;\r\n        }\r\n\r\n        pledgeInfos[msg.sender].push(pledgeInfo);\r\n        pledgeLock[msg.sender] += amount;\r\n        totalPledgedAmount += amount;\r\n\r\n        emit NewPledge(msg.sender, deadline, margins, amount);\r\n    }\r\n\r\n    function getPledgeStats() external view returns (uint256, uint256) {\r\n        return (totalPledgers, totalPledgedAmount);\r\n    }\r\n\r\n    function clearPledge(address user, Proposal proposal) external {\r\n        uint256 totalAmount = 0;\r\n        uint256 principalAmount = 0;\r\n        uint256 interestAmount = 0;\r\n\r\n        for (uint256 i = 0; i < pledgeInfos[user].length; i++) {\r\n            PledgeInfo memory info = pledgeInfos[user][i];\r\n\r\n            if (info.deadline < block.timestamp) {\r\n                uint256 amountWithInterest = (info.amount *\r\n                    (100 + info.margins)) / 100;\r\n                principalAmount += info.amount;\r\n                interestAmount += amountWithInterest - info.amount;\r\n                totalAmount += amountWithInterest;\r\n                removePledge(i);\r\n                pledgeLock[user] -= info.amount;\r\n            }\r\n        }\r\n        proposal.addInterest(user, interestAmount);\r\n        emit PledgeCleared(user, principalAmount, interestAmount, totalAmount);\r\n    }\r\n\r\n    function getPledges() external view returns (PledgeInfo[] memory) {\r\n        return pledgeInfos[msg.sender];\r\n    }\r\n\r\n    function removePledge(uint256 index) internal {\r\n        require(index < pledgeInfos[msg.sender].length, \"Index out of bounds\");\r\n\r\n        uint256 lastIndex = pledgeInfos[msg.sender].length - 1;\r\n\r\n        if (index != lastIndex) {\r\n            pledgeInfos[msg.sender][index] = pledgeInfos[msg.sender][lastIndex];\r\n        }\r\n\r\n        pledgeInfos[msg.sender].pop();\r\n    }\r\n}\r\n"},"contracts/Proposal.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./JuryNFTSwap.sol\";\nimport \"./MelonToken.sol\";\nimport \"./Pledge.sol\";\n\ncontract Proposal is Initializable, UUPSUpgradeable {\n    struct Option {\n        string desc;\n        uint256 count;\n        uint256 voters;\n    }\n\n    struct ProposalInfo {\n        address founder;\n        Option[] options;\n    }\n\n    struct VoteInfo {\n        address user;\n        uint256 amount;\n    }\n\n    event Deposited(address indexed user, uint256 amount);\n\n    event Voted(\n        address indexed _address,\n        uint256 indexed _proposalId,\n        uint256 indexed _optionId,\n        uint256 _amount\n    );\n\n    event Withdraw(address indexed user, uint256 amount, uint256 balance);\n\n    event Create(address indexed founder, uint256 indexed id, string[] options);\n\n    event Settle(uint256 proposalId, uint256 winningOptionId, address[] jurors);\n\n    event ExchangePoints(address indexed user, uint256 points);\n\n    event Refunded(uint256 indexed proposalId, uint256 winOptionId);\n\n    event JurorsDistributeRewards(\n        uint256 indexed proposalId,\n        address[] jurors,\n        uint256 reward,\n        uint256 rewardPerJuror\n    );\n\n    error InsufficientBalance(address user, uint256 availableBalance);\n\n    error OwnableUnauthorizedAccount(address account);\n\n    // state variable\n    address public owner;\n\n    address public logicAddress;\n\n    MelonToken public mlnToken; // Token Address\n\n    JuryNFTSwap public juryNFTSwap;\n\n    Pledge public pledge;\n\n    ProposalInfo[] public proposalInfos; // Proposal array\n\n    mapping(address => uint256) public balances;\n\n    mapping(address => uint256) public votingLock; // The amount voted by the user\n\n    mapping(uint256 => mapping(uint256 => VoteInfo[])) public voting;\n\n    mapping(uint256 => uint256) public winningOption; // Record the winning options for settled proposals\n\n    mapping(uint256 => mapping(address => int256)) public userProposalResults; // Record rewards or punishments for settlement proposal users\n\n    // Modifier\n    modifier onlyOwner() {\n        if (owner != msg.sender) {\n            revert OwnableUnauthorizedAccount(msg.sender);\n        }\n        _;\n    }\n\n    // function\n    function initialize(\n        address _tokenAddr,\n        address _juryNFTSwapAddr,\n        address _pledgeAddr\n    ) external initializer {\n        mlnToken = MelonToken(_tokenAddr);\n        juryNFTSwap = JuryNFTSwap(_juryNFTSwapAddr);\n        pledge = Pledge(_pledgeAddr);\n\n        owner = msg.sender;\n    }\n\n    function setNewToken(address _tokenAddr) external onlyOwner {\n        mlnToken = MelonToken(_tokenAddr);\n    }\n\n    function setNewJuryNFTSwap(address _juryNFTSwapAddr) external onlyOwner {\n        juryNFTSwap = JuryNFTSwap(_juryNFTSwapAddr);\n    }\n\n    function setNewPledge(address _pledgeAddr) external onlyOwner {\n        pledge = Pledge(_pledgeAddr);\n    \n    }\n\n    function addInterest(address user, uint interestAmount) external {\n        balances[user] += interestAmount;\n    }\n\n    function getVoting(\n        uint256 proposalId,\n        uint256 optionId\n    ) external view returns (VoteInfo[] memory) {\n        return voting[proposalId][optionId];\n    }\n\n    function deposit(uint256 amount) external returns (uint256) {\n        require(\n            mlnToken.transferFrom(msg.sender, address(this), amount),\n            \"Transfer failed\"\n        );\n        balances[msg.sender] += amount;\n        emit Deposited(msg.sender, amount);\n        return balances[msg.sender];\n    }\n\n    function getDetails(\n        uint256 proposalId\n    )\n        public\n        view\n        returns (\n            address founder,\n            string[] memory optionDescription,\n            uint256[] memory counts,\n            uint256[] memory voters,\n            uint256 allVotesCast,\n            uint256 allVoters\n        )\n    {\n        ProposalInfo storage proposal = proposalInfos[proposalId];\n        uint256 optionLength = proposal.options.length;\n\n        optionDescription = new string[](optionLength);\n        counts = new uint256[](optionLength);\n        voters = new uint256[](optionLength);\n        founder = proposal.founder;\n\n        for (uint256 i = 0; i < optionLength; i++) {\n            optionDescription[i] = proposal.options[i].desc;\n            counts[i] = proposal.options[i].count;\n            voters[i] = proposal.options[i].voters;\n            allVoters += proposal.options[i].voters;\n            allVotesCast += proposal.options[i].count;\n        }\n    }\n\n    function create(string[] memory optionDescs) external {\n        require(optionDescs.length > 0, \"len error\");\n        // 创建新的 ProposalInfo 实例\n        ProposalInfo storage newProposal = proposalInfos.push();\n\n        newProposal.founder = msg.sender;\n\n        for (uint256 i = 0; i < optionDescs.length; i++) {\n            newProposal.options.push(Option(optionDescs[i], 0, 0));\n        }\n\n        // 返回新 ProposalInfo 实例的索引\n        uint256 len = proposalInfos.length - 1;\n\n        emit Create(msg.sender, len, optionDescs);\n    }\n\n    function exchangePoints(uint256 points) external {\n        require(points > 0, \"Points must be greater than zero\");\n        balances[msg.sender] += points;\n        emit ExchangePoints(msg.sender, points);\n    }\n\n    function withdraw(uint256 amount) external {\n        uint256 availableBalance = getAvailableBalance(msg.sender);\n\n        if (availableBalance < amount) {\n            revert InsufficientBalance(msg.sender, availableBalance);\n        }\n\n        require(mlnToken.transfer(msg.sender, amount), \"Transfer failed\");\n\n        balances[msg.sender] -= amount;\n        emit Withdraw(msg.sender, amount, balances[msg.sender]);\n    }\n\n    function vote(\n        uint256 proposalId,\n        uint256 optionId,\n        uint256 amount\n    ) external {\n        require(\n            getAvailableBalance(msg.sender) >= amount,\n            \"Insufficient voting rights\"\n        );\n        votingLock[msg.sender] += amount;\n\n        ProposalInfo storage proposal = proposalInfos[proposalId];\n        proposal.options[optionId].count += amount;\n        proposal.options[optionId].voters += 1;\n\n        voting[proposalId][optionId].push(VoteInfo(msg.sender, amount));\n\n        emit Voted(msg.sender, proposalId, optionId, amount);\n    }\n\n    function settle(\n        uint256 proposalId,\n        uint256 winOptionId,\n        address[] memory jurors\n    ) external {\n        emit Settle(proposalId, winOptionId, jurors);\n\n        bool isSingleOptionStatus = isSingleOptionProposal(\n            proposalId,\n            winOptionId\n        );\n\n        if (isSingleOptionStatus) {\n            handleSingleOptionProposal(proposalId, winOptionId);\n        } else {\n            handleJurorsDistributeRewards(proposalId, jurors);\n            handleMultiOptionProposal(proposalId, winOptionId);\n        }\n        winningOption[proposalId] = winOptionId;\n    }\n\n    function getAvailableBalance(address user) public view returns (uint256) {\n        uint totalLock = 0;\n\n        uint pledgeLock = pledge.pledgeLock(user);\n        uint nftLock = juryNFTSwap.nftLock(user);\n        uint256 voteLock = votingLock[user];\n\n        totalLock += nftLock;\n        totalLock += voteLock;\n        totalLock += pledgeLock;\n\n        uint256 totalBalance = balances[user];\n        return totalBalance - totalLock;\n    }\n\n    function isSingleOptionProposal(\n        uint256 proposalId,\n        uint256 winOptionId\n    ) internal view returns (bool) {\n        ProposalInfo memory proposalInfo = proposalInfos[proposalId];\n        Option[] memory options = proposalInfo.options;\n        for (uint256 i = 0; i < options.length; i++) {\n            if (i != winOptionId && options[i].count > 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function handleJurorsDistributeRewards(\n        uint256 proposalId,\n        address[] memory jurors\n    ) internal {\n        (, , , , uint256 allVotesCast, ) = getDetails(proposalId);\n\n        uint256 reward = (allVotesCast * 2) / 100;\n        uint256 rewardPerJuror = reward / jurors.length;\n\n        for (uint256 i = 0; i < jurors.length; i++) {\n            balances[jurors[i]] += rewardPerJuror;\n            userProposalResults[proposalId][jurors[i]] = int256(rewardPerJuror);\n        }\n\n        emit JurorsDistributeRewards(\n            proposalId,\n            jurors,\n            reward,\n            rewardPerJuror\n        );\n    }\n\n    function handleSingleOptionProposal(\n        uint256 proposalId,\n        uint256 winOptionId\n    ) internal {\n        mapping(uint256 => VoteInfo[]) storage voteRecords = voting[\n            winOptionId\n        ];\n\n        for (uint256 i = 0; i < voteRecords[winOptionId].length; i++) {\n            VoteInfo memory voteInfo = voteRecords[winOptionId][i];\n            votingLock[voteInfo.user] -= voteInfo.amount;\n        }\n        emit Refunded(proposalId, winOptionId);\n    }\n\n    function handleMultiOptionProposal(\n        uint256 proposalId,\n        uint256 winOptionId\n    ) internal {\n        ProposalInfo storage proposalInfo = proposalInfos[proposalId];\n        uint256 optionCount = proposalInfo.options.length;\n\n        mapping(uint256 => VoteInfo[]) storage voteRecords = voting[\n            winOptionId\n        ];\n\n        (, , uint256[] memory counts, , uint256 allVotesCast, ) = getDetails(\n            proposalId\n        );\n        balances[proposalInfo.founder] += (allVotesCast * 5) / 100;\n        uint256 totalStakeExtractFee = (allVotesCast * 88) / 100;\n\n        for (uint256 i = 0; i < optionCount; i++) {\n            distributeRewardsAndPenalties(\n                proposalId,\n                winOptionId,\n                totalStakeExtractFee,\n                counts[winOptionId],\n                voteRecords[i],\n                i\n            );\n        }\n    }\n\n    function distributeRewardsAndPenalties(\n        uint256 proposalId,\n        uint256 winOptionId,\n        uint256 totalStakeExtractFee,\n        uint256 winVoteCount,\n        VoteInfo[] memory voteInfos,\n        uint256 optionId\n    ) internal {\n        for (uint256 j = 0; j < voteInfos.length; j++) {\n            VoteInfo memory voteInfo = voteInfos[j];\n            votingLock[voteInfo.user] -= voteInfo.amount;\n\n            if (optionId == winOptionId) {\n                uint256 reward = (voteInfo.amount * totalStakeExtractFee) /\n                    winVoteCount;\n                uint256 rewardExcludingPrincipal = reward - voteInfo.amount;\n                balances[voteInfo.user] += rewardExcludingPrincipal;\n                userProposalResults[proposalId][voteInfo.user] = int256(\n                    rewardExcludingPrincipal\n                );\n            } else {\n                balances[voteInfo.user] -= voteInfo.amount;\n                userProposalResults[proposalId][voteInfo.user] =\n                    int256(voteInfo.amount) *\n                    -1;\n            }\n        }\n    }\n\n    function _authorizeUpgrade(\n        address newImplementation\n    ) internal override onlyOwner {\n        logicAddress = newImplementation;\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}},"libraries":{}}},"output":{"errors":[{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/JuryNFTSwap.sol:255:9:\n    |\n255 |         NFTListInfo[] storage startUpNFTs,\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/JuryNFTSwap.sol:28:5:\n   |\n28 |     NFTListInfo[] public startUpNFTs;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","severity":"warning","sourceLocation":{"file":"contracts/JuryNFTSwap.sol","start":7724,"end":7757},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/JuryNFTSwap.sol:246:9:\n    |\n246 |         address operator,\n    |         ^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"file":"contracts/JuryNFTSwap.sol","start":7485,"end":7501},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/JuryNFTSwap.sol:247:9:\n    |\n247 |         address from,\n    |         ^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"file":"contracts/JuryNFTSwap.sol","start":7512,"end":7524},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/JuryNFTSwap.sol:248:9:\n    |\n248 |         uint256 tokenId,\n    |         ^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"file":"contracts/JuryNFTSwap.sol","start":7535,"end":7550},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/JuryNFTSwap.sol:249:9:\n    |\n249 |         bytes calldata data\n    |         ^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"file":"contracts/JuryNFTSwap.sol","start":7561,"end":7580},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ ZKsync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> @openzeppelin/contracts/utils/cryptography/ECDSA.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ ZKsync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"29","start":6276,"end":6300},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/Proposal.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"40","start":5728,"end":5765},"type":"Warning"}],"version":"0.8.24","long_version":"0.8.24+commit.e11b9ed9.Windows.msvc","zk_version":"1.5.0","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3442],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":3443,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,3442],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[],"usedEvents":[13]}],"src":"102:2514:0"}},"@openzeppelin/contracts/interfaces/IERC165.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[4677]},"id":116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":116,"sourceUnit":4678,"src":"116:44:1","symbolAliases":[],"unitAlias":""}],"src":"91:70:1"}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[136]},"id":137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":117,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"132:133:2","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"},"fullyImplemented":true,"id":136,"linearizedBaseContracts":[136],"name":"IERC1967","nameLocation":"276:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"291:68:2","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":123,"name":"Upgraded","nameLocation":"370:8:2","nodeType":"EventDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"395:14:2","nodeType":"VariableDeclaration","scope":123,"src":"379:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"379:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"378:32:2"},"src":"364:47:2"},{"anonymous":false,"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"417:67:2","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":130,"name":"AdminChanged","nameLocation":"495:12:2","nodeType":"EventDefinition","parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"516:13:2","nodeType":"VariableDeclaration","scope":130,"src":"508:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"539:8:2","nodeType":"VariableDeclaration","scope":130,"src":"531:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"531:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"507:41:2"},"src":"489:60:2"},{"anonymous":false,"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"555:59:2","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":135,"name":"BeaconUpgraded","nameLocation":"625:14:2","nodeType":"EventDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"656:6:2","nodeType":"VariableDeclaration","scope":135,"src":"640:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"639:24:2"},"src":"619:45:2"}],"scope":137,"src":"266:400:2","usedErrors":[],"usedEvents":[123,130,135]}],"src":"107:560:2"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[4677],"IERC4906":[158],"IERC721":[2881]},"id":159,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:3"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":139,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":159,"sourceUnit":116,"src":"132:23:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":159,"sourceUnit":187,"src":"156:23:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":142,"name":"IERC165","nameLocations":["248:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":4677,"src":"248:7:3"},"id":143,"nodeType":"InheritanceSpecifier","src":"248:7:3"},{"baseName":{"id":144,"name":"IERC721","nameLocations":["257:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2881,"src":"257:7:3"},"id":145,"nodeType":"InheritanceSpecifier","src":"257:7:3"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"181:45:3","text":"@title EIP-721 Metadata Update Extension"},"fullyImplemented":false,"id":158,"linearizedBaseContracts":[158,2881,4677],"name":"IERC4906","nameLocation":"236:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"271:201:3","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":150,"name":"MetadataUpdate","nameLocation":"483:14:3","nodeType":"EventDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"506:8:3","nodeType":"VariableDeclaration","scope":150,"src":"498:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:18:3"},"src":"477:39:3"},{"anonymous":false,"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"522:212:3","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":157,"name":"BatchMetadataUpdate","nameLocation":"745:19:3","nodeType":"EventDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"773:12:3","nodeType":"VariableDeclaration","scope":157,"src":"765:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"765:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":155,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"795:10:3","nodeType":"VariableDeclaration","scope":157,"src":"787:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"764:42:3"},"src":"739:68:3"}],"scope":159,"src":"226:583:3","usedErrors":[],"usedEvents":[150,157,2780,2789,2798]}],"src":"107:703:3"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[183]},"id":184,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":160,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":183,"linearizedBaseContracts":[183],"name":"IERC5267","nameLocation":"142:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":161,"nodeType":"StructuredDocumentation","src":"157:84:4","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":163,"name":"EIP712DomainChanged","nameLocation":"252:19:4","nodeType":"EventDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[],"src":"271:2:4"},"src":"246:28:4"},{"documentation":{"id":164,"nodeType":"StructuredDocumentation","src":"280:140:4","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":182,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"434:12:4","nodeType":"FunctionDefinition","parameters":{"id":165,"nodeType":"ParameterList","parameters":[],"src":"446:2:4"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"fields","nameLocation":"516:6:4","nodeType":"VariableDeclaration","scope":182,"src":"509:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":166,"name":"bytes1","nodeType":"ElementaryTypeName","src":"509:6:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"name","nameLocation":"550:4:4","nodeType":"VariableDeclaration","scope":182,"src":"536:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":168,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"version","nameLocation":"582:7:4","nodeType":"VariableDeclaration","scope":182,"src":"568:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":170,"name":"string","nodeType":"ElementaryTypeName","src":"568:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"chainId","nameLocation":"611:7:4","nodeType":"VariableDeclaration","scope":182,"src":"603:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"verifyingContract","nameLocation":"640:17:4","nodeType":"VariableDeclaration","scope":182,"src":"632:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":177,"mutability":"mutable","name":"salt","nameLocation":"679:4:4","nodeType":"VariableDeclaration","scope":182,"src":"671:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"671:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"extensions","nameLocation":"714:10:4","nodeType":"VariableDeclaration","scope":182,"src":"697:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":179,"nodeType":"ArrayTypeName","src":"697:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"495:239:4"},"scope":183,"src":"425:310:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":184,"src":"132:605:4","usedErrors":[],"usedEvents":[163]}],"src":"107:631:4"}},"@openzeppelin/contracts/interfaces/IERC721.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC165":[4677],"IERC721":[2881]},"id":187,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":185,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":186,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":187,"sourceUnit":2882,"src":"116:37:5","symbolAliases":[],"unitAlias":""}],"src":"91:63:5"}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[196]},"id":197,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":188,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"138:203:6","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":196,"linearizedBaseContracts":[196],"name":"IERC1822Proxiable","nameLocation":"352:17:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"376:438:6","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":195,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"828:13:6","nodeType":"FunctionDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[],"src":"841:2:6"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":195,"src":"867:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"867:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"866:9:6"},"scope":196,"src":"819:57:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":197,"src":"342:536:6","usedErrors":[],"usedEvents":[]}],"src":"113:766:6"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","exportedSymbols":{"Address":[3412],"ERC1967Upgrade":[500],"IBeacon":[510],"IERC1822Proxiable":[196],"IERC1967":[136],"StorageSlot":[3842]},"id":501,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":198,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:7"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":199,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":501,"sourceUnit":511,"src":"141:31:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":200,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":501,"sourceUnit":137,"src":"173:39:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"../../interfaces/draft-IERC1822.sol","id":201,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":501,"sourceUnit":197,"src":"213:45:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":202,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":501,"sourceUnit":3413,"src":"259:33:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":203,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":501,"sourceUnit":3843,"src":"293:37:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":205,"name":"IERC1967","nameLocations":["553:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":136,"src":"553:8:7"},"id":206,"nodeType":"InheritanceSpecifier","src":"553:8:7"}],"canonicalName":"ERC1967Upgrade","contractDependencies":[],"contractKind":"contract","documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"332:184:7","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"},"fullyImplemented":true,"id":500,"linearizedBaseContracts":[500,136],"name":"ERC1967Upgrade","nameLocation":"535:14:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":209,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"672:14:7","nodeType":"VariableDeclaration","scope":500,"src":"647:108:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"647:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"689:66:7","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"762:214:7","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":213,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1007:20:7","nodeType":"VariableDeclaration","scope":500,"src":"981:115:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"981:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1030:66:7","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":225,"nodeType":"Block","src":"1237:78:7","statements":[{"expression":{"expression":{"arguments":[{"id":221,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"1281:20:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":219,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"1254:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3842_$","typeString":"type(library StorageSlot)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1266:14:7","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3764,"src":"1254:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3738_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1254:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3738_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":223,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1303:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3737,"src":"1254:54:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":218,"id":224,"nodeType":"Return","src":"1247:61:7"}]},"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"1103:67:7","text":" @dev Returns the current implementation address."},"id":226,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1184:18:7","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"1202:2:7"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":226,"src":"1228:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:9:7"},"scope":500,"src":"1175:140:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":249,"nodeType":"Block","src":"1469:196:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":235,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"1506:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":233,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"1487:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3412_$","typeString":"type(library Address)"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1495:10:7","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":3100,"src":"1487:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1487:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1526:47:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1479:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1479:95:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":239,"nodeType":"ExpressionStatement","src":"1479:95:7"},{"expression":{"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":243,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"1611:20:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":240,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"1584:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3842_$","typeString":"type(library StorageSlot)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1596:14:7","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3764,"src":"1584:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3738_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1584:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3738_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1633:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3737,"src":"1584:54:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":246,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"1641:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1584:74:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":248,"nodeType":"ExpressionStatement","src":"1584:74:7"}]},"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"1321:80:7","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":250,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1415:18:7","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"newImplementation","nameLocation":"1442:17:7","nodeType":"VariableDeclaration","scope":250,"src":"1434:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"1434:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1433:27:7"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"1469:0:7"},"scope":500,"src":"1406:259:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":264,"nodeType":"Block","src":"1827:96:7","statements":[{"expression":{"arguments":[{"id":257,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"1856:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":256,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"1837:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":259,"nodeType":"ExpressionStatement","src":"1837:37:7"},{"eventCall":{"arguments":[{"id":261,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"1898:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":260,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1889:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1889:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":263,"nodeType":"EmitStatement","src":"1884:32:7"}]},"documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"1671:95:7","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":265,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"1780:10:7","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":253,"mutability":"mutable","name":"newImplementation","nameLocation":"1799:17:7","nodeType":"VariableDeclaration","scope":265,"src":"1791:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"1791:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1790:27:7"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"1827:0:7"},"scope":500,"src":"1771:152:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":294,"nodeType":"Block","src":"2155:167:7","statements":[{"expression":{"arguments":[{"id":276,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"2176:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":275,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"2165:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2165:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":278,"nodeType":"ExpressionStatement","src":"2165:29:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":279,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"2208:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2213:6:7","memberName":"length","nodeType":"MemberAccess","src":"2208:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2222:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2208:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":283,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2227:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":293,"nodeType":"IfStatement","src":"2204:112:7","trueBody":{"id":292,"nodeType":"Block","src":"2238:78:7","statements":[{"expression":{"arguments":[{"id":288,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"2281:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":289,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"2300:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":285,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"2252:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3412_$","typeString":"type(library Address)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:20:7","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3299,"src":"2252:28:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2252:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":291,"nodeType":"ExpressionStatement","src":"2252:53:7"}]}}]},"documentation":{"id":266,"nodeType":"StructuredDocumentation","src":"1929:123:7","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2066:17:7","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"newImplementation","nameLocation":"2092:17:7","nodeType":"VariableDeclaration","scope":295,"src":"2084:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"2084:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"data","nameLocation":"2124:4:7","nodeType":"VariableDeclaration","scope":295,"src":"2111:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":269,"name":"bytes","nodeType":"ElementaryTypeName","src":"2111:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"forceCall","nameLocation":"2135:9:7","nodeType":"VariableDeclaration","scope":295,"src":"2130:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":271,"name":"bool","nodeType":"ElementaryTypeName","src":"2130:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2083:62:7"},"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[],"src":"2155:0:7"},"scope":500,"src":"2057:265:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":347,"nodeType":"Block","src":"2596:820:7","statements":[{"condition":{"expression":{"arguments":[{"id":307,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"2937:14:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":305,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"2910:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3842_$","typeString":"type(library StorageSlot)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2922:14:7","memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":3775,"src":"2910:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$3741_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2910:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3741_storage_ptr","typeString":"struct StorageSlot.BooleanSlot storage pointer"}},"id":309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2953:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3740,"src":"2910:48:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":345,"nodeType":"Block","src":"3028:382:7","statements":[{"clauses":[{"block":{"id":330,"nodeType":"Block","src":"3122:115:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":324,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"3148:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":325,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"3156:20:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3148:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3178:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":323,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3140:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3140:82:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":329,"nodeType":"ExpressionStatement","src":"3140:82:7"}]},"errorName":"","id":331,"nodeType":"TryCatchClause","parameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"slot","nameLocation":"3116:4:7","nodeType":"VariableDeclaration","scope":331,"src":"3108:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:14:7"},"src":"3099:138:7"},{"block":{"id":336,"nodeType":"Block","src":"3244:89:7","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3269:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":332,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3262:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3262:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":335,"nodeType":"ExpressionStatement","src":"3262:56:7"}]},"errorName":"","id":337,"nodeType":"TryCatchClause","src":"3238:95:7"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":316,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"3064:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":315,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"3046:17:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$196_$","typeString":"type(contract IERC1822Proxiable)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$196","typeString":"contract IERC1822Proxiable"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3083:13:7","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":195,"src":"3046:50:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:52:7","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":338,"nodeType":"TryStatement","src":"3042:291:7"},{"expression":{"arguments":[{"id":340,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"3364:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":341,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"3383:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":342,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"3389:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":339,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"3346:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3346:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":344,"nodeType":"ExpressionStatement","src":"3346:53:7"}]},"id":346,"nodeType":"IfStatement","src":"2906:504:7","trueBody":{"id":314,"nodeType":"Block","src":"2960:62:7","statements":[{"expression":{"arguments":[{"id":311,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"2993:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":310,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"2974:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2974:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":313,"nodeType":"ExpressionStatement","src":"2974:37:7"}]}}]},"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"2328:161:7","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":348,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2503:21:7","nodeType":"FunctionDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"newImplementation","nameLocation":"2533:17:7","nodeType":"VariableDeclaration","scope":348,"src":"2525:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"2525:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":300,"mutability":"mutable","name":"data","nameLocation":"2565:4:7","nodeType":"VariableDeclaration","scope":348,"src":"2552:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":299,"name":"bytes","nodeType":"ElementaryTypeName","src":"2552:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"forceCall","nameLocation":"2576:9:7","nodeType":"VariableDeclaration","scope":348,"src":"2571:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":301,"name":"bool","nodeType":"ElementaryTypeName","src":"2571:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2524:62:7"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[],"src":"2596:0:7"},"scope":500,"src":"2494:922:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"3422:189:7","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":352,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"3642:11:7","nodeType":"VariableDeclaration","scope":500,"src":"3616:106:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3616:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:66:7","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":364,"nodeType":"Block","src":"3837:69:7","statements":[{"expression":{"expression":{"arguments":[{"id":360,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"3881:11:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":358,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"3854:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3842_$","typeString":"type(library StorageSlot)"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3866:14:7","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3764,"src":"3854:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3738_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3854:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3738_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3894:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3737,"src":"3854:45:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":357,"id":363,"nodeType":"Return","src":"3847:52:7"}]},"documentation":{"id":353,"nodeType":"StructuredDocumentation","src":"3729:50:7","text":" @dev Returns the current admin."},"id":365,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"3793:9:7","nodeType":"FunctionDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[],"src":"3802:2:7"},"returnParameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":365,"src":"3828:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"3828:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3827:9:7"},"scope":500,"src":"3784:122:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":390,"nodeType":"Block","src":"4033:156:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":372,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4051:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4071:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4063:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"4063:7:7","typeDescriptions":{}}},"id":376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4063:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4051:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4075:40:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4043:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":380,"nodeType":"ExpressionStatement","src":"4043:73:7"},{"expression":{"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":384,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"4153:11:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":381,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"4126:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3842_$","typeString":"type(library StorageSlot)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4138:14:7","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3764,"src":"4126:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3738_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4126:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3738_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4166:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3737,"src":"4126:45:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":387,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4174:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4126:56:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":389,"nodeType":"ExpressionStatement","src":"4126:56:7"}]},"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"3912:71:7","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":391,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3997:9:7","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"newAdmin","nameLocation":"4015:8:7","nodeType":"VariableDeclaration","scope":391,"src":"4007:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4006:18:7"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"4033:0:7"},"scope":500,"src":"3988:201:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":407,"nodeType":"Block","src":"4349:86:7","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":398,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"4377:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4377:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":400,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4390:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":397,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"4364:12:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4364:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":402,"nodeType":"EmitStatement","src":"4359:40:7"},{"expression":{"arguments":[{"id":404,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4419:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":403,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"4409:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4409:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":406,"nodeType":"ExpressionStatement","src":"4409:19:7"}]},"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"4195:100:7","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":408,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4309:12:7","nodeType":"FunctionDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"newAdmin","nameLocation":"4330:8:7","nodeType":"VariableDeclaration","scope":408,"src":"4322:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"4322:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4321:18:7"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[],"src":"4349:0:7"},"scope":500,"src":"4300:135:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":409,"nodeType":"StructuredDocumentation","src":"4441:232:7","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":412,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"4704:12:7","nodeType":"VariableDeclaration","scope":500,"src":"4678:107:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4678:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4719:66:7","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":424,"nodeType":"Block","src":"4902:70:7","statements":[{"expression":{"expression":{"arguments":[{"id":420,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"4946:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":418,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"4919:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3842_$","typeString":"type(library StorageSlot)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4931:14:7","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3764,"src":"4919:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3738_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3738_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4960:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3737,"src":"4919:46:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":417,"id":423,"nodeType":"Return","src":"4912:53:7"}]},"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"4792:51:7","text":" @dev Returns the current beacon."},"id":425,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"4857:10:7","nodeType":"FunctionDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"4867:2:7"},"returnParameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":425,"src":"4893:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"4893:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4892:9:7"},"scope":500,"src":"4848:124:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":460,"nodeType":"Block","src":"5101:324:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":434,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"5138:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":432,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"5119:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3412_$","typeString":"type(library Address)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5127:10:7","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":3100,"src":"5119:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5119:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5150:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":431,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5111:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5111:79:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":438,"nodeType":"ExpressionStatement","src":"5111:79:7"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":443,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"5248:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":442,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5240:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$510_$","typeString":"type(contract IBeacon)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5240:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$510","typeString":"contract IBeacon"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5259:14:7","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":509,"src":"5240:33:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5240:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":440,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"5221:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3412_$","typeString":"type(library Address)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5229:10:7","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":3100,"src":"5221:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5221:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5290:50:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5200:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5200:150:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":450,"nodeType":"ExpressionStatement","src":"5200:150:7"},{"expression":{"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":454,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5387:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":451,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"5360:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3842_$","typeString":"type(library StorageSlot)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5372:14:7","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3764,"src":"5360:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3738_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5360:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3738_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5401:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3737,"src":"5360:46:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":457,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"5409:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5360:58:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":459,"nodeType":"ExpressionStatement","src":"5360:58:7"}]},"documentation":{"id":426,"nodeType":"StructuredDocumentation","src":"4978:71:7","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":461,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5063:10:7","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"newBeacon","nameLocation":"5082:9:7","nodeType":"VariableDeclaration","scope":461,"src":"5074:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":427,"name":"address","nodeType":"ElementaryTypeName","src":"5074:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5073:19:7"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"5101:0:7"},"scope":500,"src":"5054:371:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":498,"nodeType":"Block","src":"5824:217:7","statements":[{"expression":{"arguments":[{"id":472,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"5845:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":471,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"5834:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5834:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":474,"nodeType":"ExpressionStatement","src":"5834:21:7"},{"eventCall":{"arguments":[{"id":476,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"5885:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":475,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"5870:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5870:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"EmitStatement","src":"5865:30:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":479,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"5909:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5914:6:7","memberName":"length","nodeType":"MemberAccess","src":"5909:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5923:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5909:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":483,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5928:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5909:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":497,"nodeType":"IfStatement","src":"5905:130:7","trueBody":{"id":496,"nodeType":"Block","src":"5939:96:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":489,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"5990:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":488,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5982:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$510_$","typeString":"type(contract IBeacon)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5982:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$510","typeString":"contract IBeacon"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:14:7","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":509,"src":"5982:33:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5982:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":493,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"6019:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":485,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"5953:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3412_$","typeString":"type(library Address)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5961:20:7","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3299,"src":"5953:28:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5953:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":495,"nodeType":"ExpressionStatement","src":"5953:71:7"}]}}]},"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"5431:292:7","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":499,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"5737:23:7","nodeType":"FunctionDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"newBeacon","nameLocation":"5769:9:7","nodeType":"VariableDeclaration","scope":499,"src":"5761:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"5761:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":466,"mutability":"mutable","name":"data","nameLocation":"5793:4:7","nodeType":"VariableDeclaration","scope":499,"src":"5780:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":465,"name":"bytes","nodeType":"ElementaryTypeName","src":"5780:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":468,"mutability":"mutable","name":"forceCall","nameLocation":"5804:9:7","nodeType":"VariableDeclaration","scope":499,"src":"5799:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":467,"name":"bool","nodeType":"ElementaryTypeName","src":"5799:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5760:54:7"},"returnParameters":{"id":470,"nodeType":"ParameterList","parameters":[],"src":"5824:0:7"},"scope":500,"src":"5728:313:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":501,"src":"517:5526:7","usedErrors":[],"usedEvents":[123,130,135]}],"src":"116:5928:7"}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[510]},"id":511,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":502,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"118:79:8","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":510,"linearizedBaseContracts":[510],"name":"IBeacon","nameLocation":"208:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"222:162:8","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":509,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"398:14:8","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[],"src":"412:2:8"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":509,"src":"438:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"437:9:8"},"scope":510,"src":"389:58:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":511,"src":"198:251:8","usedErrors":[],"usedEvents":[]}],"src":"93:357:8"}},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","exportedSymbols":{"Address":[3412],"Initializable":[679]},"id":680,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":512,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:9"},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":513,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":680,"sourceUnit":3413,"src":"138:33:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"173:2209:9","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":679,"linearizedBaseContracts":[679],"name":"Initializable","nameLocation":"2401:13:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"2421:109:9","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":517,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:9","nodeType":"VariableDeclaration","scope":679,"src":"2535:26:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":516,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"2568:91:9","text":" @dev Indicates that the contract is in the process of being initialized."},"id":520,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:9","nodeType":"VariableDeclaration","scope":679,"src":"2664:26:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":519,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"2697:90:9","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":525,"name":"Initialized","nameLocation":"2798:11:9","nodeType":"EventDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:9","nodeType":"VariableDeclaration","scope":525,"src":"2810:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":522,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:9"},"src":"2792:33:9"},{"body":{"id":580,"nodeType":"Block","src":"3258:472:9","statements":[{"assignments":[529],"declarations":[{"constant":false,"id":529,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3273:14:9","nodeType":"VariableDeclaration","scope":580,"src":"3268:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":528,"name":"bool","nodeType":"ElementaryTypeName","src":"3268:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":532,"initialValue":{"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3290:14:9","subExpression":{"id":530,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"3291:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3268:36:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":534,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3336:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":535,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"3354:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3369:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3354:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3336:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3335:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3376:34:9","subExpression":{"arguments":[{"arguments":[{"id":544,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3404:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$679","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$679","typeString":"contract Initializable"}],"id":543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"3396:7:9","typeDescriptions":{}}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":540,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"3377:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3412_$","typeString":"type(library Address)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3385:10:9","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":3100,"src":"3377:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3377:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":548,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"3414:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3430:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3414:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3376:55:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":552,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3375:57:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3335:97:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3446:48:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3314:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:190:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":556,"nodeType":"ExpressionStatement","src":"3314:190:9"},{"expression":{"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":557,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"3514:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3529:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3514:16:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":560,"nodeType":"ExpressionStatement","src":"3514:16:9"},{"condition":{"id":561,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3544:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":567,"nodeType":"IfStatement","src":"3540:65:9","trueBody":{"id":566,"nodeType":"Block","src":"3560:45:9","statements":[{"expression":{"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":562,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"3574:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3590:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3574:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":565,"nodeType":"ExpressionStatement","src":"3574:20:9"}]}},{"id":568,"nodeType":"PlaceholderStatement","src":"3614:1:9"},{"condition":{"id":569,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3629:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":579,"nodeType":"IfStatement","src":"3625:99:9","trueBody":{"id":578,"nodeType":"Block","src":"3645:79:9","statements":[{"expression":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":570,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"3659:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3675:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3659:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":573,"nodeType":"ExpressionStatement","src":"3659:21:9"},{"eventCall":{"arguments":[{"hexValue":"31","id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3711:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":574,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3699:11:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3699:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"EmitStatement","src":"3694:19:9"}]}}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"2831:399:9","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":581,"name":"initializer","nameLocation":"3244:11:9","nodeType":"ModifierDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"3255:2:9"},"src":"3235:495:9","virtual":false,"visibility":"internal"},{"body":{"id":613,"nodeType":"Block","src":"4841:255:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4859:14:9","subExpression":{"id":587,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4860:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":589,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"4877:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":590,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4892:7:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4877:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4859:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4901:48:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":586,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4851:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4851:99:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":595,"nodeType":"ExpressionStatement","src":"4851:99:9"},{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":596,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"4960:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":597,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4975:7:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4960:22:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":599,"nodeType":"ExpressionStatement","src":"4960:22:9"},{"expression":{"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":600,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4992:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5008:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4992:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":603,"nodeType":"ExpressionStatement","src":"4992:20:9"},{"id":604,"nodeType":"PlaceholderStatement","src":"5022:1:9"},{"expression":{"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":605,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5033:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5049:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5033:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":608,"nodeType":"ExpressionStatement","src":"5033:21:9"},{"eventCall":{"arguments":[{"id":610,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"5081:7:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":609,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"5069:11:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5069:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":612,"nodeType":"EmitStatement","src":"5064:25:9"}]},"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"3736:1062:9","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":614,"name":"reinitializer","nameLocation":"4812:13:9","nodeType":"ModifierDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"version","nameLocation":"4832:7:9","nodeType":"VariableDeclaration","scope":614,"src":"4826:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":583,"name":"uint8","nodeType":"ElementaryTypeName","src":"4826:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4825:15:9"},"src":"4803:293:9","virtual":false,"visibility":"internal"},{"body":{"id":623,"nodeType":"Block","src":"5334:97:9","statements":[{"expression":{"arguments":[{"id":618,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5352:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5367:45:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":617,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5344:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5344:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":621,"nodeType":"ExpressionStatement","src":"5344:69:9"},{"id":622,"nodeType":"PlaceholderStatement","src":"5423:1:9"}]},"documentation":{"id":615,"nodeType":"StructuredDocumentation","src":"5102:199:9","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":624,"name":"onlyInitializing","nameLocation":"5315:16:9","nodeType":"ModifierDefinition","parameters":{"id":616,"nodeType":"ParameterList","parameters":[],"src":"5331:2:9"},"src":"5306:125:9","virtual":false,"visibility":"internal"},{"body":{"id":659,"nodeType":"Block","src":"5966:231:9","statements":[{"expression":{"arguments":[{"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5984:14:9","subExpression":{"id":629,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5985:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6000:41:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":628,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5976:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5976:66:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":633,"nodeType":"ExpressionStatement","src":"5976:66:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":634,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"6056:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6077:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":636,"name":"uint8","nodeType":"ElementaryTypeName","src":"6077:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":635,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6072:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6072:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6084:3:9","memberName":"max","nodeType":"MemberAccess","src":"6072:15:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6056:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":658,"nodeType":"IfStatement","src":"6052:139:9","trueBody":{"id":657,"nodeType":"Block","src":"6089:102:9","statements":[{"expression":{"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":641,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"6103:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6123:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":643,"name":"uint8","nodeType":"ElementaryTypeName","src":"6123:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":642,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6118:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6118:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6130:3:9","memberName":"max","nodeType":"MemberAccess","src":"6118:15:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6103:30:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":648,"nodeType":"ExpressionStatement","src":"6103:30:9"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6169:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":651,"name":"uint8","nodeType":"ElementaryTypeName","src":"6169:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":650,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6164:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6164:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6176:3:9","memberName":"max","nodeType":"MemberAccess","src":"6164:15:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":649,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"6152:11:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6152:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":656,"nodeType":"EmitStatement","src":"6147:33:9"}]}}]},"documentation":{"id":625,"nodeType":"StructuredDocumentation","src":"5437:475:9","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":660,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5926:20:9","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[],"src":"5946:2:9"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[],"src":"5966:0:9"},"scope":679,"src":"5917:280:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":668,"nodeType":"Block","src":"6371:36:9","statements":[{"expression":{"id":666,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"6388:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":665,"id":667,"nodeType":"Return","src":"6381:19:9"}]},"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"6203:99:9","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":669,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6316:22:9","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"6338:2:9"},"returnParameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":669,"src":"6364:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":663,"name":"uint8","nodeType":"ElementaryTypeName","src":"6364:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6363:7:9"},"scope":679,"src":"6307:100:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":677,"nodeType":"Block","src":"6579:37:9","statements":[{"expression":{"id":675,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6596:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":674,"id":676,"nodeType":"Return","src":"6589:20:9"}]},"documentation":{"id":670,"nodeType":"StructuredDocumentation","src":"6413:105:9","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":678,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6532:15:9","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"6547:2:9"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"6573:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":672,"name":"bool","nodeType":"ElementaryTypeName","src":"6573:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6572:6:9"},"scope":679,"src":"6523:93:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":680,"src":"2383:4235:9","usedErrors":[],"usedEvents":[525]}],"src":"113:6506:9"}},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"id":10,"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"Address":[3412],"ERC1967Upgrade":[500],"IBeacon":[510],"IERC1822Proxiable":[196],"IERC1967":[136],"StorageSlot":[3842],"UUPSUpgradeable":[795]},"id":796,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":681,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:10"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"../../interfaces/draft-IERC1822.sol","id":682,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":796,"sourceUnit":197,"src":"140:45:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","file":"../ERC1967/ERC1967Upgrade.sol","id":683,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":796,"sourceUnit":501,"src":"186:39:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":685,"name":"IERC1822Proxiable","nameLocations":["913:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":196,"src":"913:17:10"},"id":686,"nodeType":"InheritanceSpecifier","src":"913:17:10"},{"baseName":{"id":687,"name":"ERC1967Upgrade","nameLocations":["932:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":500,"src":"932:14:10"},"id":688,"nodeType":"InheritanceSpecifier","src":"932:14:10"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":684,"nodeType":"StructuredDocumentation","src":"227:648:10","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":795,"linearizedBaseContracts":[795,500,136,196],"name":"UUPSUpgradeable","nameLocation":"894:15:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"953:87:10","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":695,"mutability":"immutable","name":"__self","nameLocation":"1071:6:10","nodeType":"VariableDeclaration","scope":795,"src":"1045:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"1045:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":693,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1088:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$795","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$795","typeString":"contract UUPSUpgradeable"}],"id":692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1080:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"1080:7:10","typeDescriptions":{}}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1080:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":717,"nodeType":"Block","src":"1619:205:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":701,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1645:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$795","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$795","typeString":"contract UUPSUpgradeable"}],"id":700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1637:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"1637:7:10","typeDescriptions":{}}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1637:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":703,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"1654:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1637:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1662:46:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":698,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1629:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1629:80:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":707,"nodeType":"ExpressionStatement","src":"1629:80:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":709,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"1727:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1727:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":711,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"1751:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1727:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1759:46:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1719:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1719:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":715,"nodeType":"ExpressionStatement","src":"1719:87:10"},{"id":716,"nodeType":"PlaceholderStatement","src":"1816:1:10"}]},"documentation":{"id":696,"nodeType":"StructuredDocumentation","src":"1100:493:10","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":718,"name":"onlyProxy","nameLocation":"1607:9:10","nodeType":"ModifierDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[],"src":"1616:2:10"},"src":"1598:226:10","virtual":false,"visibility":"internal"},{"body":{"id":732,"nodeType":"Block","src":"2054:120:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":724,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2080:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$795","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$795","typeString":"contract UUPSUpgradeable"}],"id":723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"2072:7:10","typeDescriptions":{}}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2072:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":726,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"2089:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2072:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2097:58:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":721,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2064:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2064:92:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":730,"nodeType":"ExpressionStatement","src":"2064:92:10"},{"id":731,"nodeType":"PlaceholderStatement","src":"2166:1:10"}]},"documentation":{"id":719,"nodeType":"StructuredDocumentation","src":"1830:195:10","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":733,"name":"notDelegated","nameLocation":"2039:12:10","nodeType":"ModifierDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"2051:2:10"},"src":"2030:144:10","virtual":false,"visibility":"internal"},{"baseFunctions":[195],"body":{"id":744,"nodeType":"Block","src":"2849:44:10","statements":[{"expression":{"id":742,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"2866:20:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":741,"id":743,"nodeType":"Return","src":"2859:27:10"}]},"documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"2180:577:10","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":745,"implemented":true,"kind":"function","modifiers":[{"id":738,"kind":"modifierInvocation","modifierName":{"id":737,"name":"notDelegated","nameLocations":["2818:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":733,"src":"2818:12:10"},"nodeType":"ModifierInvocation","src":"2818:12:10"}],"name":"proxiableUUID","nameLocation":"2771:13:10","nodeType":"FunctionDefinition","overrides":{"id":736,"nodeType":"OverrideSpecifier","overrides":[],"src":"2809:8:10"},"parameters":{"id":735,"nodeType":"ParameterList","parameters":[],"src":"2784:2:10"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":745,"src":"2840:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2840:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2839:9:10"},"scope":795,"src":"2762:131:10","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":766,"nodeType":"Block","src":"3214:124:10","statements":[{"expression":{"arguments":[{"id":754,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"3242:17:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":753,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"3224:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3224:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":756,"nodeType":"ExpressionStatement","src":"3224:36:10"},{"expression":{"arguments":[{"id":758,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"3292:17:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3321:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3311:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":759,"name":"bytes","nodeType":"ElementaryTypeName","src":"3315:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3311:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3325:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":757,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"3270:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3270:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":765,"nodeType":"ExpressionStatement","src":"3270:61:10"}]},"documentation":{"id":746,"nodeType":"StructuredDocumentation","src":"2899:239:10","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"3659cfe6","id":767,"implemented":true,"kind":"function","modifiers":[{"id":751,"kind":"modifierInvocation","modifierName":{"id":750,"name":"onlyProxy","nameLocations":["3204:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":718,"src":"3204:9:10"},"nodeType":"ModifierInvocation","src":"3204:9:10"}],"name":"upgradeTo","nameLocation":"3152:9:10","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":748,"mutability":"mutable","name":"newImplementation","nameLocation":"3170:17:10","nodeType":"VariableDeclaration","scope":767,"src":"3162:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"3162:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3161:27:10"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[],"src":"3214:0:10"},"scope":795,"src":"3143:195:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":787,"nodeType":"Block","src":"3762:115:10","statements":[{"expression":{"arguments":[{"id":778,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"3790:17:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":777,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"3772:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3772:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"3772:36:10"},{"expression":{"arguments":[{"id":782,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"3840:17:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":783,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"3859:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3865:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":781,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"3818:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":786,"nodeType":"ExpressionStatement","src":"3818:52:10"}]},"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"3344:308:10","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":788,"implemented":true,"kind":"function","modifiers":[{"id":775,"kind":"modifierInvocation","modifierName":{"id":774,"name":"onlyProxy","nameLocations":["3752:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":718,"src":"3752:9:10"},"nodeType":"ModifierInvocation","src":"3752:9:10"}],"name":"upgradeToAndCall","nameLocation":"3666:16:10","nodeType":"FunctionDefinition","parameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"newImplementation","nameLocation":"3691:17:10","nodeType":"VariableDeclaration","scope":788,"src":"3683:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"3683:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"data","nameLocation":"3723:4:10","nodeType":"VariableDeclaration","scope":788,"src":"3710:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":771,"name":"bytes","nodeType":"ElementaryTypeName","src":"3710:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3682:46:10"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[],"src":"3762:0:10"},"scope":795,"src":"3657:220:10","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"3883:397:10","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":794,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4294:17:10","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"newImplementation","nameLocation":"4320:17:10","nodeType":"VariableDeclaration","scope":794,"src":"4312:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"4312:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4311:27:10"},"returnParameters":{"id":793,"nodeType":"ParameterList","parameters":[],"src":"4355:0:10"},"scope":795,"src":"4285:71:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":796,"src":"876:3482:10","usedErrors":[],"usedEvents":[123,130,135]}],"src":"115:4244:10"}},"@openzeppelin/contracts/security/Pausable.sol":{"id":11,"ast":{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[3442],"Pausable":[903]},"id":904,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":797,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":798,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":904,"sourceUnit":3443,"src":"130:30:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":800,"name":"Context","nameLocations":["632:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"632:7:11"},"id":801,"nodeType":"InheritanceSpecifier","src":"632:7:11"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"162:439:11","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":903,"linearizedBaseContracts":[903,3442],"name":"Pausable","nameLocation":"620:8:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"646:73:11","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":806,"name":"Paused","nameLocation":"730:6:11","nodeType":"EventDefinition","parameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"745:7:11","nodeType":"VariableDeclaration","scope":806,"src":"737:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:11"},"src":"724:30:11"},{"anonymous":false,"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"760:70:11","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":811,"name":"Unpaused","nameLocation":"841:8:11","nodeType":"EventDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"858:7:11","nodeType":"VariableDeclaration","scope":811,"src":"850:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:11"},"src":"835:32:11"},{"constant":false,"id":813,"mutability":"mutable","name":"_paused","nameLocation":"886:7:11","nodeType":"VariableDeclaration","scope":903,"src":"873:20:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":812,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":821,"nodeType":"Block","src":"986:32:11","statements":[{"expression":{"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":817,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"996:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":820,"nodeType":"ExpressionStatement","src":"996:15:11"}]},"documentation":{"id":814,"nodeType":"StructuredDocumentation","src":"900:67:11","text":" @dev Initializes the contract in unpaused state."},"id":822,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"983:2:11"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"986:0:11"},"scope":903,"src":"972:46:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":829,"nodeType":"Block","src":"1229:47:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":825,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"1239:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1239:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":827,"nodeType":"ExpressionStatement","src":"1239:19:11"},{"id":828,"nodeType":"PlaceholderStatement","src":"1268:1:11"}]},"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"1024:175:11","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":830,"name":"whenNotPaused","nameLocation":"1213:13:11","nodeType":"ModifierDefinition","parameters":{"id":824,"nodeType":"ParameterList","parameters":[],"src":"1226:2:11"},"src":"1204:72:11","virtual":false,"visibility":"internal"},{"body":{"id":837,"nodeType":"Block","src":"1476:44:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":833,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"1486:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1486:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":835,"nodeType":"ExpressionStatement","src":"1486:16:11"},{"id":836,"nodeType":"PlaceholderStatement","src":"1512:1:11"}]},"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"1282:167:11","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":838,"name":"whenPaused","nameLocation":"1463:10:11","nodeType":"ModifierDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[],"src":"1473:2:11"},"src":"1454:66:11","virtual":false,"visibility":"internal"},{"body":{"id":846,"nodeType":"Block","src":"1668:31:11","statements":[{"expression":{"id":844,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"1685:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":843,"id":845,"nodeType":"Return","src":"1678:14:11"}]},"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"1526:84:11","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":847,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1624:6:11","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[],"src":"1630:2:11"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":847,"src":"1662:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":841,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:11"},"scope":903,"src":"1615:84:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":858,"nodeType":"Block","src":"1818:55:11","statements":[{"expression":{"arguments":[{"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:11","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":852,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"1837:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":851,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":857,"nodeType":"ExpressionStatement","src":"1828:38:11"}]},"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"1705:57:11","text":" @dev Throws if the contract is paused."},"id":859,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1776:17:11","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"1793:2:11"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[],"src":"1818:0:11"},"scope":903,"src":"1767:106:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":869,"nodeType":"Block","src":"1993:58:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":864,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"2011:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2011:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":863,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2003:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"ExpressionStatement","src":"2003:41:11"}]},"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"1879:61:11","text":" @dev Throws if the contract is not paused."},"id":870,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"1954:14:11","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[],"src":"1968:2:11"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[],"src":"1993:0:11"},"scope":903,"src":"1945:106:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":885,"nodeType":"Block","src":"2235:66:11","statements":[{"expression":{"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":876,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"2245:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":879,"nodeType":"ExpressionStatement","src":"2245:14:11"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":881,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"2281:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":880,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2274:6:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":884,"nodeType":"EmitStatement","src":"2269:25:11"}]},"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"2057:124:11","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":886,"implemented":true,"kind":"function","modifiers":[{"id":874,"kind":"modifierInvocation","modifierName":{"id":873,"name":"whenNotPaused","nameLocations":["2221:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":830,"src":"2221:13:11"},"nodeType":"ModifierInvocation","src":"2221:13:11"}],"name":"_pause","nameLocation":"2195:6:11","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[],"src":"2201:2:11"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[],"src":"2235:0:11"},"scope":903,"src":"2186:115:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":901,"nodeType":"Block","src":"2481:69:11","statements":[{"expression":{"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":892,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"2491:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":895,"nodeType":"ExpressionStatement","src":"2491:15:11"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":897,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"2530:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2530:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":896,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"2521:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2521:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":900,"nodeType":"EmitStatement","src":"2516:27:11"}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"2307:121:11","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":902,"implemented":true,"kind":"function","modifiers":[{"id":890,"kind":"modifierInvocation","modifierName":{"id":889,"name":"whenPaused","nameLocations":["2470:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":838,"src":"2470:10:11"},"nodeType":"ModifierInvocation","src":"2470:10:11"}],"name":"_unpause","nameLocation":"2442:8:11","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[],"src":"2450:2:11"},"returnParameters":{"id":891,"nodeType":"ParameterList","parameters":[],"src":"2481:0:11"},"scope":903,"src":"2433:117:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":904,"src":"602:1950:11","usedErrors":[],"usedEvents":[806,811]}],"src":"105:2448:11"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"id":12,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[3442],"ERC20":[1490],"IERC20":[1568],"IERC20Metadata":[1802]},"id":1491,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":905,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1491,"sourceUnit":1569,"src":"130:22:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":907,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1491,"sourceUnit":1803,"src":"153:41:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1491,"sourceUnit":3443,"src":"195:33:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":910,"name":"Context","nameLocations":["1550:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"1550:7:12"},"id":911,"nodeType":"InheritanceSpecifier","src":"1550:7:12"},{"baseName":{"id":912,"name":"IERC20","nameLocations":["1559:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1568,"src":"1559:6:12"},"id":913,"nodeType":"InheritanceSpecifier","src":"1559:6:12"},{"baseName":{"id":914,"name":"IERC20Metadata","nameLocations":["1567:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":1802,"src":"1567:14:12"},"id":915,"nodeType":"InheritanceSpecifier","src":"1567:14:12"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"230:1301:12","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1490,"linearizedBaseContracts":[1490,1802,1568,3442],"name":"ERC20","nameLocation":"1541:5:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":919,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:12","nodeType":"VariableDeclaration","scope":1490,"src":"1588:45:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":918,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":916,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":925,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:12","nodeType":"VariableDeclaration","scope":1490,"src":"1640:67:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":924,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":923,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":927,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:12","nodeType":"VariableDeclaration","scope":1490,"src":"1714:28:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":929,"mutability":"mutable","name":"_name","nameLocation":"1764:5:12","nodeType":"VariableDeclaration","scope":1490,"src":"1749:20:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":928,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":931,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:12","nodeType":"VariableDeclaration","scope":1490,"src":"1775:22:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":930,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":947,"nodeType":"Block","src":"2036:57:12","statements":[{"expression":{"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":939,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"2046:5:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":940,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"2054:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":942,"nodeType":"ExpressionStatement","src":"2046:13:12"},{"expression":{"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":943,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"2069:7:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":944,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"2079:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":946,"nodeType":"ExpressionStatement","src":"2069:17:12"}]},"documentation":{"id":932,"nodeType":"StructuredDocumentation","src":"1804:171:12","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":948,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"name_","nameLocation":"2006:5:12","nodeType":"VariableDeclaration","scope":948,"src":"1992:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":933,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":936,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:12","nodeType":"VariableDeclaration","scope":948,"src":"2013:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":935,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:12"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[],"src":"2036:0:12"},"scope":1490,"src":"1980:113:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1789],"body":{"id":957,"nodeType":"Block","src":"2227:29:12","statements":[{"expression":{"id":955,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"2244:5:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":954,"id":956,"nodeType":"Return","src":"2237:12:12"}]},"documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"2099:54:12","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":958,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:12","nodeType":"FunctionDefinition","overrides":{"id":951,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:12"},"parameters":{"id":950,"nodeType":"ParameterList","parameters":[],"src":"2171:2:12"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":958,"src":"2212:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":952,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:12"},"scope":1490,"src":"2158:98:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1795],"body":{"id":967,"nodeType":"Block","src":"2440:31:12","statements":[{"expression":{"id":965,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"2457:7:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":964,"id":966,"nodeType":"Return","src":"2450:14:12"}]},"documentation":{"id":959,"nodeType":"StructuredDocumentation","src":"2262:102:12","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":968,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:12","nodeType":"FunctionDefinition","overrides":{"id":961,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:12"},"parameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"2384:2:12"},"returnParameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":968,"src":"2425:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":962,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:12"},"scope":1490,"src":"2369:102:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1801],"body":{"id":977,"nodeType":"Block","src":"3169:26:12","statements":[{"expression":{"hexValue":"3138","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:12","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":974,"id":976,"nodeType":"Return","src":"3179:9:12"}]},"documentation":{"id":969,"nodeType":"StructuredDocumentation","src":"2477:622:12","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":978,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:12","nodeType":"FunctionDefinition","overrides":{"id":971,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:12"},"parameters":{"id":970,"nodeType":"ParameterList","parameters":[],"src":"3121:2:12"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":978,"src":"3162:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":972,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:12"},"scope":1490,"src":"3104:91:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1517],"body":{"id":987,"nodeType":"Block","src":"3325:36:12","statements":[{"expression":{"id":985,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"3342:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":984,"id":986,"nodeType":"Return","src":"3335:19:12"}]},"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"3201:49:12","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":988,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:12","nodeType":"FunctionDefinition","overrides":{"id":981,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:12"},"parameters":{"id":980,"nodeType":"ParameterList","parameters":[],"src":"3275:2:12"},"returnParameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":988,"src":"3316:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:12"},"scope":1490,"src":"3255:106:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1525],"body":{"id":1001,"nodeType":"Block","src":"3502:42:12","statements":[{"expression":{"baseExpression":{"id":997,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"3519:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":999,"indexExpression":{"id":998,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"3529:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":996,"id":1000,"nodeType":"Return","src":"3512:25:12"}]},"documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"3367:47:12","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1002,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:12","nodeType":"FunctionDefinition","overrides":{"id":993,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:12"},"parameters":{"id":992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"account","nameLocation":"3446:7:12","nodeType":"VariableDeclaration","scope":1002,"src":"3438:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:12"},"returnParameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1002,"src":"3493:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":994,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:12"},"scope":1490,"src":"3419:125:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1535],"body":{"id":1026,"nodeType":"Block","src":"3825:104:12","statements":[{"assignments":[1014],"declarations":[{"constant":false,"id":1014,"mutability":"mutable","name":"owner","nameLocation":"3843:5:12","nodeType":"VariableDeclaration","scope":1026,"src":"3835:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1017,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1015,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"3851:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:12"},{"expression":{"arguments":[{"id":1019,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"3883:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1020,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"3890:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1021,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"3894:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1018,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"3873:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1023,"nodeType":"ExpressionStatement","src":"3873:28:12"},{"expression":{"hexValue":"74727565","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1012,"id":1025,"nodeType":"Return","src":"3911:11:12"}]},"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"3550:185:12","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:12","nodeType":"FunctionDefinition","overrides":{"id":1009,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:12"},"parameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"to","nameLocation":"3766:2:12","nodeType":"VariableDeclaration","scope":1027,"src":"3758:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"amount","nameLocation":"3778:6:12","nodeType":"VariableDeclaration","scope":1027,"src":"3770:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1006,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:12"},"returnParameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1027,"src":"3819:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1010,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:12"},"scope":1490,"src":"3740:189:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1545],"body":{"id":1044,"nodeType":"Block","src":"4085:51:12","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1038,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"4102:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1040,"indexExpression":{"id":1039,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"4114:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1042,"indexExpression":{"id":1041,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"4121:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1037,"id":1043,"nodeType":"Return","src":"4095:34:12"}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"3935:47:12","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1045,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:12","nodeType":"FunctionDefinition","overrides":{"id":1034,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:12"},"parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"owner","nameLocation":"4014:5:12","nodeType":"VariableDeclaration","scope":1045,"src":"4006:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"spender","nameLocation":"4029:7:12","nodeType":"VariableDeclaration","scope":1045,"src":"4021:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:12"},"returnParameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1045,"src":"4076:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:12"},"scope":1490,"src":"3987:149:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1555],"body":{"id":1069,"nodeType":"Block","src":"4533:108:12","statements":[{"assignments":[1057],"declarations":[{"constant":false,"id":1057,"mutability":"mutable","name":"owner","nameLocation":"4551:5:12","nodeType":"VariableDeclaration","scope":1069,"src":"4543:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1060,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1058,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"4559:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:12"},{"expression":{"arguments":[{"id":1062,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4590:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1063,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"4597:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1064,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"4606:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1061,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"4581:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1066,"nodeType":"ExpressionStatement","src":"4581:32:12"},{"expression":{"hexValue":"74727565","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1055,"id":1068,"nodeType":"Return","src":"4623:11:12"}]},"documentation":{"id":1046,"nodeType":"StructuredDocumentation","src":"4142:297:12","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1070,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:12","nodeType":"FunctionDefinition","overrides":{"id":1052,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:12"},"parameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"mutability":"mutable","name":"spender","nameLocation":"4469:7:12","nodeType":"VariableDeclaration","scope":1070,"src":"4461:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1047,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1050,"mutability":"mutable","name":"amount","nameLocation":"4486:6:12","nodeType":"VariableDeclaration","scope":1070,"src":"4478:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1049,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:12"},"returnParameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1070,"src":"4527:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1053,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:12"},"scope":1490,"src":"4444:197:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1567],"body":{"id":1102,"nodeType":"Block","src":"5306:153:12","statements":[{"assignments":[1084],"declarations":[{"constant":false,"id":1084,"mutability":"mutable","name":"spender","nameLocation":"5324:7:12","nodeType":"VariableDeclaration","scope":1102,"src":"5316:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1087,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1085,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"5334:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:12"},{"expression":{"arguments":[{"id":1089,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"5372:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1090,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"5378:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1091,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"5387:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1088,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"5356:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1093,"nodeType":"ExpressionStatement","src":"5356:38:12"},{"expression":{"arguments":[{"id":1095,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"5414:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1096,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"5420:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1097,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"5424:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1094,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"5404:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"ExpressionStatement","src":"5404:27:12"},{"expression":{"hexValue":"74727565","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1082,"id":1101,"nodeType":"Return","src":"5441:11:12"}]},"documentation":{"id":1071,"nodeType":"StructuredDocumentation","src":"4647:551:12","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":1103,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:12","nodeType":"FunctionDefinition","overrides":{"id":1079,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:12"},"parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"from","nameLocation":"5233:4:12","nodeType":"VariableDeclaration","scope":1103,"src":"5225:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1075,"mutability":"mutable","name":"to","nameLocation":"5247:2:12","nodeType":"VariableDeclaration","scope":1103,"src":"5239:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"amount","nameLocation":"5259:6:12","nodeType":"VariableDeclaration","scope":1103,"src":"5251:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:12"},"returnParameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1103,"src":"5300:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1080,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:12"},"scope":1490,"src":"5203:256:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1131,"nodeType":"Block","src":"5948:140:12","statements":[{"assignments":[1114],"declarations":[{"constant":false,"id":1114,"mutability":"mutable","name":"owner","nameLocation":"5966:5:12","nodeType":"VariableDeclaration","scope":1131,"src":"5958:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1117,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"5974:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:12"},{"expression":{"arguments":[{"id":1119,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"6005:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1120,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"6012:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1122,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"6031:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1123,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"6038:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1121,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"6021:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1125,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"6049:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1118,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"5996:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1128,"nodeType":"ExpressionStatement","src":"5996:64:12"},{"expression":{"hexValue":"74727565","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1112,"id":1130,"nodeType":"Return","src":"6070:11:12"}]},"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"5465:384:12","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":1132,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:12","nodeType":"FunctionDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"spender","nameLocation":"5889:7:12","nodeType":"VariableDeclaration","scope":1132,"src":"5881:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:12","nodeType":"VariableDeclaration","scope":1132,"src":"5898:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:12"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1132,"src":"5942:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1110,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:12"},"scope":1490,"src":"5854:234:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1172,"nodeType":"Block","src":"6674:328:12","statements":[{"assignments":[1143],"declarations":[{"constant":false,"id":1143,"mutability":"mutable","name":"owner","nameLocation":"6692:5:12","nodeType":"VariableDeclaration","scope":1172,"src":"6684:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1146,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1144,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"6700:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:12"},{"assignments":[1148],"declarations":[{"constant":false,"id":1148,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:12","nodeType":"VariableDeclaration","scope":1172,"src":"6722:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1153,"initialValue":{"arguments":[{"id":1150,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"6759:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1151,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"6766:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1149,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"6749:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1155,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"6792:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1156,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"6812:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":1154,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1160,"nodeType":"ExpressionStatement","src":"6784:85:12"},{"id":1169,"nodeType":"UncheckedBlock","src":"6879:95:12","statements":[{"expression":{"arguments":[{"id":1162,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"6912:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1163,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"6919:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1164,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"6928:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1165,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"6947:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1161,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"6903:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1168,"nodeType":"ExpressionStatement","src":"6903:60:12"}]},{"expression":{"hexValue":"74727565","id":1170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1141,"id":1171,"nodeType":"Return","src":"6984:11:12"}]},"documentation":{"id":1133,"nodeType":"StructuredDocumentation","src":"6094:476:12","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":1173,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:12","nodeType":"FunctionDefinition","parameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"spender","nameLocation":"6610:7:12","nodeType":"VariableDeclaration","scope":1173,"src":"6602:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:12","nodeType":"VariableDeclaration","scope":1173,"src":"6619:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:12"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1173,"src":"6668:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1139,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:12"},"scope":1490,"src":"6575:427:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1249,"nodeType":"Block","src":"7534:710:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1184,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"7552:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:12","typeDescriptions":{}}},"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":1183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1192,"nodeType":"ExpressionStatement","src":"7544:68:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1194,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"7630:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:12","typeDescriptions":{}}},"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":1193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1202,"nodeType":"ExpressionStatement","src":"7622:64:12"},{"expression":{"arguments":[{"id":1204,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"7718:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1205,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"7724:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1206,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"7728:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1203,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"7697:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1208,"nodeType":"ExpressionStatement","src":"7697:38:12"},{"assignments":[1210],"declarations":[{"constant":false,"id":1210,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:12","nodeType":"VariableDeclaration","scope":1249,"src":"7746:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1209,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1214,"initialValue":{"baseExpression":{"id":1211,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"7768:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1213,"indexExpression":{"id":1212,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"7778:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1216,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"7801:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1217,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"7816:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":1215,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1221,"nodeType":"ExpressionStatement","src":"7793:72:12"},{"id":1236,"nodeType":"UncheckedBlock","src":"7875:273:12","statements":[{"expression":{"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1222,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"7899:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1224,"indexExpression":{"id":1223,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"7909:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1225,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"7917:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1226,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"7931:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1229,"nodeType":"ExpressionStatement","src":"7899:38:12"},{"expression":{"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1230,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"8114:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1232,"indexExpression":{"id":1231,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"8124:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1233,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"8131:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1235,"nodeType":"ExpressionStatement","src":"8114:23:12"}]},{"eventCall":{"arguments":[{"id":1238,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"8172:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1239,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"8178:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1240,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"8182:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1237,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"8163:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1242,"nodeType":"EmitStatement","src":"8158:31:12"},{"expression":{"arguments":[{"id":1244,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"8220:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1245,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"8226:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1246,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"8230:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1243,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"8200:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1248,"nodeType":"ExpressionStatement","src":"8200:37:12"}]},"documentation":{"id":1174,"nodeType":"StructuredDocumentation","src":"7008:443:12","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":1250,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:12","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"mutability":"mutable","name":"from","nameLocation":"7483:4:12","nodeType":"VariableDeclaration","scope":1250,"src":"7475:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"to","nameLocation":"7497:2:12","nodeType":"VariableDeclaration","scope":1250,"src":"7489:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"amount","nameLocation":"7509:6:12","nodeType":"VariableDeclaration","scope":1250,"src":"7501:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1179,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:12"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[],"src":"7534:0:12"},"scope":1490,"src":"7456:788:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1306,"nodeType":"Block","src":"8585:470:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1259,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"8603:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:12","typeDescriptions":{}}},"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":1258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1267,"nodeType":"ExpressionStatement","src":"8595:65:12"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:12","typeDescriptions":{}}},"id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1273,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"8704:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1274,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"8713:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1268,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"8671:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1276,"nodeType":"ExpressionStatement","src":"8671:49:12"},{"expression":{"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1277,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"8731:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1278,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"8747:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1280,"nodeType":"ExpressionStatement","src":"8731:22:12"},{"id":1287,"nodeType":"UncheckedBlock","src":"8763:175:12","statements":[{"expression":{"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1281,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"8899:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1283,"indexExpression":{"id":1282,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"8909:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1284,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"8921:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1286,"nodeType":"ExpressionStatement","src":"8899:28:12"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:12","typeDescriptions":{}}},"id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"8973:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1294,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"8982:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1288,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"8952:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1296,"nodeType":"EmitStatement","src":"8947:42:12"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:12","typeDescriptions":{}}},"id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1302,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"9032:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1303,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"9041:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1297,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"9000:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1305,"nodeType":"ExpressionStatement","src":"9000:48:12"}]},"documentation":{"id":1251,"nodeType":"StructuredDocumentation","src":"8250:265:12","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":1307,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:12","nodeType":"FunctionDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"account","nameLocation":"8543:7:12","nodeType":"VariableDeclaration","scope":1307,"src":"8535:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"amount","nameLocation":"8560:6:12","nodeType":"VariableDeclaration","scope":1307,"src":"8552:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:12"},"returnParameters":{"id":1257,"nodeType":"ParameterList","parameters":[],"src":"8585:0:12"},"scope":1490,"src":"8520:535:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1378,"nodeType":"Block","src":"9440:594:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1316,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"9458:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:12","typeDescriptions":{}}},"id":1320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1324,"nodeType":"ExpressionStatement","src":"9450:67:12"},{"expression":{"arguments":[{"id":1326,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"9549:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:12","typeDescriptions":{}}},"id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1331,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"9570:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1325,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"9528:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1333,"nodeType":"ExpressionStatement","src":"9528:49:12"},{"assignments":[1335],"declarations":[{"constant":false,"id":1335,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:12","nodeType":"VariableDeclaration","scope":1378,"src":"9588:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1339,"initialValue":{"baseExpression":{"id":1336,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"9613:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1338,"indexExpression":{"id":1337,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"9623:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1341,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"9649:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1342,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"9667:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1340,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1346,"nodeType":"ExpressionStatement","src":"9641:71:12"},{"id":1359,"nodeType":"UncheckedBlock","src":"9722:194:12","statements":[{"expression":{"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1347,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"9746:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1349,"indexExpression":{"id":1348,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"9756:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1350,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"9767:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1351,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"9784:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1354,"nodeType":"ExpressionStatement","src":"9746:44:12"},{"expression":{"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1355,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"9883:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1356,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"9899:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1358,"nodeType":"ExpressionStatement","src":"9883:22:12"}]},{"eventCall":{"arguments":[{"id":1361,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"9940:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1362,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:12","typeDescriptions":{}}},"id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1366,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"9961:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1360,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"9931:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1368,"nodeType":"EmitStatement","src":"9926:42:12"},{"expression":{"arguments":[{"id":1370,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"9999:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:12","typeDescriptions":{}}},"id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1375,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"10020:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1369,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"9979:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1377,"nodeType":"ExpressionStatement","src":"9979:48:12"}]},"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"9061:309:12","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1379,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:12","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"account","nameLocation":"9398:7:12","nodeType":"VariableDeclaration","scope":1379,"src":"9390:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"amount","nameLocation":"9415:6:12","nodeType":"VariableDeclaration","scope":1379,"src":"9407:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:12"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[],"src":"9440:0:12"},"scope":1490,"src":"9375:659:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1423,"nodeType":"Block","src":"10540:257:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"10558:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:12","typeDescriptions":{}}},"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1389,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1398,"nodeType":"ExpressionStatement","src":"10550:68:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1400,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"10636:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:12","typeDescriptions":{}}},"id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1408,"nodeType":"ExpressionStatement","src":"10628:68:12"},{"expression":{"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1409,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"10707:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1412,"indexExpression":{"id":1410,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"10719:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1413,"indexExpression":{"id":1411,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"10726:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1414,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"10737:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1416,"nodeType":"ExpressionStatement","src":"10707:36:12"},{"eventCall":{"arguments":[{"id":1418,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"10767:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1419,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"10774:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1420,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"10783:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1417,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"10758:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1422,"nodeType":"EmitStatement","src":"10753:37:12"}]},"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"10040:412:12","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1424,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:12","nodeType":"FunctionDefinition","parameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"owner","nameLocation":"10483:5:12","nodeType":"VariableDeclaration","scope":1424,"src":"10475:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"spender","nameLocation":"10498:7:12","nodeType":"VariableDeclaration","scope":1424,"src":"10490:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"amount","nameLocation":"10515:6:12","nodeType":"VariableDeclaration","scope":1424,"src":"10507:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1385,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:12"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[],"src":"10540:0:12"},"scope":1490,"src":"10457:340:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1466,"nodeType":"Block","src":"11168:321:12","statements":[{"assignments":[1435],"declarations":[{"constant":false,"id":1435,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:12","nodeType":"VariableDeclaration","scope":1466,"src":"11178:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1440,"initialValue":{"arguments":[{"id":1437,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"11215:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1438,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"11222:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1436,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"11205:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1441,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"11244:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1443,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1442,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:12","memberName":"max","nodeType":"MemberAccess","src":"11264:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1465,"nodeType":"IfStatement","src":"11240:243:12","trueBody":{"id":1464,"nodeType":"Block","src":"11283:200:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1449,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"11305:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1450,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"11325:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1448,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1454,"nodeType":"ExpressionStatement","src":"11297:68:12"},{"id":1463,"nodeType":"UncheckedBlock","src":"11379:94:12","statements":[{"expression":{"arguments":[{"id":1456,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"11416:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1457,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"11423:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1458,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"11432:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1459,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"11451:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1455,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"11407:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1462,"nodeType":"ExpressionStatement","src":"11407:51:12"}]}]}}]},"documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"10803:270:12","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1467,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:12","nodeType":"FunctionDefinition","parameters":{"id":1432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"owner","nameLocation":"11111:5:12","nodeType":"VariableDeclaration","scope":1467,"src":"11103:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1429,"mutability":"mutable","name":"spender","nameLocation":"11126:7:12","nodeType":"VariableDeclaration","scope":1467,"src":"11118:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"amount","nameLocation":"11143:6:12","nodeType":"VariableDeclaration","scope":1467,"src":"11135:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:12"},"returnParameters":{"id":1433,"nodeType":"ParameterList","parameters":[],"src":"11168:0:12"},"scope":1490,"src":"11078:411:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1477,"nodeType":"Block","src":"12162:2:12","statements":[]},"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"11495:573:12","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1478,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:12","nodeType":"FunctionDefinition","parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"from","nameLocation":"12111:4:12","nodeType":"VariableDeclaration","scope":1478,"src":"12103:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"to","nameLocation":"12125:2:12","nodeType":"VariableDeclaration","scope":1478,"src":"12117:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1471,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"amount","nameLocation":"12137:6:12","nodeType":"VariableDeclaration","scope":1478,"src":"12129:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:12"},"returnParameters":{"id":1476,"nodeType":"ParameterList","parameters":[],"src":"12162:0:12"},"scope":1490,"src":"12073:91:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1488,"nodeType":"Block","src":"12840:2:12","statements":[]},"documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"12170:577:12","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1489,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:12","nodeType":"FunctionDefinition","parameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"from","nameLocation":"12789:4:12","nodeType":"VariableDeclaration","scope":1489,"src":"12781:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1480,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1483,"mutability":"mutable","name":"to","nameLocation":"12803:2:12","nodeType":"VariableDeclaration","scope":1489,"src":"12795:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1485,"mutability":"mutable","name":"amount","nameLocation":"12815:6:12","nodeType":"VariableDeclaration","scope":1489,"src":"12807:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:12"},"returnParameters":{"id":1487,"nodeType":"ParameterList","parameters":[],"src":"12840:0:12"},"scope":1490,"src":"12752:90:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1491,"src":"1532:11312:12","usedErrors":[],"usedEvents":[1502,1511]}],"src":"105:12740:12"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"id":13,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1568]},"id":1569,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1492,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1493,"nodeType":"StructuredDocumentation","src":"131:70:13","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1568,"linearizedBaseContracts":[1568],"name":"IERC20","nameLocation":"212:6:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"225:158:13","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1502,"name":"Transfer","nameLocation":"394:8:13","nodeType":"EventDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:13","nodeType":"VariableDeclaration","scope":1502,"src":"403:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1495,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1498,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:13","nodeType":"VariableDeclaration","scope":1502,"src":"425:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1497,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1500,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:13","nodeType":"VariableDeclaration","scope":1502,"src":"445:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1499,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:13"},"src":"388:72:13"},{"anonymous":false,"documentation":{"id":1503,"nodeType":"StructuredDocumentation","src":"466:148:13","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1511,"name":"Approval","nameLocation":"625:8:13","nodeType":"EventDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:13","nodeType":"VariableDeclaration","scope":1511,"src":"634:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1504,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1507,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:13","nodeType":"VariableDeclaration","scope":1511,"src":"657:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1509,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:13","nodeType":"VariableDeclaration","scope":1511,"src":"682:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:13"},"src":"619:78:13"},{"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"703:66:13","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1517,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:13","nodeType":"FunctionDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[],"src":"794:2:13"},"returnParameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1517,"src":"820:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:13"},"scope":1568,"src":"774:55:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1518,"nodeType":"StructuredDocumentation","src":"835:72:13","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1525,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:13","nodeType":"FunctionDefinition","parameters":{"id":1521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1520,"mutability":"mutable","name":"account","nameLocation":"939:7:13","nodeType":"VariableDeclaration","scope":1525,"src":"931:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1519,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:13"},"returnParameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1525,"src":"971:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:13"},"scope":1568,"src":"912:68:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"986:202:13","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1535,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:13","nodeType":"FunctionDefinition","parameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"to","nameLocation":"1219:2:13","nodeType":"VariableDeclaration","scope":1535,"src":"1211:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1530,"mutability":"mutable","name":"amount","nameLocation":"1231:6:13","nodeType":"VariableDeclaration","scope":1535,"src":"1223:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:13"},"returnParameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1535,"src":"1257:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1532,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:13"},"scope":1568,"src":"1193:70:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1536,"nodeType":"StructuredDocumentation","src":"1269:264:13","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1545,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:13","nodeType":"FunctionDefinition","parameters":{"id":1541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"owner","nameLocation":"1565:5:13","nodeType":"VariableDeclaration","scope":1545,"src":"1557:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1537,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1540,"mutability":"mutable","name":"spender","nameLocation":"1580:7:13","nodeType":"VariableDeclaration","scope":1545,"src":"1572:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1539,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:13"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1545,"src":"1612:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:13"},"scope":1568,"src":"1538:83:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"1627:642:13","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1555,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:13","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"spender","nameLocation":"2299:7:13","nodeType":"VariableDeclaration","scope":1555,"src":"2291:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"amount","nameLocation":"2316:6:13","nodeType":"VariableDeclaration","scope":1555,"src":"2308:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:13"},"returnParameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1555,"src":"2342:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1552,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:13"},"scope":1568,"src":"2274:74:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"2354:287:13","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1567,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:13","nodeType":"FunctionDefinition","parameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"from","nameLocation":"2676:4:13","nodeType":"VariableDeclaration","scope":1567,"src":"2668:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1557,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"to","nameLocation":"2690:2:13","nodeType":"VariableDeclaration","scope":1567,"src":"2682:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1559,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"amount","nameLocation":"2702:6:13","nodeType":"VariableDeclaration","scope":1567,"src":"2694:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:13"},"returnParameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1567,"src":"2728:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1564,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:13"},"scope":1568,"src":"2646:88:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1569,"src":"202:2534:13","usedErrors":[],"usedEvents":[1502,1511]}],"src":"106:2631:13"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"id":14,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","exportedSymbols":{"Context":[3442],"ERC20":[1490],"ERC20Pausable":[1605],"IERC20":[1568],"IERC20Metadata":[1802],"Pausable":[903]},"id":1606,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1570,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1571,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1606,"sourceUnit":1491,"src":"149:22:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"../../../security/Pausable.sol","id":1572,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1606,"sourceUnit":904,"src":"172:40:14","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1574,"name":"ERC20","nameLocations":["885:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":1490,"src":"885:5:14"},"id":1575,"nodeType":"InheritanceSpecifier","src":"885:5:14"},{"baseName":{"id":1576,"name":"Pausable","nameLocations":["892:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"892:8:14"},"id":1577,"nodeType":"InheritanceSpecifier","src":"892:8:14"}],"canonicalName":"ERC20Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1573,"nodeType":"StructuredDocumentation","src":"214:635:14","text":" @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract unpausable."},"fullyImplemented":true,"id":1605,"linearizedBaseContracts":[1605,903,1490,1802,1568,3442],"name":"ERC20Pausable","nameLocation":"868:13:14","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1478],"body":{"id":1603,"nodeType":"Block","src":"1144:136:14","statements":[{"expression":{"arguments":[{"id":1591,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"1181:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1592,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"1187:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1593,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"1191:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1588,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1154:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Pausable_$1605_$","typeString":"type(contract super ERC20Pausable)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1160:20:14","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1478,"src":"1154:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1154:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1595,"nodeType":"ExpressionStatement","src":"1154:44:14"},{"expression":{"arguments":[{"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1217:9:14","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1597,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"1218:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1218:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1228:44:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4","typeString":"literal_string \"ERC20Pausable: token transfer while paused\""},"value":"ERC20Pausable: token transfer while paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4","typeString":"literal_string \"ERC20Pausable: token transfer while paused\""}],"id":1596,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1209:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1209:64:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1602,"nodeType":"ExpressionStatement","src":"1209:64:14"}]},"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"907:134:14","text":" @dev See {ERC20-_beforeTokenTransfer}.\n Requirements:\n - the contract must not be paused."},"id":1604,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"1055:20:14","nodeType":"FunctionDefinition","overrides":{"id":1586,"nodeType":"OverrideSpecifier","overrides":[],"src":"1135:8:14"},"parameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"from","nameLocation":"1084:4:14","nodeType":"VariableDeclaration","scope":1604,"src":"1076:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1579,"name":"address","nodeType":"ElementaryTypeName","src":"1076:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"to","nameLocation":"1098:2:14","nodeType":"VariableDeclaration","scope":1604,"src":"1090:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"1090:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"amount","nameLocation":"1110:6:14","nodeType":"VariableDeclaration","scope":1604,"src":"1102:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1583,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1075:42:14"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[],"src":"1144:0:14"},"scope":1605,"src":"1046:234:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1606,"src":"850:432:14","usedErrors":[],"usedEvents":[806,811,1502,1511]}],"src":"124:1159:14"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"id":15,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"Context":[3442],"Counters":[3516],"ECDSA":[4437],"EIP712":[4641],"ERC20":[1490],"ERC20Permit":[1777],"IERC20":[1568],"IERC20Metadata":[1802],"IERC20Permit":[1838],"IERC5267":[183],"Math":[5543],"ShortString":[3521],"ShortStrings":[3732],"SignedMath":[5648],"StorageSlot":[3842],"Strings":[4071]},"id":1778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1607,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"122:23:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1608,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1778,"sourceUnit":1839,"src":"147:28:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1609,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1778,"sourceUnit":1491,"src":"176:22:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1610,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1778,"sourceUnit":4438,"src":"199:47:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1611,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1778,"sourceUnit":4642,"src":"247:48:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":1612,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1778,"sourceUnit":3517,"src":"296:37:15","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1614,"name":"ERC20","nameLocations":["886:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1490,"src":"886:5:15"},"id":1615,"nodeType":"InheritanceSpecifier","src":"886:5:15"},{"baseName":{"id":1616,"name":"IERC20Permit","nameLocations":["893:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1838,"src":"893:12:15"},"id":1617,"nodeType":"InheritanceSpecifier","src":"893:12:15"},{"baseName":{"id":1618,"name":"EIP712","nameLocations":["907:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":4641,"src":"907:6:15"},"id":1619,"nodeType":"InheritanceSpecifier","src":"907:6:15"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1613,"nodeType":"StructuredDocumentation","src":"335:517:15","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"},"fullyImplemented":true,"id":1777,"linearizedBaseContracts":[1777,4641,183,1838,1490,1802,1568,3442],"name":"ERC20Permit","nameLocation":"871:11:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1623,"libraryName":{"id":1620,"name":"Counters","nameLocations":["926:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":3516,"src":"926:8:15"},"nodeType":"UsingForDirective","src":"920:36:15","typeName":{"id":1622,"nodeType":"UserDefinedTypeName","pathNode":{"id":1621,"name":"Counters.Counter","nameLocations":["939:8:15","948:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3448,"src":"939:16:15"},"referencedDeclaration":3448,"src":"939:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":1628,"mutability":"mutable","name":"_nonces","nameLocation":"1007:7:15","nodeType":"VariableDeclaration","scope":1777,"src":"962:52:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$3448_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":1627,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1624,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"962:36:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$3448_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1626,"nodeType":"UserDefinedTypeName","pathNode":{"id":1625,"name":"Counters.Counter","nameLocations":["981:8:15","990:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3448,"src":"981:16:15"},"referencedDeclaration":3448,"src":"981:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"constant":true,"id":1633,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1098:16:15","nodeType":"VariableDeclaration","scope":1777,"src":"1073:147:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1073:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1135:84:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1630,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1125:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:95:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"1226:254:15","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":1636,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1553:32:15","nodeType":"VariableDeclaration","scope":1777,"src":"1537:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1537:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":1646,"nodeType":"Block","src":"1867:2:15","statements":[]},"documentation":{"id":1637,"nodeType":"StructuredDocumentation","src":"1592:220:15","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1647,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1642,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"1856:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1862:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1644,"kind":"baseConstructorSpecifier","modifierName":{"id":1641,"name":"EIP712","nameLocations":["1849:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":4641,"src":"1849:6:15"},"nodeType":"ModifierInvocation","src":"1849:17:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1639,"mutability":"mutable","name":"name","nameLocation":"1843:4:15","nodeType":"VariableDeclaration","scope":1647,"src":"1829:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1638,"name":"string","nodeType":"ElementaryTypeName","src":"1829:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1828:20:15"},"returnParameters":{"id":1645,"nodeType":"ParameterList","parameters":[],"src":"1867:0:15"},"scope":1777,"src":"1817:52:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1823],"body":{"id":1719,"nodeType":"Block","src":"2121:428:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1667,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2139:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2145:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"2139:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1669,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2158:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2139:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2168:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":1666,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2131:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2131:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1673,"nodeType":"ExpressionStatement","src":"2131:69:15"},{"assignments":[1675],"declarations":[{"constant":false,"id":1675,"mutability":"mutable","name":"structHash","nameLocation":"2219:10:15","nodeType":"VariableDeclaration","scope":1719,"src":"2211:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2211:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1689,"initialValue":{"arguments":[{"arguments":[{"id":1679,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"2253:16:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1680,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"2271:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1681,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2278:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"2287:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1684,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"2304:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1683,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"2294:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1686,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2312:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1677,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2242:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2246:6:15","memberName":"encode","nodeType":"MemberAccess","src":"2242:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2242:79:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1676,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2232:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2232:90:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2211:111:15"},{"assignments":[1691],"declarations":[{"constant":false,"id":1691,"mutability":"mutable","name":"hash","nameLocation":"2341:4:15","nodeType":"VariableDeclaration","scope":1719,"src":"2333:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1690,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2333:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1695,"initialValue":{"arguments":[{"id":1693,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"2365:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1692,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"2348:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2348:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2333:43:15"},{"assignments":[1697],"declarations":[{"constant":false,"id":1697,"mutability":"mutable","name":"signer","nameLocation":"2395:6:15","nodeType":"VariableDeclaration","scope":1719,"src":"2387:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1705,"initialValue":{"arguments":[{"id":1700,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"2418:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1701,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"2424:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1702,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2427:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1703,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2430:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1698,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"2404:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4437_$","typeString":"type(library ECDSA)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2410:7:15","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4372,"src":"2404:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2404:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2387:45:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1707,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"2450:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1708,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"2460:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2450:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":1710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2467:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":1706,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2442:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2442:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1712,"nodeType":"ExpressionStatement","src":"2442:58:15"},{"expression":{"arguments":[{"id":1714,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"2520:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1715,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2527:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"2536:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1713,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"2511:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2511:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1718,"nodeType":"ExpressionStatement","src":"2511:31:15"}]},"documentation":{"id":1648,"nodeType":"StructuredDocumentation","src":"1875:43:15","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1720,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1932:6:15","nodeType":"FunctionDefinition","overrides":{"id":1664,"nodeType":"OverrideSpecifier","overrides":[],"src":"2112:8:15"},"parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"mutability":"mutable","name":"owner","nameLocation":"1956:5:15","nodeType":"VariableDeclaration","scope":1720,"src":"1948:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1649,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1652,"mutability":"mutable","name":"spender","nameLocation":"1979:7:15","nodeType":"VariableDeclaration","scope":1720,"src":"1971:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1651,"name":"address","nodeType":"ElementaryTypeName","src":"1971:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1654,"mutability":"mutable","name":"value","nameLocation":"2004:5:15","nodeType":"VariableDeclaration","scope":1720,"src":"1996:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"1996:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1656,"mutability":"mutable","name":"deadline","nameLocation":"2027:8:15","nodeType":"VariableDeclaration","scope":1720,"src":"2019:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1655,"name":"uint256","nodeType":"ElementaryTypeName","src":"2019:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1658,"mutability":"mutable","name":"v","nameLocation":"2051:1:15","nodeType":"VariableDeclaration","scope":1720,"src":"2045:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1657,"name":"uint8","nodeType":"ElementaryTypeName","src":"2045:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1660,"mutability":"mutable","name":"r","nameLocation":"2070:1:15","nodeType":"VariableDeclaration","scope":1720,"src":"2062:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2062:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"s","nameLocation":"2089:1:15","nodeType":"VariableDeclaration","scope":1720,"src":"2081:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2081:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1938:158:15"},"returnParameters":{"id":1665,"nodeType":"ParameterList","parameters":[],"src":"2121:0:15"},"scope":1777,"src":"1923:626:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1831],"body":{"id":1735,"nodeType":"Block","src":"2681:48:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1729,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"2698:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$3448_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1731,"indexExpression":{"id":1730,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"2706:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2698:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage","typeString":"struct Counters.Counter storage ref"}},"id":1732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2713:7:15","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":3460,"src":"2698:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$3448_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$3448_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2698:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1728,"id":1734,"nodeType":"Return","src":"2691:31:15"}]},"documentation":{"id":1721,"nodeType":"StructuredDocumentation","src":"2555:43:15","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1736,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2612:6:15","nodeType":"FunctionDefinition","overrides":{"id":1725,"nodeType":"OverrideSpecifier","overrides":[],"src":"2654:8:15"},"parameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"owner","nameLocation":"2627:5:15","nodeType":"VariableDeclaration","scope":1736,"src":"2619:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1722,"name":"address","nodeType":"ElementaryTypeName","src":"2619:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2618:15:15"},"returnParameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1736,"src":"2672:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1726,"name":"uint256","nodeType":"ElementaryTypeName","src":"2672:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2671:9:15"},"scope":1777,"src":"2603:126:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1837],"body":{"id":1746,"nodeType":"Block","src":"2905:44:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1743,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"2922:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1742,"id":1745,"nodeType":"Return","src":"2915:27:15"}]},"documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"2735:43:15","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1747,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2845:16:15","nodeType":"FunctionDefinition","overrides":{"id":1739,"nodeType":"OverrideSpecifier","overrides":[],"src":"2878:8:15"},"parameters":{"id":1738,"nodeType":"ParameterList","parameters":[],"src":"2861:2:15"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1747,"src":"2896:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2896:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2895:9:15"},"scope":1777,"src":"2836:113:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1775,"nodeType":"Block","src":"3157:126:15","statements":[{"assignments":[1759],"declarations":[{"constant":false,"id":1759,"mutability":"mutable","name":"nonce","nameLocation":"3192:5:15","nodeType":"VariableDeclaration","scope":1775,"src":"3167:30:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1758,"nodeType":"UserDefinedTypeName","pathNode":{"id":1757,"name":"Counters.Counter","nameLocations":["3167:8:15","3176:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3448,"src":"3167:16:15"},"referencedDeclaration":3448,"src":"3167:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":1763,"initialValue":{"baseExpression":{"id":1760,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"3200:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$3448_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1762,"indexExpression":{"id":1761,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"3208:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3200:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3167:47:15"},{"expression":{"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1764,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"3224:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1765,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"3234:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3240:7:15","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":3460,"src":"3234:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$3448_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$3448_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3234:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3224:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1769,"nodeType":"ExpressionStatement","src":"3224:25:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1770,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"3259:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3265:9:15","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":3474,"src":"3259:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$3448_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$3448_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3259:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1774,"nodeType":"ExpressionStatement","src":"3259:17:15"}]},"documentation":{"id":1748,"nodeType":"StructuredDocumentation","src":"2955:120:15","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":1776,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3089:9:15","nodeType":"FunctionDefinition","parameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"owner","nameLocation":"3107:5:15","nodeType":"VariableDeclaration","scope":1776,"src":"3099:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1749,"name":"address","nodeType":"ElementaryTypeName","src":"3099:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3098:15:15"},"returnParameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"current","nameLocation":"3148:7:15","nodeType":"VariableDeclaration","scope":1776,"src":"3140:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1752,"name":"uint256","nodeType":"ElementaryTypeName","src":"3140:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3139:17:15"},"scope":1777,"src":"3080:203:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1778,"src":"853:2432:15","usedErrors":[3529,3531],"usedEvents":[163,1502,1511]}],"src":"122:3164:15"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"id":16,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1568],"IERC20Metadata":[1802]},"id":1803,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1779,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1780,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1803,"sourceUnit":1569,"src":"135:23:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1782,"name":"IERC20","nameLocations":["305:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1568,"src":"305:6:16"},"id":1783,"nodeType":"InheritanceSpecifier","src":"305:6:16"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1781,"nodeType":"StructuredDocumentation","src":"160:116:16","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1802,"linearizedBaseContracts":[1802,1568],"name":"IERC20Metadata","nameLocation":"287:14:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"318:54:16","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1789,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:16","nodeType":"FunctionDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[],"src":"390:2:16"},"returnParameters":{"id":1788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1789,"src":"416:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1786,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:16"},"scope":1802,"src":"377:54:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1790,"nodeType":"StructuredDocumentation","src":"437:56:16","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1795,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:16","nodeType":"FunctionDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[],"src":"513:2:16"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1795,"src":"539:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1792,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:16"},"scope":1802,"src":"498:56:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1796,"nodeType":"StructuredDocumentation","src":"560:65:16","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1801,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:16","nodeType":"FunctionDefinition","parameters":{"id":1797,"nodeType":"ParameterList","parameters":[],"src":"647:2:16"},"returnParameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1801,"src":"673:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1798,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:16"},"scope":1802,"src":"630:50:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1803,"src":"277:405:16","usedErrors":[],"usedEvents":[1502,1511]}],"src":"110:573:16"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"id":17,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1838]},"id":1839,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1804,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1805,"nodeType":"StructuredDocumentation","src":"148:1963:17","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1838,"linearizedBaseContracts":[1838],"name":"IERC20Permit","nameLocation":"2122:12:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1806,"nodeType":"StructuredDocumentation","src":"2141:850:17","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1823,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3005:6:17","nodeType":"FunctionDefinition","parameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"owner","nameLocation":"3029:5:17","nodeType":"VariableDeclaration","scope":1823,"src":"3021:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"spender","nameLocation":"3052:7:17","nodeType":"VariableDeclaration","scope":1823,"src":"3044:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1809,"name":"address","nodeType":"ElementaryTypeName","src":"3044:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1812,"mutability":"mutable","name":"value","nameLocation":"3077:5:17","nodeType":"VariableDeclaration","scope":1823,"src":"3069:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1811,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1814,"mutability":"mutable","name":"deadline","nameLocation":"3100:8:17","nodeType":"VariableDeclaration","scope":1823,"src":"3092:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1813,"name":"uint256","nodeType":"ElementaryTypeName","src":"3092:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1816,"mutability":"mutable","name":"v","nameLocation":"3124:1:17","nodeType":"VariableDeclaration","scope":1823,"src":"3118:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1815,"name":"uint8","nodeType":"ElementaryTypeName","src":"3118:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"r","nameLocation":"3143:1:17","nodeType":"VariableDeclaration","scope":1823,"src":"3135:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3135:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1820,"mutability":"mutable","name":"s","nameLocation":"3162:1:17","nodeType":"VariableDeclaration","scope":1823,"src":"3154:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3154:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3011:158:17"},"returnParameters":{"id":1822,"nodeType":"ParameterList","parameters":[],"src":"3178:0:17"},"scope":1838,"src":"2996:183:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1824,"nodeType":"StructuredDocumentation","src":"3185:294:17","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1831,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3493:6:17","nodeType":"FunctionDefinition","parameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"owner","nameLocation":"3508:5:17","nodeType":"VariableDeclaration","scope":1831,"src":"3500:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"3500:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3499:15:17"},"returnParameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1831,"src":"3538:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1828,"name":"uint256","nodeType":"ElementaryTypeName","src":"3538:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3537:9:17"},"scope":1838,"src":"3484:63:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"3553:128:17","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1837,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3748:16:17","nodeType":"FunctionDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[],"src":"3764:2:17"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1837,"src":"3790:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3790:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3789:9:17"},"scope":1838,"src":"3739:60:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1839,"src":"2112:1689:17","usedErrors":[],"usedEvents":[]}],"src":"123:3679:17"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"id":18,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[3412],"Context":[3442],"ERC165":[4665],"ERC721":[2765],"IERC165":[4677],"IERC721":[2881],"IERC721Metadata":[3082],"IERC721Receiver":[2899],"Math":[5543],"SignedMath":[5648],"Strings":[4071]},"id":2766,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1840,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1841,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2766,"sourceUnit":2882,"src":"132:23:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":1842,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2766,"sourceUnit":2900,"src":"156:31:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2766,"sourceUnit":3083,"src":"188:42:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1844,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2766,"sourceUnit":3413,"src":"231:33:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1845,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2766,"sourceUnit":3443,"src":"265:33:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1846,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2766,"sourceUnit":4072,"src":"299:33:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1847,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2766,"sourceUnit":4666,"src":"333:46:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1849,"name":"Context","nameLocations":["647:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"647:7:18"},"id":1850,"nodeType":"InheritanceSpecifier","src":"647:7:18"},{"baseName":{"id":1851,"name":"ERC165","nameLocations":["656:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":4665,"src":"656:6:18"},"id":1852,"nodeType":"InheritanceSpecifier","src":"656:6:18"},{"baseName":{"id":1853,"name":"IERC721","nameLocations":["664:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":2881,"src":"664:7:18"},"id":1854,"nodeType":"InheritanceSpecifier","src":"664:7:18"},{"baseName":{"id":1855,"name":"IERC721Metadata","nameLocations":["673:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":3082,"src":"673:15:18"},"id":1856,"nodeType":"InheritanceSpecifier","src":"673:15:18"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":1848,"nodeType":"StructuredDocumentation","src":"381:246:18","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2765,"linearizedBaseContracts":[2765,3082,2881,4665,4677,3442],"name":"ERC721","nameLocation":"637:6:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1859,"libraryName":{"id":1857,"name":"Address","nameLocations":["701:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":3412,"src":"701:7:18"},"nodeType":"UsingForDirective","src":"695:26:18","typeName":{"id":1858,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":1862,"libraryName":{"id":1860,"name":"Strings","nameLocations":["732:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4071,"src":"732:7:18"},"nodeType":"UsingForDirective","src":"726:26:18","typeName":{"id":1861,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1864,"mutability":"mutable","name":"_name","nameLocation":"791:5:18","nodeType":"VariableDeclaration","scope":2765,"src":"776:20:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1863,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1866,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:18","nodeType":"VariableDeclaration","scope":2765,"src":"823:22:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1865,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1870,"mutability":"mutable","name":"_owners","nameLocation":"934:7:18","nodeType":"VariableDeclaration","scope":2765,"src":"898:43:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1869,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1868,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1874,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:18","nodeType":"VariableDeclaration","scope":2765,"src":"992:45:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1873,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1871,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1872,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1878,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:18","nodeType":"VariableDeclaration","scope":2765,"src":"1093:51:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1877,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1876,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1884,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:18","nodeType":"VariableDeclaration","scope":2765,"src":"1199:71:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1883,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1879,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1882,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1881,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1900,"nodeType":"Block","src":"1446:57:18","statements":[{"expression":{"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1892,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"1456:5:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1893,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"1464:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1895,"nodeType":"ExpressionStatement","src":"1456:13:18"},{"expression":{"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1896,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"1479:7:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1897,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"1489:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1899,"nodeType":"ExpressionStatement","src":"1479:17:18"}]},"documentation":{"id":1885,"nodeType":"StructuredDocumentation","src":"1277:108:18","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1901,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"name_","nameLocation":"1416:5:18","nodeType":"VariableDeclaration","scope":1901,"src":"1402:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1886,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1889,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:18","nodeType":"VariableDeclaration","scope":1901,"src":"1423:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1888,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:18"},"returnParameters":{"id":1891,"nodeType":"ParameterList","parameters":[],"src":"1446:0:18"},"scope":2765,"src":"1390:113:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4664,4676],"body":{"id":1931,"nodeType":"Block","src":"1678:192:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1912,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"1707:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1914,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"1727:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2881_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2881_$","typeString":"type(contract IERC721)"}],"id":1913,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1722:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2881","typeString":"type(contract IERC721)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1736:11:18","memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1918,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"1763:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1920,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"1783:15:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3082_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3082_$","typeString":"type(contract IERC721Metadata)"}],"id":1919,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1778:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$3082","typeString":"type(contract IERC721Metadata)"}},"id":1922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1800:11:18","memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1927,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"1851:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1925,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2765_$","typeString":"type(contract super ERC721)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1833:17:18","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4664,"src":"1827:23:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1827:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1911,"id":1930,"nodeType":"Return","src":"1688:175:18"}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"1509:56:18","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1932,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:18","nodeType":"FunctionDefinition","overrides":{"id":1908,"nodeType":"OverrideSpecifier","overrides":[{"id":1906,"name":"ERC165","nameLocations":["1646:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":4665,"src":"1646:6:18"},{"id":1907,"name":"IERC165","nameLocations":["1654:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4677,"src":"1654:7:18"}],"src":"1637:25:18"},"parameters":{"id":1905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:18","nodeType":"VariableDeclaration","scope":1932,"src":"1597:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1903,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:18"},"returnParameters":{"id":1911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1932,"src":"1672:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1909,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:18"},"scope":2765,"src":"1570:300:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2806],"body":{"id":1955,"nodeType":"Block","src":"2010:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1942,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"2028:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1943,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:18","typeDescriptions":{}}},"id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2037:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":1941,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:73:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1950,"nodeType":"ExpressionStatement","src":"2020:73:18"},{"expression":{"baseExpression":{"id":1951,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"2110:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1953,"indexExpression":{"id":1952,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"2120:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1940,"id":1954,"nodeType":"Return","src":"2103:23:18"}]},"documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"1876:48:18","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1956,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:18","nodeType":"FunctionDefinition","overrides":{"id":1937,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:18"},"parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"owner","nameLocation":"1956:5:18","nodeType":"VariableDeclaration","scope":1956,"src":"1948:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1934,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:18"},"returnParameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1956,"src":"2001:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:18"},"scope":2765,"src":"1929:204:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2814],"body":{"id":1983,"nodeType":"Block","src":"2271:138:18","statements":[{"assignments":[1966],"declarations":[{"constant":false,"id":1966,"mutability":"mutable","name":"owner","nameLocation":"2289:5:18","nodeType":"VariableDeclaration","scope":1983,"src":"2281:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1965,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1970,"initialValue":{"arguments":[{"id":1968,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"2306:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1967,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"2297:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2297:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1972,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"2332:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1973,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:18","typeDescriptions":{}}},"id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2341:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1971,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2324:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1980,"nodeType":"ExpressionStatement","src":"2324:56:18"},{"expression":{"id":1981,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"2397:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1964,"id":1982,"nodeType":"Return","src":"2390:12:18"}]},"documentation":{"id":1957,"nodeType":"StructuredDocumentation","src":"2139:46:18","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1984,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:18","nodeType":"FunctionDefinition","overrides":{"id":1961,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:18"},"parameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:18","nodeType":"VariableDeclaration","scope":1984,"src":"2207:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1958,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:18"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1984,"src":"2262:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1962,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:18"},"scope":2765,"src":"2190:219:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3067],"body":{"id":1993,"nodeType":"Block","src":"2540:29:18","statements":[{"expression":{"id":1991,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"2557:5:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1990,"id":1992,"nodeType":"Return","src":"2550:12:18"}]},"documentation":{"id":1985,"nodeType":"StructuredDocumentation","src":"2415:51:18","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1994,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:18","nodeType":"FunctionDefinition","overrides":{"id":1987,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:18"},"parameters":{"id":1986,"nodeType":"ParameterList","parameters":[],"src":"2484:2:18"},"returnParameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1994,"src":"2525:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1988,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:18"},"scope":2765,"src":"2471:98:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3073],"body":{"id":2003,"nodeType":"Block","src":"2704:31:18","statements":[{"expression":{"id":2001,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"2721:7:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2000,"id":2002,"nodeType":"Return","src":"2714:14:18"}]},"documentation":{"id":1995,"nodeType":"StructuredDocumentation","src":"2575:53:18","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":2004,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:18","nodeType":"FunctionDefinition","overrides":{"id":1997,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:18"},"parameters":{"id":1996,"nodeType":"ParameterList","parameters":[],"src":"2648:2:18"},"returnParameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2004,"src":"2689:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1998,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:18"},"scope":2765,"src":"2633:102:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3081],"body":{"id":2042,"nodeType":"Block","src":"2889:188:18","statements":[{"expression":{"arguments":[{"id":2014,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"2914:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2013,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"2899:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2899:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2016,"nodeType":"ExpressionStatement","src":"2899:23:18"},{"assignments":[2018],"declarations":[{"constant":false,"id":2018,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:18","nodeType":"VariableDeclaration","scope":2042,"src":"2933:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2017,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2021,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2019,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"2957:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2957:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:18"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2024,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"2990:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2022,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:18","typeDescriptions":{}}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2984:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2999:6:18","memberName":"length","nodeType":"MemberAccess","src":"2984:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:18","trueExpression":{"arguments":[{"arguments":[{"id":2033,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"3036:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2034,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"3045:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3053:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3901,"src":"3045:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3045:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2031,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3023:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3019:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2029,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:18","typeDescriptions":{}}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2012,"id":2041,"nodeType":"Return","src":"2977:93:18"}]},"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"2741:55:18","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2043,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:18","nodeType":"FunctionDefinition","overrides":{"id":2009,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:18"},"parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:18","nodeType":"VariableDeclaration","scope":2043,"src":"2819:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:18"},"returnParameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2043,"src":"2874:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2010,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:18"},"scope":2765,"src":"2801:276:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2051,"nodeType":"Block","src":"3385:26:18","statements":[{"expression":{"hexValue":"","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2048,"id":2050,"nodeType":"Return","src":"3395:9:18"}]},"documentation":{"id":2044,"nodeType":"StructuredDocumentation","src":"3083:231:18","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":2052,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:18","nodeType":"FunctionDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[],"src":"3336:2:18"},"returnParameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2052,"src":"3370:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2046,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:18"},"scope":2765,"src":"3319:92:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2854],"body":{"id":2094,"nodeType":"Block","src":"3538:336:18","statements":[{"assignments":[2062],"declarations":[{"constant":false,"id":2062,"mutability":"mutable","name":"owner","nameLocation":"3556:5:18","nodeType":"VariableDeclaration","scope":2094,"src":"3548:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2061,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2067,"initialValue":{"arguments":[{"id":2065,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"3579:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2063,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"3564:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2765_$","typeString":"type(contract ERC721)"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3571:7:18","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"3564:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2069,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"3605:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2070,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"3611:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":2068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3597:57:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2074,"nodeType":"ExpressionStatement","src":"3597:57:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2076,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"3686:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2078,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"3702:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2081,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"3728:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2082,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"3735:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3735:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2080,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"3711:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":2075,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3665:170:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2088,"nodeType":"ExpressionStatement","src":"3665:170:18"},{"expression":{"arguments":[{"id":2090,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"3855:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2091,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"3859:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2089,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"3846:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3846:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2093,"nodeType":"ExpressionStatement","src":"3846:21:18"}]},"documentation":{"id":2053,"nodeType":"StructuredDocumentation","src":"3417:46:18","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":2095,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:18","nodeType":"FunctionDefinition","overrides":{"id":2059,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:18"},"parameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"to","nameLocation":"3493:2:18","nodeType":"VariableDeclaration","scope":2095,"src":"3485:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2054,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2057,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:18","nodeType":"VariableDeclaration","scope":2095,"src":"3497:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:18"},"returnParameters":{"id":2060,"nodeType":"ParameterList","parameters":[],"src":"3538:0:18"},"scope":2765,"src":"3468:406:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2870],"body":{"id":2112,"nodeType":"Block","src":"4020:82:18","statements":[{"expression":{"arguments":[{"id":2105,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"4045:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2104,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"4030:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4030:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2107,"nodeType":"ExpressionStatement","src":"4030:23:18"},{"expression":{"baseExpression":{"id":2108,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"4071:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2110,"indexExpression":{"id":2109,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"4087:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2103,"id":2111,"nodeType":"Return","src":"4064:31:18"}]},"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"3880:50:18","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":2113,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:18","nodeType":"FunctionDefinition","overrides":{"id":2100,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:18"},"parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:18","nodeType":"VariableDeclaration","scope":2113,"src":"3956:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:18"},"returnParameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2113,"src":"4011:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2101,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:18"},"scope":2765,"src":"3935:167:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2862],"body":{"id":2129,"nodeType":"Block","src":"4253:69:18","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2123,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"4282:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4282:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2125,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"4296:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2126,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"4306:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2122,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"4263:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2128,"nodeType":"ExpressionStatement","src":"4263:52:18"}]},"documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"4108:56:18","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":2130,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:18","nodeType":"FunctionDefinition","overrides":{"id":2120,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:18"},"parameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"operator","nameLocation":"4204:8:18","nodeType":"VariableDeclaration","scope":2130,"src":"4196:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2115,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"approved","nameLocation":"4219:8:18","nodeType":"VariableDeclaration","scope":2130,"src":"4214:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2117,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:18"},"returnParameters":{"id":2121,"nodeType":"ParameterList","parameters":[],"src":"4253:0:18"},"scope":2765,"src":"4169:153:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2880],"body":{"id":2147,"nodeType":"Block","src":"4491:59:18","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2141,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"4508:18:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2143,"indexExpression":{"id":2142,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"4527:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2145,"indexExpression":{"id":2144,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"4534:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2140,"id":2146,"nodeType":"Return","src":"4501:42:18"}]},"documentation":{"id":2131,"nodeType":"StructuredDocumentation","src":"4328:55:18","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":2148,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:18","nodeType":"FunctionDefinition","overrides":{"id":2137,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:18"},"parameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"owner","nameLocation":"4422:5:18","nodeType":"VariableDeclaration","scope":2148,"src":"4414:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2132,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2135,"mutability":"mutable","name":"operator","nameLocation":"4437:8:18","nodeType":"VariableDeclaration","scope":2148,"src":"4429:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2134,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:18"},"returnParameters":{"id":2140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2148,"src":"4485:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2138,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:18"},"scope":2765,"src":"4388:162:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2846],"body":{"id":2174,"nodeType":"Block","src":"4701:207:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2161,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"4790:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4790:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2163,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"4804:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2160,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"4771:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4814:47:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":2159,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4763:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4763:99:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2167,"nodeType":"ExpressionStatement","src":"4763:99:18"},{"expression":{"arguments":[{"id":2169,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"4883:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2170,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"4889:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2171,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"4893:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2168,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"4873:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2173,"nodeType":"ExpressionStatement","src":"4873:28:18"}]},"documentation":{"id":2149,"nodeType":"StructuredDocumentation","src":"4556:51:18","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":2175,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:18","nodeType":"FunctionDefinition","overrides":{"id":2157,"nodeType":"OverrideSpecifier","overrides":[],"src":"4692:8:18"},"parameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"from","nameLocation":"4642:4:18","nodeType":"VariableDeclaration","scope":2175,"src":"4634:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2150,"name":"address","nodeType":"ElementaryTypeName","src":"4634:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2153,"mutability":"mutable","name":"to","nameLocation":"4656:2:18","nodeType":"VariableDeclaration","scope":2175,"src":"4648:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2152,"name":"address","nodeType":"ElementaryTypeName","src":"4648:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2155,"mutability":"mutable","name":"tokenId","nameLocation":"4668:7:18","nodeType":"VariableDeclaration","scope":2175,"src":"4660:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"4660:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:43:18"},"returnParameters":{"id":2158,"nodeType":"ParameterList","parameters":[],"src":"4701:0:18"},"scope":2765,"src":"4612:296:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2836],"body":{"id":2193,"nodeType":"Block","src":"5067:56:18","statements":[{"expression":{"arguments":[{"id":2187,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"5094:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2188,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"5100:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2189,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"5104:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5113:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2186,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[2194,2224],"referencedDeclaration":2224,"src":"5077:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5077:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2192,"nodeType":"ExpressionStatement","src":"5077:39:18"}]},"documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"4914:55:18","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":2194,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4983:16:18","nodeType":"FunctionDefinition","overrides":{"id":2184,"nodeType":"OverrideSpecifier","overrides":[],"src":"5058:8:18"},"parameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"from","nameLocation":"5008:4:18","nodeType":"VariableDeclaration","scope":2194,"src":"5000:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"to","nameLocation":"5022:2:18","nodeType":"VariableDeclaration","scope":2194,"src":"5014:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2179,"name":"address","nodeType":"ElementaryTypeName","src":"5014:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2182,"mutability":"mutable","name":"tokenId","nameLocation":"5034:7:18","nodeType":"VariableDeclaration","scope":2194,"src":"5026:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"5026:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4999:43:18"},"returnParameters":{"id":2185,"nodeType":"ParameterList","parameters":[],"src":"5067:0:18"},"scope":2765,"src":"4974:149:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2826],"body":{"id":2223,"nodeType":"Block","src":"5301:164:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2209,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"5338:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5338:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2211,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"5352:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2208,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5319:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5319:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5362:47:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":2207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5311:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5311:99:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2215,"nodeType":"ExpressionStatement","src":"5311:99:18"},{"expression":{"arguments":[{"id":2217,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"5434:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2218,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"5440:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2219,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"5444:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2220,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"5453:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2216,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"5420:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5420:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2222,"nodeType":"ExpressionStatement","src":"5420:38:18"}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"5129:55:18","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":2224,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5198:16:18","nodeType":"FunctionDefinition","overrides":{"id":2205,"nodeType":"OverrideSpecifier","overrides":[],"src":"5292:8:18"},"parameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"from","nameLocation":"5223:4:18","nodeType":"VariableDeclaration","scope":2224,"src":"5215:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2196,"name":"address","nodeType":"ElementaryTypeName","src":"5215:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2199,"mutability":"mutable","name":"to","nameLocation":"5237:2:18","nodeType":"VariableDeclaration","scope":2224,"src":"5229:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2198,"name":"address","nodeType":"ElementaryTypeName","src":"5229:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2201,"mutability":"mutable","name":"tokenId","nameLocation":"5249:7:18","nodeType":"VariableDeclaration","scope":2224,"src":"5241:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2200,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2203,"mutability":"mutable","name":"data","nameLocation":"5271:4:18","nodeType":"VariableDeclaration","scope":2224,"src":"5258:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2202,"name":"bytes","nodeType":"ElementaryTypeName","src":"5258:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5214:62:18"},"returnParameters":{"id":2206,"nodeType":"ParameterList","parameters":[],"src":"5301:0:18"},"scope":2765,"src":"5189:276:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2252,"nodeType":"Block","src":"6428:165:18","statements":[{"expression":{"arguments":[{"id":2237,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"6448:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2238,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"6454:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2239,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"6458:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2236,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"6438:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6438:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2241,"nodeType":"ExpressionStatement","src":"6438:28:18"},{"expression":{"arguments":[{"arguments":[{"id":2244,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"6507:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2245,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"6513:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2246,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"6517:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2247,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"6526:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2243,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"6484:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6484:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6533:52:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2242,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6476:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6476:110:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2251,"nodeType":"ExpressionStatement","src":"6476:110:18"}]},"documentation":{"id":2225,"nodeType":"StructuredDocumentation","src":"5471:850:18","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2253,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6335:13:18","nodeType":"FunctionDefinition","parameters":{"id":2234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"from","nameLocation":"6357:4:18","nodeType":"VariableDeclaration","scope":2253,"src":"6349:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2226,"name":"address","nodeType":"ElementaryTypeName","src":"6349:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2229,"mutability":"mutable","name":"to","nameLocation":"6371:2:18","nodeType":"VariableDeclaration","scope":2253,"src":"6363:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2228,"name":"address","nodeType":"ElementaryTypeName","src":"6363:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"tokenId","nameLocation":"6383:7:18","nodeType":"VariableDeclaration","scope":2253,"src":"6375:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"6375:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2233,"mutability":"mutable","name":"data","nameLocation":"6405:4:18","nodeType":"VariableDeclaration","scope":2253,"src":"6392:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2232,"name":"bytes","nodeType":"ElementaryTypeName","src":"6392:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6348:62:18"},"returnParameters":{"id":2235,"nodeType":"ParameterList","parameters":[],"src":"6428:0:18"},"scope":2765,"src":"6326:267:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2265,"nodeType":"Block","src":"6777:40:18","statements":[{"expression":{"baseExpression":{"id":2261,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"6794:7:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2263,"indexExpression":{"id":2262,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"6802:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6794:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2260,"id":2264,"nodeType":"Return","src":"6787:23:18"}]},"documentation":{"id":2254,"nodeType":"StructuredDocumentation","src":"6599:98:18","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":2266,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6711:8:18","nodeType":"FunctionDefinition","parameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"tokenId","nameLocation":"6728:7:18","nodeType":"VariableDeclaration","scope":2266,"src":"6720:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2255,"name":"uint256","nodeType":"ElementaryTypeName","src":"6720:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6719:17:18"},"returnParameters":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2266,"src":"6768:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6767:9:18"},"scope":2765,"src":"6702:115:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2283,"nodeType":"Block","src":"7191:55:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2275,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"7217:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2274,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"7208:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7208:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7237:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7229:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2277,"name":"address","nodeType":"ElementaryTypeName","src":"7229:7:18","typeDescriptions":{}}},"id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7229:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7208:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2273,"id":2282,"nodeType":"Return","src":"7201:38:18"}]},"documentation":{"id":2267,"nodeType":"StructuredDocumentation","src":"6823:292:18","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":2284,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7129:7:18","nodeType":"FunctionDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"tokenId","nameLocation":"7145:7:18","nodeType":"VariableDeclaration","scope":2284,"src":"7137:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2268,"name":"uint256","nodeType":"ElementaryTypeName","src":"7137:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7136:17:18"},"returnParameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2284,"src":"7185:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2271,"name":"bool","nodeType":"ElementaryTypeName","src":"7185:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7184:6:18"},"scope":2765,"src":"7120:126:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2317,"nodeType":"Block","src":"7503:162:18","statements":[{"assignments":[2295],"declarations":[{"constant":false,"id":2295,"mutability":"mutable","name":"owner","nameLocation":"7521:5:18","nodeType":"VariableDeclaration","scope":2317,"src":"7513:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2294,"name":"address","nodeType":"ElementaryTypeName","src":"7513:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2300,"initialValue":{"arguments":[{"id":2298,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"7544:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2296,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"7529:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2765_$","typeString":"type(contract ERC721)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7536:7:18","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"7529:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7529:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7513:39:18"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2301,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"7570:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2302,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"7581:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7570:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2305,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"7607:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2306,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"7614:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2304,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"7590:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7590:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:52:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2310,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"7638:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2309,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"7626:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7626:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2312,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"7650:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7626:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:87:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7569:89:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2293,"id":2316,"nodeType":"Return","src":"7562:96:18"}]},"documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"7252:147:18","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":2318,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7413:18:18","nodeType":"FunctionDefinition","parameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"spender","nameLocation":"7440:7:18","nodeType":"VariableDeclaration","scope":2318,"src":"7432:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2286,"name":"address","nodeType":"ElementaryTypeName","src":"7432:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2289,"mutability":"mutable","name":"tokenId","nameLocation":"7457:7:18","nodeType":"VariableDeclaration","scope":2318,"src":"7449:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2288,"name":"uint256","nodeType":"ElementaryTypeName","src":"7449:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7431:34:18"},"returnParameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2318,"src":"7497:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2291,"name":"bool","nodeType":"ElementaryTypeName","src":"7497:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7496:6:18"},"scope":2765,"src":"7404:261:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2332,"nodeType":"Block","src":"8060:43:18","statements":[{"expression":{"arguments":[{"id":2327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"8080:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2328,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"8084:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8093:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2326,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2333,2362],"referencedDeclaration":2362,"src":"8070:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8070:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2331,"nodeType":"ExpressionStatement","src":"8070:26:18"}]},"documentation":{"id":2319,"nodeType":"StructuredDocumentation","src":"7671:319:18","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2333,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8004:9:18","nodeType":"FunctionDefinition","parameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"to","nameLocation":"8022:2:18","nodeType":"VariableDeclaration","scope":2333,"src":"8014:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2320,"name":"address","nodeType":"ElementaryTypeName","src":"8014:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2323,"mutability":"mutable","name":"tokenId","nameLocation":"8034:7:18","nodeType":"VariableDeclaration","scope":2333,"src":"8026:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2322,"name":"uint256","nodeType":"ElementaryTypeName","src":"8026:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8013:29:18"},"returnParameters":{"id":2325,"nodeType":"ParameterList","parameters":[],"src":"8060:0:18"},"scope":2765,"src":"7995:108:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2361,"nodeType":"Block","src":"8408:195:18","statements":[{"expression":{"arguments":[{"id":2344,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"8424:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2345,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"8428:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2343,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"8418:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8418:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2347,"nodeType":"ExpressionStatement","src":"8418:18:18"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8498:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8490:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2350,"name":"address","nodeType":"ElementaryTypeName","src":"8490:7:18","typeDescriptions":{}}},"id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8490:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2354,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"8502:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2355,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"8506:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2356,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"8515:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2349,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"8467:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8467:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8534:52:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2348,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8446:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8446:150:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2360,"nodeType":"ExpressionStatement","src":"8446:150:18"}]},"documentation":{"id":2334,"nodeType":"StructuredDocumentation","src":"8109:210:18","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2362,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8333:9:18","nodeType":"FunctionDefinition","parameters":{"id":2341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"to","nameLocation":"8351:2:18","nodeType":"VariableDeclaration","scope":2362,"src":"8343:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2335,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2338,"mutability":"mutable","name":"tokenId","nameLocation":"8363:7:18","nodeType":"VariableDeclaration","scope":2362,"src":"8355:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"8355:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2340,"mutability":"mutable","name":"data","nameLocation":"8385:4:18","nodeType":"VariableDeclaration","scope":2362,"src":"8372:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2339,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8342:48:18"},"returnParameters":{"id":2342,"nodeType":"ParameterList","parameters":[],"src":"8408:0:18"},"scope":2765,"src":"8324:279:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2438,"nodeType":"Block","src":"8986:859:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2371,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"9004:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9018:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9010:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2372,"name":"address","nodeType":"ElementaryTypeName","src":"9010:7:18","typeDescriptions":{}}},"id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9010:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9004:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9022:34:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":2370,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8996:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:61:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2379,"nodeType":"ExpressionStatement","src":"8996:61:18"},{"expression":{"arguments":[{"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9075:17:18","subExpression":{"arguments":[{"id":2382,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"9084:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2381,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"9076:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9076:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9094:30:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":2380,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9067:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9067:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2387,"nodeType":"ExpressionStatement","src":"9067:58:18"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9157:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2389,"name":"address","nodeType":"ElementaryTypeName","src":"9157:7:18","typeDescriptions":{}}},"id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9157:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2393,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"9169:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2394,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"9173:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9182:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2388,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"9136:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9136:48:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2397,"nodeType":"ExpressionStatement","src":"9136:48:18"},{"expression":{"arguments":[{"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9279:17:18","subExpression":{"arguments":[{"id":2400,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"9288:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2399,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"9280:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9280:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":2403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9298:30:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":2398,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9271:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9271:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2405,"nodeType":"ExpressionStatement","src":"9271:58:18"},{"id":2412,"nodeType":"UncheckedBlock","src":"9340:360:18","statements":[{"expression":{"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2406,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"9671:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2408,"indexExpression":{"id":2407,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"9681:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9671:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9688:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9671:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2411,"nodeType":"ExpressionStatement","src":"9671:18:18"}]},{"expression":{"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2413,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"9710:7:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2415,"indexExpression":{"id":2414,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"9718:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9710:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2416,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"9729:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9710:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2418,"nodeType":"ExpressionStatement","src":"9710:21:18"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9764:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9756:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2420,"name":"address","nodeType":"ElementaryTypeName","src":"9756:7:18","typeDescriptions":{}}},"id":2423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9756:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2424,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"9768:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2425,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"9772:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2419,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"9747:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9747:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2427,"nodeType":"EmitStatement","src":"9742:38:18"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9819:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9811:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2429,"name":"address","nodeType":"ElementaryTypeName","src":"9811:7:18","typeDescriptions":{}}},"id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9811:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2433,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"9823:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2434,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"9827:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2428,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"9791:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9791:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2437,"nodeType":"ExpressionStatement","src":"9791:47:18"}]},"documentation":{"id":2363,"nodeType":"StructuredDocumentation","src":"8609:311:18","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":2439,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8934:5:18","nodeType":"FunctionDefinition","parameters":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"to","nameLocation":"8948:2:18","nodeType":"VariableDeclaration","scope":2439,"src":"8940:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2364,"name":"address","nodeType":"ElementaryTypeName","src":"8940:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2367,"mutability":"mutable","name":"tokenId","nameLocation":"8960:7:18","nodeType":"VariableDeclaration","scope":2439,"src":"8952:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2366,"name":"uint256","nodeType":"ElementaryTypeName","src":"8952:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8939:29:18"},"returnParameters":{"id":2369,"nodeType":"ParameterList","parameters":[],"src":"8986:0:18"},"scope":2765,"src":"8925:920:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2505,"nodeType":"Block","src":"10220:713:18","statements":[{"assignments":[2446],"declarations":[{"constant":false,"id":2446,"mutability":"mutable","name":"owner","nameLocation":"10238:5:18","nodeType":"VariableDeclaration","scope":2505,"src":"10230:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2445,"name":"address","nodeType":"ElementaryTypeName","src":"10230:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2451,"initialValue":{"arguments":[{"id":2449,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"10261:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2447,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"10246:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2765_$","typeString":"type(contract ERC721)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10253:7:18","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"10246:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10246:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10230:39:18"},{"expression":{"arguments":[{"id":2453,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"10301:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10316:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10308:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"10308:7:18","typeDescriptions":{}}},"id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10308:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2458,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"10320:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10329:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2452,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"10280:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10280:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2461,"nodeType":"ExpressionStatement","src":"10280:51:18"},{"expression":{"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2462,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"10433:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2465,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"10456:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2463,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"10441:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2765_$","typeString":"type(contract ERC721)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10448:7:18","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"10441:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10441:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10433:31:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2468,"nodeType":"ExpressionStatement","src":"10433:31:18"},{"expression":{"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10502:31:18","subExpression":{"baseExpression":{"id":2469,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"10509:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2471,"indexExpression":{"id":2470,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"10525:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10509:24:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2473,"nodeType":"ExpressionStatement","src":"10502:31:18"},{"id":2480,"nodeType":"UncheckedBlock","src":"10544:237:18","statements":[{"expression":{"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2474,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"10749:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2476,"indexExpression":{"id":2475,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"10759:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10749:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10769:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10749:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2479,"nodeType":"ExpressionStatement","src":"10749:21:18"}]},{"expression":{"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10790:23:18","subExpression":{"baseExpression":{"id":2481,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"10797:7:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2483,"indexExpression":{"id":2482,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"10805:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10797:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2485,"nodeType":"ExpressionStatement","src":"10790:23:18"},{"eventCall":{"arguments":[{"id":2487,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"10838:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10853:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10845:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2488,"name":"address","nodeType":"ElementaryTypeName","src":"10845:7:18","typeDescriptions":{}}},"id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10845:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2492,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"10857:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2486,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"10829:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10829:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2494,"nodeType":"EmitStatement","src":"10824:41:18"},{"expression":{"arguments":[{"id":2496,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"10896:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10911:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10903:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2497,"name":"address","nodeType":"ElementaryTypeName","src":"10903:7:18","typeDescriptions":{}}},"id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10903:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2501,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"10915:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10924:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2495,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"10876:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10876:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2504,"nodeType":"ExpressionStatement","src":"10876:50:18"}]},"documentation":{"id":2440,"nodeType":"StructuredDocumentation","src":"9851:315:18","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2506,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10180:5:18","nodeType":"FunctionDefinition","parameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"tokenId","nameLocation":"10194:7:18","nodeType":"VariableDeclaration","scope":2506,"src":"10186:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2441,"name":"uint256","nodeType":"ElementaryTypeName","src":"10186:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10185:17:18"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[],"src":"10220:0:18"},"scope":2765,"src":"10171:762:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2590,"nodeType":"Block","src":"11336:1124:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2519,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"11369:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2517,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"11354:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2765_$","typeString":"type(contract ERC721)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11361:7:18","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"11354:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11354:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2521,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"11381:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11354:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11387:39:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":2516,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11346:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11346:81:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2525,"nodeType":"ExpressionStatement","src":"11346:81:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2527,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"11445:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11459:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11451:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2528,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:18","typeDescriptions":{}}},"id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11451:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11445:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11463:38:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":2526,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11437:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:65:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2535,"nodeType":"ExpressionStatement","src":"11437:65:18"},{"expression":{"arguments":[{"id":2537,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"11534:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2538,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"11540:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2539,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"11544:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2536,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"11513:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11513:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2542,"nodeType":"ExpressionStatement","src":"11513:42:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2546,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"11670:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2544,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"11655:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2765_$","typeString":"type(contract ERC721)"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11662:7:18","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"11655:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11655:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2548,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"11682:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11655:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":2550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11688:39:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":2543,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11647:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11647:81:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2552,"nodeType":"ExpressionStatement","src":"11647:81:18"},{"expression":{"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11790:31:18","subExpression":{"baseExpression":{"id":2553,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"11797:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2555,"indexExpression":{"id":2554,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"11813:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11797:24:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2557,"nodeType":"ExpressionStatement","src":"11790:31:18"},{"id":2570,"nodeType":"UncheckedBlock","src":"11832:496:18","statements":[{"expression":{"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2558,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"12265:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2560,"indexExpression":{"id":2559,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"12275:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12265:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12284:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12265:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2563,"nodeType":"ExpressionStatement","src":"12265:20:18"},{"expression":{"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2564,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"12299:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2566,"indexExpression":{"id":2565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"12309:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12299:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12299:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2569,"nodeType":"ExpressionStatement","src":"12299:18:18"}]},{"expression":{"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2571,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"12337:7:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2573,"indexExpression":{"id":2572,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"12345:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12337:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2574,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"12356:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12337:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2576,"nodeType":"ExpressionStatement","src":"12337:21:18"},{"eventCall":{"arguments":[{"id":2578,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"12383:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2579,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"12389:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2580,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"12393:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2577,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"12374:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12374:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2582,"nodeType":"EmitStatement","src":"12369:32:18"},{"expression":{"arguments":[{"id":2584,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"12432:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2585,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"12438:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2586,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"12442:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2583,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"12412:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12412:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2589,"nodeType":"ExpressionStatement","src":"12412:41:18"}]},"documentation":{"id":2507,"nodeType":"StructuredDocumentation","src":"10939:313:18","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2591,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11266:9:18","nodeType":"FunctionDefinition","parameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"from","nameLocation":"11284:4:18","nodeType":"VariableDeclaration","scope":2591,"src":"11276:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2508,"name":"address","nodeType":"ElementaryTypeName","src":"11276:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2511,"mutability":"mutable","name":"to","nameLocation":"11298:2:18","nodeType":"VariableDeclaration","scope":2591,"src":"11290:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2510,"name":"address","nodeType":"ElementaryTypeName","src":"11290:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2513,"mutability":"mutable","name":"tokenId","nameLocation":"11310:7:18","nodeType":"VariableDeclaration","scope":2591,"src":"11302:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2512,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11275:43:18"},"returnParameters":{"id":2515,"nodeType":"ParameterList","parameters":[],"src":"11336:0:18"},"scope":2765,"src":"11257:1203:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2614,"nodeType":"Block","src":"12636:107:18","statements":[{"expression":{"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2599,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"12646:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2601,"indexExpression":{"id":2600,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"12662:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12646:24:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2602,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"12673:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12646:29:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2604,"nodeType":"ExpressionStatement","src":"12646:29:18"},{"eventCall":{"arguments":[{"arguments":[{"id":2608,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"12714:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2606,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"12699:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2765_$","typeString":"type(contract ERC721)"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12706:7:18","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"12699:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12699:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2610,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"12724:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2611,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"12728:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2605,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"12690:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12690:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2613,"nodeType":"EmitStatement","src":"12685:51:18"}]},"documentation":{"id":2592,"nodeType":"StructuredDocumentation","src":"12466:101:18","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":2615,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12581:8:18","nodeType":"FunctionDefinition","parameters":{"id":2597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2594,"mutability":"mutable","name":"to","nameLocation":"12598:2:18","nodeType":"VariableDeclaration","scope":2615,"src":"12590:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2593,"name":"address","nodeType":"ElementaryTypeName","src":"12590:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2596,"mutability":"mutable","name":"tokenId","nameLocation":"12610:7:18","nodeType":"VariableDeclaration","scope":2615,"src":"12602:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"12602:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12589:29:18"},"returnParameters":{"id":2598,"nodeType":"ParameterList","parameters":[],"src":"12636:0:18"},"scope":2765,"src":"12572:171:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2646,"nodeType":"Block","src":"12972:184:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2626,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"12990:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2627,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"12999:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12990:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13009:27:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":2625,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12982:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12982:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2631,"nodeType":"ExpressionStatement","src":"12982:55:18"},{"expression":{"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2632,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"13047:18:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2635,"indexExpression":{"id":2633,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"13066:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13047:25:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2636,"indexExpression":{"id":2634,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"13073:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13047:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2637,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"13085:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13047:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2639,"nodeType":"ExpressionStatement","src":"13047:46:18"},{"eventCall":{"arguments":[{"id":2641,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"13123:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2642,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"13130:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2643,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"13140:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2640,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"13108:14:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13108:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2645,"nodeType":"EmitStatement","src":"13103:46:18"}]},"documentation":{"id":2616,"nodeType":"StructuredDocumentation","src":"12749:125:18","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":2647,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12888:18:18","nodeType":"FunctionDefinition","parameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"owner","nameLocation":"12915:5:18","nodeType":"VariableDeclaration","scope":2647,"src":"12907:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2617,"name":"address","nodeType":"ElementaryTypeName","src":"12907:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2620,"mutability":"mutable","name":"operator","nameLocation":"12930:8:18","nodeType":"VariableDeclaration","scope":2647,"src":"12922:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2619,"name":"address","nodeType":"ElementaryTypeName","src":"12922:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2622,"mutability":"mutable","name":"approved","nameLocation":"12945:8:18","nodeType":"VariableDeclaration","scope":2647,"src":"12940:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2621,"name":"bool","nodeType":"ElementaryTypeName","src":"12940:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12906:48:18"},"returnParameters":{"id":2624,"nodeType":"ParameterList","parameters":[],"src":"12972:0:18"},"scope":2765,"src":"12879:277:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2660,"nodeType":"Block","src":"13303:70:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":2655,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"13329:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2654,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"13321:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13321:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":2657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13339:26:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":2653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13313:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13313:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2659,"nodeType":"ExpressionStatement","src":"13313:53:18"}]},"documentation":{"id":2648,"nodeType":"StructuredDocumentation","src":"13162:73:18","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":2661,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13249:14:18","nodeType":"FunctionDefinition","parameters":{"id":2651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2650,"mutability":"mutable","name":"tokenId","nameLocation":"13272:7:18","nodeType":"VariableDeclaration","scope":2661,"src":"13264:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2649,"name":"uint256","nodeType":"ElementaryTypeName","src":"13264:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13263:17:18"},"returnParameters":{"id":2652,"nodeType":"ParameterList","parameters":[],"src":"13303:0:18"},"scope":2765,"src":"13240:133:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2722,"nodeType":"Block","src":"14080:676:18","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2675,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"14094:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14097:10:18","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":3100,"src":"14094:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14094:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2720,"nodeType":"Block","src":"14714:36:18","statements":[{"expression":{"hexValue":"74727565","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14735:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2674,"id":2719,"nodeType":"Return","src":"14728:11:18"}]},"id":2721,"nodeType":"IfStatement","src":"14090:660:18","trueBody":{"id":2717,"nodeType":"Block","src":"14111:597:18","statements":[{"clauses":[{"block":{"id":2697,"nodeType":"Block","src":"14225:91:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2691,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"14250:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2692,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"14260:15:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2899_$","typeString":"type(contract IERC721Receiver)"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14276:16:18","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2898,"src":"14260:32:18","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14293:8:18","memberName":"selector","nodeType":"MemberAccess","src":"14260:41:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14250:51:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2674,"id":2696,"nodeType":"Return","src":"14243:58:18"}]},"errorName":"","id":2698,"nodeType":"TryCatchClause","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"retval","nameLocation":"14217:6:18","nodeType":"VariableDeclaration","scope":2698,"src":"14210:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2688,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14210:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14209:15:18"},"src":"14201:115:18"},{"block":{"id":2714,"nodeType":"Block","src":"14345:353:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2702,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"14367:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14374:6:18","memberName":"length","nodeType":"MemberAccess","src":"14367:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14384:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14367:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2712,"nodeType":"Block","src":"14494:190:18","statements":[{"AST":{"nativeSrc":"14580:86:18","nodeType":"YulBlock","src":"14580:86:18","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14617:2:18","nodeType":"YulLiteral","src":"14617:2:18","type":"","value":"32"},{"name":"reason","nativeSrc":"14621:6:18","nodeType":"YulIdentifier","src":"14621:6:18"}],"functionName":{"name":"add","nativeSrc":"14613:3:18","nodeType":"YulIdentifier","src":"14613:3:18"},"nativeSrc":"14613:15:18","nodeType":"YulFunctionCall","src":"14613:15:18"},{"arguments":[{"name":"reason","nativeSrc":"14636:6:18","nodeType":"YulIdentifier","src":"14636:6:18"}],"functionName":{"name":"mload","nativeSrc":"14630:5:18","nodeType":"YulIdentifier","src":"14630:5:18"},"nativeSrc":"14630:13:18","nodeType":"YulFunctionCall","src":"14630:13:18"}],"functionName":{"name":"revert","nativeSrc":"14606:6:18","nodeType":"YulIdentifier","src":"14606:6:18"},"nativeSrc":"14606:38:18","nodeType":"YulFunctionCall","src":"14606:38:18"},"nativeSrc":"14606:38:18","nodeType":"YulExpressionStatement","src":"14606:38:18"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2700,"isOffset":false,"isSlot":false,"src":"14621:6:18","valueSize":1},{"declaration":2700,"isOffset":false,"isSlot":false,"src":"14636:6:18","valueSize":1}],"id":2711,"nodeType":"InlineAssembly","src":"14571:95:18"}]},"id":2713,"nodeType":"IfStatement","src":"14363:321:18","trueBody":{"id":2710,"nodeType":"Block","src":"14387:101:18","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14416:52:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2706,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14409:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14409:60:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2709,"nodeType":"ExpressionStatement","src":"14409:60:18"}]}}]},"errorName":"","id":2715,"nodeType":"TryCatchClause","parameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"reason","nameLocation":"14337:6:18","nodeType":"VariableDeclaration","scope":2715,"src":"14324:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2699,"name":"bytes","nodeType":"ElementaryTypeName","src":"14324:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14323:21:18"},"src":"14317:381:18"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2682,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"14166:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14166:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2684,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"14180:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2685,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"14186:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2686,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"14195:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2679,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"14145:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2678,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"14129:15:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2899_$","typeString":"type(contract IERC721Receiver)"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2899","typeString":"contract IERC721Receiver"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14149:16:18","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2898,"src":"14129:36:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:71:18","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2716,"nodeType":"TryStatement","src":"14125:573:18"}]}}]},"documentation":{"id":2662,"nodeType":"StructuredDocumentation","src":"13379:541:18","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":2723,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"13934:22:18","nodeType":"FunctionDefinition","parameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"from","nameLocation":"13974:4:18","nodeType":"VariableDeclaration","scope":2723,"src":"13966:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2663,"name":"address","nodeType":"ElementaryTypeName","src":"13966:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2666,"mutability":"mutable","name":"to","nameLocation":"13996:2:18","nodeType":"VariableDeclaration","scope":2723,"src":"13988:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2665,"name":"address","nodeType":"ElementaryTypeName","src":"13988:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2668,"mutability":"mutable","name":"tokenId","nameLocation":"14016:7:18","nodeType":"VariableDeclaration","scope":2723,"src":"14008:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"14008:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2670,"mutability":"mutable","name":"data","nameLocation":"14046:4:18","nodeType":"VariableDeclaration","scope":2723,"src":"14033:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2669,"name":"bytes","nodeType":"ElementaryTypeName","src":"14033:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13956:100:18"},"returnParameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2723,"src":"14074:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2672,"name":"bool","nodeType":"ElementaryTypeName","src":"14074:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14073:6:18"},"scope":2765,"src":"13925:831:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2735,"nodeType":"Block","src":"15586:2:18","statements":[]},"documentation":{"id":2724,"nodeType":"StructuredDocumentation","src":"14762:705:18","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2736,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15481:20:18","nodeType":"FunctionDefinition","parameters":{"id":2733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2726,"mutability":"mutable","name":"from","nameLocation":"15510:4:18","nodeType":"VariableDeclaration","scope":2736,"src":"15502:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2725,"name":"address","nodeType":"ElementaryTypeName","src":"15502:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2728,"mutability":"mutable","name":"to","nameLocation":"15524:2:18","nodeType":"VariableDeclaration","scope":2736,"src":"15516:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2727,"name":"address","nodeType":"ElementaryTypeName","src":"15516:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2730,"mutability":"mutable","name":"firstTokenId","nameLocation":"15536:12:18","nodeType":"VariableDeclaration","scope":2736,"src":"15528:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"15528:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2732,"mutability":"mutable","name":"batchSize","nameLocation":"15558:9:18","nodeType":"VariableDeclaration","scope":2736,"src":"15550:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2731,"name":"uint256","nodeType":"ElementaryTypeName","src":"15550:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15501:67:18"},"returnParameters":{"id":2734,"nodeType":"ParameterList","parameters":[],"src":"15586:0:18"},"scope":2765,"src":"15472:116:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2748,"nodeType":"Block","src":"16407:2:18","statements":[]},"documentation":{"id":2737,"nodeType":"StructuredDocumentation","src":"15594:695:18","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2749,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16303:19:18","nodeType":"FunctionDefinition","parameters":{"id":2746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"from","nameLocation":"16331:4:18","nodeType":"VariableDeclaration","scope":2749,"src":"16323:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2738,"name":"address","nodeType":"ElementaryTypeName","src":"16323:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2741,"mutability":"mutable","name":"to","nameLocation":"16345:2:18","nodeType":"VariableDeclaration","scope":2749,"src":"16337:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2740,"name":"address","nodeType":"ElementaryTypeName","src":"16337:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2743,"mutability":"mutable","name":"firstTokenId","nameLocation":"16357:12:18","nodeType":"VariableDeclaration","scope":2749,"src":"16349:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2742,"name":"uint256","nodeType":"ElementaryTypeName","src":"16349:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2745,"mutability":"mutable","name":"batchSize","nameLocation":"16379:9:18","nodeType":"VariableDeclaration","scope":2749,"src":"16371:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2744,"name":"uint256","nodeType":"ElementaryTypeName","src":"16371:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16322:67:18"},"returnParameters":{"id":2747,"nodeType":"ParameterList","parameters":[],"src":"16407:0:18"},"scope":2765,"src":"16294:115:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2763,"nodeType":"Block","src":"16958:45:18","statements":[{"expression":{"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2757,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"16968:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2759,"indexExpression":{"id":2758,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"16978:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16968:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2760,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"16990:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16968:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2762,"nodeType":"ExpressionStatement","src":"16968:28:18"}]},"documentation":{"id":2750,"nodeType":"StructuredDocumentation","src":"16415:409:18","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."},"id":2764,"implemented":true,"kind":"function","modifiers":[],"name":"__unsafe_increaseBalance","nameLocation":"16891:24:18","nodeType":"FunctionDefinition","parameters":{"id":2755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2752,"mutability":"mutable","name":"account","nameLocation":"16924:7:18","nodeType":"VariableDeclaration","scope":2764,"src":"16916:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2751,"name":"address","nodeType":"ElementaryTypeName","src":"16916:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2754,"mutability":"mutable","name":"amount","nameLocation":"16941:6:18","nodeType":"VariableDeclaration","scope":2764,"src":"16933:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2753,"name":"uint256","nodeType":"ElementaryTypeName","src":"16933:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16915:33:18"},"returnParameters":{"id":2756,"nodeType":"ParameterList","parameters":[],"src":"16958:0:18"},"scope":2765,"src":"16882:121:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2766,"src":"628:16377:18","usedErrors":[],"usedEvents":[2780,2789,2798]}],"src":"107:16899:18"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"id":19,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[4677],"IERC721":[2881]},"id":2882,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2767,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:19"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2768,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2882,"sourceUnit":4678,"src":"133:47:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2770,"name":"IERC165","nameLocations":["271:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":4677,"src":"271:7:19"},"id":2771,"nodeType":"InheritanceSpecifier","src":"271:7:19"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2769,"nodeType":"StructuredDocumentation","src":"182:67:19","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":2881,"linearizedBaseContracts":[2881,4677],"name":"IERC721","nameLocation":"260:7:19","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2772,"nodeType":"StructuredDocumentation","src":"285:88:19","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2780,"name":"Transfer","nameLocation":"384:8:19","nodeType":"EventDefinition","parameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:19","nodeType":"VariableDeclaration","scope":2780,"src":"393:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2773,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2776,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:19","nodeType":"VariableDeclaration","scope":2780,"src":"415:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2775,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2778,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:19","nodeType":"VariableDeclaration","scope":2780,"src":"435:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:19"},"src":"378:82:19"},{"anonymous":false,"documentation":{"id":2781,"nodeType":"StructuredDocumentation","src":"466:94:19","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2789,"name":"Approval","nameLocation":"571:8:19","nodeType":"EventDefinition","parameters":{"id":2788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:19","nodeType":"VariableDeclaration","scope":2789,"src":"580:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2782,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2785,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:19","nodeType":"VariableDeclaration","scope":2789,"src":"603:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2784,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2787,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:19","nodeType":"VariableDeclaration","scope":2789,"src":"629:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2786,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:19"},"src":"565:89:19"},{"anonymous":false,"documentation":{"id":2790,"nodeType":"StructuredDocumentation","src":"660:117:19","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2798,"name":"ApprovalForAll","nameLocation":"788:14:19","nodeType":"EventDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:19","nodeType":"VariableDeclaration","scope":2798,"src":"803:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2791,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2794,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:19","nodeType":"VariableDeclaration","scope":2798,"src":"826:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2793,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2796,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:19","nodeType":"VariableDeclaration","scope":2798,"src":"852:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2795,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:19"},"src":"782:85:19"},{"documentation":{"id":2799,"nodeType":"StructuredDocumentation","src":"873:76:19","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2806,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:19","nodeType":"FunctionDefinition","parameters":{"id":2802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2801,"mutability":"mutable","name":"owner","nameLocation":"981:5:19","nodeType":"VariableDeclaration","scope":2806,"src":"973:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2800,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:19"},"returnParameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"balance","nameLocation":"1019:7:19","nodeType":"VariableDeclaration","scope":2806,"src":"1011:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2803,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:19"},"scope":2881,"src":"954:74:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2807,"nodeType":"StructuredDocumentation","src":"1034:131:19","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2814,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:19","nodeType":"FunctionDefinition","parameters":{"id":2810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2809,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:19","nodeType":"VariableDeclaration","scope":2814,"src":"1187:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2808,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:19"},"returnParameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2812,"mutability":"mutable","name":"owner","nameLocation":"1235:5:19","nodeType":"VariableDeclaration","scope":2814,"src":"1227:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2811,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:19"},"scope":2881,"src":"1170:72:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2815,"nodeType":"StructuredDocumentation","src":"1248:556:19","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2826,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:19","nodeType":"FunctionDefinition","parameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2817,"mutability":"mutable","name":"from","nameLocation":"1843:4:19","nodeType":"VariableDeclaration","scope":2826,"src":"1835:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2816,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2819,"mutability":"mutable","name":"to","nameLocation":"1857:2:19","nodeType":"VariableDeclaration","scope":2826,"src":"1849:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2818,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2821,"mutability":"mutable","name":"tokenId","nameLocation":"1869:7:19","nodeType":"VariableDeclaration","scope":2826,"src":"1861:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2823,"mutability":"mutable","name":"data","nameLocation":"1893:4:19","nodeType":"VariableDeclaration","scope":2826,"src":"1878:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2822,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:64:19"},"returnParameters":{"id":2825,"nodeType":"ParameterList","parameters":[],"src":"1907:0:19"},"scope":2881,"src":"1809:99:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2827,"nodeType":"StructuredDocumentation","src":"1914:687:19","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2836,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2615:16:19","nodeType":"FunctionDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"from","nameLocation":"2640:4:19","nodeType":"VariableDeclaration","scope":2836,"src":"2632:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2828,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"to","nameLocation":"2654:2:19","nodeType":"VariableDeclaration","scope":2836,"src":"2646:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2830,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2833,"mutability":"mutable","name":"tokenId","nameLocation":"2666:7:19","nodeType":"VariableDeclaration","scope":2836,"src":"2658:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2832,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:43:19"},"returnParameters":{"id":2835,"nodeType":"ParameterList","parameters":[],"src":"2683:0:19"},"scope":2881,"src":"2606:78:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2837,"nodeType":"StructuredDocumentation","src":"2690:732:19","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2846,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3436:12:19","nodeType":"FunctionDefinition","parameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2839,"mutability":"mutable","name":"from","nameLocation":"3457:4:19","nodeType":"VariableDeclaration","scope":2846,"src":"3449:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2838,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2841,"mutability":"mutable","name":"to","nameLocation":"3471:2:19","nodeType":"VariableDeclaration","scope":2846,"src":"3463:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2840,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2843,"mutability":"mutable","name":"tokenId","nameLocation":"3483:7:19","nodeType":"VariableDeclaration","scope":2846,"src":"3475:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:43:19"},"returnParameters":{"id":2845,"nodeType":"ParameterList","parameters":[],"src":"3500:0:19"},"scope":2881,"src":"3427:74:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2847,"nodeType":"StructuredDocumentation","src":"3507:452:19","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2854,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3973:7:19","nodeType":"FunctionDefinition","parameters":{"id":2852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2849,"mutability":"mutable","name":"to","nameLocation":"3989:2:19","nodeType":"VariableDeclaration","scope":2854,"src":"3981:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2848,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2851,"mutability":"mutable","name":"tokenId","nameLocation":"4001:7:19","nodeType":"VariableDeclaration","scope":2854,"src":"3993:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2850,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:29:19"},"returnParameters":{"id":2853,"nodeType":"ParameterList","parameters":[],"src":"4018:0:19"},"scope":2881,"src":"3964:55:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2855,"nodeType":"StructuredDocumentation","src":"4025:309:19","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2862,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4348:17:19","nodeType":"FunctionDefinition","parameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"operator","nameLocation":"4374:8:19","nodeType":"VariableDeclaration","scope":2862,"src":"4366:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2856,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2859,"mutability":"mutable","name":"approved","nameLocation":"4389:8:19","nodeType":"VariableDeclaration","scope":2862,"src":"4384:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2858,"name":"bool","nodeType":"ElementaryTypeName","src":"4384:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:33:19"},"returnParameters":{"id":2861,"nodeType":"ParameterList","parameters":[],"src":"4407:0:19"},"scope":2881,"src":"4339:69:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2863,"nodeType":"StructuredDocumentation","src":"4414:139:19","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2870,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4567:11:19","nodeType":"FunctionDefinition","parameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2865,"mutability":"mutable","name":"tokenId","nameLocation":"4587:7:19","nodeType":"VariableDeclaration","scope":2870,"src":"4579:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:17:19"},"returnParameters":{"id":2869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2868,"mutability":"mutable","name":"operator","nameLocation":"4627:8:19","nodeType":"VariableDeclaration","scope":2870,"src":"4619:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2867,"name":"address","nodeType":"ElementaryTypeName","src":"4619:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4618:18:19"},"scope":2881,"src":"4558:79:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2871,"nodeType":"StructuredDocumentation","src":"4643:138:19","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2880,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4795:16:19","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"owner","nameLocation":"4820:5:19","nodeType":"VariableDeclaration","scope":2880,"src":"4812:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2872,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2875,"mutability":"mutable","name":"operator","nameLocation":"4835:8:19","nodeType":"VariableDeclaration","scope":2880,"src":"4827:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2874,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4811:33:19"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2880,"src":"4868:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2877,"name":"bool","nodeType":"ElementaryTypeName","src":"4868:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4867:6:19"},"scope":2881,"src":"4786:88:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2882,"src":"250:4626:19","usedErrors":[],"usedEvents":[2780,2789,2798]}],"src":"108:4769:19"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"id":20,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2899]},"id":2900,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2883,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2884,"nodeType":"StructuredDocumentation","src":"141:152:20","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":2899,"linearizedBaseContracts":[2899],"name":"IERC721Receiver","nameLocation":"304:15:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2885,"nodeType":"StructuredDocumentation","src":"326:493:20","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2898,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:20","nodeType":"FunctionDefinition","parameters":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"operator","nameLocation":"867:8:20","nodeType":"VariableDeclaration","scope":2898,"src":"859:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2886,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2889,"mutability":"mutable","name":"from","nameLocation":"893:4:20","nodeType":"VariableDeclaration","scope":2898,"src":"885:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2888,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2891,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:20","nodeType":"VariableDeclaration","scope":2898,"src":"907:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2890,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2893,"mutability":"mutable","name":"data","nameLocation":"947:4:20","nodeType":"VariableDeclaration","scope":2898,"src":"932:19:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2892,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:20"},"returnParameters":{"id":2897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2898,"src":"976:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2895,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:20"},"scope":2899,"src":"824:160:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2900,"src":"294:692:20","usedErrors":[],"usedEvents":[]}],"src":"116:871:20"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"id":21,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[3412],"Context":[3442],"ERC165":[4665],"ERC721":[2765],"ERC721URIStorage":[3055],"IERC165":[4677],"IERC4906":[158],"IERC721":[2881],"IERC721Metadata":[3082],"IERC721Receiver":[2899],"Math":[5543],"SignedMath":[5648],"Strings":[4071]},"id":3056,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2901,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2902,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3056,"sourceUnit":2766,"src":"153:23:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":2903,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3056,"sourceUnit":159,"src":"177:42:21","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2905,"name":"IERC4906","nameLocations":["329:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":158,"src":"329:8:21"},"id":2906,"nodeType":"InheritanceSpecifier","src":"329:8:21"},{"baseName":{"id":2907,"name":"ERC721","nameLocations":["339:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":2765,"src":"339:6:21"},"id":2908,"nodeType":"InheritanceSpecifier","src":"339:6:21"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":2904,"nodeType":"StructuredDocumentation","src":"221:69:21","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":true,"id":3055,"linearizedBaseContracts":[3055,2765,3082,158,2881,4665,4677,3442],"name":"ERC721URIStorage","nameLocation":"309:16:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2911,"libraryName":{"id":2909,"name":"Strings","nameLocations":["358:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4071,"src":"358:7:21"},"nodeType":"UsingForDirective","src":"352:26:21","typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"370:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2915,"mutability":"mutable","name":"_tokenURIs","nameLocation":"458:10:21","nodeType":"VariableDeclaration","scope":3055,"src":"423:45:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2914,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2912,"name":"uint256","nodeType":"ElementaryTypeName","src":"431:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"423:26:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2913,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[1932,4676],"body":{"id":2938,"nodeType":"Block","src":"643:97:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2926,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"660:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30783439303634393036","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"682:10:21","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":2928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"675:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2927,"name":"bytes4","nodeType":"ElementaryTypeName","src":"675:6:21","typeDescriptions":{}}},"id":2930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"675:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"660:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2934,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"721:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2932,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"697:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$3055_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"703:17:21","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1932,"src":"697:23:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"697:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"660:73:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2925,"id":2937,"nodeType":"Return","src":"653:80:21"}]},"documentation":{"id":2916,"nodeType":"StructuredDocumentation","src":"475:55:21","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":2939,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"544:17:21","nodeType":"FunctionDefinition","overrides":{"id":2922,"nodeType":"OverrideSpecifier","overrides":[{"id":2920,"name":"ERC721","nameLocations":["611:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":2765,"src":"611:6:21"},{"id":2921,"name":"IERC165","nameLocations":["619:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4677,"src":"619:7:21"}],"src":"602:25:21"},"parameters":{"id":2919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2918,"mutability":"mutable","name":"interfaceId","nameLocation":"569:11:21","nodeType":"VariableDeclaration","scope":2939,"src":"562:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2917,"name":"bytes4","nodeType":"ElementaryTypeName","src":"562:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"561:20:21"},"returnParameters":{"id":2925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2939,"src":"637:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2923,"name":"bool","nodeType":"ElementaryTypeName","src":"637:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"636:6:21"},"scope":3055,"src":"535:205:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2043],"body":{"id":2997,"nodeType":"Block","src":"894:520:21","statements":[{"expression":{"arguments":[{"id":2949,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"919:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2948,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"904:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"904:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2951,"nodeType":"ExpressionStatement","src":"904:23:21"},{"assignments":[2953],"declarations":[{"constant":false,"id":2953,"mutability":"mutable","name":"_tokenURI","nameLocation":"952:9:21","nodeType":"VariableDeclaration","scope":2997,"src":"938:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2952,"name":"string","nodeType":"ElementaryTypeName","src":"938:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2957,"initialValue":{"baseExpression":{"id":2954,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"964:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2956,"indexExpression":{"id":2955,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"975:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"964:19:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"938:45:21"},{"assignments":[2959],"declarations":[{"constant":false,"id":2959,"mutability":"mutable","name":"base","nameLocation":"1007:4:21","nodeType":"VariableDeclaration","scope":2997,"src":"993:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2958,"name":"string","nodeType":"ElementaryTypeName","src":"993:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2962,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2960,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"1014:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1014:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"993:31:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2965,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"1103:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1097:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2963,"name":"bytes","nodeType":"ElementaryTypeName","src":"1097:5:21","typeDescriptions":{}}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1097:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1109:6:21","memberName":"length","nodeType":"MemberAccess","src":"1097:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1097:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2973,"nodeType":"IfStatement","src":"1093:70:21","trueBody":{"id":2972,"nodeType":"Block","src":"1122:41:21","statements":[{"expression":{"id":2970,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"1143:9:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2947,"id":2971,"nodeType":"Return","src":"1136:16:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2976,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"1271:9:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1265:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2974,"name":"bytes","nodeType":"ElementaryTypeName","src":"1265:5:21","typeDescriptions":{}}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1265:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1282:6:21","memberName":"length","nodeType":"MemberAccess","src":"1265:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1291:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1265:27:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2991,"nodeType":"IfStatement","src":"1261:106:21","trueBody":{"id":2990,"nodeType":"Block","src":"1294:73:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":2985,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"1339:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2986,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"1345:9:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2983,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1322:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1326:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"1322:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1315:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2981,"name":"string","nodeType":"ElementaryTypeName","src":"1315:6:21","typeDescriptions":{}}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1315:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2947,"id":2989,"nodeType":"Return","src":"1308:48:21"}]}},{"expression":{"arguments":[{"id":2994,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"1399:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2992,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1384:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$3055_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1390:8:21","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":2043,"src":"1384:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1384:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2947,"id":2996,"nodeType":"Return","src":"1377:30:21"}]},"documentation":{"id":2940,"nodeType":"StructuredDocumentation","src":"746:55:21","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2998,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"815:8:21","nodeType":"FunctionDefinition","overrides":{"id":2944,"nodeType":"OverrideSpecifier","overrides":[],"src":"861:8:21"},"parameters":{"id":2943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"mutability":"mutable","name":"tokenId","nameLocation":"832:7:21","nodeType":"VariableDeclaration","scope":2998,"src":"824:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint256","nodeType":"ElementaryTypeName","src":"824:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"823:17:21"},"returnParameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2998,"src":"879:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2945,"name":"string","nodeType":"ElementaryTypeName","src":"879:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"878:15:21"},"scope":3055,"src":"806:608:21","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3023,"nodeType":"Block","src":"1680:172:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":3008,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"1706:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3007,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"1698:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1698:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1716:48:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":3006,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1690:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1690:75:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3012,"nodeType":"ExpressionStatement","src":"1690:75:21"},{"expression":{"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3013,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"1775:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3015,"indexExpression":{"id":3014,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"1786:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1775:19:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3016,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"1797:9:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1775:31:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3018,"nodeType":"ExpressionStatement","src":"1775:31:21"},{"eventCall":{"arguments":[{"id":3020,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"1837:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3019,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"1822:14:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1822:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3022,"nodeType":"EmitStatement","src":"1817:28:21"}]},"documentation":{"id":2999,"nodeType":"StructuredDocumentation","src":"1420:174:21","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}.\n Requirements:\n - `tokenId` must exist."},"id":3024,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1608:12:21","nodeType":"FunctionDefinition","parameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"tokenId","nameLocation":"1629:7:21","nodeType":"VariableDeclaration","scope":3024,"src":"1621:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"_tokenURI","nameLocation":"1652:9:21","nodeType":"VariableDeclaration","scope":3024,"src":"1638:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3002,"name":"string","nodeType":"ElementaryTypeName","src":"1638:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1620:42:21"},"returnParameters":{"id":3005,"nodeType":"ParameterList","parameters":[],"src":"1680:0:21"},"scope":3055,"src":"1599:253:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[2506],"body":{"id":3053,"nodeType":"Block","src":"2128:142:21","statements":[{"expression":{"arguments":[{"id":3034,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"2150:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3031,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2138:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$3055_$","typeString":"type(contract super ERC721URIStorage)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2144:5:21","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":2506,"src":"2138:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2138:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3036,"nodeType":"ExpressionStatement","src":"2138:20:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":3039,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"2179:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3041,"indexExpression":{"id":3040,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"2190:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2179:19:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2173:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3037,"name":"bytes","nodeType":"ElementaryTypeName","src":"2173:5:21","typeDescriptions":{}}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2173:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2200:6:21","memberName":"length","nodeType":"MemberAccess","src":"2173:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2210:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2173:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3052,"nodeType":"IfStatement","src":"2169:95:21","trueBody":{"id":3051,"nodeType":"Block","src":"2213:51:21","statements":[{"expression":{"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2227:26:21","subExpression":{"baseExpression":{"id":3046,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"2234:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3048,"indexExpression":{"id":3047,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"2245:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2234:19:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3050,"nodeType":"ExpressionStatement","src":"2227:26:21"}]}}]},"documentation":{"id":3025,"nodeType":"StructuredDocumentation","src":"1858:207:21","text":" @dev See {ERC721-_burn}. This override additionally checks to see if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."},"id":3054,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"2079:5:21","nodeType":"FunctionDefinition","overrides":{"id":3029,"nodeType":"OverrideSpecifier","overrides":[],"src":"2119:8:21"},"parameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"tokenId","nameLocation":"2093:7:21","nodeType":"VariableDeclaration","scope":3054,"src":"2085:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"2085:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2084:17:21"},"returnParameters":{"id":3030,"nodeType":"ParameterList","parameters":[],"src":"2128:0:21"},"scope":3055,"src":"2070:200:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3056,"src":"291:1981:21","usedErrors":[],"usedEvents":[150,157,2780,2789,2798]}],"src":"128:2145:21"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"id":22,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[4677],"IERC721":[2881],"IERC721Metadata":[3082]},"id":3083,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3057,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":3058,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3083,"sourceUnit":2882,"src":"137:24:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3060,"name":"IERC721","nameLocations":["326:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":2881,"src":"326:7:22"},"id":3061,"nodeType":"InheritanceSpecifier","src":"326:7:22"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3059,"nodeType":"StructuredDocumentation","src":"163:133:22","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":3082,"linearizedBaseContracts":[3082,2881,4677],"name":"IERC721Metadata","nameLocation":"307:15:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3062,"nodeType":"StructuredDocumentation","src":"340:58:22","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":3067,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:22","nodeType":"FunctionDefinition","parameters":{"id":3063,"nodeType":"ParameterList","parameters":[],"src":"416:2:22"},"returnParameters":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3067,"src":"442:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3064,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:22"},"scope":3082,"src":"403:54:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3068,"nodeType":"StructuredDocumentation","src":"463:60:22","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":3073,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:22","nodeType":"FunctionDefinition","parameters":{"id":3069,"nodeType":"ParameterList","parameters":[],"src":"543:2:22"},"returnParameters":{"id":3072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3073,"src":"569:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3070,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:22"},"scope":3082,"src":"528:56:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3074,"nodeType":"StructuredDocumentation","src":"590:90:22","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":3081,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:22","nodeType":"FunctionDefinition","parameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3076,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:22","nodeType":"VariableDeclaration","scope":3081,"src":"703:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3075,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:22"},"returnParameters":{"id":3080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3081,"src":"743:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3078,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:22"},"scope":3082,"src":"685:73:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3083,"src":"297:463:22","usedErrors":[],"usedEvents":[2780,2789,2798]}],"src":"112:649:22"}},"@openzeppelin/contracts/utils/Address.sol":{"id":23,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3412]},"id":3413,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3084,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:23"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":3085,"nodeType":"StructuredDocumentation","src":"126:67:23","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3412,"linearizedBaseContracts":[3412],"name":"Address","nameLocation":"202:7:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":3099,"nodeType":"Block","src":"1478:254:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3093,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"1702:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:23","memberName":"code","nodeType":"MemberAccess","src":"1702:12:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:23","memberName":"length","nodeType":"MemberAccess","src":"1702:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3092,"id":3098,"nodeType":"Return","src":"1695:30:23"}]},"documentation":{"id":3086,"nodeType":"StructuredDocumentation","src":"216:1191:23","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":3100,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:23","nodeType":"FunctionDefinition","parameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"account","nameLocation":"1440:7:23","nodeType":"VariableDeclaration","scope":3100,"src":"1432:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3087,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:23"},"returnParameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3100,"src":"1472:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3090,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:23"},"scope":3412,"src":"1412:320:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3133,"nodeType":"Block","src":"2718:241:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3111,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3412","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3412","typeString":"library Address"}],"id":3110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3109,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:23","typeDescriptions":{}}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:23","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3114,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"2761:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":3116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":3108,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3118,"nodeType":"ExpressionStatement","src":"2728:73:23"},{"assignments":[3120,null],"declarations":[{"constant":false,"id":3120,"mutability":"mutable","name":"success","nameLocation":"2818:7:23","nodeType":"VariableDeclaration","scope":3133,"src":"2813:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3119,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3127,"initialValue":{"arguments":[{"hexValue":"","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3121,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"2831:9:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:23","memberName":"call","nodeType":"MemberAccess","src":"2831:14:23","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3123,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"2853:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:23","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:23"},{"expression":{"arguments":[{"id":3129,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"2882:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":3128,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3132,"nodeType":"ExpressionStatement","src":"2874:78:23"}]},"documentation":{"id":3101,"nodeType":"StructuredDocumentation","src":"1738:904:23","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3134,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:23","nodeType":"FunctionDefinition","parameters":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:23","nodeType":"VariableDeclaration","scope":3134,"src":"2666:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3102,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:23","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3105,"mutability":"mutable","name":"amount","nameLocation":"2701:6:23","nodeType":"VariableDeclaration","scope":3134,"src":"2693:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:23"},"returnParameters":{"id":3107,"nodeType":"ParameterList","parameters":[],"src":"2718:0:23"},"scope":3412,"src":"2647:312:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3151,"nodeType":"Block","src":"3790:96:23","statements":[{"expression":{"arguments":[{"id":3145,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"3829:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3146,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"3837:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":3144,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3192,3236],"referencedDeclaration":3236,"src":"3807:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3143,"id":3150,"nodeType":"Return","src":"3800:79:23"}]},"documentation":{"id":3135,"nodeType":"StructuredDocumentation","src":"2965:731:23","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":3152,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:23","nodeType":"FunctionDefinition","parameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"target","nameLocation":"3731:6:23","nodeType":"VariableDeclaration","scope":3152,"src":"3723:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3136,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3139,"mutability":"mutable","name":"data","nameLocation":"3752:4:23","nodeType":"VariableDeclaration","scope":3152,"src":"3739:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3138,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:23"},"returnParameters":{"id":3143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3152,"src":"3776:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3141,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:23"},"scope":3412,"src":"3701:185:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3171,"nodeType":"Block","src":"4255:76:23","statements":[{"expression":{"arguments":[{"id":3165,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"4294:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3166,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"4302:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3168,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"4311:12:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3164,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3192,3236],"referencedDeclaration":3236,"src":"4272:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3163,"id":3170,"nodeType":"Return","src":"4265:59:23"}]},"documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"3892:211:23","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3172,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:23","nodeType":"FunctionDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"target","nameLocation":"4147:6:23","nodeType":"VariableDeclaration","scope":3172,"src":"4139:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3154,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3157,"mutability":"mutable","name":"data","nameLocation":"4176:4:23","nodeType":"VariableDeclaration","scope":3172,"src":"4163:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3156,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:23","nodeType":"VariableDeclaration","scope":3172,"src":"4190:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3158,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:23"},"returnParameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3172,"src":"4241:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3161,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:23"},"scope":3412,"src":"4108:223:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3191,"nodeType":"Block","src":"4806:111:23","statements":[{"expression":{"arguments":[{"id":3185,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"4845:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3186,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"4853:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"4859:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":3188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":3184,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3192,3236],"referencedDeclaration":3236,"src":"4823:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3183,"id":3190,"nodeType":"Return","src":"4816:94:23"}]},"documentation":{"id":3173,"nodeType":"StructuredDocumentation","src":"4337:351:23","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":3192,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:23","nodeType":"FunctionDefinition","parameters":{"id":3180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3175,"mutability":"mutable","name":"target","nameLocation":"4732:6:23","nodeType":"VariableDeclaration","scope":3192,"src":"4724:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3174,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"data","nameLocation":"4753:4:23","nodeType":"VariableDeclaration","scope":3192,"src":"4740:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3176,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3179,"mutability":"mutable","name":"value","nameLocation":"4767:5:23","nodeType":"VariableDeclaration","scope":3192,"src":"4759:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3178,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:23"},"returnParameters":{"id":3183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3192,"src":"4792:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3181,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:23"},"scope":3412,"src":"4693:224:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3235,"nodeType":"Block","src":"5344:267:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3209,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3412","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3412","typeString":"library Address"}],"id":3208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3207,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:23","typeDescriptions":{}}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:23","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"5387:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":3214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":3206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3216,"nodeType":"ExpressionStatement","src":"5354:81:23"},{"assignments":[3218,3220],"declarations":[{"constant":false,"id":3218,"mutability":"mutable","name":"success","nameLocation":"5451:7:23","nodeType":"VariableDeclaration","scope":3235,"src":"5446:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3217,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3220,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:23","nodeType":"VariableDeclaration","scope":3235,"src":"5460:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3219,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3227,"initialValue":{"arguments":[{"id":3225,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"5513:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3221,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"5487:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:23","memberName":"call","nodeType":"MemberAccess","src":"5487:11:23","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"5506:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:23","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:23"},{"expression":{"arguments":[{"id":3229,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"5562:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3230,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"5570:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3231,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"5579:10:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3232,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"5591:12:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3228,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"5535:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3205,"id":3234,"nodeType":"Return","src":"5528:76:23"}]},"documentation":{"id":3193,"nodeType":"StructuredDocumentation","src":"4923:237:23","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3236,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:23","nodeType":"FunctionDefinition","parameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"target","nameLocation":"5213:6:23","nodeType":"VariableDeclaration","scope":3236,"src":"5205:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3194,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3197,"mutability":"mutable","name":"data","nameLocation":"5242:4:23","nodeType":"VariableDeclaration","scope":3236,"src":"5229:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3196,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3199,"mutability":"mutable","name":"value","nameLocation":"5264:5:23","nodeType":"VariableDeclaration","scope":3236,"src":"5256:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3198,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:23","nodeType":"VariableDeclaration","scope":3236,"src":"5279:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3200,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:23"},"returnParameters":{"id":3205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3236,"src":"5330:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3203,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:23"},"scope":3412,"src":"5165:446:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3252,"nodeType":"Block","src":"5888:97:23","statements":[{"expression":{"arguments":[{"id":3247,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"5924:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3248,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"5932:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":3246,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[3253,3282],"referencedDeclaration":3282,"src":"5905:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3245,"id":3251,"nodeType":"Return","src":"5898:80:23"}]},"documentation":{"id":3237,"nodeType":"StructuredDocumentation","src":"5617:166:23","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3253,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:23","nodeType":"FunctionDefinition","parameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3239,"mutability":"mutable","name":"target","nameLocation":"5824:6:23","nodeType":"VariableDeclaration","scope":3253,"src":"5816:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3238,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3241,"mutability":"mutable","name":"data","nameLocation":"5845:4:23","nodeType":"VariableDeclaration","scope":3253,"src":"5832:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3240,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:23"},"returnParameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3253,"src":"5874:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3243,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:23"},"scope":3412,"src":"5788:197:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3281,"nodeType":"Block","src":"6327:168:23","statements":[{"assignments":[3266,3268],"declarations":[{"constant":false,"id":3266,"mutability":"mutable","name":"success","nameLocation":"6343:7:23","nodeType":"VariableDeclaration","scope":3281,"src":"6338:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3265,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:23","nodeType":"VariableDeclaration","scope":3281,"src":"6352:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3267,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3273,"initialValue":{"arguments":[{"id":3271,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"6397:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3269,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"6379:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:23","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:23","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:23"},{"expression":{"arguments":[{"id":3275,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"6446:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3276,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"6454:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3277,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"6463:10:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3278,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"6475:12:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3274,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"6419:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3264,"id":3280,"nodeType":"Return","src":"6412:76:23"}]},"documentation":{"id":3254,"nodeType":"StructuredDocumentation","src":"5991:173:23","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3282,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:23","nodeType":"FunctionDefinition","parameters":{"id":3261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3256,"mutability":"mutable","name":"target","nameLocation":"6214:6:23","nodeType":"VariableDeclaration","scope":3282,"src":"6206:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3255,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3258,"mutability":"mutable","name":"data","nameLocation":"6243:4:23","nodeType":"VariableDeclaration","scope":3282,"src":"6230:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3257,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3260,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:23","nodeType":"VariableDeclaration","scope":3282,"src":"6257:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3259,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:23"},"returnParameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3282,"src":"6313:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3262,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:23"},"scope":3412,"src":"6169:326:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3298,"nodeType":"Block","src":"6771:101:23","statements":[{"expression":{"arguments":[{"id":3293,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"6809:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3294,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"6817:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":3292,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[3299,3328],"referencedDeclaration":3328,"src":"6788:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3291,"id":3297,"nodeType":"Return","src":"6781:84:23"}]},"documentation":{"id":3283,"nodeType":"StructuredDocumentation","src":"6501:168:23","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3299,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:23","nodeType":"FunctionDefinition","parameters":{"id":3288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"target","nameLocation":"6712:6:23","nodeType":"VariableDeclaration","scope":3299,"src":"6704:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3284,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3287,"mutability":"mutable","name":"data","nameLocation":"6733:4:23","nodeType":"VariableDeclaration","scope":3299,"src":"6720:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3286,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:23"},"returnParameters":{"id":3291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3299,"src":"6757:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3289,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:23"},"scope":3412,"src":"6674:198:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3327,"nodeType":"Block","src":"7213:170:23","statements":[{"assignments":[3312,3314],"declarations":[{"constant":false,"id":3312,"mutability":"mutable","name":"success","nameLocation":"7229:7:23","nodeType":"VariableDeclaration","scope":3327,"src":"7224:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3311,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3314,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:23","nodeType":"VariableDeclaration","scope":3327,"src":"7238:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3313,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3319,"initialValue":{"arguments":[{"id":3317,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"7285:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3315,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"7265:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:23","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:23","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:23"},{"expression":{"arguments":[{"id":3321,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"7334:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3322,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"7342:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3323,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"7351:10:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3324,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"7363:12:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3320,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"7307:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3310,"id":3326,"nodeType":"Return","src":"7300:76:23"}]},"documentation":{"id":3300,"nodeType":"StructuredDocumentation","src":"6878:175:23","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3328,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:23","nodeType":"FunctionDefinition","parameters":{"id":3307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"target","nameLocation":"7105:6:23","nodeType":"VariableDeclaration","scope":3328,"src":"7097:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3301,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3304,"mutability":"mutable","name":"data","nameLocation":"7134:4:23","nodeType":"VariableDeclaration","scope":3328,"src":"7121:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3303,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3306,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:23","nodeType":"VariableDeclaration","scope":3328,"src":"7148:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3305,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:23"},"returnParameters":{"id":3310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3328,"src":"7199:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3308,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:23"},"scope":3412,"src":"7058:325:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3366,"nodeType":"Block","src":"7865:434:23","statements":[{"condition":{"id":3342,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"7879:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3364,"nodeType":"Block","src":"8235:58:23","statements":[{"expression":{"arguments":[{"id":3360,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"8257:10:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3361,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"8269:12:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3359,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"8249:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3363,"nodeType":"ExpressionStatement","src":"8249:33:23"}]},"id":3365,"nodeType":"IfStatement","src":"7875:418:23","trueBody":{"id":3358,"nodeType":"Block","src":"7888:341:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3343,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"7906:10:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:23","memberName":"length","nodeType":"MemberAccess","src":"7906:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3355,"nodeType":"IfStatement","src":"7902:286:23","trueBody":{"id":3354,"nodeType":"Block","src":"7930:258:23","statements":[{"expression":{"arguments":[{"arguments":[{"id":3349,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"8132:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3348,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"8121:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":3351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":3347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3353,"nodeType":"ExpressionStatement","src":"8113:60:23"}]}},{"expression":{"id":3356,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"8208:10:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3341,"id":3357,"nodeType":"Return","src":"8201:17:23"}]}}]},"documentation":{"id":3329,"nodeType":"StructuredDocumentation","src":"7389:277:23","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":3367,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:23","nodeType":"FunctionDefinition","parameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3331,"mutability":"mutable","name":"target","nameLocation":"7724:6:23","nodeType":"VariableDeclaration","scope":3367,"src":"7716:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3330,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3333,"mutability":"mutable","name":"success","nameLocation":"7745:7:23","nodeType":"VariableDeclaration","scope":3367,"src":"7740:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3332,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3335,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:23","nodeType":"VariableDeclaration","scope":3367,"src":"7762:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3334,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3337,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:23","nodeType":"VariableDeclaration","scope":3367,"src":"7795:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3336,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:23"},"returnParameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3367,"src":"7851:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3339,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:23"},"scope":3412,"src":"7671:628:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3390,"nodeType":"Block","src":"8680:135:23","statements":[{"condition":{"id":3379,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"8694:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3388,"nodeType":"Block","src":"8751:58:23","statements":[{"expression":{"arguments":[{"id":3384,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"8773:10:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3385,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"8785:12:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3383,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"8765:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3387,"nodeType":"ExpressionStatement","src":"8765:33:23"}]},"id":3389,"nodeType":"IfStatement","src":"8690:119:23","trueBody":{"id":3382,"nodeType":"Block","src":"8703:42:23","statements":[{"expression":{"id":3380,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"8724:10:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3378,"id":3381,"nodeType":"Return","src":"8717:17:23"}]}}]},"documentation":{"id":3368,"nodeType":"StructuredDocumentation","src":"8305:210:23","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":3391,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:23","nodeType":"FunctionDefinition","parameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"success","nameLocation":"8560:7:23","nodeType":"VariableDeclaration","scope":3391,"src":"8555:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3369,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3372,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:23","nodeType":"VariableDeclaration","scope":3391,"src":"8577:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3371,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3374,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:23","nodeType":"VariableDeclaration","scope":3391,"src":"8610:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3373,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:23"},"returnParameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3391,"src":"8666:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3376,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:23"},"scope":3412,"src":"8520:295:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3410,"nodeType":"Block","src":"8904:457:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3398,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"8980:10:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:23","memberName":"length","nodeType":"MemberAccess","src":"8980:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3408,"nodeType":"Block","src":"9310:45:23","statements":[{"expression":{"arguments":[{"id":3405,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"9331:12:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3404,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:23","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3407,"nodeType":"ExpressionStatement","src":"9324:20:23"}]},"id":3409,"nodeType":"IfStatement","src":"8976:379:23","trueBody":{"id":3403,"nodeType":"Block","src":"9003:301:23","statements":[{"AST":{"nativeSrc":"9161:133:23","nodeType":"YulBlock","src":"9161:133:23","statements":[{"nativeSrc":"9179:40:23","nodeType":"YulVariableDeclaration","src":"9179:40:23","value":{"arguments":[{"name":"returndata","nativeSrc":"9208:10:23","nodeType":"YulIdentifier","src":"9208:10:23"}],"functionName":{"name":"mload","nativeSrc":"9202:5:23","nodeType":"YulIdentifier","src":"9202:5:23"},"nativeSrc":"9202:17:23","nodeType":"YulFunctionCall","src":"9202:17:23"},"variables":[{"name":"returndata_size","nativeSrc":"9183:15:23","nodeType":"YulTypedName","src":"9183:15:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9247:2:23","nodeType":"YulLiteral","src":"9247:2:23","type":"","value":"32"},{"name":"returndata","nativeSrc":"9251:10:23","nodeType":"YulIdentifier","src":"9251:10:23"}],"functionName":{"name":"add","nativeSrc":"9243:3:23","nodeType":"YulIdentifier","src":"9243:3:23"},"nativeSrc":"9243:19:23","nodeType":"YulFunctionCall","src":"9243:19:23"},{"name":"returndata_size","nativeSrc":"9264:15:23","nodeType":"YulIdentifier","src":"9264:15:23"}],"functionName":{"name":"revert","nativeSrc":"9236:6:23","nodeType":"YulIdentifier","src":"9236:6:23"},"nativeSrc":"9236:44:23","nodeType":"YulFunctionCall","src":"9236:44:23"},"nativeSrc":"9236:44:23","nodeType":"YulExpressionStatement","src":"9236:44:23"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3393,"isOffset":false,"isSlot":false,"src":"9208:10:23","valueSize":1},{"declaration":3393,"isOffset":false,"isSlot":false,"src":"9251:10:23","valueSize":1}],"id":3402,"nodeType":"InlineAssembly","src":"9152:142:23"}]}}]},"id":3411,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:23","nodeType":"FunctionDefinition","parameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:23","nodeType":"VariableDeclaration","scope":3411,"src":"8838:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3392,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3395,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:23","nodeType":"VariableDeclaration","scope":3411,"src":"8863:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3394,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:23"},"returnParameters":{"id":3397,"nodeType":"ParameterList","parameters":[],"src":"8904:0:23"},"scope":3412,"src":"8821:540:23","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3413,"src":"194:9169:23","usedErrors":[],"usedEvents":[]}],"src":"101:9263:23"}},"@openzeppelin/contracts/utils/Context.sol":{"id":24,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3442]},"id":3443,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3414,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:24"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3415,"nodeType":"StructuredDocumentation","src":"126:496:24","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3442,"linearizedBaseContracts":[3442],"name":"Context","nameLocation":"641:7:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":3423,"nodeType":"Block","src":"717:34:24","statements":[{"expression":{"expression":{"id":3420,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:24","memberName":"sender","nodeType":"MemberAccess","src":"734:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3419,"id":3422,"nodeType":"Return","src":"727:17:24"}]},"id":3424,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:24","nodeType":"FunctionDefinition","parameters":{"id":3416,"nodeType":"ParameterList","parameters":[],"src":"674:2:24"},"returnParameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3424,"src":"708:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3417,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:24"},"scope":3442,"src":"655:96:24","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3432,"nodeType":"Block","src":"824:32:24","statements":[{"expression":{"expression":{"id":3429,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:24","memberName":"data","nodeType":"MemberAccess","src":"841:8:24","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3428,"id":3431,"nodeType":"Return","src":"834:15:24"}]},"id":3433,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:24","nodeType":"FunctionDefinition","parameters":{"id":3425,"nodeType":"ParameterList","parameters":[],"src":"774:2:24"},"returnParameters":{"id":3428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3433,"src":"808:14:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3426,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:24"},"scope":3442,"src":"757:99:24","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3440,"nodeType":"Block","src":"934:25:24","statements":[{"expression":{"hexValue":"30","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3437,"id":3439,"nodeType":"Return","src":"944:8:24"}]},"id":3441,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:24","nodeType":"FunctionDefinition","parameters":{"id":3434,"nodeType":"ParameterList","parameters":[],"src":"891:2:24"},"returnParameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3441,"src":"925:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:24"},"scope":3442,"src":"862:97:24","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3443,"src":"623:338:24","usedErrors":[],"usedEvents":[]}],"src":"101:861:24"}},"@openzeppelin/contracts/utils/Counters.sol":{"id":25,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[3516]},"id":3517,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3444,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:25"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":3445,"nodeType":"StructuredDocumentation","src":"112:311:25","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":3516,"linearizedBaseContracts":[3516],"name":"Counters","nameLocation":"432:8:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":3448,"members":[{"constant":false,"id":3447,"mutability":"mutable","name":"_value","nameLocation":"794:6:25","nodeType":"VariableDeclaration","scope":3448,"src":"786:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3446,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:25","nodeType":"StructDefinition","scope":3516,"src":"447:374:25","visibility":"public"},{"body":{"id":3459,"nodeType":"Block","src":"901:38:25","statements":[{"expression":{"expression":{"id":3456,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"918:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3447,"src":"918:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3455,"id":3458,"nodeType":"Return","src":"911:21:25"}]},"id":3460,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:25","nodeType":"FunctionDefinition","parameters":{"id":3452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3451,"mutability":"mutable","name":"counter","nameLocation":"860:7:25","nodeType":"VariableDeclaration","scope":3460,"src":"844:23:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":3450,"nodeType":"UserDefinedTypeName","pathNode":{"id":3449,"name":"Counter","nameLocations":["844:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":3448,"src":"844:7:25"},"referencedDeclaration":3448,"src":"844:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:25"},"returnParameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3460,"src":"892:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3453,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:25"},"scope":3516,"src":"827:112:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3473,"nodeType":"Block","src":"998:70:25","statements":[{"id":3472,"nodeType":"UncheckedBlock","src":"1008:54:25","statements":[{"expression":{"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3466,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"1032:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3447,"src":"1032:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3471,"nodeType":"ExpressionStatement","src":"1032:19:25"}]}]},"id":3474,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:25","nodeType":"FunctionDefinition","parameters":{"id":3464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3463,"mutability":"mutable","name":"counter","nameLocation":"980:7:25","nodeType":"VariableDeclaration","scope":3474,"src":"964:23:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":3462,"nodeType":"UserDefinedTypeName","pathNode":{"id":3461,"name":"Counter","nameLocations":["964:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":3448,"src":"964:7:25"},"referencedDeclaration":3448,"src":"964:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:25"},"returnParameters":{"id":3465,"nodeType":"ParameterList","parameters":[],"src":"998:0:25"},"scope":3516,"src":"945:123:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3501,"nodeType":"Block","src":"1127:176:25","statements":[{"assignments":[3481],"declarations":[{"constant":false,"id":3481,"mutability":"mutable","name":"value","nameLocation":"1145:5:25","nodeType":"VariableDeclaration","scope":3501,"src":"1137:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3484,"initialValue":{"expression":{"id":3482,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"1153:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3447,"src":"1153:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"1185:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":3489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":3485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3491,"nodeType":"ExpressionStatement","src":"1177:49:25"},{"id":3500,"nodeType":"UncheckedBlock","src":"1236:61:25","statements":[{"expression":{"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3492,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"1260:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3447,"src":"1260:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"1277:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3499,"nodeType":"ExpressionStatement","src":"1260:26:25"}]}]},"id":3502,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:25","nodeType":"FunctionDefinition","parameters":{"id":3478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"counter","nameLocation":"1109:7:25","nodeType":"VariableDeclaration","scope":3502,"src":"1093:23:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":3476,"nodeType":"UserDefinedTypeName","pathNode":{"id":3475,"name":"Counter","nameLocations":["1093:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":3448,"src":"1093:7:25"},"referencedDeclaration":3448,"src":"1093:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:25"},"returnParameters":{"id":3479,"nodeType":"ParameterList","parameters":[],"src":"1127:0:25"},"scope":3516,"src":"1074:229:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3514,"nodeType":"Block","src":"1358:35:25","statements":[{"expression":{"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3508,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"1368:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:25","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3447,"src":"1368:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3513,"nodeType":"ExpressionStatement","src":"1368:18:25"}]},"id":3515,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:25","nodeType":"FunctionDefinition","parameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"counter","nameLocation":"1340:7:25","nodeType":"VariableDeclaration","scope":3515,"src":"1324:23:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":3504,"nodeType":"UserDefinedTypeName","pathNode":{"id":3503,"name":"Counter","nameLocations":["1324:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":3448,"src":"1324:7:25"},"referencedDeclaration":3448,"src":"1324:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3448_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:25"},"returnParameters":{"id":3507,"nodeType":"ParameterList","parameters":[],"src":"1358:0:25"},"scope":3516,"src":"1309:84:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3517,"src":"424:971:25","usedErrors":[],"usedEvents":[]}],"src":"87:1309:25"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"id":26,"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[3521],"ShortStrings":[3732],"StorageSlot":[3842]},"id":3733,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3518,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"106:23:26"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":3519,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3733,"sourceUnit":3843,"src":"131:27:26","symbolAliases":[],"unitAlias":""},{"canonicalName":"ShortString","id":3521,"name":"ShortString","nameLocation":"333:11:26","nodeType":"UserDefinedValueTypeDefinition","src":"328:28:26","underlyingType":{"id":3520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"348:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":3522,"nodeType":"StructuredDocumentation","src":"358:876:26","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":3732,"linearizedBaseContracts":[3732],"name":"ShortStrings","nameLocation":"1243:12:26","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3525,"mutability":"constant","name":"_FALLBACK_SENTINEL","nameLocation":"1350:18:26","nodeType":"VariableDeclaration","scope":3732,"src":"1325:112:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1325:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:66:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":3529,"name":"StringTooLong","nameLocation":"1450:13:26","nodeType":"ErrorDefinition","parameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3527,"mutability":"mutable","name":"str","nameLocation":"1471:3:26","nodeType":"VariableDeclaration","scope":3529,"src":"1464:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3526,"name":"string","nodeType":"ElementaryTypeName","src":"1464:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1463:12:26"},"src":"1444:32:26"},{"errorSelector":"b3512b0c","id":3531,"name":"InvalidShortString","nameLocation":"1487:18:26","nodeType":"ErrorDefinition","parameters":{"id":3530,"nodeType":"ParameterList","parameters":[],"src":"1505:2:26"},"src":"1481:27:26"},{"body":{"id":3574,"nodeType":"Block","src":"1767:208:26","statements":[{"assignments":[3541],"declarations":[{"constant":false,"id":3541,"mutability":"mutable","name":"bstr","nameLocation":"1790:4:26","nodeType":"VariableDeclaration","scope":3574,"src":"1777:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3540,"name":"bytes","nodeType":"ElementaryTypeName","src":"1777:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3546,"initialValue":{"arguments":[{"id":3544,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"1803:3:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1797:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3542,"name":"bytes","nodeType":"ElementaryTypeName","src":"1797:5:26","typeDescriptions":{}}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1777:30:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3547,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"1821:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1826:6:26","memberName":"length","nodeType":"MemberAccess","src":"1821:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:2:26","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1821:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3556,"nodeType":"IfStatement","src":"1817:72:26","trueBody":{"id":3555,"nodeType":"Block","src":"1839:50:26","statements":[{"errorCall":{"arguments":[{"id":3552,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"1874:3:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3551,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"1860:13:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1860:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3554,"nodeType":"RevertStatement","src":"1853:25:26"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3565,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"1946:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1938:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1938:7:26","typeDescriptions":{}}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1930:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:26","typeDescriptions":{}}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1930:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":3568,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"1955:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1960:6:26","memberName":"length","nodeType":"MemberAccess","src":"1955:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1930:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1922:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1922:7:26","typeDescriptions":{}}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1922:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3557,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"1905:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3521_$","typeString":"type(ShortString)"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1917:4:26","memberName":"wrap","nodeType":"MemberAccess","src":"1905:16:26","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$3521_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1905:63:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"functionReturnParameters":3539,"id":3573,"nodeType":"Return","src":"1898:70:26"}]},"documentation":{"id":3532,"nodeType":"StructuredDocumentation","src":"1514:170:26","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":3575,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1698:13:26","nodeType":"FunctionDefinition","parameters":{"id":3535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"str","nameLocation":"1726:3:26","nodeType":"VariableDeclaration","scope":3575,"src":"1712:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3533,"name":"string","nodeType":"ElementaryTypeName","src":"1712:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1711:19:26"},"returnParameters":{"id":3539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3575,"src":"1754:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"},"typeName":{"id":3537,"nodeType":"UserDefinedTypeName","pathNode":{"id":3536,"name":"ShortString","nameLocations":["1754:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3521,"src":"1754:11:26"},"referencedDeclaration":3521,"src":"1754:11:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"visibility":"internal"}],"src":"1753:13:26"},"scope":3732,"src":"1689:286:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3600,"nodeType":"Block","src":"2133:331:26","statements":[{"assignments":[3585],"declarations":[{"constant":false,"id":3585,"mutability":"mutable","name":"len","nameLocation":"2151:3:26","nodeType":"VariableDeclaration","scope":3600,"src":"2143:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3589,"initialValue":{"arguments":[{"id":3587,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"2168:4:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}],"id":3586,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"2157:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3521_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2157:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2143:30:26"},{"assignments":[3591],"declarations":[{"constant":false,"id":3591,"mutability":"mutable","name":"str","nameLocation":"2275:3:26","nodeType":"VariableDeclaration","scope":3600,"src":"2261:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3590,"name":"string","nodeType":"ElementaryTypeName","src":"2261:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3596,"initialValue":{"arguments":[{"hexValue":"3332","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":3593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2281:10:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3592,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2261:34:26"},{"AST":{"nativeSrc":"2357:81:26","nodeType":"YulBlock","src":"2357:81:26","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2378:3:26","nodeType":"YulIdentifier","src":"2378:3:26"},{"name":"len","nativeSrc":"2383:3:26","nodeType":"YulIdentifier","src":"2383:3:26"}],"functionName":{"name":"mstore","nativeSrc":"2371:6:26","nodeType":"YulIdentifier","src":"2371:6:26"},"nativeSrc":"2371:16:26","nodeType":"YulFunctionCall","src":"2371:16:26"},"nativeSrc":"2371:16:26","nodeType":"YulExpressionStatement","src":"2371:16:26"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2411:3:26","nodeType":"YulIdentifier","src":"2411:3:26"},{"kind":"number","nativeSrc":"2416:4:26","nodeType":"YulLiteral","src":"2416:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2407:3:26","nodeType":"YulIdentifier","src":"2407:3:26"},"nativeSrc":"2407:14:26","nodeType":"YulFunctionCall","src":"2407:14:26"},{"name":"sstr","nativeSrc":"2423:4:26","nodeType":"YulIdentifier","src":"2423:4:26"}],"functionName":{"name":"mstore","nativeSrc":"2400:6:26","nodeType":"YulIdentifier","src":"2400:6:26"},"nativeSrc":"2400:28:26","nodeType":"YulFunctionCall","src":"2400:28:26"},"nativeSrc":"2400:28:26","nodeType":"YulExpressionStatement","src":"2400:28:26"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3585,"isOffset":false,"isSlot":false,"src":"2383:3:26","valueSize":1},{"declaration":3579,"isOffset":false,"isSlot":false,"src":"2423:4:26","valueSize":1},{"declaration":3591,"isOffset":false,"isSlot":false,"src":"2378:3:26","valueSize":1},{"declaration":3591,"isOffset":false,"isSlot":false,"src":"2411:3:26","valueSize":1}],"id":3597,"nodeType":"InlineAssembly","src":"2348:90:26"},{"expression":{"id":3598,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"2454:3:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3583,"id":3599,"nodeType":"Return","src":"2447:10:26"}]},"documentation":{"id":3576,"nodeType":"StructuredDocumentation","src":"1981:73:26","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":3601,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2068:8:26","nodeType":"FunctionDefinition","parameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"sstr","nameLocation":"2089:4:26","nodeType":"VariableDeclaration","scope":3601,"src":"2077:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"},"typeName":{"id":3578,"nodeType":"UserDefinedTypeName","pathNode":{"id":3577,"name":"ShortString","nameLocations":["2077:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3521,"src":"2077:11:26"},"referencedDeclaration":3521,"src":"2077:11:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"visibility":"internal"}],"src":"2076:18:26"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3601,"src":"2118:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3581,"name":"string","nodeType":"ElementaryTypeName","src":"2118:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2117:15:26"},"scope":3732,"src":"2059:405:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3632,"nodeType":"Block","src":"2606:175:26","statements":[{"assignments":[3611],"declarations":[{"constant":false,"id":3611,"mutability":"mutable","name":"result","nameLocation":"2624:6:26","nodeType":"VariableDeclaration","scope":3632,"src":"2616:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3610,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3621,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3616,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"2660:4:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}],"expression":{"id":3614,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"2641:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3521_$","typeString":"type(ShortString)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2653:6:26","memberName":"unwrap","nodeType":"MemberAccess","src":"2641:18:26","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$3521_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2641:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2633:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3612,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:26","typeDescriptions":{}}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:4:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2633:40:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2616:57:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3622,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"2687:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2696:2:26","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2687:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3629,"nodeType":"IfStatement","src":"2683:69:26","trueBody":{"id":3628,"nodeType":"Block","src":"2700:52:26","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3625,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"2721:18:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2721:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3627,"nodeType":"RevertStatement","src":"2714:27:26"}]}},{"expression":{"id":3630,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"2768:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3609,"id":3631,"nodeType":"Return","src":"2761:13:26"}]},"documentation":{"id":3602,"nodeType":"StructuredDocumentation","src":"2470:61:26","text":" @dev Return the length of a `ShortString`."},"id":3633,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2545:10:26","nodeType":"FunctionDefinition","parameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"sstr","nameLocation":"2568:4:26","nodeType":"VariableDeclaration","scope":3633,"src":"2556:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"},"typeName":{"id":3604,"nodeType":"UserDefinedTypeName","pathNode":{"id":3603,"name":"ShortString","nameLocations":["2556:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3521,"src":"2556:11:26"},"referencedDeclaration":3521,"src":"2556:11:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"visibility":"internal"}],"src":"2555:18:26"},"returnParameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3633,"src":"2597:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3607,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2596:9:26"},"scope":3732,"src":"2536:245:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3672,"nodeType":"Block","src":"3004:232:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"3024:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3018:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3644,"name":"bytes","nodeType":"ElementaryTypeName","src":"3018:5:26","typeDescriptions":{}}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3018:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3031:6:26","memberName":"length","nodeType":"MemberAccess","src":"3018:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3040:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3018:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3670,"nodeType":"Block","src":"3102:128:26","statements":[{"expression":{"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3659,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"3142:5:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":3656,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"3116:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3842_$","typeString":"type(library StorageSlot)"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3128:13:26","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"3116:25:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$3750_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3750_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":3661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3149:5:26","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3749,"src":"3116:38:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"3157:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3116:46:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3664,"nodeType":"ExpressionStatement","src":"3116:46:26"},{"expression":{"arguments":[{"id":3667,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"3200:18:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3665,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"3183:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3521_$","typeString":"type(ShortString)"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3195:4:26","memberName":"wrap","nodeType":"MemberAccess","src":"3183:16:26","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$3521_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3183:36:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"functionReturnParameters":3643,"id":3669,"nodeType":"Return","src":"3176:43:26"}]},"id":3671,"nodeType":"IfStatement","src":"3014:216:26","trueBody":{"id":3655,"nodeType":"Block","src":"3044:52:26","statements":[{"expression":{"arguments":[{"id":3652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"3079:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3651,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"3065:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$3521_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3065:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"functionReturnParameters":3643,"id":3654,"nodeType":"Return","src":"3058:27:26"}]}}]},"documentation":{"id":3634,"nodeType":"StructuredDocumentation","src":"2787:103:26","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":3673,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2904:25:26","nodeType":"FunctionDefinition","parameters":{"id":3639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3636,"mutability":"mutable","name":"value","nameLocation":"2944:5:26","nodeType":"VariableDeclaration","scope":3673,"src":"2930:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3635,"name":"string","nodeType":"ElementaryTypeName","src":"2930:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3638,"mutability":"mutable","name":"store","nameLocation":"2966:5:26","nodeType":"VariableDeclaration","scope":3673,"src":"2951:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3637,"name":"string","nodeType":"ElementaryTypeName","src":"2951:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2929:43:26"},"returnParameters":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3673,"src":"2991:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"},"typeName":{"id":3641,"nodeType":"UserDefinedTypeName","pathNode":{"id":3640,"name":"ShortString","nameLocations":["2991:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3521,"src":"2991:11:26"},"referencedDeclaration":3521,"src":"2991:11:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"visibility":"internal"}],"src":"2990:13:26"},"scope":3732,"src":"2895:341:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3699,"nodeType":"Block","src":"3476:159:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"3509:5:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}],"expression":{"id":3684,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"3490:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3521_$","typeString":"type(ShortString)"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3502:6:26","memberName":"unwrap","nodeType":"MemberAccess","src":"3490:18:26","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$3521_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3490:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3688,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"3519:18:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3490:47:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3697,"nodeType":"Block","src":"3592:37:26","statements":[{"expression":{"id":3695,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"3613:5:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":3683,"id":3696,"nodeType":"Return","src":"3606:12:26"}]},"id":3698,"nodeType":"IfStatement","src":"3486:143:26","trueBody":{"id":3694,"nodeType":"Block","src":"3539:47:26","statements":[{"expression":{"arguments":[{"id":3691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"3569:5:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}],"id":3690,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"3560:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3521_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3683,"id":3693,"nodeType":"Return","src":"3553:22:26"}]}}]},"documentation":{"id":3674,"nodeType":"StructuredDocumentation","src":"3242:120:26","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":3700,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3376:20:26","nodeType":"FunctionDefinition","parameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"value","nameLocation":"3409:5:26","nodeType":"VariableDeclaration","scope":3700,"src":"3397:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"},"typeName":{"id":3676,"nodeType":"UserDefinedTypeName","pathNode":{"id":3675,"name":"ShortString","nameLocations":["3397:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3521,"src":"3397:11:26"},"referencedDeclaration":3521,"src":"3397:11:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":3679,"mutability":"mutable","name":"store","nameLocation":"3431:5:26","nodeType":"VariableDeclaration","scope":3700,"src":"3416:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3678,"name":"string","nodeType":"ElementaryTypeName","src":"3416:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3396:41:26"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3700,"src":"3461:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3681,"name":"string","nodeType":"ElementaryTypeName","src":"3461:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3460:15:26"},"scope":3732,"src":"3367:268:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3730,"nodeType":"Block","src":"4108:175:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"4141:5:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}],"expression":{"id":3711,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"4122:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3521_$","typeString":"type(ShortString)"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4134:6:26","memberName":"unwrap","nodeType":"MemberAccess","src":"4122:18:26","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$3521_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4122:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3715,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"4151:18:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4122:47:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3728,"nodeType":"Block","src":"4226:51:26","statements":[{"expression":{"expression":{"arguments":[{"id":3724,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"4253:5:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":3723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4247:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3722,"name":"bytes","nodeType":"ElementaryTypeName","src":"4247:5:26","typeDescriptions":{}}},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4247:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4260:6:26","memberName":"length","nodeType":"MemberAccess","src":"4247:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3710,"id":3727,"nodeType":"Return","src":"4240:26:26"}]},"id":3729,"nodeType":"IfStatement","src":"4118:159:26","trueBody":{"id":3721,"nodeType":"Block","src":"4171:49:26","statements":[{"expression":{"arguments":[{"id":3718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"4203:5:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}],"id":3717,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"4192:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3521_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3710,"id":3720,"nodeType":"Return","src":"4185:24:26"}]}}]},"documentation":{"id":3701,"nodeType":"StructuredDocumentation","src":"3641:357:26","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":3731,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4012:22:26","nodeType":"FunctionDefinition","parameters":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"value","nameLocation":"4047:5:26","nodeType":"VariableDeclaration","scope":3731,"src":"4035:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"},"typeName":{"id":3703,"nodeType":"UserDefinedTypeName","pathNode":{"id":3702,"name":"ShortString","nameLocations":["4035:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3521,"src":"4035:11:26"},"referencedDeclaration":3521,"src":"4035:11:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":3706,"mutability":"mutable","name":"store","nameLocation":"4069:5:26","nodeType":"VariableDeclaration","scope":3731,"src":"4054:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3705,"name":"string","nodeType":"ElementaryTypeName","src":"4054:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4034:41:26"},"returnParameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3731,"src":"4099:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4098:9:26"},"scope":3732,"src":"4003:280:26","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3733,"src":"1235:3050:26","usedErrors":[3529,3531],"usedEvents":[]}],"src":"106:4180:26"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"id":27,"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3842]},"id":3843,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3734,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3735,"nodeType":"StructuredDocumentation","src":"218:1201:27","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":3842,"linearizedBaseContracts":[3842],"name":"StorageSlot","nameLocation":"1428:11:27","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3738,"members":[{"constant":false,"id":3737,"mutability":"mutable","name":"value","nameLocation":"1483:5:27","nodeType":"VariableDeclaration","scope":3738,"src":"1475:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3736,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:27","nodeType":"StructDefinition","scope":3842,"src":"1446:49:27","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3741,"members":[{"constant":false,"id":3740,"mutability":"mutable","name":"value","nameLocation":"1535:5:27","nodeType":"VariableDeclaration","scope":3741,"src":"1530:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3739,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:27","nodeType":"StructDefinition","scope":3842,"src":"1501:46:27","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3744,"members":[{"constant":false,"id":3743,"mutability":"mutable","name":"value","nameLocation":"1590:5:27","nodeType":"VariableDeclaration","scope":3744,"src":"1582:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:27","nodeType":"StructDefinition","scope":3842,"src":"1553:49:27","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3747,"members":[{"constant":false,"id":3746,"mutability":"mutable","name":"value","nameLocation":"1645:5:27","nodeType":"VariableDeclaration","scope":3747,"src":"1637:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3745,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:27","nodeType":"StructDefinition","scope":3842,"src":"1608:49:27","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3750,"members":[{"constant":false,"id":3749,"mutability":"mutable","name":"value","nameLocation":"1698:5:27","nodeType":"VariableDeclaration","scope":3750,"src":"1691:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3748,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:27","nodeType":"StructDefinition","scope":3842,"src":"1663:47:27","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3753,"members":[{"constant":false,"id":3752,"mutability":"mutable","name":"value","nameLocation":"1749:5:27","nodeType":"VariableDeclaration","scope":3753,"src":"1743:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3751,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:27","nodeType":"StructDefinition","scope":3842,"src":"1716:45:27","visibility":"public"},{"body":{"id":3763,"nodeType":"Block","src":"1943:106:27","statements":[{"AST":{"nativeSrc":"2005:38:27","nodeType":"YulBlock","src":"2005:38:27","statements":[{"nativeSrc":"2019:14:27","nodeType":"YulAssignment","src":"2019:14:27","value":{"name":"slot","nativeSrc":"2029:4:27","nodeType":"YulIdentifier","src":"2029:4:27"},"variableNames":[{"name":"r.slot","nativeSrc":"2019:6:27","nodeType":"YulIdentifier","src":"2019:6:27"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3760,"isOffset":false,"isSlot":true,"src":"2019:6:27","suffix":"slot","valueSize":1},{"declaration":3756,"isOffset":false,"isSlot":false,"src":"2029:4:27","valueSize":1}],"id":3762,"nodeType":"InlineAssembly","src":"1996:47:27"}]},"documentation":{"id":3754,"nodeType":"StructuredDocumentation","src":"1767:87:27","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3764,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:27","nodeType":"FunctionDefinition","parameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"slot","nameLocation":"1891:4:27","nodeType":"VariableDeclaration","scope":3764,"src":"1883:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:27"},"returnParameters":{"id":3761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3760,"mutability":"mutable","name":"r","nameLocation":"1940:1:27","nodeType":"VariableDeclaration","scope":3764,"src":"1920:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3738_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3759,"nodeType":"UserDefinedTypeName","pathNode":{"id":3758,"name":"AddressSlot","nameLocations":["1920:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":3738,"src":"1920:11:27"},"referencedDeclaration":3738,"src":"1920:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3738_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:27"},"scope":3842,"src":"1859:190:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3774,"nodeType":"Block","src":"2231:106:27","statements":[{"AST":{"nativeSrc":"2293:38:27","nodeType":"YulBlock","src":"2293:38:27","statements":[{"nativeSrc":"2307:14:27","nodeType":"YulAssignment","src":"2307:14:27","value":{"name":"slot","nativeSrc":"2317:4:27","nodeType":"YulIdentifier","src":"2317:4:27"},"variableNames":[{"name":"r.slot","nativeSrc":"2307:6:27","nodeType":"YulIdentifier","src":"2307:6:27"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3771,"isOffset":false,"isSlot":true,"src":"2307:6:27","suffix":"slot","valueSize":1},{"declaration":3767,"isOffset":false,"isSlot":false,"src":"2317:4:27","valueSize":1}],"id":3773,"nodeType":"InlineAssembly","src":"2284:47:27"}]},"documentation":{"id":3765,"nodeType":"StructuredDocumentation","src":"2055:87:27","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":3775,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:27","nodeType":"FunctionDefinition","parameters":{"id":3768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3767,"mutability":"mutable","name":"slot","nameLocation":"2179:4:27","nodeType":"VariableDeclaration","scope":3775,"src":"2171:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:27"},"returnParameters":{"id":3772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3771,"mutability":"mutable","name":"r","nameLocation":"2228:1:27","nodeType":"VariableDeclaration","scope":3775,"src":"2208:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3741_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3770,"nodeType":"UserDefinedTypeName","pathNode":{"id":3769,"name":"BooleanSlot","nameLocations":["2208:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":3741,"src":"2208:11:27"},"referencedDeclaration":3741,"src":"2208:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3741_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:27"},"scope":3842,"src":"2147:190:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3785,"nodeType":"Block","src":"2519:106:27","statements":[{"AST":{"nativeSrc":"2581:38:27","nodeType":"YulBlock","src":"2581:38:27","statements":[{"nativeSrc":"2595:14:27","nodeType":"YulAssignment","src":"2595:14:27","value":{"name":"slot","nativeSrc":"2605:4:27","nodeType":"YulIdentifier","src":"2605:4:27"},"variableNames":[{"name":"r.slot","nativeSrc":"2595:6:27","nodeType":"YulIdentifier","src":"2595:6:27"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3782,"isOffset":false,"isSlot":true,"src":"2595:6:27","suffix":"slot","valueSize":1},{"declaration":3778,"isOffset":false,"isSlot":false,"src":"2605:4:27","valueSize":1}],"id":3784,"nodeType":"InlineAssembly","src":"2572:47:27"}]},"documentation":{"id":3776,"nodeType":"StructuredDocumentation","src":"2343:87:27","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":3786,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:27","nodeType":"FunctionDefinition","parameters":{"id":3779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3778,"mutability":"mutable","name":"slot","nameLocation":"2467:4:27","nodeType":"VariableDeclaration","scope":3786,"src":"2459:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:27"},"returnParameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3782,"mutability":"mutable","name":"r","nameLocation":"2516:1:27","nodeType":"VariableDeclaration","scope":3786,"src":"2496:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3744_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3781,"nodeType":"UserDefinedTypeName","pathNode":{"id":3780,"name":"Bytes32Slot","nameLocations":["2496:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":3744,"src":"2496:11:27"},"referencedDeclaration":3744,"src":"2496:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3744_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:27"},"scope":3842,"src":"2435:190:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3796,"nodeType":"Block","src":"2807:106:27","statements":[{"AST":{"nativeSrc":"2869:38:27","nodeType":"YulBlock","src":"2869:38:27","statements":[{"nativeSrc":"2883:14:27","nodeType":"YulAssignment","src":"2883:14:27","value":{"name":"slot","nativeSrc":"2893:4:27","nodeType":"YulIdentifier","src":"2893:4:27"},"variableNames":[{"name":"r.slot","nativeSrc":"2883:6:27","nodeType":"YulIdentifier","src":"2883:6:27"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3793,"isOffset":false,"isSlot":true,"src":"2883:6:27","suffix":"slot","valueSize":1},{"declaration":3789,"isOffset":false,"isSlot":false,"src":"2893:4:27","valueSize":1}],"id":3795,"nodeType":"InlineAssembly","src":"2860:47:27"}]},"documentation":{"id":3787,"nodeType":"StructuredDocumentation","src":"2631:87:27","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":3797,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:27","nodeType":"FunctionDefinition","parameters":{"id":3790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"slot","nameLocation":"2755:4:27","nodeType":"VariableDeclaration","scope":3797,"src":"2747:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:27"},"returnParameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3793,"mutability":"mutable","name":"r","nameLocation":"2804:1:27","nodeType":"VariableDeclaration","scope":3797,"src":"2784:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3747_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3792,"nodeType":"UserDefinedTypeName","pathNode":{"id":3791,"name":"Uint256Slot","nameLocations":["2784:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":3747,"src":"2784:11:27"},"referencedDeclaration":3747,"src":"2784:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3747_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:27"},"scope":3842,"src":"2723:190:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3807,"nodeType":"Block","src":"3092:106:27","statements":[{"AST":{"nativeSrc":"3154:38:27","nodeType":"YulBlock","src":"3154:38:27","statements":[{"nativeSrc":"3168:14:27","nodeType":"YulAssignment","src":"3168:14:27","value":{"name":"slot","nativeSrc":"3178:4:27","nodeType":"YulIdentifier","src":"3178:4:27"},"variableNames":[{"name":"r.slot","nativeSrc":"3168:6:27","nodeType":"YulIdentifier","src":"3168:6:27"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3804,"isOffset":false,"isSlot":true,"src":"3168:6:27","suffix":"slot","valueSize":1},{"declaration":3800,"isOffset":false,"isSlot":false,"src":"3178:4:27","valueSize":1}],"id":3806,"nodeType":"InlineAssembly","src":"3145:47:27"}]},"documentation":{"id":3798,"nodeType":"StructuredDocumentation","src":"2919:86:27","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":3808,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:27","nodeType":"FunctionDefinition","parameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"slot","nameLocation":"3041:4:27","nodeType":"VariableDeclaration","scope":3808,"src":"3033:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:27"},"returnParameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3804,"mutability":"mutable","name":"r","nameLocation":"3089:1:27","nodeType":"VariableDeclaration","scope":3808,"src":"3070:20:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3750_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3803,"nodeType":"UserDefinedTypeName","pathNode":{"id":3802,"name":"StringSlot","nameLocations":["3070:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":3750,"src":"3070:10:27"},"referencedDeclaration":3750,"src":"3070:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3750_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:27"},"scope":3842,"src":"3010:188:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3818,"nodeType":"Block","src":"3400:112:27","statements":[{"AST":{"nativeSrc":"3462:44:27","nodeType":"YulBlock","src":"3462:44:27","statements":[{"nativeSrc":"3476:20:27","nodeType":"YulAssignment","src":"3476:20:27","value":{"name":"store.slot","nativeSrc":"3486:10:27","nodeType":"YulIdentifier","src":"3486:10:27"},"variableNames":[{"name":"r.slot","nativeSrc":"3476:6:27","nodeType":"YulIdentifier","src":"3476:6:27"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3815,"isOffset":false,"isSlot":true,"src":"3476:6:27","suffix":"slot","valueSize":1},{"declaration":3811,"isOffset":false,"isSlot":true,"src":"3486:10:27","suffix":"slot","valueSize":1}],"id":3817,"nodeType":"InlineAssembly","src":"3453:53:27"}]},"documentation":{"id":3809,"nodeType":"StructuredDocumentation","src":"3204:101:27","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3819,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:27","nodeType":"FunctionDefinition","parameters":{"id":3812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3811,"mutability":"mutable","name":"store","nameLocation":"3348:5:27","nodeType":"VariableDeclaration","scope":3819,"src":"3333:20:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3810,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:27"},"returnParameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3815,"mutability":"mutable","name":"r","nameLocation":"3397:1:27","nodeType":"VariableDeclaration","scope":3819,"src":"3378:20:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3750_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3814,"nodeType":"UserDefinedTypeName","pathNode":{"id":3813,"name":"StringSlot","nameLocations":["3378:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":3750,"src":"3378:10:27"},"referencedDeclaration":3750,"src":"3378:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3750_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:27"},"scope":3842,"src":"3310:202:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3829,"nodeType":"Block","src":"3688:106:27","statements":[{"AST":{"nativeSrc":"3750:38:27","nodeType":"YulBlock","src":"3750:38:27","statements":[{"nativeSrc":"3764:14:27","nodeType":"YulAssignment","src":"3764:14:27","value":{"name":"slot","nativeSrc":"3774:4:27","nodeType":"YulIdentifier","src":"3774:4:27"},"variableNames":[{"name":"r.slot","nativeSrc":"3764:6:27","nodeType":"YulIdentifier","src":"3764:6:27"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3826,"isOffset":false,"isSlot":true,"src":"3764:6:27","suffix":"slot","valueSize":1},{"declaration":3822,"isOffset":false,"isSlot":false,"src":"3774:4:27","valueSize":1}],"id":3828,"nodeType":"InlineAssembly","src":"3741:47:27"}]},"documentation":{"id":3820,"nodeType":"StructuredDocumentation","src":"3518:85:27","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":3830,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:27","nodeType":"FunctionDefinition","parameters":{"id":3823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3822,"mutability":"mutable","name":"slot","nameLocation":"3638:4:27","nodeType":"VariableDeclaration","scope":3830,"src":"3630:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:27"},"returnParameters":{"id":3827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"r","nameLocation":"3685:1:27","nodeType":"VariableDeclaration","scope":3830,"src":"3667:19:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3753_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3825,"nodeType":"UserDefinedTypeName","pathNode":{"id":3824,"name":"BytesSlot","nameLocations":["3667:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":3753,"src":"3667:9:27"},"referencedDeclaration":3753,"src":"3667:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3753_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:27"},"scope":3842,"src":"3608:186:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3840,"nodeType":"Block","src":"3991:112:27","statements":[{"AST":{"nativeSrc":"4053:44:27","nodeType":"YulBlock","src":"4053:44:27","statements":[{"nativeSrc":"4067:20:27","nodeType":"YulAssignment","src":"4067:20:27","value":{"name":"store.slot","nativeSrc":"4077:10:27","nodeType":"YulIdentifier","src":"4077:10:27"},"variableNames":[{"name":"r.slot","nativeSrc":"4067:6:27","nodeType":"YulIdentifier","src":"4067:6:27"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3837,"isOffset":false,"isSlot":true,"src":"4067:6:27","suffix":"slot","valueSize":1},{"declaration":3833,"isOffset":false,"isSlot":true,"src":"4077:10:27","suffix":"slot","valueSize":1}],"id":3839,"nodeType":"InlineAssembly","src":"4044:53:27"}]},"documentation":{"id":3831,"nodeType":"StructuredDocumentation","src":"3800:99:27","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3841,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:27","nodeType":"FunctionDefinition","parameters":{"id":3834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"store","nameLocation":"3940:5:27","nodeType":"VariableDeclaration","scope":3841,"src":"3926:19:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3832,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:27"},"returnParameters":{"id":3838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"r","nameLocation":"3988:1:27","nodeType":"VariableDeclaration","scope":3841,"src":"3970:19:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3753_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3836,"nodeType":"UserDefinedTypeName","pathNode":{"id":3835,"name":"BytesSlot","nameLocations":["3970:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":3753,"src":"3970:9:27"},"referencedDeclaration":3753,"src":"3970:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3753_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:27"},"scope":3842,"src":"3904:199:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3843,"src":"1420:2685:27","usedErrors":[],"usedEvents":[]}],"src":"193:3913:27"}},"@openzeppelin/contracts/utils/Strings.sol":{"id":28,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5543],"SignedMath":[5648],"Strings":[4071]},"id":4072,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3844,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:28"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3845,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":5544,"src":"126:25:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3846,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":5649,"src":"152:31:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3847,"nodeType":"StructuredDocumentation","src":"185:34:28","text":" @dev String operations."},"fullyImplemented":true,"id":4071,"linearizedBaseContracts":[4071],"name":"Strings","nameLocation":"228:7:28","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3850,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:28","nodeType":"VariableDeclaration","scope":4071,"src":"242:54:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3848,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:28","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3853,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:28","nodeType":"VariableDeclaration","scope":4071,"src":"302:43:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3851,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:28","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":3900,"nodeType":"Block","src":"518:625:28","statements":[{"id":3899,"nodeType":"UncheckedBlock","src":"528:609:28","statements":[{"assignments":[3862],"declarations":[{"constant":false,"id":3862,"mutability":"mutable","name":"length","nameLocation":"560:6:28","nodeType":"VariableDeclaration","scope":3899,"src":"552:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3861,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3869,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"580:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3863,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"569:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5543_$","typeString":"type(library Math)"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:28","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5380,"src":"569:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:28"},{"assignments":[3871],"declarations":[{"constant":false,"id":3871,"mutability":"mutable","name":"buffer","nameLocation":"618:6:28","nodeType":"VariableDeclaration","scope":3899,"src":"604:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3870,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3876,"initialValue":{"arguments":[{"id":3874,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"638:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3872,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:28"},{"assignments":[3878],"declarations":[{"constant":false,"id":3878,"mutability":"mutable","name":"ptr","nameLocation":"667:3:28","nodeType":"VariableDeclaration","scope":3899,"src":"659:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3877,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3879,"nodeType":"VariableDeclarationStatement","src":"659:11:28"},{"AST":{"nativeSrc":"740:67:28","nodeType":"YulBlock","src":"740:67:28","statements":[{"nativeSrc":"758:35:28","nodeType":"YulAssignment","src":"758:35:28","value":{"arguments":[{"name":"buffer","nativeSrc":"769:6:28","nodeType":"YulIdentifier","src":"769:6:28"},{"arguments":[{"kind":"number","nativeSrc":"781:2:28","nodeType":"YulLiteral","src":"781:2:28","type":"","value":"32"},{"name":"length","nativeSrc":"785:6:28","nodeType":"YulIdentifier","src":"785:6:28"}],"functionName":{"name":"add","nativeSrc":"777:3:28","nodeType":"YulIdentifier","src":"777:3:28"},"nativeSrc":"777:15:28","nodeType":"YulFunctionCall","src":"777:15:28"}],"functionName":{"name":"add","nativeSrc":"765:3:28","nodeType":"YulIdentifier","src":"765:3:28"},"nativeSrc":"765:28:28","nodeType":"YulFunctionCall","src":"765:28:28"},"variableNames":[{"name":"ptr","nativeSrc":"758:3:28","nodeType":"YulIdentifier","src":"758:3:28"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3871,"isOffset":false,"isSlot":false,"src":"769:6:28","valueSize":1},{"declaration":3862,"isOffset":false,"isSlot":false,"src":"785:6:28","valueSize":1},{"declaration":3878,"isOffset":false,"isSlot":false,"src":"758:3:28","valueSize":1}],"id":3880,"nodeType":"InlineAssembly","src":"731:76:28"},{"body":{"id":3895,"nodeType":"Block","src":"833:267:28","statements":[{"expression":{"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:28","subExpression":{"id":3882,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"851:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3884,"nodeType":"ExpressionStatement","src":"851:5:28"},{"AST":{"nativeSrc":"934:84:28","nodeType":"YulBlock","src":"934:84:28","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"964:3:28","nodeType":"YulIdentifier","src":"964:3:28"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"978:5:28","nodeType":"YulIdentifier","src":"978:5:28"},{"kind":"number","nativeSrc":"985:2:28","nodeType":"YulLiteral","src":"985:2:28","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"974:3:28","nodeType":"YulIdentifier","src":"974:3:28"},"nativeSrc":"974:14:28","nodeType":"YulFunctionCall","src":"974:14:28"},{"name":"_SYMBOLS","nativeSrc":"990:8:28","nodeType":"YulIdentifier","src":"990:8:28"}],"functionName":{"name":"byte","nativeSrc":"969:4:28","nodeType":"YulIdentifier","src":"969:4:28"},"nativeSrc":"969:30:28","nodeType":"YulFunctionCall","src":"969:30:28"}],"functionName":{"name":"mstore8","nativeSrc":"956:7:28","nodeType":"YulIdentifier","src":"956:7:28"},"nativeSrc":"956:44:28","nodeType":"YulFunctionCall","src":"956:44:28"},"nativeSrc":"956:44:28","nodeType":"YulExpressionStatement","src":"956:44:28"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3850,"isOffset":false,"isSlot":false,"src":"990:8:28","valueSize":1},{"declaration":3878,"isOffset":false,"isSlot":false,"src":"964:3:28","valueSize":1},{"declaration":3856,"isOffset":false,"isSlot":false,"src":"978:5:28","valueSize":1}],"id":3885,"nodeType":"InlineAssembly","src":"925:93:28"},{"expression":{"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"1035:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3889,"nodeType":"ExpressionStatement","src":"1035:11:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"1068:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3894,"nodeType":"IfStatement","src":"1064:21:28","trueBody":{"id":3893,"nodeType":"Break","src":"1080:5:28"}}]},"condition":{"hexValue":"74727565","id":3881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3896,"nodeType":"WhileStatement","src":"820:280:28"},{"expression":{"id":3897,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"1120:6:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3860,"id":3898,"nodeType":"Return","src":"1113:13:28"}]}]},"documentation":{"id":3854,"nodeType":"StructuredDocumentation","src":"352:90:28","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3901,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:28","nodeType":"FunctionDefinition","parameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"value","nameLocation":"473:5:28","nodeType":"VariableDeclaration","scope":3901,"src":"465:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:28"},"returnParameters":{"id":3860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3901,"src":"503:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3858,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:28"},"scope":4071,"src":"447:696:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3928,"nodeType":"Block","src":"1313:103:28","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"1354:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:28","trueExpression":{"hexValue":"2d","id":3916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"1400:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3920,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"1385:10:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5648_$","typeString":"type(library SignedMath)"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:28","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5647,"src":"1385:14:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3919,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[3901,3929],"referencedDeclaration":3901,"src":"1376:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3911,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3909,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:28","typeDescriptions":{}}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3908,"id":3927,"nodeType":"Return","src":"1323:86:28"}]},"documentation":{"id":3902,"nodeType":"StructuredDocumentation","src":"1149:89:28","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3929,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:28","nodeType":"FunctionDefinition","parameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"value","nameLocation":"1268:5:28","nodeType":"VariableDeclaration","scope":3929,"src":"1261:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3903,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:28"},"returnParameters":{"id":3908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3929,"src":"1298:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3906,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:28"},"scope":4071,"src":"1243:173:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3948,"nodeType":"Block","src":"1595:100:28","statements":[{"id":3947,"nodeType":"UncheckedBlock","src":"1605:84:28","statements":[{"expression":{"arguments":[{"id":3938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"1648:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"1667:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3939,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"1655:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5543_$","typeString":"type(library Math)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:28","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5503,"src":"1655:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3937,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3949,4025,4045],"referencedDeclaration":4025,"src":"1636:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3936,"id":3946,"nodeType":"Return","src":"1629:49:28"}]}]},"documentation":{"id":3930,"nodeType":"StructuredDocumentation","src":"1422:94:28","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3949,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:28","nodeType":"FunctionDefinition","parameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3932,"mutability":"mutable","name":"value","nameLocation":"1550:5:28","nodeType":"VariableDeclaration","scope":3949,"src":"1542:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3931,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:28"},"returnParameters":{"id":3936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3949,"src":"1580:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3934,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:28"},"scope":4071,"src":"1521:174:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4024,"nodeType":"Block","src":"1908:347:28","statements":[{"assignments":[3960],"declarations":[{"constant":false,"id":3960,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:28","nodeType":"VariableDeclaration","scope":4024,"src":"1918:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3959,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3969,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3964,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"1954:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3961,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:28"},{"expression":{"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3970,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"1975:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3972,"indexExpression":{"hexValue":"30","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3975,"nodeType":"ExpressionStatement","src":"1975:15:28"},{"expression":{"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3976,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2000:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3978,"indexExpression":{"hexValue":"31","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3981,"nodeType":"ExpressionStatement","src":"2000:15:28"},{"body":{"id":4010,"nodeType":"Block","src":"2070:83:28","statements":[{"expression":{"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3996,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2084:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3998,"indexExpression":{"id":3997,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"2091:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3999,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"2096:8:28","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4003,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"2105:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:28","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4005,"nodeType":"ExpressionStatement","src":"2084:33:28"},{"expression":{"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"2131:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4009,"nodeType":"ExpressionStatement","src":"2131:11:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3990,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"2058:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4011,"initializationExpression":{"assignments":[3983],"declarations":[{"constant":false,"id":3983,"mutability":"mutable","name":"i","nameLocation":"2038:1:28","nodeType":"VariableDeclaration","scope":4011,"src":"2030:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3982,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3989,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3985,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"2046:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:28"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:28","subExpression":{"id":3993,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"2067:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3995,"nodeType":"ExpressionStatement","src":"2065:3:28"},"nodeType":"ForStatement","src":"2025:128:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"2170:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":4012,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4018,"nodeType":"ExpressionStatement","src":"2162:55:28"},{"expression":{"arguments":[{"id":4021,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2241:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4019,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:28","typeDescriptions":{}}},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3958,"id":4023,"nodeType":"Return","src":"2227:21:28"}]},"documentation":{"id":3950,"nodeType":"StructuredDocumentation","src":"1701:112:28","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4025,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:28","nodeType":"FunctionDefinition","parameters":{"id":3955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3952,"mutability":"mutable","name":"value","nameLocation":"1847:5:28","nodeType":"VariableDeclaration","scope":4025,"src":"1839:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3951,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3954,"mutability":"mutable","name":"length","nameLocation":"1862:6:28","nodeType":"VariableDeclaration","scope":4025,"src":"1854:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:28"},"returnParameters":{"id":3958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4025,"src":"1893:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3956,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:28"},"scope":4071,"src":"1818:437:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4044,"nodeType":"Block","src":"2480:76:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4038,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"2525:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4036,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:28","typeDescriptions":{}}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:28","typeDescriptions":{}}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4041,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"2533:15:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4033,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3949,4025,4045],"referencedDeclaration":4025,"src":"2497:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4032,"id":4043,"nodeType":"Return","src":"2490:59:28"}]},"documentation":{"id":4026,"nodeType":"StructuredDocumentation","src":"2261:141:28","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":4045,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:28","nodeType":"FunctionDefinition","parameters":{"id":4029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4028,"mutability":"mutable","name":"addr","nameLocation":"2436:4:28","nodeType":"VariableDeclaration","scope":4045,"src":"2428:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4027,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:28"},"returnParameters":{"id":4032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4045,"src":"2465:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4030,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:28"},"scope":4071,"src":"2407:149:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4069,"nodeType":"Block","src":"2711:66:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4058,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"2744:1:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4056,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:28","typeDescriptions":{}}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4055,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4064,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"2767:1:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4062,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:28","typeDescriptions":{}}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4061,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4054,"id":4068,"nodeType":"Return","src":"2721:49:28"}]},"documentation":{"id":4046,"nodeType":"StructuredDocumentation","src":"2562:66:28","text":" @dev Returns true if the two strings are equal."},"id":4070,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:28","nodeType":"FunctionDefinition","parameters":{"id":4051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4048,"mutability":"mutable","name":"a","nameLocation":"2662:1:28","nodeType":"VariableDeclaration","scope":4070,"src":"2648:15:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4047,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4050,"mutability":"mutable","name":"b","nameLocation":"2679:1:28","nodeType":"VariableDeclaration","scope":4070,"src":"2665:15:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4049,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:28"},"returnParameters":{"id":4054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4070,"src":"2705:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4052,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:28"},"scope":4071,"src":"2633:144:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4072,"src":"220:2559:28","usedErrors":[],"usedEvents":[]}],"src":"101:2679:28"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"id":29,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4437],"Math":[5543],"SignedMath":[5648],"Strings":[4071]},"id":4438,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4073,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:29"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4074,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4438,"sourceUnit":4072,"src":"137:24:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":4075,"nodeType":"StructuredDocumentation","src":"163:205:29","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4437,"linearizedBaseContracts":[4437],"name":"ECDSA","nameLocation":"377:5:29","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":4081,"members":[{"id":4076,"name":"NoError","nameLocation":"417:7:29","nodeType":"EnumValue","src":"417:7:29"},{"id":4077,"name":"InvalidSignature","nameLocation":"434:16:29","nodeType":"EnumValue","src":"434:16:29"},{"id":4078,"name":"InvalidSignatureLength","nameLocation":"460:22:29","nodeType":"EnumValue","src":"460:22:29"},{"id":4079,"name":"InvalidSignatureS","nameLocation":"492:17:29","nodeType":"EnumValue","src":"492:17:29"},{"id":4080,"name":"InvalidSignatureV","nameLocation":"519:17:29","nodeType":"EnumValue","src":"519:17:29"}],"name":"RecoverError","nameLocation":"394:12:29","nodeType":"EnumDefinition","src":"389:175:29"},{"body":{"id":4124,"nodeType":"Block","src":"624:457:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4087,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"638:5:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4088,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"647:12:29","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4081_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:29","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4076,"src":"647:20:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4093,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"734:5:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4094,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"743:12:29","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4081_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:29","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4077,"src":"743:29:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4102,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"843:5:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4103,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"852:12:29","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4081_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:29","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4078,"src":"852:35:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4111,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"965:5:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4112,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"974:12:29","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4081_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:29","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4079,"src":"974:30:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4120,"nodeType":"IfStatement","src":"961:114:29","trueBody":{"id":4119,"nodeType":"Block","src":"1006:69:29","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":4116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":4115,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:29","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4118,"nodeType":"ExpressionStatement","src":"1020:44:29"}]}},"id":4121,"nodeType":"IfStatement","src":"839:236:29","trueBody":{"id":4110,"nodeType":"Block","src":"889:66:29","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":4107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":4106,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:29","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4109,"nodeType":"ExpressionStatement","src":"903:41:29"}]}},"id":4122,"nodeType":"IfStatement","src":"730:345:29","trueBody":{"id":4101,"nodeType":"Block","src":"774:59:29","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":4097,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:29","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4100,"nodeType":"ExpressionStatement","src":"788:34:29"}]}},"id":4123,"nodeType":"IfStatement","src":"634:441:29","trueBody":{"id":4092,"nodeType":"Block","src":"669:55:29","statements":[{"functionReturnParameters":4086,"id":4091,"nodeType":"Return","src":"683:7:29"}]}}]},"id":4125,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:29","nodeType":"FunctionDefinition","parameters":{"id":4085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4084,"mutability":"mutable","name":"error","nameLocation":"604:5:29","nodeType":"VariableDeclaration","scope":4125,"src":"591:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4083,"nodeType":"UserDefinedTypeName","pathNode":{"id":4082,"name":"RecoverError","nameLocations":["591:12:29"],"nodeType":"IdentifierPath","referencedDeclaration":4081,"src":"591:12:29"},"referencedDeclaration":4081,"src":"591:12:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:29"},"returnParameters":{"id":4086,"nodeType":"ParameterList","parameters":[],"src":"624:0:29"},"scope":4437,"src":"570:511:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4170,"nodeType":"Block","src":"2249:626:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4138,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"2263:9:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:29","memberName":"length","nodeType":"MemberAccess","src":"2263:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":4140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:29","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4168,"nodeType":"Block","src":"2788:81:29","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4160,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:29","typeDescriptions":{}}},"id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4164,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"2822:12:29","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4081_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:29","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4078,"src":"2822:35:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}}],"id":4166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4081_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4137,"id":4167,"nodeType":"Return","src":"2802:56:29"}]},"id":4169,"nodeType":"IfStatement","src":"2259:610:29","trueBody":{"id":4159,"nodeType":"Block","src":"2287:495:29","statements":[{"assignments":[4143],"declarations":[{"constant":false,"id":4143,"mutability":"mutable","name":"r","nameLocation":"2309:1:29","nodeType":"VariableDeclaration","scope":4159,"src":"2301:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4144,"nodeType":"VariableDeclarationStatement","src":"2301:9:29"},{"assignments":[4146],"declarations":[{"constant":false,"id":4146,"mutability":"mutable","name":"s","nameLocation":"2332:1:29","nodeType":"VariableDeclaration","scope":4159,"src":"2324:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4147,"nodeType":"VariableDeclarationStatement","src":"2324:9:29"},{"assignments":[4149],"declarations":[{"constant":false,"id":4149,"mutability":"mutable","name":"v","nameLocation":"2353:1:29","nodeType":"VariableDeclaration","scope":4159,"src":"2347:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4148,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4150,"nodeType":"VariableDeclarationStatement","src":"2347:7:29"},{"AST":{"nativeSrc":"2555:171:29","nodeType":"YulBlock","src":"2555:171:29","statements":[{"nativeSrc":"2573:32:29","nodeType":"YulAssignment","src":"2573:32:29","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2588:9:29","nodeType":"YulIdentifier","src":"2588:9:29"},{"kind":"number","nativeSrc":"2599:4:29","nodeType":"YulLiteral","src":"2599:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2584:3:29","nodeType":"YulIdentifier","src":"2584:3:29"},"nativeSrc":"2584:20:29","nodeType":"YulFunctionCall","src":"2584:20:29"}],"functionName":{"name":"mload","nativeSrc":"2578:5:29","nodeType":"YulIdentifier","src":"2578:5:29"},"nativeSrc":"2578:27:29","nodeType":"YulFunctionCall","src":"2578:27:29"},"variableNames":[{"name":"r","nativeSrc":"2573:1:29","nodeType":"YulIdentifier","src":"2573:1:29"}]},{"nativeSrc":"2622:32:29","nodeType":"YulAssignment","src":"2622:32:29","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2637:9:29","nodeType":"YulIdentifier","src":"2637:9:29"},{"kind":"number","nativeSrc":"2648:4:29","nodeType":"YulLiteral","src":"2648:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2633:3:29","nodeType":"YulIdentifier","src":"2633:3:29"},"nativeSrc":"2633:20:29","nodeType":"YulFunctionCall","src":"2633:20:29"}],"functionName":{"name":"mload","nativeSrc":"2627:5:29","nodeType":"YulIdentifier","src":"2627:5:29"},"nativeSrc":"2627:27:29","nodeType":"YulFunctionCall","src":"2627:27:29"},"variableNames":[{"name":"s","nativeSrc":"2622:1:29","nodeType":"YulIdentifier","src":"2622:1:29"}]},{"nativeSrc":"2671:41:29","nodeType":"YulAssignment","src":"2671:41:29","value":{"arguments":[{"kind":"number","nativeSrc":"2681:1:29","nodeType":"YulLiteral","src":"2681:1:29","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2694:9:29","nodeType":"YulIdentifier","src":"2694:9:29"},{"kind":"number","nativeSrc":"2705:4:29","nodeType":"YulLiteral","src":"2705:4:29","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2690:3:29","nodeType":"YulIdentifier","src":"2690:3:29"},"nativeSrc":"2690:20:29","nodeType":"YulFunctionCall","src":"2690:20:29"}],"functionName":{"name":"mload","nativeSrc":"2684:5:29","nodeType":"YulIdentifier","src":"2684:5:29"},"nativeSrc":"2684:27:29","nodeType":"YulFunctionCall","src":"2684:27:29"}],"functionName":{"name":"byte","nativeSrc":"2676:4:29","nodeType":"YulIdentifier","src":"2676:4:29"},"nativeSrc":"2676:36:29","nodeType":"YulFunctionCall","src":"2676:36:29"},"variableNames":[{"name":"v","nativeSrc":"2671:1:29","nodeType":"YulIdentifier","src":"2671:1:29"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4143,"isOffset":false,"isSlot":false,"src":"2573:1:29","valueSize":1},{"declaration":4146,"isOffset":false,"isSlot":false,"src":"2622:1:29","valueSize":1},{"declaration":4130,"isOffset":false,"isSlot":false,"src":"2588:9:29","valueSize":1},{"declaration":4130,"isOffset":false,"isSlot":false,"src":"2637:9:29","valueSize":1},{"declaration":4130,"isOffset":false,"isSlot":false,"src":"2694:9:29","valueSize":1},{"declaration":4149,"isOffset":false,"isSlot":false,"src":"2671:1:29","valueSize":1}],"id":4151,"nodeType":"InlineAssembly","src":"2546:180:29"},{"expression":{"arguments":[{"id":4153,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"2757:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4154,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"2763:1:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4155,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"2766:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4156,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"2769:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4152,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4171,4245,4339],"referencedDeclaration":4339,"src":"2746:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4081_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4081_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4137,"id":4158,"nodeType":"Return","src":"2739:32:29"}]}}]},"documentation":{"id":4126,"nodeType":"StructuredDocumentation","src":"1087:1053:29","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":4171,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:29","nodeType":"FunctionDefinition","parameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4128,"mutability":"mutable","name":"hash","nameLocation":"2173:4:29","nodeType":"VariableDeclaration","scope":4171,"src":"2165:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4130,"mutability":"mutable","name":"signature","nameLocation":"2192:9:29","nodeType":"VariableDeclaration","scope":4171,"src":"2179:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4129,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:29"},"returnParameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4171,"src":"2226:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4132,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4171,"src":"2235:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4135,"nodeType":"UserDefinedTypeName","pathNode":{"id":4134,"name":"RecoverError","nameLocations":["2235:12:29"],"nodeType":"IdentifierPath","referencedDeclaration":4081,"src":"2235:12:29"},"referencedDeclaration":4081,"src":"2235:12:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:29"},"scope":4437,"src":"2145:730:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4197,"nodeType":"Block","src":"3748:140:29","statements":[{"assignments":[4182,4185],"declarations":[{"constant":false,"id":4182,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:29","nodeType":"VariableDeclaration","scope":4197,"src":"3759:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4181,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4185,"mutability":"mutable","name":"error","nameLocation":"3791:5:29","nodeType":"VariableDeclaration","scope":4197,"src":"3778:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4184,"nodeType":"UserDefinedTypeName","pathNode":{"id":4183,"name":"RecoverError","nameLocations":["3778:12:29"],"nodeType":"IdentifierPath","referencedDeclaration":4081,"src":"3778:12:29"},"referencedDeclaration":4081,"src":"3778:12:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":4190,"initialValue":{"arguments":[{"id":4187,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"3811:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4188,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"3817:9:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4186,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4171,4245,4339],"referencedDeclaration":4171,"src":"3800:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$4081_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4081_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:29"},{"expression":{"arguments":[{"id":4192,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"3849:5:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}],"id":4191,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"3837:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4081_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4194,"nodeType":"ExpressionStatement","src":"3837:18:29"},{"expression":{"id":4195,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"3872:9:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4180,"id":4196,"nodeType":"Return","src":"3865:16:29"}]},"documentation":{"id":4172,"nodeType":"StructuredDocumentation","src":"2881:775:29","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":4198,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:29","nodeType":"FunctionDefinition","parameters":{"id":4177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"hash","nameLocation":"3686:4:29","nodeType":"VariableDeclaration","scope":4198,"src":"3678:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4176,"mutability":"mutable","name":"signature","nameLocation":"3705:9:29","nodeType":"VariableDeclaration","scope":4198,"src":"3692:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4175,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:29"},"returnParameters":{"id":4180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4198,"src":"3739:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4178,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:29"},"scope":4437,"src":"3661:227:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4244,"nodeType":"Block","src":"4245:203:29","statements":[{"assignments":[4214],"declarations":[{"constant":false,"id":4214,"mutability":"mutable","name":"s","nameLocation":"4263:1:29","nodeType":"VariableDeclaration","scope":4244,"src":"4255:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4221,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4215,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"4267:2:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:29","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":4217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4216,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:29","typeDescriptions":{}}},"id":4219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:29"},{"assignments":[4223],"declarations":[{"constant":false,"id":4223,"mutability":"mutable","name":"v","nameLocation":"4363:1:29","nodeType":"VariableDeclaration","scope":4244,"src":"4357:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4222,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4236,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4228,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"4382:2:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4226,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:29","typeDescriptions":{}}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:29","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:29","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4224,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:29","typeDescriptions":{}}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:29"},{"expression":{"arguments":[{"id":4238,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"4427:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4239,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"4433:1:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4240,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"4436:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4241,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"4439:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4237,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4171,4245,4339],"referencedDeclaration":4339,"src":"4416:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4081_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4081_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4212,"id":4243,"nodeType":"Return","src":"4409:32:29"}]},"documentation":{"id":4199,"nodeType":"StructuredDocumentation","src":"3894:243:29","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":4245,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:29","nodeType":"FunctionDefinition","parameters":{"id":4206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4201,"mutability":"mutable","name":"hash","nameLocation":"4170:4:29","nodeType":"VariableDeclaration","scope":4245,"src":"4162:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4203,"mutability":"mutable","name":"r","nameLocation":"4184:1:29","nodeType":"VariableDeclaration","scope":4245,"src":"4176:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4205,"mutability":"mutable","name":"vs","nameLocation":"4195:2:29","nodeType":"VariableDeclaration","scope":4245,"src":"4187:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:29"},"returnParameters":{"id":4212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4245,"src":"4222:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4207,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4245,"src":"4231:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4210,"nodeType":"UserDefinedTypeName","pathNode":{"id":4209,"name":"RecoverError","nameLocations":["4231:12:29"],"nodeType":"IdentifierPath","referencedDeclaration":4081,"src":"4231:12:29"},"referencedDeclaration":4081,"src":"4231:12:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:29"},"scope":4437,"src":"4142:306:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4274,"nodeType":"Block","src":"4699:136:29","statements":[{"assignments":[4258,4261],"declarations":[{"constant":false,"id":4258,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:29","nodeType":"VariableDeclaration","scope":4274,"src":"4710:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4257,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4261,"mutability":"mutable","name":"error","nameLocation":"4742:5:29","nodeType":"VariableDeclaration","scope":4274,"src":"4729:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4260,"nodeType":"UserDefinedTypeName","pathNode":{"id":4259,"name":"RecoverError","nameLocations":["4729:12:29"],"nodeType":"IdentifierPath","referencedDeclaration":4081,"src":"4729:12:29"},"referencedDeclaration":4081,"src":"4729:12:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":4267,"initialValue":{"arguments":[{"id":4263,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"4762:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4264,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"4768:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4265,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"4771:2:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4262,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4171,4245,4339],"referencedDeclaration":4245,"src":"4751:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4081_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4081_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:29"},{"expression":{"arguments":[{"id":4269,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"4796:5:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}],"id":4268,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"4784:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4081_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4271,"nodeType":"ExpressionStatement","src":"4784:18:29"},{"expression":{"id":4272,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"4819:9:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4256,"id":4273,"nodeType":"Return","src":"4812:16:29"}]},"documentation":{"id":4246,"nodeType":"StructuredDocumentation","src":"4454:154:29","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":4275,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:29","nodeType":"FunctionDefinition","parameters":{"id":4253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"hash","nameLocation":"4638:4:29","nodeType":"VariableDeclaration","scope":4275,"src":"4630:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4247,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4250,"mutability":"mutable","name":"r","nameLocation":"4652:1:29","nodeType":"VariableDeclaration","scope":4275,"src":"4644:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4252,"mutability":"mutable","name":"vs","nameLocation":"4663:2:29","nodeType":"VariableDeclaration","scope":4275,"src":"4655:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:29"},"returnParameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4275,"src":"4690:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4254,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:29"},"scope":4437,"src":"4613:222:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4338,"nodeType":"Block","src":"5120:1345:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4294,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"6016:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4292,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:29","typeDescriptions":{}}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":4296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:29","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4307,"nodeType":"IfStatement","src":"6004:161:29","trueBody":{"id":4306,"nodeType":"Block","src":"6089:76:29","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4298,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:29","typeDescriptions":{}}},"id":4301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4302,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"6123:12:29","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4081_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:29","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4079,"src":"6123:30:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}}],"id":4304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4081_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4291,"id":4305,"nodeType":"Return","src":"6103:51:29"}]}},{"assignments":[4309],"declarations":[{"constant":false,"id":4309,"mutability":"mutable","name":"signer","nameLocation":"6267:6:29","nodeType":"VariableDeclaration","scope":4338,"src":"6259:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4308,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4316,"initialValue":{"arguments":[{"id":4311,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"6286:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4312,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"6292:1:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4313,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"6295:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4314,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"6298:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4310,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:29","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:29"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4317,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"6314:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4318,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:29","typeDescriptions":{}}},"id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4332,"nodeType":"IfStatement","src":"6310:101:29","trueBody":{"id":4331,"nodeType":"Block","src":"6336:75:29","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4323,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:29","typeDescriptions":{}}},"id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4327,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"6370:12:29","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4081_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:29","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4077,"src":"6370:29:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}}],"id":4329,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4081_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4291,"id":4330,"nodeType":"Return","src":"6350:50:29"}]}},{"expression":{"components":[{"id":4333,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"6429:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4334,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"6437:12:29","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4081_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:29","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4076,"src":"6437:20:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}}],"id":4336,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4081_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4291,"id":4337,"nodeType":"Return","src":"6421:37:29"}]},"documentation":{"id":4276,"nodeType":"StructuredDocumentation","src":"4841:163:29","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":4339,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:29","nodeType":"FunctionDefinition","parameters":{"id":4285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4278,"mutability":"mutable","name":"hash","nameLocation":"5037:4:29","nodeType":"VariableDeclaration","scope":4339,"src":"5029:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4280,"mutability":"mutable","name":"v","nameLocation":"5049:1:29","nodeType":"VariableDeclaration","scope":4339,"src":"5043:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4279,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4282,"mutability":"mutable","name":"r","nameLocation":"5060:1:29","nodeType":"VariableDeclaration","scope":4339,"src":"5052:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4284,"mutability":"mutable","name":"s","nameLocation":"5071:1:29","nodeType":"VariableDeclaration","scope":4339,"src":"5063:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:29"},"returnParameters":{"id":4291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4339,"src":"5097:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4286,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4339,"src":"5106:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4289,"nodeType":"UserDefinedTypeName","pathNode":{"id":4288,"name":"RecoverError","nameLocations":["5106:12:29"],"nodeType":"IdentifierPath","referencedDeclaration":4081,"src":"5106:12:29"},"referencedDeclaration":4081,"src":"5106:12:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:29"},"scope":4437,"src":"5009:1456:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4371,"nodeType":"Block","src":"6692:138:29","statements":[{"assignments":[4354,4357],"declarations":[{"constant":false,"id":4354,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:29","nodeType":"VariableDeclaration","scope":4371,"src":"6703:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4353,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4357,"mutability":"mutable","name":"error","nameLocation":"6735:5:29","nodeType":"VariableDeclaration","scope":4371,"src":"6722:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4356,"nodeType":"UserDefinedTypeName","pathNode":{"id":4355,"name":"RecoverError","nameLocations":["6722:12:29"],"nodeType":"IdentifierPath","referencedDeclaration":4081,"src":"6722:12:29"},"referencedDeclaration":4081,"src":"6722:12:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":4364,"initialValue":{"arguments":[{"id":4359,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"6755:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4360,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"6761:1:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4361,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"6764:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4362,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"6767:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4358,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4171,4245,4339],"referencedDeclaration":4339,"src":"6744:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4081_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4081_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:29"},{"expression":{"arguments":[{"id":4366,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"6791:5:29","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4081","typeString":"enum ECDSA.RecoverError"}],"id":4365,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"6779:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4081_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4368,"nodeType":"ExpressionStatement","src":"6779:18:29"},{"expression":{"id":4369,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"6814:9:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4352,"id":4370,"nodeType":"Return","src":"6807:16:29"}]},"documentation":{"id":4340,"nodeType":"StructuredDocumentation","src":"6471:122:29","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4372,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:29","nodeType":"FunctionDefinition","parameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4342,"mutability":"mutable","name":"hash","nameLocation":"6623:4:29","nodeType":"VariableDeclaration","scope":4372,"src":"6615:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4344,"mutability":"mutable","name":"v","nameLocation":"6635:1:29","nodeType":"VariableDeclaration","scope":4372,"src":"6629:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4343,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4346,"mutability":"mutable","name":"r","nameLocation":"6646:1:29","nodeType":"VariableDeclaration","scope":4372,"src":"6638:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4348,"mutability":"mutable","name":"s","nameLocation":"6657:1:29","nodeType":"VariableDeclaration","scope":4372,"src":"6649:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:29"},"returnParameters":{"id":4352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4372,"src":"6683:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4350,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:29"},"scope":4437,"src":"6598:232:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4381,"nodeType":"Block","src":"7206:310:29","statements":[{"AST":{"nativeSrc":"7362:148:29","nodeType":"YulBlock","src":"7362:148:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7383:4:29","nodeType":"YulLiteral","src":"7383:4:29","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"7389:34:29","nodeType":"YulLiteral","src":"7389:34:29","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"7376:6:29","nodeType":"YulIdentifier","src":"7376:6:29"},"nativeSrc":"7376:48:29","nodeType":"YulFunctionCall","src":"7376:48:29"},"nativeSrc":"7376:48:29","nodeType":"YulExpressionStatement","src":"7376:48:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7444:4:29","nodeType":"YulLiteral","src":"7444:4:29","type":"","value":"0x1c"},{"name":"hash","nativeSrc":"7450:4:29","nodeType":"YulIdentifier","src":"7450:4:29"}],"functionName":{"name":"mstore","nativeSrc":"7437:6:29","nodeType":"YulIdentifier","src":"7437:6:29"},"nativeSrc":"7437:18:29","nodeType":"YulFunctionCall","src":"7437:18:29"},"nativeSrc":"7437:18:29","nodeType":"YulExpressionStatement","src":"7437:18:29"},{"nativeSrc":"7468:32:29","nodeType":"YulAssignment","src":"7468:32:29","value":{"arguments":[{"kind":"number","nativeSrc":"7489:4:29","nodeType":"YulLiteral","src":"7489:4:29","type":"","value":"0x00"},{"kind":"number","nativeSrc":"7495:4:29","nodeType":"YulLiteral","src":"7495:4:29","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"7479:9:29","nodeType":"YulIdentifier","src":"7479:9:29"},"nativeSrc":"7479:21:29","nodeType":"YulFunctionCall","src":"7479:21:29"},"variableNames":[{"name":"message","nativeSrc":"7468:7:29","nodeType":"YulIdentifier","src":"7468:7:29"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4375,"isOffset":false,"isSlot":false,"src":"7450:4:29","valueSize":1},{"declaration":4378,"isOffset":false,"isSlot":false,"src":"7468:7:29","valueSize":1}],"id":4380,"nodeType":"InlineAssembly","src":"7353:157:29"}]},"documentation":{"id":4373,"nodeType":"StructuredDocumentation","src":"6836:279:29","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":4382,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:29","nodeType":"FunctionDefinition","parameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4375,"mutability":"mutable","name":"hash","nameLocation":"7160:4:29","nodeType":"VariableDeclaration","scope":4382,"src":"7152:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:29"},"returnParameters":{"id":4379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4378,"mutability":"mutable","name":"message","nameLocation":"7197:7:29","nodeType":"VariableDeclaration","scope":4382,"src":"7189:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:29"},"scope":4437,"src":"7120:396:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4403,"nodeType":"Block","src":"7881:116:29","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":4396,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"7976:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:29","memberName":"length","nodeType":"MemberAccess","src":"7976:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4394,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"7959:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4071_$","typeString":"type(library Strings)"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:29","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3901,"src":"7959:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4399,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"7987:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4391,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:29","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:29","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:29","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4390,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4389,"id":4402,"nodeType":"Return","src":"7891:99:29"}]},"documentation":{"id":4383,"nodeType":"StructuredDocumentation","src":"7522:274:29","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":4404,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:29","nodeType":"FunctionDefinition","parameters":{"id":4386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4385,"mutability":"mutable","name":"s","nameLocation":"7846:1:29","nodeType":"VariableDeclaration","scope":4404,"src":"7833:14:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4384,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:29"},"returnParameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4404,"src":"7872:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:29"},"scope":4437,"src":"7801:196:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4415,"nodeType":"Block","src":"8443:290:29","statements":[{"AST":{"nativeSrc":"8505:222:29","nodeType":"YulBlock","src":"8505:222:29","statements":[{"nativeSrc":"8519:22:29","nodeType":"YulVariableDeclaration","src":"8519:22:29","value":{"arguments":[{"kind":"number","nativeSrc":"8536:4:29","nodeType":"YulLiteral","src":"8536:4:29","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8530:5:29","nodeType":"YulIdentifier","src":"8530:5:29"},"nativeSrc":"8530:11:29","nodeType":"YulFunctionCall","src":"8530:11:29"},"variables":[{"name":"ptr","nativeSrc":"8523:3:29","nodeType":"YulTypedName","src":"8523:3:29","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8561:3:29","nodeType":"YulIdentifier","src":"8561:3:29"},{"hexValue":"1901","kind":"string","nativeSrc":"8566:10:29","nodeType":"YulLiteral","src":"8566:10:29","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"8554:6:29","nodeType":"YulIdentifier","src":"8554:6:29"},"nativeSrc":"8554:23:29","nodeType":"YulFunctionCall","src":"8554:23:29"},"nativeSrc":"8554:23:29","nodeType":"YulExpressionStatement","src":"8554:23:29"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"8601:3:29","nodeType":"YulIdentifier","src":"8601:3:29"},{"kind":"number","nativeSrc":"8606:4:29","nodeType":"YulLiteral","src":"8606:4:29","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"8597:3:29","nodeType":"YulIdentifier","src":"8597:3:29"},"nativeSrc":"8597:14:29","nodeType":"YulFunctionCall","src":"8597:14:29"},{"name":"domainSeparator","nativeSrc":"8613:15:29","nodeType":"YulIdentifier","src":"8613:15:29"}],"functionName":{"name":"mstore","nativeSrc":"8590:6:29","nodeType":"YulIdentifier","src":"8590:6:29"},"nativeSrc":"8590:39:29","nodeType":"YulFunctionCall","src":"8590:39:29"},"nativeSrc":"8590:39:29","nodeType":"YulExpressionStatement","src":"8590:39:29"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"8653:3:29","nodeType":"YulIdentifier","src":"8653:3:29"},{"kind":"number","nativeSrc":"8658:4:29","nodeType":"YulLiteral","src":"8658:4:29","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"8649:3:29","nodeType":"YulIdentifier","src":"8649:3:29"},"nativeSrc":"8649:14:29","nodeType":"YulFunctionCall","src":"8649:14:29"},{"name":"structHash","nativeSrc":"8665:10:29","nodeType":"YulIdentifier","src":"8665:10:29"}],"functionName":{"name":"mstore","nativeSrc":"8642:6:29","nodeType":"YulIdentifier","src":"8642:6:29"},"nativeSrc":"8642:34:29","nodeType":"YulFunctionCall","src":"8642:34:29"},"nativeSrc":"8642:34:29","nodeType":"YulExpressionStatement","src":"8642:34:29"},{"nativeSrc":"8689:28:29","nodeType":"YulAssignment","src":"8689:28:29","value":{"arguments":[{"name":"ptr","nativeSrc":"8707:3:29","nodeType":"YulIdentifier","src":"8707:3:29"},{"kind":"number","nativeSrc":"8712:4:29","nodeType":"YulLiteral","src":"8712:4:29","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"8697:9:29","nodeType":"YulIdentifier","src":"8697:9:29"},"nativeSrc":"8697:20:29","nodeType":"YulFunctionCall","src":"8697:20:29"},"variableNames":[{"name":"data","nativeSrc":"8689:4:29","nodeType":"YulIdentifier","src":"8689:4:29"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4412,"isOffset":false,"isSlot":false,"src":"8689:4:29","valueSize":1},{"declaration":4407,"isOffset":false,"isSlot":false,"src":"8613:15:29","valueSize":1},{"declaration":4409,"isOffset":false,"isSlot":false,"src":"8665:10:29","valueSize":1}],"id":4414,"nodeType":"InlineAssembly","src":"8496:231:29"}]},"documentation":{"id":4405,"nodeType":"StructuredDocumentation","src":"8003:328:29","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":4416,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:29","nodeType":"FunctionDefinition","parameters":{"id":4410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4407,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:29","nodeType":"VariableDeclaration","scope":4416,"src":"8361:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4409,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:29","nodeType":"VariableDeclaration","scope":4416,"src":"8386:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:29"},"returnParameters":{"id":4413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4412,"mutability":"mutable","name":"data","nameLocation":"8437:4:29","nodeType":"VariableDeclaration","scope":4416,"src":"8429:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:29"},"scope":4437,"src":"8336:397:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4435,"nodeType":"Block","src":"9048:80:29","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4430,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"9104:9:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4431,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"9115:4:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4427,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:29","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:29","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:29","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4426,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4425,"id":4434,"nodeType":"Return","src":"9058:63:29"}]},"documentation":{"id":4417,"nodeType":"StructuredDocumentation","src":"8739:193:29","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":4436,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:29","nodeType":"FunctionDefinition","parameters":{"id":4422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4419,"mutability":"mutable","name":"validator","nameLocation":"8986:9:29","nodeType":"VariableDeclaration","scope":4436,"src":"8978:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4418,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4421,"mutability":"mutable","name":"data","nameLocation":"9010:4:29","nodeType":"VariableDeclaration","scope":4436,"src":"8997:17:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4420,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:29"},"returnParameters":{"id":4425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4436,"src":"9039:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:29"},"scope":4437,"src":"8937:191:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4438,"src":"369:8761:29","usedErrors":[],"usedEvents":[]}],"src":"112:9019:29"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"id":30,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[4437],"EIP712":[4641],"IERC5267":[183],"Math":[5543],"ShortString":[3521],"ShortStrings":[3732],"SignedMath":[5648],"StorageSlot":[3842],"Strings":[4071]},"id":4642,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4439,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"113:23:30"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":4440,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4642,"sourceUnit":4438,"src":"138:21:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":4441,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4642,"sourceUnit":3733,"src":"160:29:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":4442,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4642,"sourceUnit":184,"src":"190:39:30","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4444,"name":"IERC5267","nameLocations":["1837:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":183,"src":"1837:8:30"},"id":4445,"nodeType":"InheritanceSpecifier","src":"1837:8:30"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":4443,"nodeType":"StructuredDocumentation","src":"231:1577:30","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n _Available since v3.4._\n @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"fullyImplemented":true,"id":4641,"linearizedBaseContracts":[4641,183],"name":"EIP712","nameLocation":"1827:6:30","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4447,"libraryName":{"id":4446,"name":"ShortStrings","nameLocations":["1858:12:30"],"nodeType":"IdentifierPath","referencedDeclaration":3732,"src":"1858:12:30"},"nodeType":"UsingForDirective","src":"1852:25:30"},{"constant":true,"id":4452,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1908:10:30","nodeType":"VariableDeclaration","scope":4641,"src":"1883:141:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":4450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1939:84:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":4449,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1929:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:95:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4454,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2249:22:30","nodeType":"VariableDeclaration","scope":4641,"src":"2223:48:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2223:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4456,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2303:14:30","nodeType":"VariableDeclaration","scope":4641,"src":"2277:40:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4455,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4458,"mutability":"immutable","name":"_cachedThis","nameLocation":"2349:11:30","nodeType":"VariableDeclaration","scope":4641,"src":"2323:37:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4457,"name":"address","nodeType":"ElementaryTypeName","src":"2323:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":4460,"mutability":"immutable","name":"_hashedName","nameLocation":"2393:11:30","nodeType":"VariableDeclaration","scope":4641,"src":"2367:37:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4462,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2436:14:30","nodeType":"VariableDeclaration","scope":4641,"src":"2410:40:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2410:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4465,"mutability":"immutable","name":"_name","nameLocation":"2487:5:30","nodeType":"VariableDeclaration","scope":4641,"src":"2457:35:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"},"typeName":{"id":4464,"nodeType":"UserDefinedTypeName","pathNode":{"id":4463,"name":"ShortString","nameLocations":["2457:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":3521,"src":"2457:11:30"},"referencedDeclaration":3521,"src":"2457:11:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4468,"mutability":"immutable","name":"_version","nameLocation":"2528:8:30","nodeType":"VariableDeclaration","scope":4641,"src":"2498:38:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"},"typeName":{"id":4467,"nodeType":"UserDefinedTypeName","pathNode":{"id":4466,"name":"ShortString","nameLocations":["2498:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":3521,"src":"2498:11:30"},"referencedDeclaration":3521,"src":"2498:11:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4470,"mutability":"mutable","name":"_nameFallback","nameLocation":"2557:13:30","nodeType":"VariableDeclaration","scope":4641,"src":"2542:28:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4469,"name":"string","nodeType":"ElementaryTypeName","src":"2542:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":4472,"mutability":"mutable","name":"_versionFallback","nameLocation":"2591:16:30","nodeType":"VariableDeclaration","scope":4641,"src":"2576:31:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4471,"name":"string","nodeType":"ElementaryTypeName","src":"2576:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":4529,"nodeType":"Block","src":"3233:376:30","statements":[{"expression":{"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4480,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"3243:5:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4483,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"3282:13:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4481,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"3251:4:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3256:25:30","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"3251:30:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$3521_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:45:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"src":"3243:53:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"id":4486,"nodeType":"ExpressionStatement","src":"3243:53:30"},{"expression":{"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4487,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"3306:8:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4490,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"3351:16:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4488,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"3317:7:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3325:25:30","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"3317:33:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$3521_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3317:51:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"src":"3306:62:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"id":4493,"nodeType":"ExpressionStatement","src":"3306:62:30"},{"expression":{"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4494,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"3378:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4498,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"3408:4:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3402:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4496,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:30","typeDescriptions":{}}},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3402:11:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4495,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3392:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3392:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3378:36:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4502,"nodeType":"ExpressionStatement","src":"3378:36:30"},{"expression":{"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4503,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"3424:14:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4507,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"3457:7:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3451:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4505,"name":"bytes","nodeType":"ElementaryTypeName","src":"3451:5:30","typeDescriptions":{}}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3451:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4504,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3441:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3441:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3424:42:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4511,"nodeType":"ExpressionStatement","src":"3424:42:30"},{"expression":{"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4512,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"3477:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4513,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3494:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3500:7:30","memberName":"chainid","nodeType":"MemberAccess","src":"3494:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3477:30:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4516,"nodeType":"ExpressionStatement","src":"3477:30:30"},{"expression":{"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4517,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"3517:22:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4518,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"3542:21:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3517:48:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4521,"nodeType":"ExpressionStatement","src":"3517:48:30"},{"expression":{"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4522,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"3575:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4525,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3597:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4641","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4641","typeString":"contract EIP712"}],"id":4524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3589:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4523,"name":"address","nodeType":"ElementaryTypeName","src":"3589:7:30","typeDescriptions":{}}},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3589:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3575:27:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4528,"nodeType":"ExpressionStatement","src":"3575:27:30"}]},"documentation":{"id":4473,"nodeType":"StructuredDocumentation","src":"2614:559:30","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4530,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4475,"mutability":"mutable","name":"name","nameLocation":"3204:4:30","nodeType":"VariableDeclaration","scope":4530,"src":"3190:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4474,"name":"string","nodeType":"ElementaryTypeName","src":"3190:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4477,"mutability":"mutable","name":"version","nameLocation":"3224:7:30","nodeType":"VariableDeclaration","scope":4530,"src":"3210:21:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4476,"name":"string","nodeType":"ElementaryTypeName","src":"3210:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3189:43:30"},"returnParameters":{"id":4479,"nodeType":"ParameterList","parameters":[],"src":"3233:0:30"},"scope":4641,"src":"3178:431:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4555,"nodeType":"Block","src":"3757:200:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4538,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3779:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4641","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4641","typeString":"contract EIP712"}],"id":4537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3771:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4536,"name":"address","nodeType":"ElementaryTypeName","src":"3771:7:30","typeDescriptions":{}}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3771:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4540,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"3788:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3771:28:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4542,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3803:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3809:7:30","memberName":"chainid","nodeType":"MemberAccess","src":"3803:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4544,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"3820:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3803:31:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3771:63:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4553,"nodeType":"Block","src":"3896:55:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4550,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"3917:21:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3917:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4535,"id":4552,"nodeType":"Return","src":"3910:30:30"}]},"id":4554,"nodeType":"IfStatement","src":"3767:184:30","trueBody":{"id":4549,"nodeType":"Block","src":"3836:54:30","statements":[{"expression":{"id":4547,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"3857:22:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4535,"id":4548,"nodeType":"Return","src":"3850:29:30"}]}}]},"documentation":{"id":4531,"nodeType":"StructuredDocumentation","src":"3615:75:30","text":" @dev Returns the domain separator for the current chain."},"id":4556,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3704:18:30","nodeType":"FunctionDefinition","parameters":{"id":4532,"nodeType":"ParameterList","parameters":[],"src":"3722:2:30"},"returnParameters":{"id":4535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4556,"src":"3748:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3748:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3747:9:30"},"scope":4641,"src":"3695:262:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4576,"nodeType":"Block","src":"4027:116:30","statements":[{"expression":{"arguments":[{"arguments":[{"id":4564,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"4065:10:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4565,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"4077:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4566,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"4090:14:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4567,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4106:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4112:7:30","memberName":"chainid","nodeType":"MemberAccess","src":"4106:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4571,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4129:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4641","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4641","typeString":"contract EIP712"}],"id":4570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4121:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4569,"name":"address","nodeType":"ElementaryTypeName","src":"4121:7:30","typeDescriptions":{}}},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4121:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4562,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4054:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4058:6:30","memberName":"encode","nodeType":"MemberAccess","src":"4054:10:30","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:81:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4561,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4044:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4044:92:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4560,"id":4575,"nodeType":"Return","src":"4037:99:30"}]},"id":4577,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3972:21:30","nodeType":"FunctionDefinition","parameters":{"id":4557,"nodeType":"ParameterList","parameters":[],"src":"3993:2:30"},"returnParameters":{"id":4560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4577,"src":"4018:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4018:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4017:9:30"},"scope":4641,"src":"3963:180:30","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4592,"nodeType":"Block","src":"4854:79:30","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4587,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"4893:18:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4893:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4589,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"4915:10:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4585,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"4871:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4437_$","typeString":"type(library ECDSA)"}},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4877:15:30","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"4871:21:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4871:55:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4584,"id":4591,"nodeType":"Return","src":"4864:62:30"}]},"documentation":{"id":4578,"nodeType":"StructuredDocumentation","src":"4149:614:30","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":4593,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4777:16:30","nodeType":"FunctionDefinition","parameters":{"id":4581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4580,"mutability":"mutable","name":"structHash","nameLocation":"4802:10:30","nodeType":"VariableDeclaration","scope":4593,"src":"4794:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4794:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4793:20:30"},"returnParameters":{"id":4584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4593,"src":"4845:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4845:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4844:9:30"},"scope":4641,"src":"4768:165:30","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[182],"body":{"id":4639,"nodeType":"Block","src":"5366:288:30","statements":[{"expression":{"components":[{"hexValue":"0f","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5397:7:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[{"id":4616,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"5454:13:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4614,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"5427:5:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5433:20:30","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3700,"src":"5427:26:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3521_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$3521_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5427:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":4620,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"5512:16:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4618,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"5482:8:30","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3521","typeString":"ShortString"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5491:20:30","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3700,"src":"5482:29:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3521_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$3521_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5482:47:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4622,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5543:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5549:7:30","memberName":"chainid","nodeType":"MemberAccess","src":"5543:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4626,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5578:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4641","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4641","typeString":"contract EIP712"}],"id":4625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5570:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4624,"name":"address","nodeType":"ElementaryTypeName","src":"5570:7:30","typeDescriptions":{}}},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5570:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5605:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5597:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5597:7:30","typeDescriptions":{}}},"id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5597:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5635:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5621:13:30","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4632,"name":"uint256","nodeType":"ElementaryTypeName","src":"5625:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4633,"nodeType":"ArrayTypeName","src":"5625:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5621:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5383:264:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":4612,"id":4638,"nodeType":"Return","src":"5376:271:30"}]},"documentation":{"id":4594,"nodeType":"StructuredDocumentation","src":"4939:77:30","text":" @dev See {EIP-5267}.\n _Available since v4.9._"},"functionSelector":"84b0196e","id":4640,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5030:12:30","nodeType":"FunctionDefinition","overrides":{"id":4596,"nodeType":"OverrideSpecifier","overrides":[],"src":"5097:8:30"},"parameters":{"id":4595,"nodeType":"ParameterList","parameters":[],"src":"5042:2:30"},"returnParameters":{"id":4612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4598,"mutability":"mutable","name":"fields","nameLocation":"5143:6:30","nodeType":"VariableDeclaration","scope":4640,"src":"5136:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4597,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5136:6:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":4600,"mutability":"mutable","name":"name","nameLocation":"5177:4:30","nodeType":"VariableDeclaration","scope":4640,"src":"5163:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4599,"name":"string","nodeType":"ElementaryTypeName","src":"5163:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4602,"mutability":"mutable","name":"version","nameLocation":"5209:7:30","nodeType":"VariableDeclaration","scope":4640,"src":"5195:21:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4601,"name":"string","nodeType":"ElementaryTypeName","src":"5195:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4604,"mutability":"mutable","name":"chainId","nameLocation":"5238:7:30","nodeType":"VariableDeclaration","scope":4640,"src":"5230:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4603,"name":"uint256","nodeType":"ElementaryTypeName","src":"5230:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4606,"mutability":"mutable","name":"verifyingContract","nameLocation":"5267:17:30","nodeType":"VariableDeclaration","scope":4640,"src":"5259:25:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4605,"name":"address","nodeType":"ElementaryTypeName","src":"5259:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4608,"mutability":"mutable","name":"salt","nameLocation":"5306:4:30","nodeType":"VariableDeclaration","scope":4640,"src":"5298:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5298:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4611,"mutability":"mutable","name":"extensions","nameLocation":"5341:10:30","nodeType":"VariableDeclaration","scope":4640,"src":"5324:27:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4609,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4610,"nodeType":"ArrayTypeName","src":"5324:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5122:239:30"},"scope":4641,"src":"5021:633:30","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4642,"src":"1809:3847:30","usedErrors":[3529,3531],"usedEvents":[163]}],"src":"113:5544:30"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"id":31,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4665],"IERC165":[4677]},"id":4666,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4643,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:31"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4644,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4666,"sourceUnit":4678,"src":"124:23:31","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4646,"name":"IERC165","nameLocations":["754:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":4677,"src":"754:7:31"},"id":4647,"nodeType":"InheritanceSpecifier","src":"754:7:31"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4645,"nodeType":"StructuredDocumentation","src":"149:576:31","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":4665,"linearizedBaseContracts":[4665,4677],"name":"ERC165","nameLocation":"744:6:31","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4676],"body":{"id":4663,"nodeType":"Block","src":"920:64:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4656,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"937:11:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4658,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"957:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4677_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4677_$","typeString":"type(contract IERC165)"}],"id":4657,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4677","typeString":"type(contract IERC165)"}},"id":4660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:31","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4655,"id":4662,"nodeType":"Return","src":"930:47:31"}]},"documentation":{"id":4648,"nodeType":"StructuredDocumentation","src":"768:56:31","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4664,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:31","nodeType":"FunctionDefinition","overrides":{"id":4652,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:31"},"parameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4650,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:31","nodeType":"VariableDeclaration","scope":4664,"src":"856:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4649,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:31"},"returnParameters":{"id":4655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4664,"src":"914:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4653,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:31"},"scope":4665,"src":"829:155:31","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4666,"src":"726:260:31","usedErrors":[],"usedEvents":[]}],"src":"99:888:31"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"id":32,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4677]},"id":4678,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4667,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:32"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4668,"nodeType":"StructuredDocumentation","src":"125:279:32","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4677,"linearizedBaseContracts":[4677],"name":"IERC165","nameLocation":"415:7:32","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4669,"nodeType":"StructuredDocumentation","src":"429:340:32","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4676,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:32","nodeType":"FunctionDefinition","parameters":{"id":4672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4671,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:32","nodeType":"VariableDeclaration","scope":4676,"src":"801:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4670,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:32"},"returnParameters":{"id":4675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4676,"src":"844:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4673,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:32"},"scope":4677,"src":"774:76:32","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4678,"src":"405:447:32","usedErrors":[],"usedEvents":[]}],"src":"100:753:32"}},"@openzeppelin/contracts/utils/math/Math.sol":{"id":33,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5543]},"id":5544,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4679,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:33"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4680,"nodeType":"StructuredDocumentation","src":"128:73:33","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5543,"linearizedBaseContracts":[5543],"name":"Math","nameLocation":"210:4:33","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4684,"members":[{"id":4681,"name":"Down","nameLocation":"245:4:33","nodeType":"EnumValue","src":"245:4:33"},{"id":4682,"name":"Up","nameLocation":"287:2:33","nodeType":"EnumValue","src":"287:2:33"},{"id":4683,"name":"Zero","nameLocation":"318:4:33","nodeType":"EnumValue","src":"318:4:33"}],"name":"Rounding","nameLocation":"226:8:33","nodeType":"EnumDefinition","src":"221:122:33"},{"body":{"id":4701,"nodeType":"Block","src":"480:37:33","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4694,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"497:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4695,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"501:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4698,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"509:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:33","trueExpression":{"id":4697,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"505:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4693,"id":4700,"nodeType":"Return","src":"490:20:33"}]},"documentation":{"id":4685,"nodeType":"StructuredDocumentation","src":"349:59:33","text":" @dev Returns the largest of two numbers."},"id":4702,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:33","nodeType":"FunctionDefinition","parameters":{"id":4690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4687,"mutability":"mutable","name":"a","nameLocation":"434:1:33","nodeType":"VariableDeclaration","scope":4702,"src":"426:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4686,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4689,"mutability":"mutable","name":"b","nameLocation":"445:1:33","nodeType":"VariableDeclaration","scope":4702,"src":"437:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4688,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:33"},"returnParameters":{"id":4693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4702,"src":"471:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4691,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:33"},"scope":5543,"src":"413:104:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4719,"nodeType":"Block","src":"655:37:33","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4712,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"672:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4713,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"676:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4716,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"684:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:33","trueExpression":{"id":4715,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"680:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4711,"id":4718,"nodeType":"Return","src":"665:20:33"}]},"documentation":{"id":4703,"nodeType":"StructuredDocumentation","src":"523:60:33","text":" @dev Returns the smallest of two numbers."},"id":4720,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:33","nodeType":"FunctionDefinition","parameters":{"id":4708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4705,"mutability":"mutable","name":"a","nameLocation":"609:1:33","nodeType":"VariableDeclaration","scope":4720,"src":"601:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4704,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4707,"mutability":"mutable","name":"b","nameLocation":"620:1:33","nodeType":"VariableDeclaration","scope":4720,"src":"612:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4706,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:33"},"returnParameters":{"id":4711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4720,"src":"646:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4709,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:33"},"scope":5543,"src":"588:104:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4742,"nodeType":"Block","src":"876:82:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4730,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"931:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4731,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"935:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"941:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4735,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"945:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4729,"id":4741,"nodeType":"Return","src":"923:28:33"}]},"documentation":{"id":4721,"nodeType":"StructuredDocumentation","src":"698:102:33","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4743,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:33","nodeType":"FunctionDefinition","parameters":{"id":4726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4723,"mutability":"mutable","name":"a","nameLocation":"830:1:33","nodeType":"VariableDeclaration","scope":4743,"src":"822:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4722,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4725,"mutability":"mutable","name":"b","nameLocation":"841:1:33","nodeType":"VariableDeclaration","scope":4743,"src":"833:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4724,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:33"},"returnParameters":{"id":4729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4743,"src":"867:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:33"},"scope":5543,"src":"805:153:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4767,"nodeType":"Block","src":"1228:123:33","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"1316:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4757,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"1330:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4761,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"1339:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:33","trueExpression":{"hexValue":"30","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4752,"id":4766,"nodeType":"Return","src":"1309:35:33"}]},"documentation":{"id":4744,"nodeType":"StructuredDocumentation","src":"964:188:33","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":4768,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:33","nodeType":"FunctionDefinition","parameters":{"id":4749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4746,"mutability":"mutable","name":"a","nameLocation":"1182:1:33","nodeType":"VariableDeclaration","scope":4768,"src":"1174:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4745,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4748,"mutability":"mutable","name":"b","nameLocation":"1193:1:33","nodeType":"VariableDeclaration","scope":4768,"src":"1185:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4747,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:33"},"returnParameters":{"id":4752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4768,"src":"1219:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:33"},"scope":5543,"src":"1157:194:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4890,"nodeType":"Block","src":"1765:4115:33","statements":[{"id":4889,"nodeType":"UncheckedBlock","src":"1775:4099:33","statements":[{"assignments":[4781],"declarations":[{"constant":false,"id":4781,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:33","nodeType":"VariableDeclaration","scope":4889,"src":"2096:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4780,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4782,"nodeType":"VariableDeclarationStatement","src":"2096:13:33"},{"assignments":[4784],"declarations":[{"constant":false,"id":4784,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:33","nodeType":"VariableDeclaration","scope":4889,"src":"2168:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4783,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4785,"nodeType":"VariableDeclarationStatement","src":"2168:13:33"},{"AST":{"nativeSrc":"2248:157:33","nodeType":"YulBlock","src":"2248:157:33","statements":[{"nativeSrc":"2266:30:33","nodeType":"YulVariableDeclaration","src":"2266:30:33","value":{"arguments":[{"name":"x","nativeSrc":"2283:1:33","nodeType":"YulIdentifier","src":"2283:1:33"},{"name":"y","nativeSrc":"2286:1:33","nodeType":"YulIdentifier","src":"2286:1:33"},{"arguments":[{"kind":"number","nativeSrc":"2293:1:33","nodeType":"YulLiteral","src":"2293:1:33","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2289:3:33","nodeType":"YulIdentifier","src":"2289:3:33"},"nativeSrc":"2289:6:33","nodeType":"YulFunctionCall","src":"2289:6:33"}],"functionName":{"name":"mulmod","nativeSrc":"2276:6:33","nodeType":"YulIdentifier","src":"2276:6:33"},"nativeSrc":"2276:20:33","nodeType":"YulFunctionCall","src":"2276:20:33"},"variables":[{"name":"mm","nativeSrc":"2270:2:33","nodeType":"YulTypedName","src":"2270:2:33","type":""}]},{"nativeSrc":"2313:18:33","nodeType":"YulAssignment","src":"2313:18:33","value":{"arguments":[{"name":"x","nativeSrc":"2326:1:33","nodeType":"YulIdentifier","src":"2326:1:33"},{"name":"y","nativeSrc":"2329:1:33","nodeType":"YulIdentifier","src":"2329:1:33"}],"functionName":{"name":"mul","nativeSrc":"2322:3:33","nodeType":"YulIdentifier","src":"2322:3:33"},"nativeSrc":"2322:9:33","nodeType":"YulFunctionCall","src":"2322:9:33"},"variableNames":[{"name":"prod0","nativeSrc":"2313:5:33","nodeType":"YulIdentifier","src":"2313:5:33"}]},{"nativeSrc":"2348:43:33","nodeType":"YulAssignment","src":"2348:43:33","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"2365:2:33","nodeType":"YulIdentifier","src":"2365:2:33"},{"name":"prod0","nativeSrc":"2369:5:33","nodeType":"YulIdentifier","src":"2369:5:33"}],"functionName":{"name":"sub","nativeSrc":"2361:3:33","nodeType":"YulIdentifier","src":"2361:3:33"},"nativeSrc":"2361:14:33","nodeType":"YulFunctionCall","src":"2361:14:33"},{"arguments":[{"name":"mm","nativeSrc":"2380:2:33","nodeType":"YulIdentifier","src":"2380:2:33"},{"name":"prod0","nativeSrc":"2384:5:33","nodeType":"YulIdentifier","src":"2384:5:33"}],"functionName":{"name":"lt","nativeSrc":"2377:2:33","nodeType":"YulIdentifier","src":"2377:2:33"},"nativeSrc":"2377:13:33","nodeType":"YulFunctionCall","src":"2377:13:33"}],"functionName":{"name":"sub","nativeSrc":"2357:3:33","nodeType":"YulIdentifier","src":"2357:3:33"},"nativeSrc":"2357:34:33","nodeType":"YulFunctionCall","src":"2357:34:33"},"variableNames":[{"name":"prod1","nativeSrc":"2348:5:33","nodeType":"YulIdentifier","src":"2348:5:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4781,"isOffset":false,"isSlot":false,"src":"2313:5:33","valueSize":1},{"declaration":4781,"isOffset":false,"isSlot":false,"src":"2369:5:33","valueSize":1},{"declaration":4781,"isOffset":false,"isSlot":false,"src":"2384:5:33","valueSize":1},{"declaration":4784,"isOffset":false,"isSlot":false,"src":"2348:5:33","valueSize":1},{"declaration":4771,"isOffset":false,"isSlot":false,"src":"2283:1:33","valueSize":1},{"declaration":4771,"isOffset":false,"isSlot":false,"src":"2326:1:33","valueSize":1},{"declaration":4773,"isOffset":false,"isSlot":false,"src":"2286:1:33","valueSize":1},{"declaration":4773,"isOffset":false,"isSlot":false,"src":"2329:1:33","valueSize":1}],"id":4786,"nodeType":"InlineAssembly","src":"2239:166:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4787,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"2486:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4795,"nodeType":"IfStatement","src":"2482:368:33","trueBody":{"id":4794,"nodeType":"Block","src":"2498:352:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4790,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"2816:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4791,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"2824:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4779,"id":4793,"nodeType":"Return","src":"2809:26:33"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4797,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"2960:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4798,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"2974:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":4800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":4796,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4802,"nodeType":"ExpressionStatement","src":"2952:53:33"},{"assignments":[4804],"declarations":[{"constant":false,"id":4804,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:33","nodeType":"VariableDeclaration","scope":4889,"src":"3261:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4803,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4805,"nodeType":"VariableDeclarationStatement","src":"3261:17:33"},{"AST":{"nativeSrc":"3301:291:33","nodeType":"YulBlock","src":"3301:291:33","statements":[{"nativeSrc":"3370:38:33","nodeType":"YulAssignment","src":"3370:38:33","value":{"arguments":[{"name":"x","nativeSrc":"3390:1:33","nodeType":"YulIdentifier","src":"3390:1:33"},{"name":"y","nativeSrc":"3393:1:33","nodeType":"YulIdentifier","src":"3393:1:33"},{"name":"denominator","nativeSrc":"3396:11:33","nodeType":"YulIdentifier","src":"3396:11:33"}],"functionName":{"name":"mulmod","nativeSrc":"3383:6:33","nodeType":"YulIdentifier","src":"3383:6:33"},"nativeSrc":"3383:25:33","nodeType":"YulFunctionCall","src":"3383:25:33"},"variableNames":[{"name":"remainder","nativeSrc":"3370:9:33","nodeType":"YulIdentifier","src":"3370:9:33"}]},{"nativeSrc":"3490:41:33","nodeType":"YulAssignment","src":"3490:41:33","value":{"arguments":[{"name":"prod1","nativeSrc":"3503:5:33","nodeType":"YulIdentifier","src":"3503:5:33"},{"arguments":[{"name":"remainder","nativeSrc":"3513:9:33","nodeType":"YulIdentifier","src":"3513:9:33"},{"name":"prod0","nativeSrc":"3524:5:33","nodeType":"YulIdentifier","src":"3524:5:33"}],"functionName":{"name":"gt","nativeSrc":"3510:2:33","nodeType":"YulIdentifier","src":"3510:2:33"},"nativeSrc":"3510:20:33","nodeType":"YulFunctionCall","src":"3510:20:33"}],"functionName":{"name":"sub","nativeSrc":"3499:3:33","nodeType":"YulIdentifier","src":"3499:3:33"},"nativeSrc":"3499:32:33","nodeType":"YulFunctionCall","src":"3499:32:33"},"variableNames":[{"name":"prod1","nativeSrc":"3490:5:33","nodeType":"YulIdentifier","src":"3490:5:33"}]},{"nativeSrc":"3548:30:33","nodeType":"YulAssignment","src":"3548:30:33","value":{"arguments":[{"name":"prod0","nativeSrc":"3561:5:33","nodeType":"YulIdentifier","src":"3561:5:33"},{"name":"remainder","nativeSrc":"3568:9:33","nodeType":"YulIdentifier","src":"3568:9:33"}],"functionName":{"name":"sub","nativeSrc":"3557:3:33","nodeType":"YulIdentifier","src":"3557:3:33"},"nativeSrc":"3557:21:33","nodeType":"YulFunctionCall","src":"3557:21:33"},"variableNames":[{"name":"prod0","nativeSrc":"3548:5:33","nodeType":"YulIdentifier","src":"3548:5:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4775,"isOffset":false,"isSlot":false,"src":"3396:11:33","valueSize":1},{"declaration":4781,"isOffset":false,"isSlot":false,"src":"3524:5:33","valueSize":1},{"declaration":4781,"isOffset":false,"isSlot":false,"src":"3548:5:33","valueSize":1},{"declaration":4781,"isOffset":false,"isSlot":false,"src":"3561:5:33","valueSize":1},{"declaration":4784,"isOffset":false,"isSlot":false,"src":"3490:5:33","valueSize":1},{"declaration":4784,"isOffset":false,"isSlot":false,"src":"3503:5:33","valueSize":1},{"declaration":4804,"isOffset":false,"isSlot":false,"src":"3370:9:33","valueSize":1},{"declaration":4804,"isOffset":false,"isSlot":false,"src":"3513:9:33","valueSize":1},{"declaration":4804,"isOffset":false,"isSlot":false,"src":"3568:9:33","valueSize":1},{"declaration":4771,"isOffset":false,"isSlot":false,"src":"3390:1:33","valueSize":1},{"declaration":4773,"isOffset":false,"isSlot":false,"src":"3393:1:33","valueSize":1}],"id":4806,"nodeType":"InlineAssembly","src":"3292:300:33"},{"assignments":[4808],"declarations":[{"constant":false,"id":4808,"mutability":"mutable","name":"twos","nameLocation":"3907:4:33","nodeType":"VariableDeclaration","scope":4889,"src":"3899:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4807,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4816,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4809,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"3914:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:33","subExpression":{"id":4810,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"3930:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:33"},{"AST":{"nativeSrc":"3969:362:33","nodeType":"YulBlock","src":"3969:362:33","statements":[{"nativeSrc":"4034:37:33","nodeType":"YulAssignment","src":"4034:37:33","value":{"arguments":[{"name":"denominator","nativeSrc":"4053:11:33","nodeType":"YulIdentifier","src":"4053:11:33"},{"name":"twos","nativeSrc":"4066:4:33","nodeType":"YulIdentifier","src":"4066:4:33"}],"functionName":{"name":"div","nativeSrc":"4049:3:33","nodeType":"YulIdentifier","src":"4049:3:33"},"nativeSrc":"4049:22:33","nodeType":"YulFunctionCall","src":"4049:22:33"},"variableNames":[{"name":"denominator","nativeSrc":"4034:11:33","nodeType":"YulIdentifier","src":"4034:11:33"}]},{"nativeSrc":"4138:25:33","nodeType":"YulAssignment","src":"4138:25:33","value":{"arguments":[{"name":"prod0","nativeSrc":"4151:5:33","nodeType":"YulIdentifier","src":"4151:5:33"},{"name":"twos","nativeSrc":"4158:4:33","nodeType":"YulIdentifier","src":"4158:4:33"}],"functionName":{"name":"div","nativeSrc":"4147:3:33","nodeType":"YulIdentifier","src":"4147:3:33"},"nativeSrc":"4147:16:33","nodeType":"YulFunctionCall","src":"4147:16:33"},"variableNames":[{"name":"prod0","nativeSrc":"4138:5:33","nodeType":"YulIdentifier","src":"4138:5:33"}]},{"nativeSrc":"4278:39:33","nodeType":"YulAssignment","src":"4278:39:33","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4298:1:33","nodeType":"YulLiteral","src":"4298:1:33","type":"","value":"0"},{"name":"twos","nativeSrc":"4301:4:33","nodeType":"YulIdentifier","src":"4301:4:33"}],"functionName":{"name":"sub","nativeSrc":"4294:3:33","nodeType":"YulIdentifier","src":"4294:3:33"},"nativeSrc":"4294:12:33","nodeType":"YulFunctionCall","src":"4294:12:33"},{"name":"twos","nativeSrc":"4308:4:33","nodeType":"YulIdentifier","src":"4308:4:33"}],"functionName":{"name":"div","nativeSrc":"4290:3:33","nodeType":"YulIdentifier","src":"4290:3:33"},"nativeSrc":"4290:23:33","nodeType":"YulFunctionCall","src":"4290:23:33"},{"kind":"number","nativeSrc":"4315:1:33","nodeType":"YulLiteral","src":"4315:1:33","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4286:3:33","nodeType":"YulIdentifier","src":"4286:3:33"},"nativeSrc":"4286:31:33","nodeType":"YulFunctionCall","src":"4286:31:33"},"variableNames":[{"name":"twos","nativeSrc":"4278:4:33","nodeType":"YulIdentifier","src":"4278:4:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4775,"isOffset":false,"isSlot":false,"src":"4034:11:33","valueSize":1},{"declaration":4775,"isOffset":false,"isSlot":false,"src":"4053:11:33","valueSize":1},{"declaration":4781,"isOffset":false,"isSlot":false,"src":"4138:5:33","valueSize":1},{"declaration":4781,"isOffset":false,"isSlot":false,"src":"4151:5:33","valueSize":1},{"declaration":4808,"isOffset":false,"isSlot":false,"src":"4066:4:33","valueSize":1},{"declaration":4808,"isOffset":false,"isSlot":false,"src":"4158:4:33","valueSize":1},{"declaration":4808,"isOffset":false,"isSlot":false,"src":"4278:4:33","valueSize":1},{"declaration":4808,"isOffset":false,"isSlot":false,"src":"4301:4:33","valueSize":1},{"declaration":4808,"isOffset":false,"isSlot":false,"src":"4308:4:33","valueSize":1}],"id":4817,"nodeType":"InlineAssembly","src":"3960:371:33"},{"expression":{"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4818,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"4397:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4819,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"4406:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4820,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"4414:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4823,"nodeType":"ExpressionStatement","src":"4397:21:33"},{"assignments":[4825],"declarations":[{"constant":false,"id":4825,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:33","nodeType":"VariableDeclaration","scope":4889,"src":"4736:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4824,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4832,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:33","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4827,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"4759:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4829,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:33"},{"expression":{"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4833,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"4992:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4835,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"5007:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4836,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"5021:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4840,"nodeType":"ExpressionStatement","src":"4992:36:33"},{"expression":{"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4841,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"5061:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4843,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"5076:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4844,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"5090:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4848,"nodeType":"ExpressionStatement","src":"5061:36:33"},{"expression":{"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4849,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"5131:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4851,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"5146:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4852,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"5160:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4856,"nodeType":"ExpressionStatement","src":"5131:36:33"},{"expression":{"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4857,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"5201:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4859,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"5216:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4860,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"5230:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4864,"nodeType":"ExpressionStatement","src":"5201:36:33"},{"expression":{"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4865,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"5271:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4867,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"5286:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4868,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"5300:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4872,"nodeType":"ExpressionStatement","src":"5271:36:33"},{"expression":{"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4873,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"5342:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4875,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"5357:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4876,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"5371:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4880,"nodeType":"ExpressionStatement","src":"5342:36:33"},{"expression":{"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4881,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"5812:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4882,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"5821:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4883,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"5829:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4886,"nodeType":"ExpressionStatement","src":"5812:24:33"},{"expression":{"id":4887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"5857:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4779,"id":4888,"nodeType":"Return","src":"5850:13:33"}]}]},"documentation":{"id":4769,"nodeType":"StructuredDocumentation","src":"1357:305:33","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":4891,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:33","nodeType":"FunctionDefinition","parameters":{"id":4776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4771,"mutability":"mutable","name":"x","nameLocation":"1691:1:33","nodeType":"VariableDeclaration","scope":4891,"src":"1683:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4770,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4773,"mutability":"mutable","name":"y","nameLocation":"1702:1:33","nodeType":"VariableDeclaration","scope":4891,"src":"1694:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4772,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4775,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:33","nodeType":"VariableDeclaration","scope":4891,"src":"1705:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4774,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:33"},"returnParameters":{"id":4779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4778,"mutability":"mutable","name":"result","nameLocation":"1757:6:33","nodeType":"VariableDeclaration","scope":4891,"src":"1749:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4777,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:33"},"scope":5543,"src":"1667:4213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4934,"nodeType":"Block","src":"6122:189:33","statements":[{"assignments":[4907],"declarations":[{"constant":false,"id":4907,"mutability":"mutable","name":"result","nameLocation":"6140:6:33","nodeType":"VariableDeclaration","scope":4934,"src":"6132:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4906,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4913,"initialValue":{"arguments":[{"id":4909,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"6156:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4910,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"6159:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4911,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"6162:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4908,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4891,4935],"referencedDeclaration":4891,"src":"6149:6:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:33"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4914,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"6188:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4915,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"6200:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4684_$","typeString":"type(enum Math.Rounding)"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:33","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4682,"src":"6200:11:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"}},"src":"6188:23:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4919,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"6222:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4920,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"6225:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4921,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"6228:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4918,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:33","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4931,"nodeType":"IfStatement","src":"6184:98:33","trueBody":{"id":4930,"nodeType":"Block","src":"6246:36:33","statements":[{"expression":{"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4926,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"6260:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4929,"nodeType":"ExpressionStatement","src":"6260:11:33"}]}},{"expression":{"id":4932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"6298:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4905,"id":4933,"nodeType":"Return","src":"6291:13:33"}]},"documentation":{"id":4892,"nodeType":"StructuredDocumentation","src":"5886:121:33","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4935,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:33","nodeType":"FunctionDefinition","parameters":{"id":4902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4894,"mutability":"mutable","name":"x","nameLocation":"6036:1:33","nodeType":"VariableDeclaration","scope":4935,"src":"6028:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4893,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4896,"mutability":"mutable","name":"y","nameLocation":"6047:1:33","nodeType":"VariableDeclaration","scope":4935,"src":"6039:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4895,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4898,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:33","nodeType":"VariableDeclaration","scope":4935,"src":"6050:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4897,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4901,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:33","nodeType":"VariableDeclaration","scope":4935,"src":"6071:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"},"typeName":{"id":4900,"nodeType":"UserDefinedTypeName","pathNode":{"id":4899,"name":"Rounding","nameLocations":["6071:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":4684,"src":"6071:8:33"},"referencedDeclaration":4684,"src":"6071:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:33"},"returnParameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4935,"src":"6113:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4903,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:33"},"scope":5543,"src":"6012:299:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5046,"nodeType":"Block","src":"6587:1585:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4943,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"6601:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4949,"nodeType":"IfStatement","src":"6597:45:33","trueBody":{"id":4948,"nodeType":"Block","src":"6609:33:33","statements":[{"expression":{"hexValue":"30","id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4942,"id":4947,"nodeType":"Return","src":"6623:8:33"}]}},{"assignments":[4951],"declarations":[{"constant":false,"id":4951,"mutability":"mutable","name":"result","nameLocation":"7329:6:33","nodeType":"VariableDeclaration","scope":5046,"src":"7321:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4950,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4960,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4954,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"7349:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4953,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5215,5251],"referencedDeclaration":5215,"src":"7344:4:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4958,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:33"},{"id":5045,"nodeType":"UncheckedBlock","src":"7758:408:33","statements":[{"expression":{"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4961,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"7782:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"7792:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4963,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"7801:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4964,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"7805:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4971,"nodeType":"ExpressionStatement","src":"7782:35:33"},{"expression":{"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4972,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"7831:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"7841:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4974,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"7850:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4975,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"7854:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4982,"nodeType":"ExpressionStatement","src":"7831:35:33"},{"expression":{"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4983,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"7880:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4984,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"7890:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4985,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"7899:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4986,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"7903:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4993,"nodeType":"ExpressionStatement","src":"7880:35:33"},{"expression":{"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4994,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"7929:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4995,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"7939:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4996,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"7948:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4997,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"7952:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5000,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5004,"nodeType":"ExpressionStatement","src":"7929:35:33"},{"expression":{"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5005,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"7978:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"7988:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5007,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"7997:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5008,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"8001:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5015,"nodeType":"ExpressionStatement","src":"7978:35:33"},{"expression":{"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"8027:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5017,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"8037:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5018,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"8046:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5019,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"8050:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5026,"nodeType":"ExpressionStatement","src":"8027:35:33"},{"expression":{"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5027,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"8076:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5028,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"8086:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5029,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"8095:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5030,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"8099:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5037,"nodeType":"ExpressionStatement","src":"8076:35:33"},{"expression":{"arguments":[{"id":5039,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"8136:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5040,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"8144:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5041,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"8148:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5038,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"8132:3:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4942,"id":5044,"nodeType":"Return","src":"8125:30:33"}]}]},"documentation":{"id":4936,"nodeType":"StructuredDocumentation","src":"6317:208:33","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":5047,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:33","nodeType":"FunctionDefinition","parameters":{"id":4939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4938,"mutability":"mutable","name":"a","nameLocation":"6552:1:33","nodeType":"VariableDeclaration","scope":5047,"src":"6544:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4937,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:33"},"returnParameters":{"id":4942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5047,"src":"6578:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4940,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:33"},"scope":5543,"src":"6530:1642:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5082,"nodeType":"Block","src":"8348:161:33","statements":[{"id":5081,"nodeType":"UncheckedBlock","src":"8358:145:33","statements":[{"assignments":[5059],"declarations":[{"constant":false,"id":5059,"mutability":"mutable","name":"result","nameLocation":"8390:6:33","nodeType":"VariableDeclaration","scope":5081,"src":"8382:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5058,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5063,"initialValue":{"arguments":[{"id":5061,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"8404:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5060,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5047,5083],"referencedDeclaration":5047,"src":"8399:4:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:33"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5064,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"8427:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5065,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"8437:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5066,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"8449:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4684_$","typeString":"type(enum Math.Rounding)"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:33","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4682,"src":"8449:11:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"}},"src":"8437:23:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5069,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"8464:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5070,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"8473:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5072,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"8482:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:33","trueExpression":{"hexValue":"31","id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5057,"id":5080,"nodeType":"Return","src":"8420:72:33"}]}]},"documentation":{"id":5048,"nodeType":"StructuredDocumentation","src":"8178:89:33","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":5083,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:33","nodeType":"FunctionDefinition","parameters":{"id":5054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5050,"mutability":"mutable","name":"a","nameLocation":"8294:1:33","nodeType":"VariableDeclaration","scope":5083,"src":"8286:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5049,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5053,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:33","nodeType":"VariableDeclaration","scope":5083,"src":"8297:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"},"typeName":{"id":5052,"nodeType":"UserDefinedTypeName","pathNode":{"id":5051,"name":"Rounding","nameLocations":["8297:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":4684,"src":"8297:8:33"},"referencedDeclaration":4684,"src":"8297:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:33"},"returnParameters":{"id":5057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5083,"src":"8339:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5055,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:33"},"scope":5543,"src":"8272:237:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5214,"nodeType":"Block","src":"8694:922:33","statements":[{"assignments":[5092],"declarations":[{"constant":false,"id":5092,"mutability":"mutable","name":"result","nameLocation":"8712:6:33","nodeType":"VariableDeclaration","scope":5214,"src":"8704:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5091,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5094,"initialValue":{"hexValue":"30","id":5093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:33"},{"id":5211,"nodeType":"UncheckedBlock","src":"8732:855:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"8760:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:33","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5109,"nodeType":"IfStatement","src":"8756:99:33","trueBody":{"id":5108,"nodeType":"Block","src":"8778:77:33","statements":[{"expression":{"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"8796:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:33","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5103,"nodeType":"ExpressionStatement","src":"8796:13:33"},{"expression":{"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5104,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"8827:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:33","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5107,"nodeType":"ExpressionStatement","src":"8827:13:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"8872:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5124,"nodeType":"IfStatement","src":"8868:96:33","trueBody":{"id":5123,"nodeType":"Block","src":"8889:75:33","statements":[{"expression":{"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"8907:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5118,"nodeType":"ExpressionStatement","src":"8907:12:33"},{"expression":{"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5119,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"8937:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5122,"nodeType":"ExpressionStatement","src":"8937:12:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"8981:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5139,"nodeType":"IfStatement","src":"8977:96:33","trueBody":{"id":5138,"nodeType":"Block","src":"8998:75:33","statements":[{"expression":{"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"9016:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5133,"nodeType":"ExpressionStatement","src":"9016:12:33"},{"expression":{"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5134,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"9046:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5137,"nodeType":"ExpressionStatement","src":"9046:12:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"9090:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5154,"nodeType":"IfStatement","src":"9086:96:33","trueBody":{"id":5153,"nodeType":"Block","src":"9107:75:33","statements":[{"expression":{"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"9125:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5148,"nodeType":"ExpressionStatement","src":"9125:12:33"},{"expression":{"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"9155:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5152,"nodeType":"ExpressionStatement","src":"9155:12:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"9199:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5169,"nodeType":"IfStatement","src":"9195:93:33","trueBody":{"id":5168,"nodeType":"Block","src":"9215:73:33","statements":[{"expression":{"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"9233:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5163,"nodeType":"ExpressionStatement","src":"9233:11:33"},{"expression":{"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5164,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"9262:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5167,"nodeType":"ExpressionStatement","src":"9262:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"9305:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":5171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5184,"nodeType":"IfStatement","src":"9301:93:33","trueBody":{"id":5183,"nodeType":"Block","src":"9321:73:33","statements":[{"expression":{"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"9339:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5178,"nodeType":"ExpressionStatement","src":"9339:11:33"},{"expression":{"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5179,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"9368:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5182,"nodeType":"ExpressionStatement","src":"9368:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"9411:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5199,"nodeType":"IfStatement","src":"9407:93:33","trueBody":{"id":5198,"nodeType":"Block","src":"9427:73:33","statements":[{"expression":{"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"9445:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5193,"nodeType":"ExpressionStatement","src":"9445:11:33"},{"expression":{"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5194,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"9474:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5197,"nodeType":"ExpressionStatement","src":"9474:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"9517:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5210,"nodeType":"IfStatement","src":"9513:64:33","trueBody":{"id":5209,"nodeType":"Block","src":"9533:44:33","statements":[{"expression":{"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5205,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"9551:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5208,"nodeType":"ExpressionStatement","src":"9551:11:33"}]}}]},{"expression":{"id":5212,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"9603:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5090,"id":5213,"nodeType":"Return","src":"9596:13:33"}]},"documentation":{"id":5084,"nodeType":"StructuredDocumentation","src":"8515:113:33","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":5215,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:33","nodeType":"FunctionDefinition","parameters":{"id":5087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5086,"mutability":"mutable","name":"value","nameLocation":"8655:5:33","nodeType":"VariableDeclaration","scope":5215,"src":"8647:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5085,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:33"},"returnParameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5215,"src":"8685:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5088,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:33"},"scope":5543,"src":"8633:983:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5250,"nodeType":"Block","src":"9849:165:33","statements":[{"id":5249,"nodeType":"UncheckedBlock","src":"9859:149:33","statements":[{"assignments":[5227],"declarations":[{"constant":false,"id":5227,"mutability":"mutable","name":"result","nameLocation":"9891:6:33","nodeType":"VariableDeclaration","scope":5249,"src":"9883:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5226,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5231,"initialValue":{"arguments":[{"id":5229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"9905:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5228,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5215,5251],"referencedDeclaration":5215,"src":"9900:4:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:33"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"9932:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5233,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"9942:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5234,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"9954:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4684_$","typeString":"type(enum Math.Rounding)"}},"id":5235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:33","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4682,"src":"9954:11:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"}},"src":"9942:23:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5238,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"9974:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"9983:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:33","trueExpression":{"hexValue":"31","id":5243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5225,"id":5248,"nodeType":"Return","src":"9925:72:33"}]}]},"documentation":{"id":5216,"nodeType":"StructuredDocumentation","src":"9622:142:33","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5251,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:33","nodeType":"FunctionDefinition","parameters":{"id":5222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5218,"mutability":"mutable","name":"value","nameLocation":"9791:5:33","nodeType":"VariableDeclaration","scope":5251,"src":"9783:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5217,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5221,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:33","nodeType":"VariableDeclaration","scope":5251,"src":"9798:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"},"typeName":{"id":5220,"nodeType":"UserDefinedTypeName","pathNode":{"id":5219,"name":"Rounding","nameLocations":["9798:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":4684,"src":"9798:8:33"},"referencedDeclaration":4684,"src":"9798:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:33"},"returnParameters":{"id":5225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5251,"src":"9840:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5223,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:33"},"scope":5543,"src":"9769:245:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5379,"nodeType":"Block","src":"10201:854:33","statements":[{"assignments":[5260],"declarations":[{"constant":false,"id":5260,"mutability":"mutable","name":"result","nameLocation":"10219:6:33","nodeType":"VariableDeclaration","scope":5379,"src":"10211:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5259,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5262,"initialValue":{"hexValue":"30","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:33"},{"id":5376,"nodeType":"UncheckedBlock","src":"10239:787:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"10267:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:33","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5279,"nodeType":"IfStatement","src":"10263:103:33","trueBody":{"id":5278,"nodeType":"Block","src":"10286:80:33","statements":[{"expression":{"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"10304:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:33","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5273,"nodeType":"ExpressionStatement","src":"10304:17:33"},{"expression":{"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"10339:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5277,"nodeType":"ExpressionStatement","src":"10339:12:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"10383:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:33","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5296,"nodeType":"IfStatement","src":"10379:103:33","trueBody":{"id":5295,"nodeType":"Block","src":"10402:80:33","statements":[{"expression":{"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"10420:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:33","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5290,"nodeType":"ExpressionStatement","src":"10420:17:33"},{"expression":{"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5291,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"10455:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5294,"nodeType":"ExpressionStatement","src":"10455:12:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"10499:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:33","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5313,"nodeType":"IfStatement","src":"10495:103:33","trueBody":{"id":5312,"nodeType":"Block","src":"10518:80:33","statements":[{"expression":{"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"10536:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:33","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5307,"nodeType":"ExpressionStatement","src":"10536:17:33"},{"expression":{"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5308,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"10571:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5311,"nodeType":"ExpressionStatement","src":"10571:12:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"10615:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:33","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5330,"nodeType":"IfStatement","src":"10611:100:33","trueBody":{"id":5329,"nodeType":"Block","src":"10633:78:33","statements":[{"expression":{"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"10651:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:33","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5324,"nodeType":"ExpressionStatement","src":"10651:16:33"},{"expression":{"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5325,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"10685:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5328,"nodeType":"ExpressionStatement","src":"10685:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"10728:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:33","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5347,"nodeType":"IfStatement","src":"10724:100:33","trueBody":{"id":5346,"nodeType":"Block","src":"10746:78:33","statements":[{"expression":{"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"10764:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:33","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5341,"nodeType":"ExpressionStatement","src":"10764:16:33"},{"expression":{"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5342,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"10798:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5345,"nodeType":"ExpressionStatement","src":"10798:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"10841:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:33","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5364,"nodeType":"IfStatement","src":"10837:100:33","trueBody":{"id":5363,"nodeType":"Block","src":"10859:78:33","statements":[{"expression":{"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"10877:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:33","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5358,"nodeType":"ExpressionStatement","src":"10877:16:33"},{"expression":{"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5359,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"10911:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5362,"nodeType":"ExpressionStatement","src":"10911:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"10954:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5375,"nodeType":"IfStatement","src":"10950:66:33","trueBody":{"id":5374,"nodeType":"Block","src":"10972:44:33","statements":[{"expression":{"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5370,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"10990:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5373,"nodeType":"ExpressionStatement","src":"10990:11:33"}]}}]},{"expression":{"id":5377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"11042:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5258,"id":5378,"nodeType":"Return","src":"11035:13:33"}]},"documentation":{"id":5252,"nodeType":"StructuredDocumentation","src":"10020:114:33","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":5380,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:33","nodeType":"FunctionDefinition","parameters":{"id":5255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5254,"mutability":"mutable","name":"value","nameLocation":"10162:5:33","nodeType":"VariableDeclaration","scope":5380,"src":"10154:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5253,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:33"},"returnParameters":{"id":5258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5380,"src":"10192:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5256,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:33"},"scope":5543,"src":"10139:916:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5415,"nodeType":"Block","src":"11290:167:33","statements":[{"id":5414,"nodeType":"UncheckedBlock","src":"11300:151:33","statements":[{"assignments":[5392],"declarations":[{"constant":false,"id":5392,"mutability":"mutable","name":"result","nameLocation":"11332:6:33","nodeType":"VariableDeclaration","scope":5414,"src":"11324:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5391,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5396,"initialValue":{"arguments":[{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"11347:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5393,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5380,5416],"referencedDeclaration":5380,"src":"11341:5:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:33"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5397,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"11374:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5398,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"11384:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5399,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"11396:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4684_$","typeString":"type(enum Math.Rounding)"}},"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:33","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4682,"src":"11396:11:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"}},"src":"11384:23:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5403,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"11417:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"11426:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:33","trueExpression":{"hexValue":"31","id":5408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5390,"id":5413,"nodeType":"Return","src":"11367:73:33"}]}]},"documentation":{"id":5381,"nodeType":"StructuredDocumentation","src":"11061:143:33","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5416,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:33","nodeType":"FunctionDefinition","parameters":{"id":5387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5383,"mutability":"mutable","name":"value","nameLocation":"11232:5:33","nodeType":"VariableDeclaration","scope":5416,"src":"11224:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5382,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5386,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:33","nodeType":"VariableDeclaration","scope":5416,"src":"11239:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"},"typeName":{"id":5385,"nodeType":"UserDefinedTypeName","pathNode":{"id":5384,"name":"Rounding","nameLocations":["11239:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":4684,"src":"11239:8:33"},"referencedDeclaration":4684,"src":"11239:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:33"},"returnParameters":{"id":5390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5416,"src":"11281:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5388,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:33"},"scope":5543,"src":"11209:248:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5502,"nodeType":"Block","src":"11771:600:33","statements":[{"assignments":[5425],"declarations":[{"constant":false,"id":5425,"mutability":"mutable","name":"result","nameLocation":"11789:6:33","nodeType":"VariableDeclaration","scope":5502,"src":"11781:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5424,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5427,"initialValue":{"hexValue":"30","id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:33"},{"id":5499,"nodeType":"UncheckedBlock","src":"11809:533:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"11837:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:33","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5442,"nodeType":"IfStatement","src":"11833:98:33","trueBody":{"id":5441,"nodeType":"Block","src":"11855:76:33","statements":[{"expression":{"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"11873:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:33","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5436,"nodeType":"ExpressionStatement","src":"11873:13:33"},{"expression":{"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5437,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"11904:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5440,"nodeType":"ExpressionStatement","src":"11904:12:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"11948:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5457,"nodeType":"IfStatement","src":"11944:95:33","trueBody":{"id":5456,"nodeType":"Block","src":"11965:74:33","statements":[{"expression":{"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"11983:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5451,"nodeType":"ExpressionStatement","src":"11983:12:33"},{"expression":{"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5452,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"12013:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5455,"nodeType":"ExpressionStatement","src":"12013:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"12056:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5472,"nodeType":"IfStatement","src":"12052:95:33","trueBody":{"id":5471,"nodeType":"Block","src":"12073:74:33","statements":[{"expression":{"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"12091:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5466,"nodeType":"ExpressionStatement","src":"12091:12:33"},{"expression":{"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"12121:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5470,"nodeType":"ExpressionStatement","src":"12121:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"12164:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5487,"nodeType":"IfStatement","src":"12160:95:33","trueBody":{"id":5486,"nodeType":"Block","src":"12181:74:33","statements":[{"expression":{"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"12199:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5481,"nodeType":"ExpressionStatement","src":"12199:12:33"},{"expression":{"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5482,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"12229:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5485,"nodeType":"ExpressionStatement","src":"12229:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"12272:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5498,"nodeType":"IfStatement","src":"12268:64:33","trueBody":{"id":5497,"nodeType":"Block","src":"12288:44:33","statements":[{"expression":{"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5493,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"12306:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5496,"nodeType":"ExpressionStatement","src":"12306:11:33"}]}}]},{"expression":{"id":5500,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"12358:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5423,"id":5501,"nodeType":"Return","src":"12351:13:33"}]},"documentation":{"id":5417,"nodeType":"StructuredDocumentation","src":"11463:240:33","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5503,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:33","nodeType":"FunctionDefinition","parameters":{"id":5420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5419,"mutability":"mutable","name":"value","nameLocation":"11732:5:33","nodeType":"VariableDeclaration","scope":5503,"src":"11724:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5418,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:33"},"returnParameters":{"id":5423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5503,"src":"11762:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5421,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:33"},"scope":5543,"src":"11708:663:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5541,"nodeType":"Block","src":"12608:174:33","statements":[{"id":5540,"nodeType":"UncheckedBlock","src":"12618:158:33","statements":[{"assignments":[5515],"declarations":[{"constant":false,"id":5515,"mutability":"mutable","name":"result","nameLocation":"12650:6:33","nodeType":"VariableDeclaration","scope":5540,"src":"12642:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5514,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5519,"initialValue":{"arguments":[{"id":5517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"12666:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5516,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5503,5542],"referencedDeclaration":5503,"src":"12659:6:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:33"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5520,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"12693:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5521,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"12703:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5522,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"12715:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4684_$","typeString":"type(enum Math.Rounding)"}},"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:33","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4682,"src":"12715:11:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"}},"src":"12703:23:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"12736:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:33","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"12751:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:33","trueExpression":{"hexValue":"31","id":5534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5513,"id":5539,"nodeType":"Return","src":"12686:79:33"}]}]},"documentation":{"id":5504,"nodeType":"StructuredDocumentation","src":"12377:144:33","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5542,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:33","nodeType":"FunctionDefinition","parameters":{"id":5510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5506,"mutability":"mutable","name":"value","nameLocation":"12550:5:33","nodeType":"VariableDeclaration","scope":5542,"src":"12542:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5505,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5509,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:33","nodeType":"VariableDeclaration","scope":5542,"src":"12557:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"},"typeName":{"id":5508,"nodeType":"UserDefinedTypeName","pathNode":{"id":5507,"name":"Rounding","nameLocations":["12557:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":4684,"src":"12557:8:33"},"referencedDeclaration":4684,"src":"12557:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4684","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:33"},"returnParameters":{"id":5513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5542,"src":"12599:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5511,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:33"},"scope":5543,"src":"12526:256:33","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5544,"src":"202:12582:33","usedErrors":[],"usedEvents":[]}],"src":"103:12682:33"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"id":34,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[5648]},"id":5649,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5545,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:34"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5546,"nodeType":"StructuredDocumentation","src":"134:80:34","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5648,"linearizedBaseContracts":[5648],"name":"SignedMath","nameLocation":"223:10:34","nodeType":"ContractDefinition","nodes":[{"body":{"id":5563,"nodeType":"Block","src":"375:37:34","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"392:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5557,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"396:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5560,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"404:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:34","trueExpression":{"id":5559,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"400:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5555,"id":5562,"nodeType":"Return","src":"385:20:34"}]},"documentation":{"id":5547,"nodeType":"StructuredDocumentation","src":"240:66:34","text":" @dev Returns the largest of two signed numbers."},"id":5564,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:34","nodeType":"FunctionDefinition","parameters":{"id":5552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5549,"mutability":"mutable","name":"a","nameLocation":"331:1:34","nodeType":"VariableDeclaration","scope":5564,"src":"324:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5548,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5551,"mutability":"mutable","name":"b","nameLocation":"341:1:34","nodeType":"VariableDeclaration","scope":5564,"src":"334:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5550,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:34"},"returnParameters":{"id":5555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5564,"src":"367:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5553,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:34"},"scope":5648,"src":"311:101:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5581,"nodeType":"Block","src":"554:37:34","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5574,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"571:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5575,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"575:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5578,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"583:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:34","trueExpression":{"id":5577,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"579:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5573,"id":5580,"nodeType":"Return","src":"564:20:34"}]},"documentation":{"id":5565,"nodeType":"StructuredDocumentation","src":"418:67:34","text":" @dev Returns the smallest of two signed numbers."},"id":5582,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:34","nodeType":"FunctionDefinition","parameters":{"id":5570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5567,"mutability":"mutable","name":"a","nameLocation":"510:1:34","nodeType":"VariableDeclaration","scope":5582,"src":"503:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5566,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5569,"mutability":"mutable","name":"b","nameLocation":"520:1:34","nodeType":"VariableDeclaration","scope":5582,"src":"513:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5568,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:34"},"returnParameters":{"id":5573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5582,"src":"546:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5571,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:34"},"scope":5648,"src":"490:101:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5625,"nodeType":"Block","src":"796:162:34","statements":[{"assignments":[5593],"declarations":[{"constant":false,"id":5593,"mutability":"mutable","name":"x","nameLocation":"865:1:34","nodeType":"VariableDeclaration","scope":5625,"src":"858:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5592,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5606,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5594,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"870:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5595,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5587,"src":"874:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5598,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"881:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5599,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5587,"src":"885:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:34","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:34"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5607,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"910:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5612,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"930:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5610,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:34","typeDescriptions":{}}},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:34","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5608,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:34","typeDescriptions":{}}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5617,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"944:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5618,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5587,"src":"948:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5622,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5591,"id":5624,"nodeType":"Return","src":"903:48:34"}]},"documentation":{"id":5583,"nodeType":"StructuredDocumentation","src":"597:126:34","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5626,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:34","nodeType":"FunctionDefinition","parameters":{"id":5588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5585,"mutability":"mutable","name":"a","nameLocation":"752:1:34","nodeType":"VariableDeclaration","scope":5626,"src":"745:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5584,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5587,"mutability":"mutable","name":"b","nameLocation":"762:1:34","nodeType":"VariableDeclaration","scope":5626,"src":"755:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5586,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:34"},"returnParameters":{"id":5591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5626,"src":"788:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5589,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:34"},"scope":5648,"src":"728:230:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5646,"nodeType":"Block","src":"1102:158:34","statements":[{"id":5645,"nodeType":"UncheckedBlock","src":"1112:142:34","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5636,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"1227:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:34","subExpression":{"id":5640,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"1241:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:34","trueExpression":{"id":5639,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"1236:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5634,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:34","typeDescriptions":{}}},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5633,"id":5644,"nodeType":"Return","src":"1212:31:34"}]}]},"documentation":{"id":5627,"nodeType":"StructuredDocumentation","src":"964:78:34","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5647,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:34","nodeType":"FunctionDefinition","parameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"n","nameLocation":"1067:1:34","nodeType":"VariableDeclaration","scope":5647,"src":"1060:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5628,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:34"},"returnParameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5647,"src":"1093:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:34"},"scope":5648,"src":"1047:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5649,"src":"215:1047:34","usedErrors":[],"usedEvents":[]}],"src":"109:1154:34"}},"contracts/Jury.sol":{"id":35,"ast":{"absolutePath":"contracts/Jury.sol","exportedSymbols":{"Address":[3412],"Context":[3442],"Counters":[3516],"ECDSA":[4437],"EIP712":[4641],"ERC165":[4665],"ERC1967Upgrade":[500],"ERC20":[1490],"ERC20Pausable":[1605],"ERC20Permit":[1777],"ERC721":[2765],"ERC721URIStorage":[3055],"IBeacon":[510],"IERC165":[4677],"IERC1822Proxiable":[196],"IERC1967":[136],"IERC20":[1568],"IERC20Metadata":[1802],"IERC20Permit":[1838],"IERC4906":[158],"IERC5267":[183],"IERC721":[2881],"IERC721Metadata":[3082],"IERC721Receiver":[2899],"Initializable":[679],"Jury":[6002],"JuryNFTSwap":[6864],"Math":[5543],"MelonNFT":[6942],"MelonToken":[7003],"Ownable":[112],"Pausable":[903],"Pledge":[7298],"Proposal":[8450],"ShortString":[3521],"ShortStrings":[3732],"SignedMath":[5648],"StorageSlot":[3842],"Strings":[4071],"UUPSUpgradeable":[795]},"id":6003,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5650,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:35"},{"absolutePath":"contracts/Proposal.sol","file":"./Proposal.sol","id":5651,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6003,"sourceUnit":8451,"src":"58:24:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts/proxy/utils/Initializable.sol","id":5652,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6003,"sourceUnit":680,"src":"83:63:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","id":5653,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6003,"sourceUnit":796,"src":"147:65:35","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5654,"name":"Initializable","nameLocations":["231:13:35"],"nodeType":"IdentifierPath","referencedDeclaration":679,"src":"231:13:35"},"id":5655,"nodeType":"InheritanceSpecifier","src":"231:13:35"},{"baseName":{"id":5656,"name":"UUPSUpgradeable","nameLocations":["246:15:35"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"246:15:35"},"id":5657,"nodeType":"InheritanceSpecifier","src":"246:15:35"}],"canonicalName":"Jury","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6002,"linearizedBaseContracts":[6002,795,500,136,196,679],"name":"Jury","nameLocation":"223:4:35","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Jury.JuryInfo","id":5666,"members":[{"constant":false,"id":5659,"mutability":"mutable","name":"winOptionId","nameLocation":"302:11:35","nodeType":"VariableDeclaration","scope":5666,"src":"294:19:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5658,"name":"uint256","nodeType":"ElementaryTypeName","src":"294:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5663,"mutability":"mutable","name":"selections","nameLocation":"335:10:35","nodeType":"VariableDeclaration","scope":5666,"src":"323:22:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Selection_$5671_storage_$dyn_storage_ptr","typeString":"struct Jury.Selection[]"},"typeName":{"baseType":{"id":5661,"nodeType":"UserDefinedTypeName","pathNode":{"id":5660,"name":"Selection","nameLocations":["323:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":5671,"src":"323:9:35"},"referencedDeclaration":5671,"src":"323:9:35","typeDescriptions":{"typeIdentifier":"t_struct$_Selection_$5671_storage_ptr","typeString":"struct Jury.Selection"}},"id":5662,"nodeType":"ArrayTypeName","src":"323:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Selection_$5671_storage_$dyn_storage_ptr","typeString":"struct Jury.Selection[]"}},"visibility":"internal"},{"constant":false,"id":5665,"mutability":"mutable","name":"deadline","nameLocation":"363:8:35","nodeType":"VariableDeclaration","scope":5666,"src":"355:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5664,"name":"uint256","nodeType":"ElementaryTypeName","src":"355:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"JuryInfo","nameLocation":"275:8:35","nodeType":"StructDefinition","scope":6002,"src":"268:110:35","visibility":"public"},{"canonicalName":"Jury.Selection","id":5671,"members":[{"constant":false,"id":5668,"mutability":"mutable","name":"juror","nameLocation":"419:5:35","nodeType":"VariableDeclaration","scope":5671,"src":"411:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5667,"name":"address","nodeType":"ElementaryTypeName","src":"411:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5670,"mutability":"mutable","name":"optionId","nameLocation":"442:8:35","nodeType":"VariableDeclaration","scope":5671,"src":"434:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5669,"name":"uint256","nodeType":"ElementaryTypeName","src":"434:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Selection","nameLocation":"391:9:35","nodeType":"StructDefinition","scope":6002,"src":"384:73:35","visibility":"public"},{"constant":false,"functionSelector":"db9e7185","id":5673,"mutability":"mutable","name":"proposalAddr","nameLocation":"478:12:35","nodeType":"VariableDeclaration","scope":6002,"src":"463:27:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5672,"name":"address","nodeType":"ElementaryTypeName","src":"463:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"23a21cc3","id":5675,"mutability":"mutable","name":"impleAddr","nameLocation":"511:9:35","nodeType":"VariableDeclaration","scope":6002,"src":"496:24:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5674,"name":"address","nodeType":"ElementaryTypeName","src":"496:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"bc17a16a","id":5680,"mutability":"mutable","name":"juryInfos","nameLocation":"567:9:35","nodeType":"VariableDeclaration","scope":6002,"src":"531:45:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_JuryInfo_$5666_storage_$","typeString":"mapping(uint256 => struct Jury.JuryInfo)"},"typeName":{"id":5679,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5676,"name":"uint256","nodeType":"ElementaryTypeName","src":"539:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"531:28:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_JuryInfo_$5666_storage_$","typeString":"mapping(uint256 => struct Jury.JuryInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5678,"nodeType":"UserDefinedTypeName","pathNode":{"id":5677,"name":"JuryInfo","nameLocations":["550:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":5666,"src":"550:8:35"},"referencedDeclaration":5666,"src":"550:8:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage_ptr","typeString":"struct Jury.JuryInfo"}}},"visibility":"public"},{"errorSelector":"6c9a4584","id":5684,"name":"JuryHasBeenCreated","nameLocation":"589:18:35","nodeType":"ErrorDefinition","parameters":{"id":5683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5682,"mutability":"mutable","name":"proposalId","nameLocation":"616:10:35","nodeType":"VariableDeclaration","scope":5684,"src":"608:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5681,"name":"uint256","nodeType":"ElementaryTypeName","src":"608:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"607:20:35"},"src":"583:45:35"},{"errorSelector":"e96ecc2f","id":5690,"name":"NotYetDue","nameLocation":"639:9:35","nodeType":"ErrorDefinition","parameters":{"id":5689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"proposalId","nameLocation":"657:10:35","nodeType":"VariableDeclaration","scope":5690,"src":"649:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5685,"name":"uint256","nodeType":"ElementaryTypeName","src":"649:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5688,"mutability":"mutable","name":"deadline","nameLocation":"677:8:35","nodeType":"VariableDeclaration","scope":5690,"src":"669:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5687,"name":"uint256","nodeType":"ElementaryTypeName","src":"669:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"648:38:35"},"src":"633:54:35"},{"anonymous":false,"eventSelector":"123de41493f6e442c2fdb676dd1c3d9f1e0a7b7531ca0cdb9f1026f7569e2bff","id":5694,"name":"Fail","nameLocation":"699:4:35","nodeType":"EventDefinition","parameters":{"id":5693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5692,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"712:10:35","nodeType":"VariableDeclaration","scope":5694,"src":"704:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5691,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:20:35"},"src":"693:31:35"},{"anonymous":false,"eventSelector":"36d4ea4d2a836eb91a99a36614ff84d373648ee61d232da708aa2eb96ef45c58","id":5698,"name":"Success","nameLocation":"735:7:35","nodeType":"EventDefinition","parameters":{"id":5697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5696,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"751:10:35","nodeType":"VariableDeclaration","scope":5698,"src":"743:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5695,"name":"uint256","nodeType":"ElementaryTypeName","src":"743:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"742:20:35"},"src":"729:34:35"},{"anonymous":false,"eventSelector":"6cc3d22573be20dfd1b2cdaf1c53f2c6964223283a4b3ed2b8e51ef4a5e0a97f","id":5706,"name":"CreateProposalJury","nameLocation":"774:18:35","nodeType":"EventDefinition","parameters":{"id":5705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5700,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"810:10:35","nodeType":"VariableDeclaration","scope":5706,"src":"802:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5699,"name":"uint256","nodeType":"ElementaryTypeName","src":"802:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5702,"indexed":false,"mutability":"mutable","name":"winOption","nameLocation":"838:9:35","nodeType":"VariableDeclaration","scope":5706,"src":"830:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5701,"name":"uint256","nodeType":"ElementaryTypeName","src":"830:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5704,"indexed":false,"mutability":"mutable","name":"deadline","nameLocation":"865:8:35","nodeType":"VariableDeclaration","scope":5706,"src":"857:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5703,"name":"uint256","nodeType":"ElementaryTypeName","src":"857:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"792:87:35"},"src":"768:112:35"},{"body":{"id":5717,"nodeType":"Block","src":"950:45:35","statements":[{"expression":{"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5713,"name":"proposalAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"960:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5714,"name":"_proposalAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"975:13:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"960:28:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5716,"nodeType":"ExpressionStatement","src":"960:28:35"}]},"functionSelector":"c4d66de8","id":5718,"implemented":true,"kind":"function","modifiers":[{"id":5711,"kind":"modifierInvocation","modifierName":{"id":5710,"name":"initializer","nameLocations":["938:11:35"],"nodeType":"IdentifierPath","referencedDeclaration":581,"src":"938:11:35"},"nodeType":"ModifierInvocation","src":"938:11:35"}],"name":"initialize","nameLocation":"895:10:35","nodeType":"FunctionDefinition","parameters":{"id":5709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5708,"mutability":"mutable","name":"_proposalAddr","nameLocation":"914:13:35","nodeType":"VariableDeclaration","scope":5718,"src":"906:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5707,"name":"address","nodeType":"ElementaryTypeName","src":"906:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"905:23:35"},"returnParameters":{"id":5712,"nodeType":"ParameterList","parameters":[],"src":"950:0:35"},"scope":6002,"src":"886:109:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5727,"nodeType":"Block","src":"1057:45:35","statements":[{"expression":{"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5723,"name":"proposalAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"1067:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5724,"name":"_proposalAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"1082:13:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1067:28:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5726,"nodeType":"ExpressionStatement","src":"1067:28:35"}]},"functionSelector":"ad4c0171","id":5728,"implemented":true,"kind":"function","modifiers":[],"name":"setNewProposal","nameLocation":"1010:14:35","nodeType":"FunctionDefinition","parameters":{"id":5721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5720,"mutability":"mutable","name":"_proposalAddr","nameLocation":"1033:13:35","nodeType":"VariableDeclaration","scope":5728,"src":"1025:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5719,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1024:23:35"},"returnParameters":{"id":5722,"nodeType":"ParameterList","parameters":[],"src":"1057:0:35"},"scope":6002,"src":"1001:101:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5806,"nodeType":"Block","src":"1234:443:35","statements":[{"assignments":[5741],"declarations":[{"constant":false,"id":5741,"mutability":"mutable","name":"juryInfo","nameLocation":"1260:8:35","nodeType":"VariableDeclaration","scope":5806,"src":"1244:24:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_memory_ptr","typeString":"struct Jury.JuryInfo"},"typeName":{"id":5740,"nodeType":"UserDefinedTypeName","pathNode":{"id":5739,"name":"JuryInfo","nameLocations":["1244:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":5666,"src":"1244:8:35"},"referencedDeclaration":5666,"src":"1244:8:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage_ptr","typeString":"struct Jury.JuryInfo"}},"visibility":"internal"}],"id":5745,"initialValue":{"baseExpression":{"id":5742,"name":"juryInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"1271:9:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_JuryInfo_$5666_storage_$","typeString":"mapping(uint256 => struct Jury.JuryInfo storage ref)"}},"id":5744,"indexExpression":{"id":5743,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"1281:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1271:21:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage","typeString":"struct Jury.JuryInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1244:48:35"},{"assignments":[5750],"declarations":[{"constant":false,"id":5750,"mutability":"mutable","name":"selections","nameLocation":"1321:10:35","nodeType":"VariableDeclaration","scope":5806,"src":"1302:29:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Selection_$5671_memory_ptr_$dyn_memory_ptr","typeString":"struct Jury.Selection[]"},"typeName":{"baseType":{"id":5748,"nodeType":"UserDefinedTypeName","pathNode":{"id":5747,"name":"Selection","nameLocations":["1302:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":5671,"src":"1302:9:35"},"referencedDeclaration":5671,"src":"1302:9:35","typeDescriptions":{"typeIdentifier":"t_struct$_Selection_$5671_storage_ptr","typeString":"struct Jury.Selection"}},"id":5749,"nodeType":"ArrayTypeName","src":"1302:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Selection_$5671_storage_$dyn_storage_ptr","typeString":"struct Jury.Selection[]"}},"visibility":"internal"}],"id":5753,"initialValue":{"expression":{"id":5751,"name":"juryInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"1334:8:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_memory_ptr","typeString":"struct Jury.JuryInfo memory"}},"id":5752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1343:10:35","memberName":"selections","nodeType":"MemberAccess","referencedDeclaration":5663,"src":"1334:19:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Selection_$5671_memory_ptr_$dyn_memory_ptr","typeString":"struct Jury.Selection memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1302:51:35"},{"expression":{"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5754,"name":"jurors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"1364:6:35","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5758,"name":"selections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"1387:10:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Selection_$5671_memory_ptr_$dyn_memory_ptr","typeString":"struct Jury.Selection memory[] memory"}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1398:6:35","memberName":"length","nodeType":"MemberAccess","src":"1387:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1373:13:35","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":5755,"name":"address","nodeType":"ElementaryTypeName","src":"1377:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5756,"nodeType":"ArrayTypeName","src":"1377:9:35","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"1364:41:35","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5762,"nodeType":"ExpressionStatement","src":"1364:41:35"},{"expression":{"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5763,"name":"optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"1415:8:35","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5767,"name":"selections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"1440:10:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Selection_$5671_memory_ptr_$dyn_memory_ptr","typeString":"struct Jury.Selection memory[] memory"}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:6:35","memberName":"length","nodeType":"MemberAccess","src":"1440:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1426:13:35","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5764,"name":"uint256","nodeType":"ElementaryTypeName","src":"1430:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5765,"nodeType":"ArrayTypeName","src":"1430:9:35","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1426:32:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"1415:43:35","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5771,"nodeType":"ExpressionStatement","src":"1415:43:35"},{"body":{"id":5804,"nodeType":"Block","src":"1517:154:35","statements":[{"assignments":[5785],"declarations":[{"constant":false,"id":5785,"mutability":"mutable","name":"selection","nameLocation":"1548:9:35","nodeType":"VariableDeclaration","scope":5804,"src":"1531:26:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Selection_$5671_memory_ptr","typeString":"struct Jury.Selection"},"typeName":{"id":5784,"nodeType":"UserDefinedTypeName","pathNode":{"id":5783,"name":"Selection","nameLocations":["1531:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":5671,"src":"1531:9:35"},"referencedDeclaration":5671,"src":"1531:9:35","typeDescriptions":{"typeIdentifier":"t_struct$_Selection_$5671_storage_ptr","typeString":"struct Jury.Selection"}},"visibility":"internal"}],"id":5789,"initialValue":{"baseExpression":{"id":5786,"name":"selections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"1560:10:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Selection_$5671_memory_ptr_$dyn_memory_ptr","typeString":"struct Jury.Selection memory[] memory"}},"id":5788,"indexExpression":{"id":5787,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"1571:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1560:13:35","typeDescriptions":{"typeIdentifier":"t_struct$_Selection_$5671_memory_ptr","typeString":"struct Jury.Selection memory"}},"nodeType":"VariableDeclarationStatement","src":"1531:42:35"},{"expression":{"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5790,"name":"jurors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"1587:6:35","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5792,"indexExpression":{"id":5791,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"1594:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1587:9:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5793,"name":"selection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"1599:9:35","typeDescriptions":{"typeIdentifier":"t_struct$_Selection_$5671_memory_ptr","typeString":"struct Jury.Selection memory"}},"id":5794,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1609:5:35","memberName":"juror","nodeType":"MemberAccess","referencedDeclaration":5668,"src":"1599:15:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1587:27:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5796,"nodeType":"ExpressionStatement","src":"1587:27:35"},{"expression":{"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5797,"name":"optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"1628:8:35","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5799,"indexExpression":{"id":5798,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"1637:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1628:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5800,"name":"selection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"1642:9:35","typeDescriptions":{"typeIdentifier":"t_struct$_Selection_$5671_memory_ptr","typeString":"struct Jury.Selection memory"}},"id":5801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1652:8:35","memberName":"optionId","nodeType":"MemberAccess","referencedDeclaration":5670,"src":"1642:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1628:32:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5803,"nodeType":"ExpressionStatement","src":"1628:32:35"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5776,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"1489:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5777,"name":"selections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"1493:10:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Selection_$5671_memory_ptr_$dyn_memory_ptr","typeString":"struct Jury.Selection memory[] memory"}},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1504:6:35","memberName":"length","nodeType":"MemberAccess","src":"1493:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1489:21:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5805,"initializationExpression":{"assignments":[5773],"declarations":[{"constant":false,"id":5773,"mutability":"mutable","name":"i","nameLocation":"1482:1:35","nodeType":"VariableDeclaration","scope":5805,"src":"1474:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5772,"name":"uint256","nodeType":"ElementaryTypeName","src":"1474:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5775,"initialValue":{"hexValue":"30","id":5774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1486:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1474:13:35"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1512:3:35","subExpression":{"id":5780,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"1512:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5782,"nodeType":"ExpressionStatement","src":"1512:3:35"},"nodeType":"ForStatement","src":"1469:202:35"}]},"functionSelector":"9d66a9cd","id":5807,"implemented":true,"kind":"function","modifiers":[],"name":"getDetail","nameLocation":"1117:9:35","nodeType":"FunctionDefinition","parameters":{"id":5731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5730,"mutability":"mutable","name":"proposalId","nameLocation":"1144:10:35","nodeType":"VariableDeclaration","scope":5807,"src":"1136:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5729,"name":"uint256","nodeType":"ElementaryTypeName","src":"1136:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1126:34:35"},"returnParameters":{"id":5738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5734,"mutability":"mutable","name":"jurors","nameLocation":"1199:6:35","nodeType":"VariableDeclaration","scope":5807,"src":"1182:23:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5732,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5733,"nodeType":"ArrayTypeName","src":"1182:9:35","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5737,"mutability":"mutable","name":"optionId","nameLocation":"1224:8:35","nodeType":"VariableDeclaration","scope":5807,"src":"1207:25:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5735,"name":"uint256","nodeType":"ElementaryTypeName","src":"1207:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5736,"nodeType":"ArrayTypeName","src":"1207:9:35","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1181:52:35"},"scope":6002,"src":"1108:569:35","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5817,"nodeType":"Block","src":"1729:44:35","statements":[{"expression":{"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1739:27:35","subExpression":{"baseExpression":{"id":5812,"name":"juryInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"1746:9:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_JuryInfo_$5666_storage_$","typeString":"mapping(uint256 => struct Jury.JuryInfo storage ref)"}},"id":5814,"indexExpression":{"id":5813,"name":"proposald","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"1756:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1746:20:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage","typeString":"struct Jury.JuryInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5816,"nodeType":"ExpressionStatement","src":"1739:27:35"}]},"functionSelector":"4e542c5f","id":5818,"implemented":true,"kind":"function","modifiers":[],"name":"deleteById","nameLocation":"1692:10:35","nodeType":"FunctionDefinition","parameters":{"id":5810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5809,"mutability":"mutable","name":"proposald","nameLocation":"1711:9:35","nodeType":"VariableDeclaration","scope":5818,"src":"1703:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5808,"name":"uint256","nodeType":"ElementaryTypeName","src":"1703:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1702:19:35"},"returnParameters":{"id":5811,"nodeType":"ParameterList","parameters":[],"src":"1729:0:35"},"scope":6002,"src":"1683:90:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5864,"nodeType":"Block","src":"1893:353:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5827,"name":"juryInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"1907:9:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_JuryInfo_$5666_storage_$","typeString":"mapping(uint256 => struct Jury.JuryInfo storage ref)"}},"id":5829,"indexExpression":{"id":5828,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"1917:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1907:21:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage","typeString":"struct Jury.JuryInfo storage ref"}},"id":5830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1929:8:35","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":5665,"src":"1907:30:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1941:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1907:35:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5838,"nodeType":"IfStatement","src":"1903:103:35","trueBody":{"id":5837,"nodeType":"Block","src":"1944:62:35","statements":[{"errorCall":{"arguments":[{"id":5834,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"1984:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5833,"name":"JuryHasBeenCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"1965:18:35","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1965:30:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5836,"nodeType":"RevertStatement","src":"1958:37:35"}]}},{"assignments":[5841],"declarations":[{"constant":false,"id":5841,"mutability":"mutable","name":"newProposalJury","nameLocation":"2033:15:35","nodeType":"VariableDeclaration","scope":5864,"src":"2016:32:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage_ptr","typeString":"struct Jury.JuryInfo"},"typeName":{"id":5840,"nodeType":"UserDefinedTypeName","pathNode":{"id":5839,"name":"JuryInfo","nameLocations":["2016:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":5666,"src":"2016:8:35"},"referencedDeclaration":5666,"src":"2016:8:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage_ptr","typeString":"struct Jury.JuryInfo"}},"visibility":"internal"}],"id":5845,"initialValue":{"baseExpression":{"id":5842,"name":"juryInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"2051:9:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_JuryInfo_$5666_storage_$","typeString":"mapping(uint256 => struct Jury.JuryInfo storage ref)"}},"id":5844,"indexExpression":{"id":5843,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"2061:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2051:21:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage","typeString":"struct Jury.JuryInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2016:56:35"},{"expression":{"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5846,"name":"newProposalJury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"2083:15:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage_ptr","typeString":"struct Jury.JuryInfo storage pointer"}},"id":5848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2099:11:35","memberName":"winOptionId","nodeType":"MemberAccess","referencedDeclaration":5659,"src":"2083:27:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5849,"name":"winOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"2113:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2083:41:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5851,"nodeType":"ExpressionStatement","src":"2083:41:35"},{"expression":{"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5852,"name":"newProposalJury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"2135:15:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage_ptr","typeString":"struct Jury.JuryInfo storage pointer"}},"id":5854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2151:8:35","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":5665,"src":"2135:24:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5855,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5824,"src":"2162:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2135:35:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5857,"nodeType":"ExpressionStatement","src":"2135:35:35"},{"eventCall":{"arguments":[{"id":5859,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"2205:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5860,"name":"winOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"2217:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5861,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5824,"src":"2230:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5858,"name":"CreateProposalJury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"2186:18:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2186:53:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5863,"nodeType":"EmitStatement","src":"2181:58:35"}]},"functionSelector":"c97fe94b","id":5865,"implemented":true,"kind":"function","modifiers":[],"name":"create","nameLocation":"1788:6:35","nodeType":"FunctionDefinition","parameters":{"id":5825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5820,"mutability":"mutable","name":"proposalId","nameLocation":"1812:10:35","nodeType":"VariableDeclaration","scope":5865,"src":"1804:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1804:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5822,"mutability":"mutable","name":"winOptionId","nameLocation":"1840:11:35","nodeType":"VariableDeclaration","scope":5865,"src":"1832:19:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5821,"name":"uint256","nodeType":"ElementaryTypeName","src":"1832:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5824,"mutability":"mutable","name":"deadline","nameLocation":"1869:8:35","nodeType":"VariableDeclaration","scope":5865,"src":"1861:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5823,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1794:89:35"},"returnParameters":{"id":5826,"nodeType":"ParameterList","parameters":[],"src":"1893:0:35"},"scope":6002,"src":"1779:467:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5896,"nodeType":"Block","src":"2313:250:35","statements":[{"assignments":[5874],"declarations":[{"constant":false,"id":5874,"mutability":"mutable","name":"newSelection","nameLocation":"2340:12:35","nodeType":"VariableDeclaration","scope":5896,"src":"2323:29:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Selection_$5671_memory_ptr","typeString":"struct Jury.Selection"},"typeName":{"id":5873,"nodeType":"UserDefinedTypeName","pathNode":{"id":5872,"name":"Selection","nameLocations":["2323:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":5671,"src":"2323:9:35"},"referencedDeclaration":5671,"src":"2323:9:35","typeDescriptions":{"typeIdentifier":"t_struct$_Selection_$5671_storage_ptr","typeString":"struct Jury.Selection"}},"visibility":"internal"}],"id":5880,"initialValue":{"arguments":[{"expression":{"id":5876,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2386:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2390:6:35","memberName":"sender","nodeType":"MemberAccess","src":"2386:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5878,"name":"optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"2420:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5875,"name":"Selection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"2355:9:35","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Selection_$5671_storage_ptr_$","typeString":"type(struct Jury.Selection storage pointer)"}},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2379:5:35","2410:8:35"],"names":["juror","optionId"],"nodeType":"FunctionCall","src":"2355:84:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Selection_$5671_memory_ptr","typeString":"struct Jury.Selection memory"}},"nodeType":"VariableDeclarationStatement","src":"2323:116:35"},{"assignments":[5883],"declarations":[{"constant":false,"id":5883,"mutability":"mutable","name":"proposalJury","nameLocation":"2467:12:35","nodeType":"VariableDeclaration","scope":5896,"src":"2450:29:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage_ptr","typeString":"struct Jury.JuryInfo"},"typeName":{"id":5882,"nodeType":"UserDefinedTypeName","pathNode":{"id":5881,"name":"JuryInfo","nameLocations":["2450:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":5666,"src":"2450:8:35"},"referencedDeclaration":5666,"src":"2450:8:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage_ptr","typeString":"struct Jury.JuryInfo"}},"visibility":"internal"}],"id":5887,"initialValue":{"baseExpression":{"id":5884,"name":"juryInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"2482:9:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_JuryInfo_$5666_storage_$","typeString":"mapping(uint256 => struct Jury.JuryInfo storage ref)"}},"id":5886,"indexExpression":{"id":5885,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5867,"src":"2492:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2482:21:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage","typeString":"struct Jury.JuryInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2450:53:35"},{"expression":{"arguments":[{"id":5893,"name":"newSelection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"2543:12:35","typeDescriptions":{"typeIdentifier":"t_struct$_Selection_$5671_memory_ptr","typeString":"struct Jury.Selection memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Selection_$5671_memory_ptr","typeString":"struct Jury.Selection memory"}],"expression":{"expression":{"id":5888,"name":"proposalJury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"2514:12:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage_ptr","typeString":"struct Jury.JuryInfo storage pointer"}},"id":5891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2527:10:35","memberName":"selections","nodeType":"MemberAccess","referencedDeclaration":5663,"src":"2514:23:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Selection_$5671_storage_$dyn_storage","typeString":"struct Jury.Selection storage ref[] storage ref"}},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2538:4:35","memberName":"push","nodeType":"MemberAccess","src":"2514:28:35","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Selection_$5671_storage_$dyn_storage_ptr_$_t_struct$_Selection_$5671_storage_$returns$__$attached_to$_t_array$_t_struct$_Selection_$5671_storage_$dyn_storage_ptr_$","typeString":"function (struct Jury.Selection storage ref[] storage pointer,struct Jury.Selection storage ref)"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2514:42:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5895,"nodeType":"ExpressionStatement","src":"2514:42:35"}]},"functionSelector":"b384abef","id":5897,"implemented":true,"kind":"function","modifiers":[],"name":"vote","nameLocation":"2261:4:35","nodeType":"FunctionDefinition","parameters":{"id":5870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5867,"mutability":"mutable","name":"proposalId","nameLocation":"2274:10:35","nodeType":"VariableDeclaration","scope":5897,"src":"2266:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5866,"name":"uint256","nodeType":"ElementaryTypeName","src":"2266:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5869,"mutability":"mutable","name":"optionId","nameLocation":"2294:8:35","nodeType":"VariableDeclaration","scope":5897,"src":"2286:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5868,"name":"uint256","nodeType":"ElementaryTypeName","src":"2286:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2265:38:35"},"returnParameters":{"id":5871,"nodeType":"ParameterList","parameters":[],"src":"2313:0:35"},"scope":6002,"src":"2252:311:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5989,"nodeType":"Block","src":"2620:728:35","statements":[{"assignments":[5904],"declarations":[{"constant":false,"id":5904,"mutability":"mutable","name":"juryInfo","nameLocation":"2647:8:35","nodeType":"VariableDeclaration","scope":5989,"src":"2630:25:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage_ptr","typeString":"struct Jury.JuryInfo"},"typeName":{"id":5903,"nodeType":"UserDefinedTypeName","pathNode":{"id":5902,"name":"JuryInfo","nameLocations":["2630:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":5666,"src":"2630:8:35"},"referencedDeclaration":5666,"src":"2630:8:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage_ptr","typeString":"struct Jury.JuryInfo"}},"visibility":"internal"}],"id":5908,"initialValue":{"baseExpression":{"id":5905,"name":"juryInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"2658:9:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_JuryInfo_$5666_storage_$","typeString":"mapping(uint256 => struct Jury.JuryInfo storage ref)"}},"id":5907,"indexExpression":{"id":5906,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"2668:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2658:21:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage","typeString":"struct Jury.JuryInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2630:49:35"},{"assignments":[5913],"declarations":[{"constant":false,"id":5913,"mutability":"mutable","name":"selections","nameLocation":"2708:10:35","nodeType":"VariableDeclaration","scope":5989,"src":"2689:29:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Selection_$5671_memory_ptr_$dyn_memory_ptr","typeString":"struct Jury.Selection[]"},"typeName":{"baseType":{"id":5911,"nodeType":"UserDefinedTypeName","pathNode":{"id":5910,"name":"Selection","nameLocations":["2689:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":5671,"src":"2689:9:35"},"referencedDeclaration":5671,"src":"2689:9:35","typeDescriptions":{"typeIdentifier":"t_struct$_Selection_$5671_storage_ptr","typeString":"struct Jury.Selection"}},"id":5912,"nodeType":"ArrayTypeName","src":"2689:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Selection_$5671_storage_$dyn_storage_ptr","typeString":"struct Jury.Selection[]"}},"visibility":"internal"}],"id":5916,"initialValue":{"expression":{"id":5914,"name":"juryInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"2721:8:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage_ptr","typeString":"struct Jury.JuryInfo storage pointer"}},"id":5915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2730:10:35","memberName":"selections","nodeType":"MemberAccess","referencedDeclaration":5663,"src":"2721:19:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Selection_$5671_storage_$dyn_storage","typeString":"struct Jury.Selection storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2689:51:35"},{"assignments":[5921,null],"declarations":[{"constant":false,"id":5921,"mutability":"mutable","name":"jurors","nameLocation":"2768:6:35","nodeType":"VariableDeclaration","scope":5989,"src":"2751:23:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5919,"name":"address","nodeType":"ElementaryTypeName","src":"2751:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5920,"nodeType":"ArrayTypeName","src":"2751:9:35","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},null],"id":5925,"initialValue":{"arguments":[{"id":5923,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"2790:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5922,"name":"getDetail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5807,"src":"2780:9:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) view returns (address[] memory,uint256[] memory)"}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2780:21:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"2750:51:35"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5926,"name":"juryInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"2816:8:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage_ptr","typeString":"struct Jury.JuryInfo storage pointer"}},"id":5927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2825:8:35","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":5665,"src":"2816:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":5928,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2836:5:35","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2842:9:35","memberName":"timestamp","nodeType":"MemberAccess","src":"2836:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:35:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5938,"nodeType":"IfStatement","src":"2812:113:35","trueBody":{"id":5937,"nodeType":"Block","src":"2853:72:35","statements":[{"errorCall":{"arguments":[{"id":5932,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"2884:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5933,"name":"juryInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"2896:8:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage_ptr","typeString":"struct Jury.JuryInfo storage pointer"}},"id":5934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2905:8:35","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":5665,"src":"2896:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5931,"name":"NotYetDue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"2874:9:35","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:40:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5936,"nodeType":"RevertStatement","src":"2867:47:35"}]}},{"body":{"id":5973,"nodeType":"Block","src":"2983:243:35","statements":[{"assignments":[5952],"declarations":[{"constant":false,"id":5952,"mutability":"mutable","name":"selection","nameLocation":"3014:9:35","nodeType":"VariableDeclaration","scope":5973,"src":"2997:26:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Selection_$5671_memory_ptr","typeString":"struct Jury.Selection"},"typeName":{"id":5951,"nodeType":"UserDefinedTypeName","pathNode":{"id":5950,"name":"Selection","nameLocations":["2997:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":5671,"src":"2997:9:35"},"referencedDeclaration":5671,"src":"2997:9:35","typeDescriptions":{"typeIdentifier":"t_struct$_Selection_$5671_storage_ptr","typeString":"struct Jury.Selection"}},"visibility":"internal"}],"id":5956,"initialValue":{"baseExpression":{"id":5953,"name":"selections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"3026:10:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Selection_$5671_memory_ptr_$dyn_memory_ptr","typeString":"struct Jury.Selection memory[] memory"}},"id":5955,"indexExpression":{"id":5954,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"3037:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3026:13:35","typeDescriptions":{"typeIdentifier":"t_struct$_Selection_$5671_memory_ptr","typeString":"struct Jury.Selection memory"}},"nodeType":"VariableDeclarationStatement","src":"2997:42:35"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5957,"name":"selection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"3057:9:35","typeDescriptions":{"typeIdentifier":"t_struct$_Selection_$5671_memory_ptr","typeString":"struct Jury.Selection memory"}},"id":5958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3067:8:35","memberName":"optionId","nodeType":"MemberAccess","referencedDeclaration":5670,"src":"3057:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":5959,"name":"juryInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"3079:8:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage_ptr","typeString":"struct Jury.JuryInfo storage pointer"}},"id":5960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3088:11:35","memberName":"winOptionId","nodeType":"MemberAccess","referencedDeclaration":5659,"src":"3079:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3057:42:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5972,"nodeType":"IfStatement","src":"3053:163:35","trueBody":{"id":5971,"nodeType":"Block","src":"3101:115:35","statements":[{"expression":{"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3119:19:35","subExpression":{"components":[{"id":5962,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"3127:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5963,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"3126:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5965,"nodeType":"ExpressionStatement","src":"3119:19:35"},{"eventCall":{"arguments":[{"id":5967,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"3166:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5966,"name":"Fail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"3161:4:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3161:16:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5969,"nodeType":"EmitStatement","src":"3156:21:35"},{"functionReturnParameters":5901,"id":5970,"nodeType":"Return","src":"3195:7:35"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5943,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"2955:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5944,"name":"selections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"2959:10:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Selection_$5671_memory_ptr_$dyn_memory_ptr","typeString":"struct Jury.Selection memory[] memory"}},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2970:6:35","memberName":"length","nodeType":"MemberAccess","src":"2959:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2955:21:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5974,"initializationExpression":{"assignments":[5940],"declarations":[{"constant":false,"id":5940,"mutability":"mutable","name":"i","nameLocation":"2948:1:35","nodeType":"VariableDeclaration","scope":5974,"src":"2940:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5939,"name":"uint256","nodeType":"ElementaryTypeName","src":"2940:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5942,"initialValue":{"hexValue":"30","id":5941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2952:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2940:13:35"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2978:3:35","subExpression":{"id":5947,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"2978:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5949,"nodeType":"ExpressionStatement","src":"2978:3:35"},"nodeType":"ForStatement","src":"2935:291:35"},{"expression":{"arguments":[{"id":5979,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"3266:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5980,"name":"juryInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"3278:8:35","typeDescriptions":{"typeIdentifier":"t_struct$_JuryInfo_$5666_storage_ptr","typeString":"struct Jury.JuryInfo storage pointer"}},"id":5981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3287:11:35","memberName":"winOptionId","nodeType":"MemberAccess","referencedDeclaration":5659,"src":"3278:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5982,"name":"jurors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"3300:6:35","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"expression":{"arguments":[{"id":5976,"name":"proposalAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"3245:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5975,"name":"Proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8450,"src":"3236:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Proposal_$8450_$","typeString":"type(contract Proposal)"}},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:22:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Proposal_$8450","typeString":"contract Proposal"}},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:6:35","memberName":"settle","nodeType":"MemberAccess","referencedDeclaration":8001,"src":"3236:29:35","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,address[] memory) external"}},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:71:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5984,"nodeType":"ExpressionStatement","src":"3236:71:35"},{"eventCall":{"arguments":[{"id":5986,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"3330:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5985,"name":"Success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"3322:7:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3322:19:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5988,"nodeType":"EmitStatement","src":"3317:24:35"}]},"functionSelector":"c2d57bbc","id":5990,"implemented":true,"kind":"function","modifiers":[],"name":"handleResult","nameLocation":"2578:12:35","nodeType":"FunctionDefinition","parameters":{"id":5900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5899,"mutability":"mutable","name":"proposalId","nameLocation":"2599:10:35","nodeType":"VariableDeclaration","scope":5990,"src":"2591:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5898,"name":"uint256","nodeType":"ElementaryTypeName","src":"2591:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2590:20:35"},"returnParameters":{"id":5901,"nodeType":"ParameterList","parameters":[],"src":"2620:0:35"},"scope":6002,"src":"2569:779:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[794],"body":{"id":6000,"nodeType":"Block","src":"3440:46:35","statements":[{"expression":{"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5996,"name":"impleAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5675,"src":"3450:9:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5997,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5992,"src":"3462:17:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3450:29:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5999,"nodeType":"ExpressionStatement","src":"3450:29:35"}]},"id":6001,"implemented":true,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"3363:17:35","nodeType":"FunctionDefinition","overrides":{"id":5994,"nodeType":"OverrideSpecifier","overrides":[],"src":"3431:8:35"},"parameters":{"id":5993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5992,"mutability":"mutable","name":"newImplementation","nameLocation":"3398:17:35","nodeType":"VariableDeclaration","scope":6001,"src":"3390:25:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5991,"name":"address","nodeType":"ElementaryTypeName","src":"3390:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3380:41:35"},"returnParameters":{"id":5995,"nodeType":"ParameterList","parameters":[],"src":"3440:0:35"},"scope":6002,"src":"3354:132:35","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":6003,"src":"214:3274:35","usedErrors":[5684,5690],"usedEvents":[123,130,135,525,5694,5698,5706]}],"src":"32:3457:35"}},"contracts/JuryNFTSwap.sol":{"id":36,"ast":{"absolutePath":"contracts/JuryNFTSwap.sol","exportedSymbols":{"Address":[3412],"Context":[3442],"ERC165":[4665],"ERC721":[2765],"ERC721URIStorage":[3055],"IERC165":[4677],"IERC4906":[158],"IERC721":[2881],"IERC721Metadata":[3082],"IERC721Receiver":[2899],"JuryNFTSwap":[6864],"Math":[5543],"MelonNFT":[6942],"Ownable":[112],"Proposal":[8450],"SignedMath":[5648],"Strings":[4071]},"id":6865,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6004,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:36"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":6005,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6865,"sourceUnit":2900,"src":"59:66:36","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6006,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6865,"sourceUnit":113,"src":"127:52:36","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/MelonNFT.sol","file":"./MelonNFT.sol","id":6007,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6865,"sourceUnit":6943,"src":"181:24:36","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Proposal.sol","file":"./Proposal.sol","id":6008,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6865,"sourceUnit":8451,"src":"207:24:36","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6009,"name":"IERC721Receiver","nameLocations":["259:15:36"],"nodeType":"IdentifierPath","referencedDeclaration":2899,"src":"259:15:36"},"id":6010,"nodeType":"InheritanceSpecifier","src":"259:15:36"},{"baseName":{"id":6011,"name":"Ownable","nameLocations":["276:7:36"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"276:7:36"},"id":6012,"nodeType":"InheritanceSpecifier","src":"276:7:36"}],"canonicalName":"JuryNFTSwap","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6864,"linearizedBaseContracts":[6864,112,3442,2899],"name":"JuryNFTSwap","nameLocation":"244:11:36","nodeType":"ContractDefinition","nodes":[{"canonicalName":"JuryNFTSwap.NFTListInfo","id":6021,"members":[{"constant":false,"id":6014,"mutability":"mutable","name":"tokenId","nameLocation":"326:7:36","nodeType":"VariableDeclaration","scope":6021,"src":"321:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6013,"name":"uint","nodeType":"ElementaryTypeName","src":"321:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6016,"mutability":"mutable","name":"price","nameLocation":"349:5:36","nodeType":"VariableDeclaration","scope":6021,"src":"344:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6015,"name":"uint","nodeType":"ElementaryTypeName","src":"344:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6018,"mutability":"mutable","name":"uri","nameLocation":"372:3:36","nodeType":"VariableDeclaration","scope":6021,"src":"365:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6017,"name":"string","nodeType":"ElementaryTypeName","src":"365:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6020,"mutability":"mutable","name":"gainTime","nameLocation":"391:8:36","nodeType":"VariableDeclaration","scope":6021,"src":"386:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6019,"name":"uint","nodeType":"ElementaryTypeName","src":"386:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"NFTListInfo","nameLocation":"298:11:36","nodeType":"StructDefinition","scope":6864,"src":"291:116:36","visibility":"public"},{"canonicalName":"JuryNFTSwap.ApplyStartUpNFTInfo","id":6026,"members":[{"constant":false,"id":6023,"mutability":"mutable","name":"pledgeAmount","nameLocation":"458:12:36","nodeType":"VariableDeclaration","scope":6026,"src":"453:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6022,"name":"uint","nodeType":"ElementaryTypeName","src":"453:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6025,"mutability":"mutable","name":"user","nameLocation":"489:4:36","nodeType":"VariableDeclaration","scope":6026,"src":"481:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6024,"name":"address","nodeType":"ElementaryTypeName","src":"481:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ApplyStartUpNFTInfo","nameLocation":"422:19:36","nodeType":"StructDefinition","scope":6864,"src":"415:86:36","visibility":"public"},{"constant":false,"functionSelector":"5829ecd6","id":6028,"mutability":"immutable","name":"COMMON_NFT_LIMIT_PER_USER","nameLocation":"531:25:36","nodeType":"VariableDeclaration","scope":6864,"src":"509:47:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6027,"name":"uint","nodeType":"ElementaryTypeName","src":"509:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"a139e8e1","id":6030,"mutability":"immutable","name":"START_UP_NFT_LIMIT","nameLocation":"585:18:36","nodeType":"VariableDeclaration","scope":6864,"src":"563:40:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6029,"name":"uint","nodeType":"ElementaryTypeName","src":"563:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1b02e2d6","id":6033,"mutability":"mutable","name":"melonNFT","nameLocation":"636:8:36","nodeType":"VariableDeclaration","scope":6864,"src":"620:24:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_MelonNFT_$6942","typeString":"contract MelonNFT"},"typeName":{"id":6032,"nodeType":"UserDefinedTypeName","pathNode":{"id":6031,"name":"MelonNFT","nameLocations":["620:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":6942,"src":"620:8:36"},"referencedDeclaration":6942,"src":"620:8:36","typeDescriptions":{"typeIdentifier":"t_contract$_MelonNFT_$6942","typeString":"contract MelonNFT"}},"visibility":"public"},{"constant":false,"functionSelector":"c98ea0d6","id":6037,"mutability":"mutable","name":"startUpNFTs","nameLocation":"672:11:36","nodeType":"VariableDeclaration","scope":6864,"src":"651:32:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage","typeString":"struct JuryNFTSwap.NFTListInfo[]"},"typeName":{"baseType":{"id":6035,"nodeType":"UserDefinedTypeName","pathNode":{"id":6034,"name":"NFTListInfo","nameLocations":["651:11:36"],"nodeType":"IdentifierPath","referencedDeclaration":6021,"src":"651:11:36"},"referencedDeclaration":6021,"src":"651:11:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"}},"id":6036,"nodeType":"ArrayTypeName","src":"651:13:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"4cfe4d68","id":6041,"mutability":"mutable","name":"commonNFTs","nameLocation":"711:10:36","nodeType":"VariableDeclaration","scope":6864,"src":"690:31:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage","typeString":"struct JuryNFTSwap.NFTListInfo[]"},"typeName":{"baseType":{"id":6039,"nodeType":"UserDefinedTypeName","pathNode":{"id":6038,"name":"NFTListInfo","nameLocations":["690:11:36"],"nodeType":"IdentifierPath","referencedDeclaration":6021,"src":"690:11:36"},"referencedDeclaration":6021,"src":"690:11:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"}},"id":6040,"nodeType":"ArrayTypeName","src":"690:13:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"4155adba","id":6046,"mutability":"mutable","name":"userStartUpNFTs","nameLocation":"769:15:36","nodeType":"VariableDeclaration","scope":6864,"src":"730:54:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_NFTListInfo_$6021_storage_$","typeString":"mapping(address => struct JuryNFTSwap.NFTListInfo)"},"typeName":{"id":6045,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6042,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"730:31:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_NFTListInfo_$6021_storage_$","typeString":"mapping(address => struct JuryNFTSwap.NFTListInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6044,"nodeType":"UserDefinedTypeName","pathNode":{"id":6043,"name":"NFTListInfo","nameLocations":["749:11:36"],"nodeType":"IdentifierPath","referencedDeclaration":6021,"src":"749:11:36"},"referencedDeclaration":6021,"src":"749:11:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"}}},"visibility":"public"},{"constant":false,"functionSelector":"d29f087a","id":6052,"mutability":"mutable","name":"userCommonNFTs","nameLocation":"832:14:36","nodeType":"VariableDeclaration","scope":6864,"src":"791:55:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_$","typeString":"mapping(address => struct JuryNFTSwap.NFTListInfo[])"},"typeName":{"id":6051,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6047,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"791:33:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_$","typeString":"mapping(address => struct JuryNFTSwap.NFTListInfo[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6049,"nodeType":"UserDefinedTypeName","pathNode":{"id":6048,"name":"NFTListInfo","nameLocations":["810:11:36"],"nodeType":"IdentifierPath","referencedDeclaration":6021,"src":"810:11:36"},"referencedDeclaration":6021,"src":"810:11:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"}},"id":6050,"nodeType":"ArrayTypeName","src":"810:13:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"0a2d5c9f","id":6056,"mutability":"mutable","name":"applyStartUpNFTInfos","nameLocation":"884:20:36","nodeType":"VariableDeclaration","scope":6864,"src":"855:49:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ApplyStartUpNFTInfo_$6026_storage_$dyn_storage","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo[]"},"typeName":{"baseType":{"id":6054,"nodeType":"UserDefinedTypeName","pathNode":{"id":6053,"name":"ApplyStartUpNFTInfo","nameLocations":["855:19:36"],"nodeType":"IdentifierPath","referencedDeclaration":6026,"src":"855:19:36"},"referencedDeclaration":6026,"src":"855:19:36","typeDescriptions":{"typeIdentifier":"t_struct$_ApplyStartUpNFTInfo_$6026_storage_ptr","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo"}},"id":6055,"nodeType":"ArrayTypeName","src":"855:21:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ApplyStartUpNFTInfo_$6026_storage_$dyn_storage_ptr","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"9f4556d4","id":6060,"mutability":"mutable","name":"nftLock","nameLocation":"945:7:36","nodeType":"VariableDeclaration","scope":6864,"src":"913:39:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6059,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6057,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"913:24:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6058,"name":"uint","nodeType":"ElementaryTypeName","src":"932:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"cb5b7d34","id":6065,"mutability":"mutable","name":"infoByTokenId","nameLocation":"995:13:36","nodeType":"VariableDeclaration","scope":6864,"src":"959:49:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFTListInfo_$6021_storage_$","typeString":"mapping(uint256 => struct JuryNFTSwap.NFTListInfo)"},"typeName":{"id":6064,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6061,"name":"uint","nodeType":"ElementaryTypeName","src":"967:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"959:28:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFTListInfo_$6021_storage_$","typeString":"mapping(uint256 => struct JuryNFTSwap.NFTListInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6063,"nodeType":"UserDefinedTypeName","pathNode":{"id":6062,"name":"NFTListInfo","nameLocations":["975:11:36"],"nodeType":"IdentifierPath","referencedDeclaration":6021,"src":"975:11:36"},"referencedDeclaration":6021,"src":"975:11:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"ac040a3669b42aba8178c26fbd2fd6a5148e4e5434c9ce01dcb0144e45fc73dc","id":6071,"name":"HangOut","nameLocation":"1023:7:36","nodeType":"EventDefinition","parameters":{"id":6070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6067,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1044:7:36","nodeType":"VariableDeclaration","scope":6071,"src":"1031:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6066,"name":"uint","nodeType":"ElementaryTypeName","src":"1031:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6069,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1058:5:36","nodeType":"VariableDeclaration","scope":6071,"src":"1053:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6068,"name":"uint","nodeType":"ElementaryTypeName","src":"1053:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1030:34:36"},"src":"1017:48:36"},{"anonymous":false,"eventSelector":"de4f139185ace785cbf7e66c8f61847efcaa12e5e37cf3372124403285b25d87","id":6079,"name":"StartUpNFTSending","nameLocation":"1077:17:36","nodeType":"EventDefinition","parameters":{"id":6078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6073,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"1111:5:36","nodeType":"VariableDeclaration","scope":6079,"src":"1095:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6072,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6075,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"1123:7:36","nodeType":"VariableDeclaration","scope":6079,"src":"1118:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6074,"name":"uint","nodeType":"ElementaryTypeName","src":"1118:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6077,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1137:5:36","nodeType":"VariableDeclaration","scope":6079,"src":"1132:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6076,"name":"uint","nodeType":"ElementaryTypeName","src":"1132:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1094:49:36"},"src":"1071:73:36"},{"anonymous":false,"eventSelector":"5d963241241cfe9e161d13500d628058954b3febfde03e4b1f4071370e72fe2b","id":6087,"name":"BuyNFT","nameLocation":"1156:6:36","nodeType":"EventDefinition","parameters":{"id":6086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6081,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"1179:5:36","nodeType":"VariableDeclaration","scope":6087,"src":"1163:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6080,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6083,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"1191:7:36","nodeType":"VariableDeclaration","scope":6087,"src":"1186:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6082,"name":"uint","nodeType":"ElementaryTypeName","src":"1186:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6085,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1205:5:36","nodeType":"VariableDeclaration","scope":6087,"src":"1200:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6084,"name":"uint","nodeType":"ElementaryTypeName","src":"1200:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1162:49:36"},"src":"1150:62:36"},{"anonymous":false,"eventSelector":"e5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929","id":6095,"name":"Redeem","nameLocation":"1224:6:36","nodeType":"EventDefinition","parameters":{"id":6094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6089,"indexed":true,"mutability":"mutable","name":"redeemer","nameLocation":"1247:8:36","nodeType":"VariableDeclaration","scope":6095,"src":"1231:24:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6088,"name":"address","nodeType":"ElementaryTypeName","src":"1231:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6091,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"1262:7:36","nodeType":"VariableDeclaration","scope":6095,"src":"1257:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6090,"name":"uint","nodeType":"ElementaryTypeName","src":"1257:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6093,"indexed":false,"mutability":"mutable","name":"redeemPrice","nameLocation":"1276:11:36","nodeType":"VariableDeclaration","scope":6095,"src":"1271:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6092,"name":"uint","nodeType":"ElementaryTypeName","src":"1271:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1230:58:36"},"src":"1218:71:36"},{"anonymous":false,"eventSelector":"aaccb5079b09d65c6aa24582254eac44247c4e6602012d625bb3c944075d5c6c","id":6101,"name":"ApplyStartUpNFT","nameLocation":"1301:15:36","nodeType":"EventDefinition","parameters":{"id":6100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6097,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1333:4:36","nodeType":"VariableDeclaration","scope":6101,"src":"1317:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6096,"name":"address","nodeType":"ElementaryTypeName","src":"1317:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6099,"indexed":false,"mutability":"mutable","name":"pledgeAmount","nameLocation":"1344:12:36","nodeType":"VariableDeclaration","scope":6101,"src":"1339:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6098,"name":"uint","nodeType":"ElementaryTypeName","src":"1339:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1316:41:36"},"src":"1295:63:36"},{"errorSelector":"d176cea0","id":6105,"name":"NotListed","nameLocation":"1372:9:36","nodeType":"ErrorDefinition","parameters":{"id":6104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6103,"mutability":"mutable","name":"tokenId","nameLocation":"1387:7:36","nodeType":"VariableDeclaration","scope":6105,"src":"1382:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6102,"name":"uint","nodeType":"ElementaryTypeName","src":"1382:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1381:14:36"},"src":"1366:30:36"},{"errorSelector":"7fbcdff9","id":6109,"name":"AlreadyListed","nameLocation":"1408:13:36","nodeType":"ErrorDefinition","parameters":{"id":6108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6107,"mutability":"mutable","name":"tokenId","nameLocation":"1427:7:36","nodeType":"VariableDeclaration","scope":6109,"src":"1422:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6106,"name":"uint","nodeType":"ElementaryTypeName","src":"1422:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1421:14:36"},"src":"1402:34:36"},{"errorSelector":"1a735a94","id":6117,"name":"RedemptionTimeNotReached","nameLocation":"1448:24:36","nodeType":"ErrorDefinition","parameters":{"id":6116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6111,"mutability":"mutable","name":"NFTAddr","nameLocation":"1491:7:36","nodeType":"VariableDeclaration","scope":6117,"src":"1483:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6110,"name":"address","nodeType":"ElementaryTypeName","src":"1483:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6113,"mutability":"mutable","name":"tokenId","nameLocation":"1514:7:36","nodeType":"VariableDeclaration","scope":6117,"src":"1509:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6112,"name":"uint","nodeType":"ElementaryTypeName","src":"1509:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6115,"mutability":"mutable","name":"redemptionTime","nameLocation":"1537:14:36","nodeType":"VariableDeclaration","scope":6117,"src":"1532:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6114,"name":"uint","nodeType":"ElementaryTypeName","src":"1532:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1472:86:36"},"src":"1442:117:36"},{"errorSelector":"21e303dc","id":6123,"name":"NotNFTOwner","nameLocation":"1571:11:36","nodeType":"ErrorDefinition","parameters":{"id":6122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6119,"mutability":"mutable","name":"user","nameLocation":"1591:4:36","nodeType":"VariableDeclaration","scope":6123,"src":"1583:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6118,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6121,"mutability":"mutable","name":"tokenId","nameLocation":"1602:7:36","nodeType":"VariableDeclaration","scope":6123,"src":"1597:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6120,"name":"uint","nodeType":"ElementaryTypeName","src":"1597:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1582:28:36"},"src":"1565:46:36"},{"errorSelector":"8c13eb06","id":6129,"name":"MaximumNumberOfHoldings","nameLocation":"1623:23:36","nodeType":"ErrorDefinition","parameters":{"id":6128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6125,"mutability":"mutable","name":"user","nameLocation":"1655:4:36","nodeType":"VariableDeclaration","scope":6129,"src":"1647:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6124,"name":"address","nodeType":"ElementaryTypeName","src":"1647:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6127,"mutability":"mutable","name":"holdAmount","nameLocation":"1666:10:36","nodeType":"VariableDeclaration","scope":6129,"src":"1661:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6126,"name":"uint","nodeType":"ElementaryTypeName","src":"1661:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1646:31:36"},"src":"1617:61:36"},{"body":{"id":6150,"nodeType":"Block","src":"1718:133:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6135,"name":"infoByTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"1739:13:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFTListInfo_$6021_storage_$","typeString":"mapping(uint256 => struct JuryNFTSwap.NFTListInfo storage ref)"}},"id":6137,"indexExpression":{"id":6136,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"1753:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1739:22:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},"id":6138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1762:3:36","memberName":"uri","nodeType":"MemberAccess","referencedDeclaration":6018,"src":"1739:26:36","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":6134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1733:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6133,"name":"bytes","nodeType":"ElementaryTypeName","src":"1733:5:36","typeDescriptions":{}}},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1733:33:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1767:6:36","memberName":"length","nodeType":"MemberAccess","src":"1733:40:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1777:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1733:45:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6148,"nodeType":"IfStatement","src":"1729:103:36","trueBody":{"id":6147,"nodeType":"Block","src":"1780:52:36","statements":[{"errorCall":{"arguments":[{"id":6144,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"1812:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6143,"name":"NotListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"1802:9:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:18:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6146,"nodeType":"RevertStatement","src":"1795:25:36"}]}},{"id":6149,"nodeType":"PlaceholderStatement","src":"1842:1:36"}]},"id":6151,"name":"isListed","nameLocation":"1695:8:36","nodeType":"ModifierDefinition","parameters":{"id":6132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6131,"mutability":"mutable","name":"tokenId","nameLocation":"1709:7:36","nodeType":"VariableDeclaration","scope":6151,"src":"1704:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6130,"name":"uint","nodeType":"ElementaryTypeName","src":"1704:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:14:36"},"src":"1686:165:36","virtual":false,"visibility":"internal"},{"body":{"id":6172,"nodeType":"Block","src":"1893:136:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6157,"name":"infoByTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"1914:13:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFTListInfo_$6021_storage_$","typeString":"mapping(uint256 => struct JuryNFTSwap.NFTListInfo storage ref)"}},"id":6159,"indexExpression":{"id":6158,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"1928:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1914:22:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},"id":6160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1937:3:36","memberName":"uri","nodeType":"MemberAccess","referencedDeclaration":6018,"src":"1914:26:36","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":6156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1908:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6155,"name":"bytes","nodeType":"ElementaryTypeName","src":"1908:5:36","typeDescriptions":{}}},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1908:33:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1942:6:36","memberName":"length","nodeType":"MemberAccess","src":"1908:40:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1908:44:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6170,"nodeType":"IfStatement","src":"1904:106:36","trueBody":{"id":6169,"nodeType":"Block","src":"1954:56:36","statements":[{"errorCall":{"arguments":[{"id":6166,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"1990:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6165,"name":"AlreadyListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"1976:13:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1976:22:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6168,"nodeType":"RevertStatement","src":"1969:29:36"}]}},{"id":6171,"nodeType":"PlaceholderStatement","src":"2020:1:36"}]},"id":6173,"name":"isUnListed","nameLocation":"1868:10:36","nodeType":"ModifierDefinition","parameters":{"id":6154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6153,"mutability":"mutable","name":"tokenId","nameLocation":"1884:7:36","nodeType":"VariableDeclaration","scope":6173,"src":"1879:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6152,"name":"uint","nodeType":"ElementaryTypeName","src":"1879:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1878:14:36"},"src":"1859:170:36","virtual":false,"visibility":"internal"},{"body":{"id":6193,"nodeType":"Block","src":"2082:129:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6181,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6177,"src":"2114:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6179,"name":"melonNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"2097:8:36","typeDescriptions":{"typeIdentifier":"t_contract$_MelonNFT_$6942","typeString":"contract MelonNFT"}},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2106:7:36","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"2097:16:36","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6183,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"2126:4:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2097:33:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6191,"nodeType":"IfStatement","src":"2093:99:36","trueBody":{"id":6190,"nodeType":"Block","src":"2132:60:36","statements":[{"errorCall":{"arguments":[{"id":6186,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"2166:4:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6187,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6177,"src":"2172:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6185,"name":"NotNFTOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"2154:11:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:26:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6189,"nodeType":"RevertStatement","src":"2147:33:36"}]}},{"id":6192,"nodeType":"PlaceholderStatement","src":"2202:1:36"}]},"id":6194,"name":"isOwner","nameLocation":"2046:7:36","nodeType":"ModifierDefinition","parameters":{"id":6178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6175,"mutability":"mutable","name":"user","nameLocation":"2062:4:36","nodeType":"VariableDeclaration","scope":6194,"src":"2054:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6174,"name":"address","nodeType":"ElementaryTypeName","src":"2054:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6177,"mutability":"mutable","name":"tokenId","nameLocation":"2073:7:36","nodeType":"VariableDeclaration","scope":6194,"src":"2068:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6176,"name":"uint","nodeType":"ElementaryTypeName","src":"2068:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2053:28:36"},"src":"2037:174:36","virtual":false,"visibility":"internal"},{"body":{"id":6219,"nodeType":"Block","src":"2352:164:36","statements":[{"expression":{"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6205,"name":"melonNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"2363:8:36","typeDescriptions":{"typeIdentifier":"t_contract$_MelonNFT_$6942","typeString":"contract MelonNFT"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6207,"name":"_melonNFTAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"2383:13:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6206,"name":"MelonNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"2374:8:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MelonNFT_$6942_$","typeString":"type(contract MelonNFT)"}},"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2374:23:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_MelonNFT_$6942","typeString":"contract MelonNFT"}},"src":"2363:34:36","typeDescriptions":{"typeIdentifier":"t_contract$_MelonNFT_$6942","typeString":"contract MelonNFT"}},"id":6210,"nodeType":"ExpressionStatement","src":"2363:34:36"},{"expression":{"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6211,"name":"COMMON_NFT_LIMIT_PER_USER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"2408:25:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6212,"name":"_commonNFTsLimitPerUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6198,"src":"2436:23:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2408:51:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6214,"nodeType":"ExpressionStatement","src":"2408:51:36"},{"expression":{"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6215,"name":"START_UP_NFT_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"2470:18:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6216,"name":"_startUpNFTsLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"2491:17:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2470:38:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6218,"nodeType":"ExpressionStatement","src":"2470:38:36"}]},"id":6220,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":6203,"kind":"baseConstructorSpecifier","modifierName":{"id":6202,"name":"Ownable","nameLocations":["2342:7:36"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"2342:7:36"},"nodeType":"ModifierInvocation","src":"2342:9:36"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"_melonNFTAddr","nameLocation":"2249:13:36","nodeType":"VariableDeclaration","scope":6220,"src":"2241:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6195,"name":"address","nodeType":"ElementaryTypeName","src":"2241:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6198,"mutability":"mutable","name":"_commonNFTsLimitPerUser","nameLocation":"2278:23:36","nodeType":"VariableDeclaration","scope":6220,"src":"2273:28:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6197,"name":"uint","nodeType":"ElementaryTypeName","src":"2273:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6200,"mutability":"mutable","name":"_startUpNFTsLimit","nameLocation":"2317:17:36","nodeType":"VariableDeclaration","scope":6220,"src":"2312:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6199,"name":"uint","nodeType":"ElementaryTypeName","src":"2312:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2230:111:36"},"returnParameters":{"id":6204,"nodeType":"ParameterList","parameters":[],"src":"2352:0:36"},"scope":6864,"src":"2219:297:36","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6251,"nodeType":"Block","src":"2655:202:36","statements":[{"expression":{"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6227,"name":"totalApplicants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"2666:15:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6228,"name":"applyStartUpNFTInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"2684:20:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ApplyStartUpNFTInfo_$6026_storage_$dyn_storage","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo storage ref[] storage ref"}},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2705:6:36","memberName":"length","nodeType":"MemberAccess","src":"2684:27:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2666:45:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6231,"nodeType":"ExpressionStatement","src":"2666:45:36"},{"body":{"id":6249,"nodeType":"Block","src":"2765:85:36","statements":[{"expression":{"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6242,"name":"totalPledgedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"2780:18:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":6243,"name":"applyStartUpNFTInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"2802:20:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ApplyStartUpNFTInfo_$6026_storage_$dyn_storage","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo storage ref[] storage ref"}},"id":6245,"indexExpression":{"id":6244,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"2823:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2802:23:36","typeDescriptions":{"typeIdentifier":"t_struct$_ApplyStartUpNFTInfo_$6026_storage","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo storage ref"}},"id":6246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2826:12:36","memberName":"pledgeAmount","nodeType":"MemberAccess","referencedDeclaration":6023,"src":"2802:36:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:58:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6248,"nodeType":"ExpressionStatement","src":"2780:58:36"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6236,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"2739:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6237,"name":"totalApplicants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"2743:15:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2739:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6250,"initializationExpression":{"assignments":[6233],"declarations":[{"constant":false,"id":6233,"mutability":"mutable","name":"i","nameLocation":"2732:1:36","nodeType":"VariableDeclaration","scope":6250,"src":"2727:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6232,"name":"uint","nodeType":"ElementaryTypeName","src":"2727:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6235,"initialValue":{"hexValue":"30","id":6234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2736:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2727:10:36"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2760:3:36","subExpression":{"id":6239,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"2760:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6241,"nodeType":"ExpressionStatement","src":"2760:3:36"},"nodeType":"ForStatement","src":"2722:128:36"}]},"functionSelector":"04185775","id":6252,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalApplyInfo","nameLocation":"2533:17:36","nodeType":"FunctionDefinition","parameters":{"id":6221,"nodeType":"ParameterList","parameters":[],"src":"2550:2:36"},"returnParameters":{"id":6226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6223,"mutability":"mutable","name":"totalApplicants","nameLocation":"2608:15:36","nodeType":"VariableDeclaration","scope":6252,"src":"2603:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6222,"name":"uint","nodeType":"ElementaryTypeName","src":"2603:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6225,"mutability":"mutable","name":"totalPledgedAmount","nameLocation":"2630:18:36","nodeType":"VariableDeclaration","scope":6252,"src":"2625:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6224,"name":"uint","nodeType":"ElementaryTypeName","src":"2625:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2602:47:36"},"scope":6864,"src":"2524:333:36","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6261,"nodeType":"Block","src":"2985:46:36","statements":[{"expression":{"id":6259,"name":"applyStartUpNFTInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"3003:20:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ApplyStartUpNFTInfo_$6026_storage_$dyn_storage","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo storage ref[] storage ref"}},"functionReturnParameters":6258,"id":6260,"nodeType":"Return","src":"2996:27:36"}]},"functionSelector":"4a1f22c8","id":6262,"implemented":true,"kind":"function","modifiers":[],"name":"getApplyStartUpNFTInfos","nameLocation":"2874:23:36","nodeType":"FunctionDefinition","parameters":{"id":6253,"nodeType":"ParameterList","parameters":[],"src":"2897:2:36"},"returnParameters":{"id":6258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6262,"src":"2950:28:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ApplyStartUpNFTInfo_$6026_memory_ptr_$dyn_memory_ptr","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo[]"},"typeName":{"baseType":{"id":6255,"nodeType":"UserDefinedTypeName","pathNode":{"id":6254,"name":"ApplyStartUpNFTInfo","nameLocations":["2950:19:36"],"nodeType":"IdentifierPath","referencedDeclaration":6026,"src":"2950:19:36"},"referencedDeclaration":6026,"src":"2950:19:36","typeDescriptions":{"typeIdentifier":"t_struct$_ApplyStartUpNFTInfo_$6026_storage_ptr","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo"}},"id":6256,"nodeType":"ArrayTypeName","src":"2950:21:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ApplyStartUpNFTInfo_$6026_storage_$dyn_storage_ptr","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo[]"}},"visibility":"internal"}],"src":"2949:30:36"},"scope":6864,"src":"2865:166:36","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6271,"nodeType":"Block","src":"3113:37:36","statements":[{"expression":{"id":6269,"name":"startUpNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"3131:11:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage ref"}},"functionReturnParameters":6268,"id":6270,"nodeType":"Return","src":"3124:18:36"}]},"functionSelector":"fe339df3","id":6272,"implemented":true,"kind":"function","modifiers":[],"name":"getAllStartUpNFTs","nameLocation":"3048:17:36","nodeType":"FunctionDefinition","parameters":{"id":6263,"nodeType":"ParameterList","parameters":[],"src":"3065:2:36"},"returnParameters":{"id":6268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6272,"src":"3091:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_memory_ptr_$dyn_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo[]"},"typeName":{"baseType":{"id":6265,"nodeType":"UserDefinedTypeName","pathNode":{"id":6264,"name":"NFTListInfo","nameLocations":["3091:11:36"],"nodeType":"IdentifierPath","referencedDeclaration":6021,"src":"3091:11:36"},"referencedDeclaration":6021,"src":"3091:11:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"}},"id":6266,"nodeType":"ArrayTypeName","src":"3091:13:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo[]"}},"visibility":"internal"}],"src":"3090:22:36"},"scope":6864,"src":"3039:111:36","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6281,"nodeType":"Block","src":"3231:36:36","statements":[{"expression":{"id":6279,"name":"commonNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"3249:10:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage ref"}},"functionReturnParameters":6278,"id":6280,"nodeType":"Return","src":"3242:17:36"}]},"functionSelector":"12fdc7ea","id":6282,"implemented":true,"kind":"function","modifiers":[],"name":"getAllCommonNFTs","nameLocation":"3167:16:36","nodeType":"FunctionDefinition","parameters":{"id":6273,"nodeType":"ParameterList","parameters":[],"src":"3183:2:36"},"returnParameters":{"id":6278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6282,"src":"3209:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_memory_ptr_$dyn_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo[]"},"typeName":{"baseType":{"id":6275,"nodeType":"UserDefinedTypeName","pathNode":{"id":6274,"name":"NFTListInfo","nameLocations":["3209:11:36"],"nodeType":"IdentifierPath","referencedDeclaration":6021,"src":"3209:11:36"},"referencedDeclaration":6021,"src":"3209:11:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"}},"id":6276,"nodeType":"ArrayTypeName","src":"3209:13:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo[]"}},"visibility":"internal"}],"src":"3208:22:36"},"scope":6864,"src":"3158:109:36","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6302,"nodeType":"Block","src":"3397:71:36","statements":[{"expression":{"components":[{"baseExpression":{"id":6294,"name":"userStartUpNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"3416:15:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_NFTListInfo_$6021_storage_$","typeString":"mapping(address => struct JuryNFTSwap.NFTListInfo storage ref)"}},"id":6296,"indexExpression":{"id":6295,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"3432:4:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3416:21:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},{"baseExpression":{"id":6297,"name":"userCommonNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"3439:14:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_$","typeString":"mapping(address => struct JuryNFTSwap.NFTListInfo storage ref[] storage ref)"}},"id":6299,"indexExpression":{"id":6298,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"3454:4:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3439:20:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage ref"}}],"id":6300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3415:45:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_NFTListInfo_$6021_storage_$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_$","typeString":"tuple(struct JuryNFTSwap.NFTListInfo storage ref,struct JuryNFTSwap.NFTListInfo storage ref[] storage ref)"}},"functionReturnParameters":6293,"id":6301,"nodeType":"Return","src":"3408:52:36"}]},"functionSelector":"b8923eba","id":6303,"implemented":true,"kind":"function","modifiers":[],"name":"getUserNFTHolding","nameLocation":"3284:17:36","nodeType":"FunctionDefinition","parameters":{"id":6285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6284,"mutability":"mutable","name":"user","nameLocation":"3320:4:36","nodeType":"VariableDeclaration","scope":6303,"src":"3312:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6283,"name":"address","nodeType":"ElementaryTypeName","src":"3312:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3301:30:36"},"returnParameters":{"id":6293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6303,"src":"3355:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"},"typeName":{"id":6287,"nodeType":"UserDefinedTypeName","pathNode":{"id":6286,"name":"NFTListInfo","nameLocations":["3355:11:36"],"nodeType":"IdentifierPath","referencedDeclaration":6021,"src":"3355:11:36"},"referencedDeclaration":6021,"src":"3355:11:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"}},"visibility":"internal"},{"constant":false,"id":6292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6303,"src":"3375:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_memory_ptr_$dyn_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo[]"},"typeName":{"baseType":{"id":6290,"nodeType":"UserDefinedTypeName","pathNode":{"id":6289,"name":"NFTListInfo","nameLocations":["3375:11:36"],"nodeType":"IdentifierPath","referencedDeclaration":6021,"src":"3375:11:36"},"referencedDeclaration":6021,"src":"3375:11:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"}},"id":6291,"nodeType":"ArrayTypeName","src":"3375:13:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo[]"}},"visibility":"internal"}],"src":"3354:42:36"},"scope":6864,"src":"3275:193:36","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6413,"nodeType":"Block","src":"3598:798:36","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6315,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"3631:5:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3637:6:36","memberName":"length","nodeType":"MemberAccess","src":"3631:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6317,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"3647:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3656:6:36","memberName":"length","nodeType":"MemberAccess","src":"3647:15:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3631:31:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"557365727320616e6420746f6b656e496473206172726179206c656e67746873206d757374206d61746368","id":6320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3677:45:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_d825d06be569d96787cf589b9fcb0e8ea7ead23aa34f07382a381c5f72594228","typeString":"literal_string \"Users and tokenIds array lengths must match\""},"value":"Users and tokenIds array lengths must match"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d825d06be569d96787cf589b9fcb0e8ea7ead23aa34f07382a381c5f72594228","typeString":"literal_string \"Users and tokenIds array lengths must match\""}],"id":6314,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3609:7:36","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3609:124:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6322,"nodeType":"ExpressionStatement","src":"3609:124:36"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6323,"name":"clearApplyLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"3744:14:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3744:16:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6325,"nodeType":"ExpressionStatement","src":"3744:16:36"},{"body":{"id":6411,"nodeType":"Block","src":"3811:578:36","statements":[{"assignments":[6338],"declarations":[{"constant":false,"id":6338,"mutability":"mutable","name":"user","nameLocation":"3834:4:36","nodeType":"VariableDeclaration","scope":6411,"src":"3826:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6337,"name":"address","nodeType":"ElementaryTypeName","src":"3826:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6342,"initialValue":{"baseExpression":{"id":6339,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"3841:5:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6341,"indexExpression":{"id":6340,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"3847:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3841:8:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3826:23:36"},{"assignments":[6344],"declarations":[{"constant":false,"id":6344,"mutability":"mutable","name":"tokenId","nameLocation":"3869:7:36","nodeType":"VariableDeclaration","scope":6411,"src":"3864:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6343,"name":"uint","nodeType":"ElementaryTypeName","src":"3864:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6348,"initialValue":{"baseExpression":{"id":6345,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"3879:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6347,"indexExpression":{"id":6346,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"3888:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3879:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3864:26:36"},{"assignments":[6351],"declarations":[{"constant":false,"id":6351,"mutability":"mutable","name":"info","nameLocation":"3925:4:36","nodeType":"VariableDeclaration","scope":6411,"src":"3905:24:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"},"typeName":{"id":6350,"nodeType":"UserDefinedTypeName","pathNode":{"id":6349,"name":"NFTListInfo","nameLocations":["3905:11:36"],"nodeType":"IdentifierPath","referencedDeclaration":6021,"src":"3905:11:36"},"referencedDeclaration":6021,"src":"3905:11:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"}},"visibility":"internal"}],"id":6355,"initialValue":{"baseExpression":{"id":6352,"name":"infoByTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"3932:13:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFTListInfo_$6021_storage_$","typeString":"mapping(uint256 => struct JuryNFTSwap.NFTListInfo storage ref)"}},"id":6354,"indexExpression":{"id":6353,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"3946:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3932:22:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3905:49:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":6358,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"3979:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo storage pointer"}},"id":6359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3984:3:36","memberName":"uri","nodeType":"MemberAccess","referencedDeclaration":6018,"src":"3979:8:36","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":6357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3973:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6356,"name":"bytes","nodeType":"ElementaryTypeName","src":"3973:5:36","typeDescriptions":{}}},"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:15:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3989:6:36","memberName":"length","nodeType":"MemberAccess","src":"3973:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3973:27:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6369,"nodeType":"IfStatement","src":"3969:93:36","trueBody":{"id":6368,"nodeType":"Block","src":"4002:60:36","statements":[{"errorCall":{"arguments":[{"id":6365,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"4038:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6364,"name":"NotListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"4028:9:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4028:18:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6367,"nodeType":"RevertStatement","src":"4021:25:36"}]}},{"expression":{"arguments":[{"arguments":[{"id":6375,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4110:4:36","typeDescriptions":{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"}],"id":6374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4102:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6373,"name":"address","nodeType":"ElementaryTypeName","src":"4102:7:36","typeDescriptions":{}}},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4102:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6377,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"4117:4:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6378,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"4123:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6370,"name":"melonNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"4076:8:36","typeDescriptions":{"typeIdentifier":"t_contract$_MelonNFT_$6942","typeString":"contract MelonNFT"}},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4085:16:36","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2194,"src":"4076:25:36","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4076:55:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6380,"nodeType":"ExpressionStatement","src":"4076:55:36"},{"expression":{"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6381,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"4146:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo storage pointer"}},"id":6383,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4151:8:36","memberName":"gainTime","nodeType":"MemberAccess","referencedDeclaration":6020,"src":"4146:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6384,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4162:5:36","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4168:9:36","memberName":"timestamp","nodeType":"MemberAccess","src":"4162:15:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4146:31:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6387,"nodeType":"ExpressionStatement","src":"4146:31:36"},{"expression":{"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6388,"name":"userStartUpNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"4192:15:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_NFTListInfo_$6021_storage_$","typeString":"mapping(address => struct JuryNFTSwap.NFTListInfo storage ref)"}},"id":6390,"indexExpression":{"id":6389,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"4208:4:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4192:21:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6391,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"4216:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo storage pointer"}},"src":"4192:28:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},"id":6393,"nodeType":"ExpressionStatement","src":"4192:28:36"},{"expression":{"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4235:29:36","subExpression":{"baseExpression":{"id":6394,"name":"infoByTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"4242:13:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFTListInfo_$6021_storage_$","typeString":"mapping(uint256 => struct JuryNFTSwap.NFTListInfo storage ref)"}},"id":6396,"indexExpression":{"id":6395,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"4256:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4242:22:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6398,"nodeType":"ExpressionStatement","src":"4235:29:36"},{"expression":{"arguments":[{"id":6400,"name":"startUpNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"4292:11:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage ref"}},{"id":6401,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"4305:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6399,"name":"handleRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"4279:12:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct JuryNFTSwap.NFTListInfo storage ref[] storage pointer,uint256)"}},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4279:34:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6403,"nodeType":"ExpressionStatement","src":"4279:34:36"},{"eventCall":{"arguments":[{"id":6405,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"4351:4:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6406,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"4357:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6407,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"4366:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo storage pointer"}},"id":6408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4371:5:36","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":6016,"src":"4366:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6404,"name":"StartUpNFTSending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"4333:17:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4333:44:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6410,"nodeType":"EmitStatement","src":"4328:49:36"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6330,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"3788:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6331,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"3792:5:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3798:6:36","memberName":"length","nodeType":"MemberAccess","src":"3792:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3788:16:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6412,"initializationExpression":{"assignments":[6327],"declarations":[{"constant":false,"id":6327,"mutability":"mutable","name":"i","nameLocation":"3781:1:36","nodeType":"VariableDeclaration","scope":6412,"src":"3776:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6326,"name":"uint","nodeType":"ElementaryTypeName","src":"3776:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6329,"initialValue":{"hexValue":"30","id":6328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3785:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3776:10:36"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3806:3:36","subExpression":{"id":6334,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"3806:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6336,"nodeType":"ExpressionStatement","src":"3806:3:36"},"nodeType":"ForStatement","src":"3771:618:36"}]},"functionSelector":"d86a5075","id":6414,"implemented":true,"kind":"function","modifiers":[{"id":6312,"kind":"modifierInvocation","modifierName":{"id":6311,"name":"onlyOwner","nameLocations":["3588:9:36"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"3588:9:36"},"nodeType":"ModifierInvocation","src":"3588:9:36"}],"name":"distributeStartUpNFT","nameLocation":"3485:20:36","nodeType":"FunctionDefinition","parameters":{"id":6310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6306,"mutability":"mutable","name":"users","nameLocation":"3533:5:36","nodeType":"VariableDeclaration","scope":6414,"src":"3516:22:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6304,"name":"address","nodeType":"ElementaryTypeName","src":"3516:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6305,"nodeType":"ArrayTypeName","src":"3516:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6309,"mutability":"mutable","name":"tokenIds","nameLocation":"3563:8:36","nodeType":"VariableDeclaration","scope":6414,"src":"3549:22:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6307,"name":"uint","nodeType":"ElementaryTypeName","src":"3549:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6308,"nodeType":"ArrayTypeName","src":"3549:6:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3505:73:36"},"returnParameters":{"id":6313,"nodeType":"ParameterList","parameters":[],"src":"3598:0:36"},"scope":6864,"src":"3476:920:36","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6442,"nodeType":"Block","src":"4457:239:36","statements":[{"expression":{"arguments":[{"arguments":[{"id":6423,"name":"pledgeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"4543:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6424,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4563:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4567:6:36","memberName":"sender","nodeType":"MemberAccess","src":"4563:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6422,"name":"ApplyStartUpNFTInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"4508:19:36","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ApplyStartUpNFTInfo_$6026_storage_ptr_$","typeString":"type(struct JuryNFTSwap.ApplyStartUpNFTInfo storage pointer)"}},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4529:12:36","4557:4:36"],"names":["pledgeAmount","user"],"nodeType":"FunctionCall","src":"4508:67:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ApplyStartUpNFTInfo_$6026_memory_ptr","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ApplyStartUpNFTInfo_$6026_memory_ptr","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo memory"}],"expression":{"id":6419,"name":"applyStartUpNFTInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"4468:20:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ApplyStartUpNFTInfo_$6026_storage_$dyn_storage","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo storage ref[] storage ref"}},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4489:4:36","memberName":"push","nodeType":"MemberAccess","src":"4468:25:36","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_ApplyStartUpNFTInfo_$6026_storage_$dyn_storage_ptr_$_t_struct$_ApplyStartUpNFTInfo_$6026_storage_$returns$__$attached_to$_t_array$_t_struct$_ApplyStartUpNFTInfo_$6026_storage_$dyn_storage_ptr_$","typeString":"function (struct JuryNFTSwap.ApplyStartUpNFTInfo storage ref[] storage pointer,struct JuryNFTSwap.ApplyStartUpNFTInfo storage ref)"}},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4468:118:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6428,"nodeType":"ExpressionStatement","src":"4468:118:36"},{"expression":{"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6429,"name":"nftLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"4597:7:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6432,"indexExpression":{"expression":{"id":6430,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4605:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4609:6:36","memberName":"sender","nodeType":"MemberAccess","src":"4605:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4597:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6433,"name":"pledgeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"4619:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4597:34:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6435,"nodeType":"ExpressionStatement","src":"4597:34:36"},{"eventCall":{"arguments":[{"expression":{"id":6437,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4663:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4667:6:36","memberName":"sender","nodeType":"MemberAccess","src":"4663:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6439,"name":"pledgeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"4675:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6436,"name":"ApplyStartUpNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"4647:15:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4647:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6441,"nodeType":"EmitStatement","src":"4642:46:36"}]},"functionSelector":"dd9e3e4f","id":6443,"implemented":true,"kind":"function","modifiers":[],"name":"applyStartUpNFT","nameLocation":"4413:15:36","nodeType":"FunctionDefinition","parameters":{"id":6417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6416,"mutability":"mutable","name":"pledgeAmount","nameLocation":"4434:12:36","nodeType":"VariableDeclaration","scope":6443,"src":"4429:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6415,"name":"uint","nodeType":"ElementaryTypeName","src":"4429:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4428:19:36"},"returnParameters":{"id":6418,"nodeType":"ParameterList","parameters":[],"src":"4457:0:36"},"scope":6864,"src":"4404:292:36","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6522,"nodeType":"Block","src":"4848:574:36","statements":[{"assignments":[6461],"declarations":[{"constant":false,"id":6461,"mutability":"mutable","name":"isStartUp","nameLocation":"4864:9:36","nodeType":"VariableDeclaration","scope":6522,"src":"4859:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6460,"name":"bool","nodeType":"ElementaryTypeName","src":"4859:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6465,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6462,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"4876:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4885:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4876:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4859:27:36"},{"expression":{"arguments":[{"expression":{"id":6469,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4923:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4927:6:36","memberName":"sender","nodeType":"MemberAccess","src":"4923:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6473,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4943:4:36","typeDescriptions":{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"}],"id":6472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4935:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6471,"name":"address","nodeType":"ElementaryTypeName","src":"4935:7:36","typeDescriptions":{}}},"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4935:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6475,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"4950:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6466,"name":"melonNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"4897:8:36","typeDescriptions":{"typeIdentifier":"t_contract$_MelonNFT_$6942","typeString":"contract MelonNFT"}},"id":6468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4906:16:36","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2194,"src":"4897:25:36","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:61:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6477,"nodeType":"ExpressionStatement","src":"4897:61:36"},{"assignments":[6479],"declarations":[{"constant":false,"id":6479,"mutability":"mutable","name":"uri","nameLocation":"4983:3:36","nodeType":"VariableDeclaration","scope":6522,"src":"4969:17:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6478,"name":"string","nodeType":"ElementaryTypeName","src":"4969:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6484,"initialValue":{"arguments":[{"id":6482,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"5007:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6480,"name":"melonNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"4989:8:36","typeDescriptions":{"typeIdentifier":"t_contract$_MelonNFT_$6942","typeString":"contract MelonNFT"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4998:8:36","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":2998,"src":"4989:17:36","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view external returns (string memory)"}},"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4989:26:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"4969:46:36"},{"assignments":[6487],"declarations":[{"constant":false,"id":6487,"mutability":"mutable","name":"newListing","nameLocation":"5045:10:36","nodeType":"VariableDeclaration","scope":6522,"src":"5026:29:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"},"typeName":{"id":6486,"nodeType":"UserDefinedTypeName","pathNode":{"id":6485,"name":"NFTListInfo","nameLocations":["5026:11:36"],"nodeType":"IdentifierPath","referencedDeclaration":6021,"src":"5026:11:36"},"referencedDeclaration":6021,"src":"5026:11:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"}},"visibility":"internal"}],"id":6494,"initialValue":{"arguments":[{"id":6489,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"5094:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6490,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"5123:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6491,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"5148:3:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5176:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6488,"name":"NFTListInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"5058:11:36","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_NFTListInfo_$6021_storage_ptr_$","typeString":"type(struct JuryNFTSwap.NFTListInfo storage pointer)"}},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5085:7:36","5116:5:36","5143:3:36","5166:8:36"],"names":["tokenId","price","uri","gainTime"],"nodeType":"FunctionCall","src":"5058:131:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"5026:163:36"},{"condition":{"id":6495,"name":"isStartUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"5204:9:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6509,"nodeType":"Block","src":"5276:54:36","statements":[{"expression":{"arguments":[{"id":6506,"name":"newListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"5307:10:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}],"expression":{"id":6503,"name":"commonNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"5291:10:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage ref"}},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5302:4:36","memberName":"push","nodeType":"MemberAccess","src":"5291:15:36","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr_$_t_struct$_NFTListInfo_$6021_storage_$returns$__$attached_to$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr_$","typeString":"function (struct JuryNFTSwap.NFTListInfo storage ref[] storage pointer,struct JuryNFTSwap.NFTListInfo storage ref)"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5291:27:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6508,"nodeType":"ExpressionStatement","src":"5291:27:36"}]},"id":6510,"nodeType":"IfStatement","src":"5200:130:36","trueBody":{"id":6502,"nodeType":"Block","src":"5215:55:36","statements":[{"expression":{"arguments":[{"id":6499,"name":"newListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"5247:10:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}],"expression":{"id":6496,"name":"startUpNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"5230:11:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage ref"}},"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5242:4:36","memberName":"push","nodeType":"MemberAccess","src":"5230:16:36","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr_$_t_struct$_NFTListInfo_$6021_storage_$returns$__$attached_to$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr_$","typeString":"function (struct JuryNFTSwap.NFTListInfo storage ref[] storage pointer,struct JuryNFTSwap.NFTListInfo storage ref)"}},"id":6500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5230:28:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6501,"nodeType":"ExpressionStatement","src":"5230:28:36"}]}},{"expression":{"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6511,"name":"infoByTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"5340:13:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFTListInfo_$6021_storage_$","typeString":"mapping(uint256 => struct JuryNFTSwap.NFTListInfo storage ref)"}},"id":6513,"indexExpression":{"id":6512,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"5354:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5340:22:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6514,"name":"newListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"5365:10:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}},"src":"5340:35:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},"id":6516,"nodeType":"ExpressionStatement","src":"5340:35:36"},{"eventCall":{"arguments":[{"id":6518,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"5399:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6519,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"5408:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6517,"name":"HangOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"5391:7:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":6520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5391:23:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6521,"nodeType":"EmitStatement","src":"5386:28:36"}]},"functionSelector":"4f7fc7dd","id":6523,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":6450,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4797:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4801:6:36","memberName":"sender","nodeType":"MemberAccess","src":"4797:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6452,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"4809:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6453,"kind":"modifierInvocation","modifierName":{"id":6449,"name":"isOwner","nameLocations":["4789:7:36"],"nodeType":"IdentifierPath","referencedDeclaration":6194,"src":"4789:7:36"},"nodeType":"ModifierInvocation","src":"4789:28:36"},{"arguments":[{"id":6455,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"4829:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6456,"kind":"modifierInvocation","modifierName":{"id":6454,"name":"isUnListed","nameLocations":["4818:10:36"],"nodeType":"IdentifierPath","referencedDeclaration":6173,"src":"4818:10:36"},"nodeType":"ModifierInvocation","src":"4818:19:36"},{"id":6458,"kind":"modifierInvocation","modifierName":{"id":6457,"name":"onlyOwner","nameLocations":["4838:9:36"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"4838:9:36"},"nodeType":"ModifierInvocation","src":"4838:9:36"}],"name":"initialNFTHangOut","nameLocation":"4713:17:36","nodeType":"FunctionDefinition","parameters":{"id":6448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6445,"mutability":"mutable","name":"tokenId","nameLocation":"4746:7:36","nodeType":"VariableDeclaration","scope":6523,"src":"4741:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6444,"name":"uint","nodeType":"ElementaryTypeName","src":"4741:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6447,"mutability":"mutable","name":"price","nameLocation":"4769:5:36","nodeType":"VariableDeclaration","scope":6523,"src":"4764:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6446,"name":"uint","nodeType":"ElementaryTypeName","src":"4764:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4730:51:36"},"returnParameters":{"id":6459,"nodeType":"ParameterList","parameters":[],"src":"4848:0:36"},"scope":6864,"src":"4704:718:36","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6625,"nodeType":"Block","src":"5542:754:36","statements":[{"assignments":[6535],"declarations":[{"constant":false,"id":6535,"mutability":"mutable","name":"balance","nameLocation":"5558:7:36","nodeType":"VariableDeclaration","scope":6625,"src":"5553:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6534,"name":"uint","nodeType":"ElementaryTypeName","src":"5553:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6541,"initialValue":{"expression":{"baseExpression":{"id":6536,"name":"userCommonNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"5568:14:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_$","typeString":"mapping(address => struct JuryNFTSwap.NFTListInfo storage ref[] storage ref)"}},"id":6539,"indexExpression":{"expression":{"id":6537,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5583:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5587:6:36","memberName":"sender","nodeType":"MemberAccess","src":"5583:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5568:26:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage ref"}},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5595:6:36","memberName":"length","nodeType":"MemberAccess","src":"5568:33:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5553:48:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6542,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"5618:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6543,"name":"COMMON_NFT_LIMIT_PER_USER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"5629:25:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5618:36:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6552,"nodeType":"IfStatement","src":"5614:120:36","trueBody":{"id":6551,"nodeType":"Block","src":"5656:78:36","statements":[{"errorCall":{"arguments":[{"expression":{"id":6546,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5702:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5706:6:36","memberName":"sender","nodeType":"MemberAccess","src":"5702:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6548,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"5714:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6545,"name":"MaximumNumberOfHoldings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"5678:23:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5678:44:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6550,"nodeType":"RevertStatement","src":"5671:51:36"}]}},{"assignments":[6555],"declarations":[{"constant":false,"id":6555,"mutability":"mutable","name":"info","nameLocation":"5765:4:36","nodeType":"VariableDeclaration","scope":6625,"src":"5746:23:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"},"typeName":{"id":6554,"nodeType":"UserDefinedTypeName","pathNode":{"id":6553,"name":"NFTListInfo","nameLocations":["5746:11:36"],"nodeType":"IdentifierPath","referencedDeclaration":6021,"src":"5746:11:36"},"referencedDeclaration":6021,"src":"5746:11:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"}},"visibility":"internal"}],"id":6559,"initialValue":{"baseExpression":{"id":6556,"name":"infoByTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"5772:13:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFTListInfo_$6021_storage_$","typeString":"mapping(uint256 => struct JuryNFTSwap.NFTListInfo storage ref)"}},"id":6558,"indexExpression":{"id":6557,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"5786:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5772:22:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5746:48:36"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":6563,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5858:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5862:6:36","memberName":"sender","nodeType":"MemberAccess","src":"5858:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6561,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"5829:8:36","typeDescriptions":{"typeIdentifier":"t_contract$_Proposal_$8450","typeString":"contract Proposal"}},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5838:19:36","memberName":"getAvailableBalance","nodeType":"MemberAccess","referencedDeclaration":8055,"src":"5829:28:36","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":6566,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"5873:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}},"id":6567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5878:5:36","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":6016,"src":"5873:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5829:54:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":6569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5898:22:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":6560,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5807:7:36","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5807:124:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6571,"nodeType":"ExpressionStatement","src":"5807:124:36"},{"expression":{"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6572,"name":"nftLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"5944:7:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6575,"indexExpression":{"expression":{"id":6573,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5952:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5956:6:36","memberName":"sender","nodeType":"MemberAccess","src":"5952:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5944:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":6576,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"5967:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}},"id":6577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5972:5:36","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":6016,"src":"5967:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5944:33:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6579,"nodeType":"ExpressionStatement","src":"5944:33:36"},{"expression":{"arguments":[{"arguments":[{"id":6585,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6024:4:36","typeDescriptions":{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"}],"id":6584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6016:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6583,"name":"address","nodeType":"ElementaryTypeName","src":"6016:7:36","typeDescriptions":{}}},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6016:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6587,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6031:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6035:6:36","memberName":"sender","nodeType":"MemberAccess","src":"6031:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6589,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"6043:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6580,"name":"melonNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"5990:8:36","typeDescriptions":{"typeIdentifier":"t_contract$_MelonNFT_$6942","typeString":"contract MelonNFT"}},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5999:16:36","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2194,"src":"5990:25:36","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5990:61:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6591,"nodeType":"ExpressionStatement","src":"5990:61:36"},{"expression":{"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6592,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"6064:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}},"id":6594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6069:8:36","memberName":"gainTime","nodeType":"MemberAccess","referencedDeclaration":6020,"src":"6064:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6595,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6080:5:36","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6086:9:36","memberName":"timestamp","nodeType":"MemberAccess","src":"6080:15:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6064:31:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6598,"nodeType":"ExpressionStatement","src":"6064:31:36"},{"expression":{"arguments":[{"id":6604,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"6140:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}],"expression":{"baseExpression":{"id":6599,"name":"userCommonNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"6108:14:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_$","typeString":"mapping(address => struct JuryNFTSwap.NFTListInfo storage ref[] storage ref)"}},"id":6602,"indexExpression":{"expression":{"id":6600,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6123:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6127:6:36","memberName":"sender","nodeType":"MemberAccess","src":"6123:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6108:26:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage ref"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6135:4:36","memberName":"push","nodeType":"MemberAccess","src":"6108:31:36","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr_$_t_struct$_NFTListInfo_$6021_storage_$returns$__$attached_to$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr_$","typeString":"function (struct JuryNFTSwap.NFTListInfo storage ref[] storage pointer,struct JuryNFTSwap.NFTListInfo storage ref)"}},"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6108:37:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6606,"nodeType":"ExpressionStatement","src":"6108:37:36"},{"expression":{"arguments":[{"id":6608,"name":"commonNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"6171:10:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage ref"}},{"id":6609,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"6183:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6607,"name":"handleRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"6158:12:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct JuryNFTSwap.NFTListInfo storage ref[] storage pointer,uint256)"}},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6158:33:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6611,"nodeType":"ExpressionStatement","src":"6158:33:36"},{"expression":{"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6202:29:36","subExpression":{"baseExpression":{"id":6612,"name":"infoByTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"6209:13:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFTListInfo_$6021_storage_$","typeString":"mapping(uint256 => struct JuryNFTSwap.NFTListInfo storage ref)"}},"id":6614,"indexExpression":{"id":6613,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"6223:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6209:22:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6616,"nodeType":"ExpressionStatement","src":"6202:29:36"},{"eventCall":{"arguments":[{"expression":{"id":6618,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6256:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6260:6:36","memberName":"sender","nodeType":"MemberAccess","src":"6256:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6620,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"6268:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6621,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"6277:4:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}},"id":6622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6282:5:36","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":6016,"src":"6277:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6617,"name":"BuyNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"6249:6:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":6623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6249:39:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6624,"nodeType":"EmitStatement","src":"6244:44:36"}]},"functionSelector":"bc93d0e0","id":6626,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6531,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"5533:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6532,"kind":"modifierInvocation","modifierName":{"id":6530,"name":"isListed","nameLocations":["5524:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":6151,"src":"5524:8:36"},"nodeType":"ModifierInvocation","src":"5524:17:36"}],"name":"purchaseCommonNFT","nameLocation":"5439:17:36","nodeType":"FunctionDefinition","parameters":{"id":6529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6525,"mutability":"mutable","name":"tokenId","nameLocation":"5472:7:36","nodeType":"VariableDeclaration","scope":6626,"src":"5467:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6524,"name":"uint","nodeType":"ElementaryTypeName","src":"5467:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6528,"mutability":"mutable","name":"proposal","nameLocation":"5499:8:36","nodeType":"VariableDeclaration","scope":6626,"src":"5490:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Proposal_$8450","typeString":"contract Proposal"},"typeName":{"id":6527,"nodeType":"UserDefinedTypeName","pathNode":{"id":6526,"name":"Proposal","nameLocations":["5490:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8450,"src":"5490:8:36"},"referencedDeclaration":8450,"src":"5490:8:36","typeDescriptions":{"typeIdentifier":"t_contract$_Proposal_$8450","typeString":"contract Proposal"}},"visibility":"internal"}],"src":"5456:58:36"},"returnParameters":{"id":6533,"nodeType":"ParameterList","parameters":[],"src":"5542:0:36"},"scope":6864,"src":"5430:866:36","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6759,"nodeType":"Block","src":"6457:984:36","statements":[{"assignments":[6645],"declarations":[{"constant":false,"id":6645,"mutability":"mutable","name":"isStartUp","nameLocation":"6473:9:36","nodeType":"VariableDeclaration","scope":6759,"src":"6468:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6644,"name":"bool","nodeType":"ElementaryTypeName","src":"6468:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6649,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6646,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"6485:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6647,"name":"START_UP_NFT_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"6495:18:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6485:28:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"6468:45:36"},{"expression":{"arguments":[{"expression":{"id":6653,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6552:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6556:6:36","memberName":"sender","nodeType":"MemberAccess","src":"6552:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6657,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6572:4:36","typeDescriptions":{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"}],"id":6656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6564:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6655,"name":"address","nodeType":"ElementaryTypeName","src":"6564:7:36","typeDescriptions":{}}},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6564:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6659,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"6579:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6650,"name":"melonNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"6526:8:36","typeDescriptions":{"typeIdentifier":"t_contract$_MelonNFT_$6942","typeString":"contract MelonNFT"}},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6535:16:36","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2194,"src":"6526:25:36","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6526:61:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6661,"nodeType":"ExpressionStatement","src":"6526:61:36"},{"assignments":[6663],"declarations":[{"constant":false,"id":6663,"mutability":"mutable","name":"uri","nameLocation":"6614:3:36","nodeType":"VariableDeclaration","scope":6759,"src":"6600:17:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6662,"name":"string","nodeType":"ElementaryTypeName","src":"6600:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6668,"initialValue":{"arguments":[{"id":6666,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"6638:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6664,"name":"melonNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"6620:8:36","typeDescriptions":{"typeIdentifier":"t_contract$_MelonNFT_$6942","typeString":"contract MelonNFT"}},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6629:8:36","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":2998,"src":"6620:17:36","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view external returns (string memory)"}},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6620:26:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6600:46:36"},{"assignments":[6671],"declarations":[{"constant":false,"id":6671,"mutability":"mutable","name":"newListing","nameLocation":"6678:10:36","nodeType":"VariableDeclaration","scope":6759,"src":"6659:29:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"},"typeName":{"id":6670,"nodeType":"UserDefinedTypeName","pathNode":{"id":6669,"name":"NFTListInfo","nameLocations":["6659:11:36"],"nodeType":"IdentifierPath","referencedDeclaration":6021,"src":"6659:11:36"},"referencedDeclaration":6021,"src":"6659:11:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"}},"visibility":"internal"}],"id":6678,"initialValue":{"arguments":[{"id":6673,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"6727:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6674,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"6756:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6675,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"6781:3:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6809:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6672,"name":"NFTListInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"6691:11:36","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_NFTListInfo_$6021_storage_ptr_$","typeString":"type(struct JuryNFTSwap.NFTListInfo storage pointer)"}},"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6718:7:36","6749:5:36","6776:3:36","6799:8:36"],"names":["tokenId","price","uri","gainTime"],"nodeType":"FunctionCall","src":"6691:131:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"6659:163:36"},{"condition":{"id":6679,"name":"isStartUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"6839:9:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6707,"nodeType":"Block","src":"6960:118:36","statements":[{"expression":{"arguments":[{"id":6696,"name":"newListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"6991:10:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}],"expression":{"id":6693,"name":"commonNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"6975:10:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage ref"}},"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6986:4:36","memberName":"push","nodeType":"MemberAccess","src":"6975:15:36","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr_$_t_struct$_NFTListInfo_$6021_storage_$returns$__$attached_to$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr_$","typeString":"function (struct JuryNFTSwap.NFTListInfo storage ref[] storage pointer,struct JuryNFTSwap.NFTListInfo storage ref)"}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6975:27:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6698,"nodeType":"ExpressionStatement","src":"6975:27:36"},{"expression":{"arguments":[{"baseExpression":{"id":6700,"name":"userCommonNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"7030:14:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_$","typeString":"mapping(address => struct JuryNFTSwap.NFTListInfo storage ref[] storage ref)"}},"id":6703,"indexExpression":{"expression":{"id":6701,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7045:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7049:6:36","memberName":"sender","nodeType":"MemberAccess","src":"7045:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7030:26:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage ref"}},{"id":6704,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"7058:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6699,"name":"handleRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"7017:12:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct JuryNFTSwap.NFTListInfo storage ref[] storage pointer,uint256)"}},"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7017:49:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6706,"nodeType":"ExpressionStatement","src":"7017:49:36"}]},"id":6708,"nodeType":"IfStatement","src":"6835:243:36","trueBody":{"id":6692,"nodeType":"Block","src":"6850:104:36","statements":[{"expression":{"arguments":[{"id":6683,"name":"newListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"6882:10:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}],"expression":{"id":6680,"name":"startUpNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"6865:11:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage ref"}},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6877:4:36","memberName":"push","nodeType":"MemberAccess","src":"6865:16:36","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr_$_t_struct$_NFTListInfo_$6021_storage_$returns$__$attached_to$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr_$","typeString":"function (struct JuryNFTSwap.NFTListInfo storage ref[] storage pointer,struct JuryNFTSwap.NFTListInfo storage ref)"}},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6865:28:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6685,"nodeType":"ExpressionStatement","src":"6865:28:36"},{"expression":{"id":6690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6908:34:36","subExpression":{"baseExpression":{"id":6686,"name":"userStartUpNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"6915:15:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_NFTListInfo_$6021_storage_$","typeString":"mapping(address => struct JuryNFTSwap.NFTListInfo storage ref)"}},"id":6689,"indexExpression":{"expression":{"id":6687,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6931:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6935:6:36","memberName":"sender","nodeType":"MemberAccess","src":"6931:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6915:27:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6691,"nodeType":"ExpressionStatement","src":"6908:34:36"}]}},{"expression":{"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6709,"name":"infoByTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"7090:13:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFTListInfo_$6021_storage_$","typeString":"mapping(uint256 => struct JuryNFTSwap.NFTListInfo storage ref)"}},"id":6711,"indexExpression":{"id":6710,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"7104:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7090:22:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6712,"name":"newListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"7115:10:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_memory_ptr","typeString":"struct JuryNFTSwap.NFTListInfo memory"}},"src":"7090:35:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},"id":6714,"nodeType":"ExpressionStatement","src":"7090:35:36"},{"assignments":[6716],"declarations":[{"constant":false,"id":6716,"mutability":"mutable","name":"curLock","nameLocation":"7143:7:36","nodeType":"VariableDeclaration","scope":6759,"src":"7138:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6715,"name":"uint","nodeType":"ElementaryTypeName","src":"7138:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6721,"initialValue":{"baseExpression":{"id":6717,"name":"nftLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"7153:7:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6720,"indexExpression":{"expression":{"id":6718,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7161:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7165:6:36","memberName":"sender","nodeType":"MemberAccess","src":"7161:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7153:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7138:34:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6722,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"7189:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6723,"name":"curLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"7198:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7189:16:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6750,"nodeType":"Block","src":"7327:55:36","statements":[{"expression":{"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6743,"name":"nftLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"7342:7:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6746,"indexExpression":{"expression":{"id":6744,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7350:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7354:6:36","memberName":"sender","nodeType":"MemberAccess","src":"7350:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7342:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6747,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"7365:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7342:28:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6749,"nodeType":"ExpressionStatement","src":"7342:28:36"}]},"id":6751,"nodeType":"IfStatement","src":"7185:197:36","trueBody":{"id":6742,"nodeType":"Block","src":"7207:114:36","statements":[{"expression":{"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6725,"name":"nftLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"7222:7:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6728,"indexExpression":{"expression":{"id":6726,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7230:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7234:6:36","memberName":"sender","nodeType":"MemberAccess","src":"7230:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7222:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":6729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7244:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7222:23:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6731,"nodeType":"ExpressionStatement","src":"7222:23:36"},{"expression":{"arguments":[{"expression":{"id":6735,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7281:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7285:6:36","memberName":"sender","nodeType":"MemberAccess","src":"7281:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6737,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"7293:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6738,"name":"curLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"7301:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7293:15:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6732,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6633,"src":"7260:8:36","typeDescriptions":{"typeIdentifier":"t_contract$_Proposal_$8450","typeString":"contract Proposal"}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7269:11:36","memberName":"addInterest","nodeType":"MemberAccess","referencedDeclaration":7553,"src":"7260:20:36","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7260:49:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6741,"nodeType":"ExpressionStatement","src":"7260:49:36"}]}},{"eventCall":{"arguments":[{"expression":{"id":6753,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7406:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7410:6:36","memberName":"sender","nodeType":"MemberAccess","src":"7406:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6755,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"7418:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6756,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"7427:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6752,"name":"Redeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"7399:6:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7399:34:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6758,"nodeType":"EmitStatement","src":"7394:39:36"}]},"functionSelector":"049104e5","id":6760,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":6636,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6416:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6420:6:36","memberName":"sender","nodeType":"MemberAccess","src":"6416:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6638,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"6428:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6639,"kind":"modifierInvocation","modifierName":{"id":6635,"name":"isOwner","nameLocations":["6408:7:36"],"nodeType":"IdentifierPath","referencedDeclaration":6194,"src":"6408:7:36"},"nodeType":"ModifierInvocation","src":"6408:28:36"},{"arguments":[{"id":6641,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"6448:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6642,"kind":"modifierInvocation","modifierName":{"id":6640,"name":"isUnListed","nameLocations":["6437:10:36"],"nodeType":"IdentifierPath","referencedDeclaration":6173,"src":"6437:10:36"},"nodeType":"ModifierInvocation","src":"6437:19:36"}],"name":"redeem","nameLocation":"6313:6:36","nodeType":"FunctionDefinition","parameters":{"id":6634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6628,"mutability":"mutable","name":"tokenId","nameLocation":"6335:7:36","nodeType":"VariableDeclaration","scope":6760,"src":"6330:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6627,"name":"uint","nodeType":"ElementaryTypeName","src":"6330:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6630,"mutability":"mutable","name":"price","nameLocation":"6358:5:36","nodeType":"VariableDeclaration","scope":6760,"src":"6353:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6629,"name":"uint","nodeType":"ElementaryTypeName","src":"6353:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6633,"mutability":"mutable","name":"proposal","nameLocation":"6383:8:36","nodeType":"VariableDeclaration","scope":6760,"src":"6374:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Proposal_$8450","typeString":"contract Proposal"},"typeName":{"id":6632,"nodeType":"UserDefinedTypeName","pathNode":{"id":6631,"name":"Proposal","nameLocations":["6374:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":8450,"src":"6374:8:36"},"referencedDeclaration":8450,"src":"6374:8:36","typeDescriptions":{"typeIdentifier":"t_contract$_Proposal_$8450","typeString":"contract Proposal"}},"visibility":"internal"}],"src":"6319:79:36"},"returnParameters":{"id":6643,"nodeType":"ParameterList","parameters":[],"src":"6457:0:36"},"scope":6864,"src":"6304:1137:36","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2898],"body":{"id":6778,"nodeType":"Block","src":"7628:56:36","statements":[{"expression":{"expression":{"expression":{"id":6774,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7646:4:36","typeDescriptions":{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"}},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7651:16:36","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":6779,"src":"7646:21:36","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) pure external returns (bytes4)"}},"id":6776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7668:8:36","memberName":"selector","nodeType":"MemberAccess","src":"7646:30:36","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":6773,"id":6777,"nodeType":"Return","src":"7639:37:36"}]},"functionSelector":"150b7a02","id":6779,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"7458:16:36","nodeType":"FunctionDefinition","overrides":{"id":6770,"nodeType":"OverrideSpecifier","overrides":[],"src":"7602:8:36"},"parameters":{"id":6769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6762,"mutability":"mutable","name":"operator","nameLocation":"7493:8:36","nodeType":"VariableDeclaration","scope":6779,"src":"7485:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6761,"name":"address","nodeType":"ElementaryTypeName","src":"7485:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6764,"mutability":"mutable","name":"from","nameLocation":"7520:4:36","nodeType":"VariableDeclaration","scope":6779,"src":"7512:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6763,"name":"address","nodeType":"ElementaryTypeName","src":"7512:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6766,"mutability":"mutable","name":"tokenId","nameLocation":"7543:7:36","nodeType":"VariableDeclaration","scope":6779,"src":"7535:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6765,"name":"uint256","nodeType":"ElementaryTypeName","src":"7535:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6768,"mutability":"mutable","name":"data","nameLocation":"7576:4:36","nodeType":"VariableDeclaration","scope":6779,"src":"7561:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6767,"name":"bytes","nodeType":"ElementaryTypeName","src":"7561:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7474:113:36"},"returnParameters":{"id":6773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6779,"src":"7620:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6771,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7620:6:36","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"7619:8:36"},"scope":6864,"src":"7449:235:36","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":6826,"nodeType":"Block","src":"7797:276:36","statements":[{"body":{"id":6824,"nodeType":"Block","src":"7854:212:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6799,"name":"startUpNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"7873:11:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage pointer"}},"id":6801,"indexExpression":{"id":6800,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"7885:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7873:14:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},"id":6802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7888:7:36","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":6014,"src":"7873:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6803,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"7899:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7873:33:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6823,"nodeType":"IfStatement","src":"7869:186:36","trueBody":{"id":6822,"nodeType":"Block","src":"7908:147:36","statements":[{"expression":{"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6805,"name":"startUpNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"7927:11:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage pointer"}},"id":6807,"indexExpression":{"id":6806,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"7939:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7927:14:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6808,"name":"startUpNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"7944:11:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage pointer"}},"id":6813,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6809,"name":"startUpNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"7956:11:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage pointer"}},"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7968:6:36","memberName":"length","nodeType":"MemberAccess","src":"7956:18:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7956:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7944:35:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},"src":"7927:52:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage","typeString":"struct JuryNFTSwap.NFTListInfo storage ref"}},"id":6815,"nodeType":"ExpressionStatement","src":"7927:52:36"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6816,"name":"startUpNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"7998:11:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage pointer"}},"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8010:3:36","memberName":"pop","nodeType":"MemberAccess","src":"7998:15:36","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr_$","typeString":"function (struct JuryNFTSwap.NFTListInfo storage ref[] storage pointer)"}},"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7998:17:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6820,"nodeType":"ExpressionStatement","src":"7998:17:36"},{"id":6821,"nodeType":"Break","src":"8034:5:36"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6792,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"7825:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6793,"name":"startUpNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"7829:11:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo storage ref[] storage pointer"}},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7841:6:36","memberName":"length","nodeType":"MemberAccess","src":"7829:18:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7825:22:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6825,"initializationExpression":{"assignments":[6789],"declarations":[{"constant":false,"id":6789,"mutability":"mutable","name":"i","nameLocation":"7818:1:36","nodeType":"VariableDeclaration","scope":6825,"src":"7813:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6788,"name":"uint","nodeType":"ElementaryTypeName","src":"7813:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6791,"initialValue":{"hexValue":"30","id":6790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7822:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7813:10:36"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7849:3:36","subExpression":{"id":6796,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"7849:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6798,"nodeType":"ExpressionStatement","src":"7849:3:36"},"nodeType":"ForStatement","src":"7808:258:36"}]},"id":6827,"implemented":true,"kind":"function","modifiers":[],"name":"handleRemove","nameLocation":"7701:12:36","nodeType":"FunctionDefinition","parameters":{"id":6786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6783,"mutability":"mutable","name":"startUpNFTs","nameLocation":"7746:11:36","nodeType":"VariableDeclaration","scope":6827,"src":"7724:33:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo[]"},"typeName":{"baseType":{"id":6781,"nodeType":"UserDefinedTypeName","pathNode":{"id":6780,"name":"NFTListInfo","nameLocations":["7724:11:36"],"nodeType":"IdentifierPath","referencedDeclaration":6021,"src":"7724:11:36"},"referencedDeclaration":6021,"src":"7724:11:36","typeDescriptions":{"typeIdentifier":"t_struct$_NFTListInfo_$6021_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo"}},"id":6782,"nodeType":"ArrayTypeName","src":"7724:13:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFTListInfo_$6021_storage_$dyn_storage_ptr","typeString":"struct JuryNFTSwap.NFTListInfo[]"}},"visibility":"internal"},{"constant":false,"id":6785,"mutability":"mutable","name":"tokenId","nameLocation":"7773:7:36","nodeType":"VariableDeclaration","scope":6827,"src":"7768:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6784,"name":"uint","nodeType":"ElementaryTypeName","src":"7768:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7713:74:36"},"returnParameters":{"id":6787,"nodeType":"ParameterList","parameters":[],"src":"7797:0:36"},"scope":6864,"src":"7692:381:36","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6862,"nodeType":"Block","src":"8116:266:36","statements":[{"assignments":[6831],"declarations":[{"constant":false,"id":6831,"mutability":"mutable","name":"applyCount","nameLocation":"8132:10:36","nodeType":"VariableDeclaration","scope":6862,"src":"8127:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6830,"name":"uint","nodeType":"ElementaryTypeName","src":"8127:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6834,"initialValue":{"expression":{"id":6832,"name":"applyStartUpNFTInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"8145:20:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ApplyStartUpNFTInfo_$6026_storage_$dyn_storage","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo storage ref[] storage ref"}},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8166:6:36","memberName":"length","nodeType":"MemberAccess","src":"8145:27:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8127:45:36"},{"body":{"id":6860,"nodeType":"Block","src":"8221:154:36","statements":[{"assignments":[6847],"declarations":[{"constant":false,"id":6847,"mutability":"mutable","name":"applyInfo","nameLocation":"8264:9:36","nodeType":"VariableDeclaration","scope":6860,"src":"8236:37:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ApplyStartUpNFTInfo_$6026_storage_ptr","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo"},"typeName":{"id":6846,"nodeType":"UserDefinedTypeName","pathNode":{"id":6845,"name":"ApplyStartUpNFTInfo","nameLocations":["8236:19:36"],"nodeType":"IdentifierPath","referencedDeclaration":6026,"src":"8236:19:36"},"referencedDeclaration":6026,"src":"8236:19:36","typeDescriptions":{"typeIdentifier":"t_struct$_ApplyStartUpNFTInfo_$6026_storage_ptr","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo"}},"visibility":"internal"}],"id":6851,"initialValue":{"baseExpression":{"id":6848,"name":"applyStartUpNFTInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"8276:20:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ApplyStartUpNFTInfo_$6026_storage_$dyn_storage","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo storage ref[] storage ref"}},"id":6850,"indexExpression":{"id":6849,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6836,"src":"8297:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8276:23:36","typeDescriptions":{"typeIdentifier":"t_struct$_ApplyStartUpNFTInfo_$6026_storage","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8236:63:36"},{"expression":{"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6852,"name":"nftLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"8314:7:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6855,"indexExpression":{"expression":{"id":6853,"name":"applyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6847,"src":"8322:9:36","typeDescriptions":{"typeIdentifier":"t_struct$_ApplyStartUpNFTInfo_$6026_storage_ptr","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo storage pointer"}},"id":6854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8332:4:36","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":6025,"src":"8322:14:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8314:23:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":6856,"name":"applyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6847,"src":"8341:9:36","typeDescriptions":{"typeIdentifier":"t_struct$_ApplyStartUpNFTInfo_$6026_storage_ptr","typeString":"struct JuryNFTSwap.ApplyStartUpNFTInfo storage pointer"}},"id":6857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8351:12:36","memberName":"pledgeAmount","nodeType":"MemberAccess","referencedDeclaration":6023,"src":"8341:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8314:49:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6859,"nodeType":"ExpressionStatement","src":"8314:49:36"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6839,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6836,"src":"8200:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6840,"name":"applyCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"8204:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8200:14:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6861,"initializationExpression":{"assignments":[6836],"declarations":[{"constant":false,"id":6836,"mutability":"mutable","name":"i","nameLocation":"8193:1:36","nodeType":"VariableDeclaration","scope":6861,"src":"8188:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6835,"name":"uint","nodeType":"ElementaryTypeName","src":"8188:4:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6838,"initialValue":{"hexValue":"30","id":6837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8197:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8188:10:36"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8216:3:36","subExpression":{"id":6842,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6836,"src":"8216:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6844,"nodeType":"ExpressionStatement","src":"8216:3:36"},"nodeType":"ForStatement","src":"8183:192:36"}]},"id":6863,"implemented":true,"kind":"function","modifiers":[],"name":"clearApplyLock","nameLocation":"8090:14:36","nodeType":"FunctionDefinition","parameters":{"id":6828,"nodeType":"ParameterList","parameters":[],"src":"8104:2:36"},"returnParameters":{"id":6829,"nodeType":"ParameterList","parameters":[],"src":"8116:0:36"},"scope":6864,"src":"8081:301:36","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":6865,"src":"235:8150:36","usedErrors":[6105,6109,6117,6123,6129],"usedEvents":[13,6071,6079,6087,6095,6101]}],"src":"33:8354:36"}},"contracts/MelonNFT.sol":{"id":37,"ast":{"absolutePath":"contracts/MelonNFT.sol","exportedSymbols":{"Address":[3412],"Context":[3442],"ERC165":[4665],"ERC721":[2765],"ERC721URIStorage":[3055],"IERC165":[4677],"IERC4906":[158],"IERC721":[2881],"IERC721Metadata":[3082],"IERC721Receiver":[2899],"Math":[5543],"MelonNFT":[6942],"Ownable":[112],"SignedMath":[5648],"Strings":[4071]},"id":6943,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6866,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:37"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6867,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6943,"sourceUnit":113,"src":"61:52:37","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":6868,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6943,"sourceUnit":3056,"src":"115:78:37","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6869,"name":"ERC721URIStorage","nameLocations":["220:16:37"],"nodeType":"IdentifierPath","referencedDeclaration":3055,"src":"220:16:37"},"id":6870,"nodeType":"InheritanceSpecifier","src":"220:16:37"},{"baseName":{"id":6871,"name":"Ownable","nameLocations":["238:7:37"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"238:7:37"},"id":6872,"nodeType":"InheritanceSpecifier","src":"238:7:37"}],"canonicalName":"MelonNFT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6942,"linearizedBaseContracts":[6942,112,3055,2765,3082,158,2881,4665,4677,3442],"name":"MelonNFT","nameLocation":"208:8:37","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":6874,"mutability":"mutable","name":"_nextTokenId","nameLocation":"270:12:37","nodeType":"VariableDeclaration","scope":6942,"src":"254:28:37","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6873,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"eventSelector":"1f89f147a58d1673945cf416187db98efc8208408c011b91887acd59fd8523c3","id":6880,"name":"MintNFT","nameLocation":"297:7:37","nodeType":"EventDefinition","parameters":{"id":6879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6876,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"321:2:37","nodeType":"VariableDeclaration","scope":6880,"src":"305:18:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6875,"name":"address","nodeType":"ElementaryTypeName","src":"305:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6878,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"333:7:37","nodeType":"VariableDeclaration","scope":6880,"src":"325:15:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6877,"name":"uint256","nodeType":"ElementaryTypeName","src":"325:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"304:37:37"},"src":"291:51:37"},{"body":{"id":6889,"nodeType":"Block","src":"404:2:37","statements":[]},"id":6890,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d656c6f6e5f4e4654","id":6883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"371:11:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_83c162a676a71aecb86d5c394011521317ae8ed571a349ae7b81d5e7e5ce2c50","typeString":"literal_string \"Melon_NFT\""},"value":"Melon_NFT"},{"hexValue":"4d4c4e5f4e4654","id":6884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:9:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_95edcbd996c3293d698a34089681eaefe6fbc9031d73bfa25ffb6fb0a5e23c91","typeString":"literal_string \"MLN_NFT\""},"value":"MLN_NFT"}],"id":6885,"kind":"baseConstructorSpecifier","modifierName":{"id":6882,"name":"ERC721","nameLocations":["364:6:37"],"nodeType":"IdentifierPath","referencedDeclaration":2765,"src":"364:6:37"},"nodeType":"ModifierInvocation","src":"364:30:37"},{"arguments":[],"id":6887,"kind":"baseConstructorSpecifier","modifierName":{"id":6886,"name":"Ownable","nameLocations":["395:7:37"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"395:7:37"},"nodeType":"ModifierInvocation","src":"395:9:37"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6881,"nodeType":"ParameterList","parameters":[],"src":"361:2:37"},"returnParameters":{"id":6888,"nodeType":"ParameterList","parameters":[],"src":"404:0:37"},"scope":6942,"src":"350:56:37","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6919,"nodeType":"Block","src":"478:157:37","statements":[{"assignments":[6900],"declarations":[{"constant":false,"id":6900,"mutability":"mutable","name":"tokenId","nameLocation":"497:7:37","nodeType":"VariableDeclaration","scope":6919,"src":"489:15:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6899,"name":"uint256","nodeType":"ElementaryTypeName","src":"489:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6903,"initialValue":{"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"507:14:37","subExpression":{"id":6901,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6874,"src":"507:12:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"489:32:37"},{"expression":{"arguments":[{"id":6905,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6892,"src":"542:2:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6906,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"546:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6904,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2333,2362],"referencedDeclaration":2333,"src":"532:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"532:22:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6908,"nodeType":"ExpressionStatement","src":"532:22:37"},{"expression":{"arguments":[{"id":6910,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"578:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6911,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"587:3:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6909,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"565:12:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"565:26:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6913,"nodeType":"ExpressionStatement","src":"565:26:37"},{"eventCall":{"arguments":[{"id":6915,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6892,"src":"615:2:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6916,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"619:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6914,"name":"MintNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"607:7:37","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"607:20:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6918,"nodeType":"EmitStatement","src":"602:25:37"}]},"functionSelector":"d0def521","id":6920,"implemented":true,"kind":"function","modifiers":[{"id":6897,"kind":"modifierInvocation","modifierName":{"id":6896,"name":"onlyOwner","nameLocations":["468:9:37"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"468:9:37"},"nodeType":"ModifierInvocation","src":"468:9:37"}],"name":"mint","nameLocation":"423:4:37","nodeType":"FunctionDefinition","parameters":{"id":6895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6892,"mutability":"mutable","name":"to","nameLocation":"436:2:37","nodeType":"VariableDeclaration","scope":6920,"src":"428:10:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6891,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6894,"mutability":"mutable","name":"uri","nameLocation":"454:3:37","nodeType":"VariableDeclaration","scope":6920,"src":"440:17:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6893,"name":"string","nodeType":"ElementaryTypeName","src":"440:6:37","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"427:31:37"},"returnParameters":{"id":6898,"nodeType":"ParameterList","parameters":[],"src":"478:0:37"},"scope":6942,"src":"414:221:37","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6940,"nodeType":"Block","src":"680:139:37","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6927,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"707:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6926,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"699:7:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"699:16:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6929,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:37","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:37","memberName":"sender","nodeType":"MemberAccess","src":"719:10:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"699:30:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f7520617265206e6f7420746865206f776e6572206f66207468697320746f6b656e","id":6932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"731:37:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_de3e7801eedbe4c7f1fca84b888be8bcc016c89e859eca783782fa56a64d3b0a","typeString":"literal_string \"You are not the owner of this token\""},"value":"You are not the owner of this token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_de3e7801eedbe4c7f1fca84b888be8bcc016c89e859eca783782fa56a64d3b0a","typeString":"literal_string \"You are not the owner of this token\""}],"id":6925,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"691:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"691:78:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6934,"nodeType":"ExpressionStatement","src":"691:78:37"},{"expression":{"arguments":[{"id":6936,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"786:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6935,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[3054],"referencedDeclaration":3054,"src":"780:5:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"780:14:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6938,"nodeType":"ExpressionStatement","src":"780:14:37"},{"functionReturnParameters":6924,"id":6939,"nodeType":"Return","src":"805:7:37"}]},"functionSelector":"42966c68","id":6941,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"652:4:37","nodeType":"FunctionDefinition","parameters":{"id":6923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6922,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:37","nodeType":"VariableDeclaration","scope":6941,"src":"657:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6921,"name":"uint","nodeType":"ElementaryTypeName","src":"657:4:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:14:37"},"returnParameters":{"id":6924,"nodeType":"ParameterList","parameters":[],"src":"680:0:37"},"scope":6942,"src":"643:176:37","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6943,"src":"199:625:37","usedErrors":[],"usedEvents":[13,150,157,2780,2789,2798,6880]}],"src":"33:791:37"}},"contracts/MelonToken.sol":{"id":38,"ast":{"absolutePath":"contracts/MelonToken.sol","exportedSymbols":{"Context":[3442],"Counters":[3516],"ECDSA":[4437],"EIP712":[4641],"ERC20":[1490],"ERC20Pausable":[1605],"ERC20Permit":[1777],"IERC20":[1568],"IERC20Metadata":[1802],"IERC20Permit":[1838],"IERC5267":[183],"Math":[5543],"MelonToken":[7003],"Ownable":[112],"Pausable":[903],"ShortString":[3521],"ShortStrings":[3732],"SignedMath":[5648],"StorageSlot":[3842],"Strings":[4071]},"id":7004,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6944,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:38"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":6945,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7004,"sourceUnit":1778,"src":"61:72:38","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6946,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7004,"sourceUnit":113,"src":"135:52:38","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","id":6947,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7004,"sourceUnit":1606,"src":"189:74:38","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6948,"name":"ERC20Permit","nameLocations":["290:11:38"],"nodeType":"IdentifierPath","referencedDeclaration":1777,"src":"290:11:38"},"id":6949,"nodeType":"InheritanceSpecifier","src":"290:11:38"},{"baseName":{"id":6950,"name":"Ownable","nameLocations":["303:7:38"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"303:7:38"},"id":6951,"nodeType":"InheritanceSpecifier","src":"303:7:38"},{"baseName":{"id":6952,"name":"ERC20Pausable","nameLocations":["312:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":1605,"src":"312:13:38"},"id":6953,"nodeType":"InheritanceSpecifier","src":"312:13:38"}],"canonicalName":"MelonToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7003,"linearizedBaseContracts":[7003,1605,903,112,1777,4641,183,1838,1490,1802,1568,3442],"name":"MelonToken","nameLocation":"276:10:38","nodeType":"ContractDefinition","nodes":[{"body":{"id":6965,"nodeType":"Block","src":"430:2:38","statements":[]},"id":6966,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d656c6f6e","id":6956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"362:7:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_0aac308e38b13d8cfc06956f28a01a5ef59007f8c12315d737d9a6365fe804bb","typeString":"literal_string \"Melon\""},"value":"Melon"},{"hexValue":"4d4c4e","id":6957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"371:5:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_74da941699d8dfbb8e0f145b4c2d1f5f4af6eec6f0a62c7ef89535d5ac6aee0f","typeString":"literal_string \"MLN\""},"value":"MLN"}],"id":6958,"kind":"baseConstructorSpecifier","modifierName":{"id":6955,"name":"ERC20","nameLocations":["356:5:38"],"nodeType":"IdentifierPath","referencedDeclaration":1490,"src":"356:5:38"},"nodeType":"ModifierInvocation","src":"356:21:38"},{"arguments":[{"hexValue":"4d4c4e","id":6960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"399:5:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_74da941699d8dfbb8e0f145b4c2d1f5f4af6eec6f0a62c7ef89535d5ac6aee0f","typeString":"literal_string \"MLN\""},"value":"MLN"}],"id":6961,"kind":"baseConstructorSpecifier","modifierName":{"id":6959,"name":"ERC20Permit","nameLocations":["387:11:38"],"nodeType":"IdentifierPath","referencedDeclaration":1777,"src":"387:11:38"},"nodeType":"ModifierInvocation","src":"387:18:38"},{"arguments":[],"id":6963,"kind":"baseConstructorSpecifier","modifierName":{"id":6962,"name":"Ownable","nameLocations":["415:7:38"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"415:7:38"},"nodeType":"ModifierInvocation","src":"415:9:38"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6954,"nodeType":"ParameterList","parameters":[],"src":"344:2:38"},"returnParameters":{"id":6964,"nodeType":"ParameterList","parameters":[],"src":"430:0:38"},"scope":7003,"src":"333:99:38","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6980,"nodeType":"Block","src":"499:36:38","statements":[{"expression":{"arguments":[{"id":6976,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"516:2:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6977,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"520:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6975,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"510:5:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"510:17:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6979,"nodeType":"ExpressionStatement","src":"510:17:38"}]},"functionSelector":"40c10f19","id":6981,"implemented":true,"kind":"function","modifiers":[{"id":6973,"kind":"modifierInvocation","modifierName":{"id":6972,"name":"onlyOwner","nameLocations":["489:9:38"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"489:9:38"},"nodeType":"ModifierInvocation","src":"489:9:38"}],"name":"mint","nameLocation":"449:4:38","nodeType":"FunctionDefinition","parameters":{"id":6971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6968,"mutability":"mutable","name":"to","nameLocation":"462:2:38","nodeType":"VariableDeclaration","scope":6981,"src":"454:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6967,"name":"address","nodeType":"ElementaryTypeName","src":"454:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6970,"mutability":"mutable","name":"amount","nameLocation":"474:6:38","nodeType":"VariableDeclaration","scope":6981,"src":"466:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6969,"name":"uint256","nodeType":"ElementaryTypeName","src":"466:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"453:28:38"},"returnParameters":{"id":6974,"nodeType":"ParameterList","parameters":[],"src":"499:0:38"},"scope":7003,"src":"440:95:38","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1478,1604],"body":{"id":7001,"nodeType":"Block","src":"655:65:38","statements":[{"expression":{"arguments":[{"id":6996,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"693:4:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6997,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"699:2:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6998,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"703:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6993,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"666:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MelonToken_$7003_$","typeString":"type(contract super MelonToken)"}},"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"672:20:38","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1604,"src":"666:26:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"666:44:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7000,"nodeType":"ExpressionStatement","src":"666:44:38"}]},"id":7002,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"552:20:38","nodeType":"FunctionDefinition","overrides":{"id":6991,"nodeType":"OverrideSpecifier","overrides":[{"id":6989,"name":"ERC20","nameLocations":["633:5:38"],"nodeType":"IdentifierPath","referencedDeclaration":1490,"src":"633:5:38"},{"id":6990,"name":"ERC20Pausable","nameLocations":["640:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":1605,"src":"640:13:38"}],"src":"624:30:38"},"parameters":{"id":6988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6983,"mutability":"mutable","name":"from","nameLocation":"581:4:38","nodeType":"VariableDeclaration","scope":7002,"src":"573:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6982,"name":"address","nodeType":"ElementaryTypeName","src":"573:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6985,"mutability":"mutable","name":"to","nameLocation":"595:2:38","nodeType":"VariableDeclaration","scope":7002,"src":"587:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6984,"name":"address","nodeType":"ElementaryTypeName","src":"587:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6987,"mutability":"mutable","name":"amount","nameLocation":"607:6:38","nodeType":"VariableDeclaration","scope":7002,"src":"599:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6986,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"572:42:38"},"returnParameters":{"id":6992,"nodeType":"ParameterList","parameters":[],"src":"655:0:38"},"scope":7003,"src":"543:177:38","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7004,"src":"267:456:38","usedErrors":[3529,3531],"usedEvents":[13,163,806,811,1502,1511]}],"src":"33:692:38"}},"contracts/Pledge.sol":{"id":39,"ast":{"absolutePath":"contracts/Pledge.sol","exportedSymbols":{"Pledge":[7298],"Proposal":[8450]},"id":7299,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7005,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:39"},{"absolutePath":"contracts/Proposal.sol","file":"./Proposal.sol","id":7006,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7299,"sourceUnit":8451,"src":"61:24:39","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Pledge","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7298,"linearizedBaseContracts":[7298],"name":"Pledge","nameLocation":"98:6:39","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Pledge.PledgeInfo","id":7013,"members":[{"constant":false,"id":7008,"mutability":"mutable","name":"deadline","nameLocation":"146:8:39","nodeType":"VariableDeclaration","scope":7013,"src":"141:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7007,"name":"uint","nodeType":"ElementaryTypeName","src":"141:4:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7010,"mutability":"mutable","name":"margins","nameLocation":"170:7:39","nodeType":"VariableDeclaration","scope":7013,"src":"165:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7009,"name":"uint","nodeType":"ElementaryTypeName","src":"165:4:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7012,"mutability":"mutable","name":"amount","nameLocation":"193:6:39","nodeType":"VariableDeclaration","scope":7013,"src":"188:11:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7011,"name":"uint","nodeType":"ElementaryTypeName","src":"188:4:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PledgeInfo","nameLocation":"119:10:39","nodeType":"StructDefinition","scope":7298,"src":"112:95:39","visibility":"public"},{"anonymous":false,"eventSelector":"485d5bcd7e243593ba58d30097c3ba28f0103e1f8a670262df62d9c4dac8ce19","id":7023,"name":"NewPledge","nameLocation":"221:9:39","nodeType":"EventDefinition","parameters":{"id":7022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7015,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"257:4:39","nodeType":"VariableDeclaration","scope":7023,"src":"241:20:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7014,"name":"address","nodeType":"ElementaryTypeName","src":"241:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7017,"indexed":false,"mutability":"mutable","name":"deadline","nameLocation":"280:8:39","nodeType":"VariableDeclaration","scope":7023,"src":"272:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7016,"name":"uint256","nodeType":"ElementaryTypeName","src":"272:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7019,"indexed":false,"mutability":"mutable","name":"margins","nameLocation":"307:7:39","nodeType":"VariableDeclaration","scope":7023,"src":"299:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7018,"name":"uint256","nodeType":"ElementaryTypeName","src":"299:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7021,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"333:6:39","nodeType":"VariableDeclaration","scope":7023,"src":"325:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7020,"name":"uint256","nodeType":"ElementaryTypeName","src":"325:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"230:116:39"},"src":"215:132:39"},{"anonymous":false,"eventSelector":"a0afcc62883adc46e3210ec3af69c0d44d5bc91010a2475f068a0860cff1e9f2","id":7033,"name":"PledgeCleared","nameLocation":"361:13:39","nodeType":"EventDefinition","parameters":{"id":7032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7025,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"401:4:39","nodeType":"VariableDeclaration","scope":7033,"src":"385:20:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7024,"name":"address","nodeType":"ElementaryTypeName","src":"385:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7027,"indexed":false,"mutability":"mutable","name":"principal","nameLocation":"424:9:39","nodeType":"VariableDeclaration","scope":7033,"src":"416:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7026,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7029,"indexed":false,"mutability":"mutable","name":"interest","nameLocation":"452:8:39","nodeType":"VariableDeclaration","scope":7033,"src":"444:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7028,"name":"uint256","nodeType":"ElementaryTypeName","src":"444:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7031,"indexed":false,"mutability":"mutable","name":"totalAmount","nameLocation":"479:11:39","nodeType":"VariableDeclaration","scope":7033,"src":"471:19:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7030,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"374:123:39"},"src":"355:143:39"},{"constant":false,"functionSelector":"8c5fe473","id":7037,"mutability":"mutable","name":"pledgeLock","nameLocation":"543:10:39","nodeType":"VariableDeclaration","scope":7298,"src":"508:45:39","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7036,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7034,"name":"address","nodeType":"ElementaryTypeName","src":"516:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"508:27:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7035,"name":"uint256","nodeType":"ElementaryTypeName","src":"527:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"4185e236","id":7043,"mutability":"mutable","name":"pledgeInfos","nameLocation":"634:11:39","nodeType":"VariableDeclaration","scope":7298,"src":"594:51:39","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage_$","typeString":"mapping(address => struct Pledge.PledgeInfo[])"},"typeName":{"id":7042,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7038,"name":"address","nodeType":"ElementaryTypeName","src":"602:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"594:32:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage_$","typeString":"mapping(address => struct Pledge.PledgeInfo[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":7040,"nodeType":"UserDefinedTypeName","pathNode":{"id":7039,"name":"PledgeInfo","nameLocations":["613:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":7013,"src":"613:10:39"},"referencedDeclaration":7013,"src":"613:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_storage_ptr","typeString":"struct Pledge.PledgeInfo"}},"id":7041,"nodeType":"ArrayTypeName","src":"613:12:39","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage_ptr","typeString":"struct Pledge.PledgeInfo[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"9c42df66","id":7045,"mutability":"mutable","name":"totalPledgedAmount","nameLocation":"669:18:39","nodeType":"VariableDeclaration","scope":7298,"src":"654:33:39","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7044,"name":"uint256","nodeType":"ElementaryTypeName","src":"654:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"a1841637","id":7047,"mutability":"mutable","name":"totalPledgers","nameLocation":"711:13:39","nodeType":"VariableDeclaration","scope":7298,"src":"696:28:39","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7046,"name":"uint256","nodeType":"ElementaryTypeName","src":"696:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":7111,"nodeType":"Block","src":"806:596:39","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7057,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"839:8:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":7058,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"850:5:39","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"856:9:39","memberName":"timestamp","nodeType":"MemberAccess","src":"850:15:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"839:26:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446561646c696e65206d7573742062652067726561746572207468616e2063757272656e742074696d65","id":7061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"880:44:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f37d6a29ab0c9c61c90146ce8de5ea428440d7ba2a88a3b874c71bade238580","typeString":"literal_string \"Deadline must be greater than current time\""},"value":"Deadline must be greater than current time"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1f37d6a29ab0c9c61c90146ce8de5ea428440d7ba2a88a3b874c71bade238580","typeString":"literal_string \"Deadline must be greater than current time\""}],"id":7056,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"817:7:39","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:118:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7063,"nodeType":"ExpressionStatement","src":"817:118:39"},{"assignments":[7066],"declarations":[{"constant":false,"id":7066,"mutability":"mutable","name":"pledgeInfo","nameLocation":"966:10:39","nodeType":"VariableDeclaration","scope":7111,"src":"948:28:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_memory_ptr","typeString":"struct Pledge.PledgeInfo"},"typeName":{"id":7065,"nodeType":"UserDefinedTypeName","pathNode":{"id":7064,"name":"PledgeInfo","nameLocations":["948:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":7013,"src":"948:10:39"},"referencedDeclaration":7013,"src":"948:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_storage_ptr","typeString":"struct Pledge.PledgeInfo"}},"visibility":"internal"}],"id":7072,"initialValue":{"arguments":[{"id":7068,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"990:8:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7069,"name":"margins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7051,"src":"1000:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7070,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"1009:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7067,"name":"PledgeInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7013,"src":"979:10:39","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PledgeInfo_$7013_storage_ptr_$","typeString":"type(struct Pledge.PledgeInfo storage pointer)"}},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"979:37:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_memory_ptr","typeString":"struct Pledge.PledgeInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"948:68:39"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7073,"name":"pledgeLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"1123:10:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7076,"indexExpression":{"expression":{"id":7074,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1134:3:39","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1138:6:39","memberName":"sender","nodeType":"MemberAccess","src":"1134:10:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1123:22:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1149:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1123:27:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7083,"nodeType":"IfStatement","src":"1119:75:39","trueBody":{"id":7082,"nodeType":"Block","src":"1152:42:39","statements":[{"expression":{"id":7080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1167:15:39","subExpression":{"id":7079,"name":"totalPledgers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"1167:13:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7081,"nodeType":"ExpressionStatement","src":"1167:15:39"}]}},{"expression":{"arguments":[{"id":7089,"name":"pledgeInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"1235:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_memory_ptr","typeString":"struct Pledge.PledgeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PledgeInfo_$7013_memory_ptr","typeString":"struct Pledge.PledgeInfo memory"}],"expression":{"baseExpression":{"id":7084,"name":"pledgeInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7043,"src":"1206:11:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage_$","typeString":"mapping(address => struct Pledge.PledgeInfo storage ref[] storage ref)"}},"id":7087,"indexExpression":{"expression":{"id":7085,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1218:3:39","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1222:6:39","memberName":"sender","nodeType":"MemberAccess","src":"1218:10:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1206:23:39","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage","typeString":"struct Pledge.PledgeInfo storage ref[] storage ref"}},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1230:4:39","memberName":"push","nodeType":"MemberAccess","src":"1206:28:39","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage_ptr_$_t_struct$_PledgeInfo_$7013_storage_$returns$__$attached_to$_t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage_ptr_$","typeString":"function (struct Pledge.PledgeInfo storage ref[] storage pointer,struct Pledge.PledgeInfo storage ref)"}},"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1206:40:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7091,"nodeType":"ExpressionStatement","src":"1206:40:39"},{"expression":{"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7092,"name":"pledgeLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"1257:10:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7095,"indexExpression":{"expression":{"id":7093,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1268:3:39","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1272:6:39","memberName":"sender","nodeType":"MemberAccess","src":"1268:10:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1257:22:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7096,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"1283:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1257:32:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7098,"nodeType":"ExpressionStatement","src":"1257:32:39"},{"expression":{"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7099,"name":"totalPledgedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"1300:18:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7100,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"1322:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1300:28:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7102,"nodeType":"ExpressionStatement","src":"1300:28:39"},{"eventCall":{"arguments":[{"expression":{"id":7104,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1356:3:39","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1360:6:39","memberName":"sender","nodeType":"MemberAccess","src":"1356:10:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7106,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"1368:8:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7107,"name":"margins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7051,"src":"1378:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7108,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"1387:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7103,"name":"NewPledge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"1346:9:39","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1346:48:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7110,"nodeType":"EmitStatement","src":"1341:53:39"}]},"functionSelector":"dfc3a3ff","id":7112,"implemented":true,"kind":"function","modifiers":[],"name":"createPledge","nameLocation":"742:12:39","nodeType":"FunctionDefinition","parameters":{"id":7054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7049,"mutability":"mutable","name":"deadline","nameLocation":"760:8:39","nodeType":"VariableDeclaration","scope":7112,"src":"755:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7048,"name":"uint","nodeType":"ElementaryTypeName","src":"755:4:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7051,"mutability":"mutable","name":"margins","nameLocation":"775:7:39","nodeType":"VariableDeclaration","scope":7112,"src":"770:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7050,"name":"uint","nodeType":"ElementaryTypeName","src":"770:4:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7053,"mutability":"mutable","name":"amount","nameLocation":"789:6:39","nodeType":"VariableDeclaration","scope":7112,"src":"784:11:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7052,"name":"uint","nodeType":"ElementaryTypeName","src":"784:4:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"754:42:39"},"returnParameters":{"id":7055,"nodeType":"ParameterList","parameters":[],"src":"806:0:39"},"scope":7298,"src":"733:669:39","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7123,"nodeType":"Block","src":"1477:61:39","statements":[{"expression":{"components":[{"id":7119,"name":"totalPledgers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"1496:13:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7120,"name":"totalPledgedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"1511:18:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1495:35:39","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":7118,"id":7122,"nodeType":"Return","src":"1488:42:39"}]},"functionSelector":"86dba054","id":7124,"implemented":true,"kind":"function","modifiers":[],"name":"getPledgeStats","nameLocation":"1419:14:39","nodeType":"FunctionDefinition","parameters":{"id":7113,"nodeType":"ParameterList","parameters":[],"src":"1433:2:39"},"returnParameters":{"id":7118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7124,"src":"1459:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1459:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7124,"src":"1468:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1458:18:39"},"scope":7298,"src":"1410:128:39","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7230,"nodeType":"Block","src":"1609:824:39","statements":[{"assignments":[7133],"declarations":[{"constant":false,"id":7133,"mutability":"mutable","name":"totalAmount","nameLocation":"1628:11:39","nodeType":"VariableDeclaration","scope":7230,"src":"1620:19:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1620:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7135,"initialValue":{"hexValue":"30","id":7134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1642:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1620:23:39"},{"assignments":[7137],"declarations":[{"constant":false,"id":7137,"mutability":"mutable","name":"principalAmount","nameLocation":"1662:15:39","nodeType":"VariableDeclaration","scope":7230,"src":"1654:23:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7136,"name":"uint256","nodeType":"ElementaryTypeName","src":"1654:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7139,"initialValue":{"hexValue":"30","id":7138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1680:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1654:27:39"},{"assignments":[7141],"declarations":[{"constant":false,"id":7141,"mutability":"mutable","name":"interestAmount","nameLocation":"1700:14:39","nodeType":"VariableDeclaration","scope":7230,"src":"1692:22:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7140,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7143,"initialValue":{"hexValue":"30","id":7142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1717:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1692:26:39"},{"body":{"id":7214,"nodeType":"Block","src":"1786:506:39","statements":[{"assignments":[7159],"declarations":[{"constant":false,"id":7159,"mutability":"mutable","name":"info","nameLocation":"1819:4:39","nodeType":"VariableDeclaration","scope":7214,"src":"1801:22:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_memory_ptr","typeString":"struct Pledge.PledgeInfo"},"typeName":{"id":7158,"nodeType":"UserDefinedTypeName","pathNode":{"id":7157,"name":"PledgeInfo","nameLocations":["1801:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":7013,"src":"1801:10:39"},"referencedDeclaration":7013,"src":"1801:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_storage_ptr","typeString":"struct Pledge.PledgeInfo"}},"visibility":"internal"}],"id":7165,"initialValue":{"baseExpression":{"baseExpression":{"id":7160,"name":"pledgeInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7043,"src":"1826:11:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage_$","typeString":"mapping(address => struct Pledge.PledgeInfo storage ref[] storage ref)"}},"id":7162,"indexExpression":{"id":7161,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"1838:4:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1826:17:39","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage","typeString":"struct Pledge.PledgeInfo storage ref[] storage ref"}},"id":7164,"indexExpression":{"id":7163,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"1844:1:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1826:20:39","typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_storage","typeString":"struct Pledge.PledgeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1801:45:39"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7166,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"1867:4:39","typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_memory_ptr","typeString":"struct Pledge.PledgeInfo memory"}},"id":7167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1872:8:39","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":7008,"src":"1867:13:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7168,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1883:5:39","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:9:39","memberName":"timestamp","nodeType":"MemberAccess","src":"1883:15:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1867:31:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7213,"nodeType":"IfStatement","src":"1863:418:39","trueBody":{"id":7212,"nodeType":"Block","src":"1900:381:39","statements":[{"assignments":[7172],"declarations":[{"constant":false,"id":7172,"mutability":"mutable","name":"amountWithInterest","nameLocation":"1927:18:39","nodeType":"VariableDeclaration","scope":7212,"src":"1919:26:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1919:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7184,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7173,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"1949:4:39","typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_memory_ptr","typeString":"struct Pledge.PledgeInfo memory"}},"id":7174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1954:6:39","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7012,"src":"1949:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313030","id":7175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1985:3:39","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":7176,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"1991:4:39","typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_memory_ptr","typeString":"struct Pledge.PledgeInfo memory"}},"id":7177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1996:7:39","memberName":"margins","nodeType":"MemberAccess","referencedDeclaration":7010,"src":"1991:12:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1985:18:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1984:20:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:55:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1948:57:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2008:3:39","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1948:63:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1919:92:39"},{"expression":{"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7185,"name":"principalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"2030:15:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":7186,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"2049:4:39","typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_memory_ptr","typeString":"struct Pledge.PledgeInfo memory"}},"id":7187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2054:6:39","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7012,"src":"2049:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2030:30:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7189,"nodeType":"ExpressionStatement","src":"2030:30:39"},{"expression":{"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7190,"name":"interestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"2079:14:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7191,"name":"amountWithInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"2097:18:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7192,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"2118:4:39","typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_memory_ptr","typeString":"struct Pledge.PledgeInfo memory"}},"id":7193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2123:6:39","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7012,"src":"2118:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2097:32:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2079:50:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7196,"nodeType":"ExpressionStatement","src":"2079:50:39"},{"expression":{"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7197,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7133,"src":"2148:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7198,"name":"amountWithInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"2163:18:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:33:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7200,"nodeType":"ExpressionStatement","src":"2148:33:39"},{"expression":{"arguments":[{"id":7202,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"2213:1:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7201,"name":"removePledge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"2200:12:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:15:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7204,"nodeType":"ExpressionStatement","src":"2200:15:39"},{"expression":{"id":7210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7205,"name":"pledgeLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"2234:10:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7207,"indexExpression":{"id":7206,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"2245:4:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2234:16:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":7208,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"2254:4:39","typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_memory_ptr","typeString":"struct Pledge.PledgeInfo memory"}},"id":7209,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2259:6:39","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7012,"src":"2254:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2234:31:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7211,"nodeType":"ExpressionStatement","src":"2234:31:39"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7148,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"1751:1:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":7149,"name":"pledgeInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7043,"src":"1755:11:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage_$","typeString":"mapping(address => struct Pledge.PledgeInfo storage ref[] storage ref)"}},"id":7151,"indexExpression":{"id":7150,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"1767:4:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1755:17:39","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage","typeString":"struct Pledge.PledgeInfo storage ref[] storage ref"}},"id":7152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1773:6:39","memberName":"length","nodeType":"MemberAccess","src":"1755:24:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1751:28:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7215,"initializationExpression":{"assignments":[7145],"declarations":[{"constant":false,"id":7145,"mutability":"mutable","name":"i","nameLocation":"1744:1:39","nodeType":"VariableDeclaration","scope":7215,"src":"1736:9:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7144,"name":"uint256","nodeType":"ElementaryTypeName","src":"1736:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7147,"initialValue":{"hexValue":"30","id":7146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1748:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1736:13:39"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1781:3:39","subExpression":{"id":7154,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"1781:1:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7156,"nodeType":"ExpressionStatement","src":"1781:3:39"},"nodeType":"ForStatement","src":"1731:561:39"},{"expression":{"arguments":[{"id":7219,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"2323:4:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7220,"name":"interestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"2329:14:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7216,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7129,"src":"2302:8:39","typeDescriptions":{"typeIdentifier":"t_contract$_Proposal_$8450","typeString":"contract Proposal"}},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2311:11:39","memberName":"addInterest","nodeType":"MemberAccess","referencedDeclaration":7553,"src":"2302:20:39","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2302:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7222,"nodeType":"ExpressionStatement","src":"2302:42:39"},{"eventCall":{"arguments":[{"id":7224,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"2374:4:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7225,"name":"principalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"2380:15:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7226,"name":"interestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"2397:14:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7227,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7133,"src":"2413:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7223,"name":"PledgeCleared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"2360:13:39","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2360:65:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7229,"nodeType":"EmitStatement","src":"2355:70:39"}]},"functionSelector":"0499884d","id":7231,"implemented":true,"kind":"function","modifiers":[],"name":"clearPledge","nameLocation":"1555:11:39","nodeType":"FunctionDefinition","parameters":{"id":7130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7126,"mutability":"mutable","name":"user","nameLocation":"1575:4:39","nodeType":"VariableDeclaration","scope":7231,"src":"1567:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7125,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7129,"mutability":"mutable","name":"proposal","nameLocation":"1590:8:39","nodeType":"VariableDeclaration","scope":7231,"src":"1581:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Proposal_$8450","typeString":"contract Proposal"},"typeName":{"id":7128,"nodeType":"UserDefinedTypeName","pathNode":{"id":7127,"name":"Proposal","nameLocations":["1581:8:39"],"nodeType":"IdentifierPath","referencedDeclaration":8450,"src":"1581:8:39"},"referencedDeclaration":8450,"src":"1581:8:39","typeDescriptions":{"typeIdentifier":"t_contract$_Proposal_$8450","typeString":"contract Proposal"}},"visibility":"internal"}],"src":"1566:33:39"},"returnParameters":{"id":7131,"nodeType":"ParameterList","parameters":[],"src":"1609:0:39"},"scope":7298,"src":"1546:887:39","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7243,"nodeType":"Block","src":"2507:49:39","statements":[{"expression":{"baseExpression":{"id":7238,"name":"pledgeInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7043,"src":"2525:11:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage_$","typeString":"mapping(address => struct Pledge.PledgeInfo storage ref[] storage ref)"}},"id":7241,"indexExpression":{"expression":{"id":7239,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2537:3:39","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2541:6:39","memberName":"sender","nodeType":"MemberAccess","src":"2537:10:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2525:23:39","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage","typeString":"struct Pledge.PledgeInfo storage ref[] storage ref"}},"functionReturnParameters":7237,"id":7242,"nodeType":"Return","src":"2518:30:39"}]},"functionSelector":"dfef24f5","id":7244,"implemented":true,"kind":"function","modifiers":[],"name":"getPledges","nameLocation":"2450:10:39","nodeType":"FunctionDefinition","parameters":{"id":7232,"nodeType":"ParameterList","parameters":[],"src":"2460:2:39"},"returnParameters":{"id":7237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7244,"src":"2486:19:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PledgeInfo_$7013_memory_ptr_$dyn_memory_ptr","typeString":"struct Pledge.PledgeInfo[]"},"typeName":{"baseType":{"id":7234,"nodeType":"UserDefinedTypeName","pathNode":{"id":7233,"name":"PledgeInfo","nameLocations":["2486:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":7013,"src":"2486:10:39"},"referencedDeclaration":7013,"src":"2486:10:39","typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_storage_ptr","typeString":"struct Pledge.PledgeInfo"}},"id":7235,"nodeType":"ArrayTypeName","src":"2486:12:39","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage_ptr","typeString":"struct Pledge.PledgeInfo[]"}},"visibility":"internal"}],"src":"2485:21:39"},"scope":7298,"src":"2441:115:39","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7296,"nodeType":"Block","src":"2610:328:39","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7250,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"2629:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":7251,"name":"pledgeInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7043,"src":"2637:11:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage_$","typeString":"mapping(address => struct Pledge.PledgeInfo storage ref[] storage ref)"}},"id":7254,"indexExpression":{"expression":{"id":7252,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2649:3:39","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2653:6:39","memberName":"sender","nodeType":"MemberAccess","src":"2649:10:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2637:23:39","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage","typeString":"struct Pledge.PledgeInfo storage ref[] storage ref"}},"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2661:6:39","memberName":"length","nodeType":"MemberAccess","src":"2637:30:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2629:38:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e646578206f7574206f6620626f756e6473","id":7257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2669:21:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","typeString":"literal_string \"Index out of bounds\""},"value":"Index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","typeString":"literal_string \"Index out of bounds\""}],"id":7249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2621:7:39","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2621:70:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7259,"nodeType":"ExpressionStatement","src":"2621:70:39"},{"assignments":[7261],"declarations":[{"constant":false,"id":7261,"mutability":"mutable","name":"lastIndex","nameLocation":"2712:9:39","nodeType":"VariableDeclaration","scope":7296,"src":"2704:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7260,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7269,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7262,"name":"pledgeInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7043,"src":"2724:11:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage_$","typeString":"mapping(address => struct Pledge.PledgeInfo storage ref[] storage ref)"}},"id":7265,"indexExpression":{"expression":{"id":7263,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2736:3:39","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2740:6:39","memberName":"sender","nodeType":"MemberAccess","src":"2736:10:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2724:23:39","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage","typeString":"struct Pledge.PledgeInfo storage ref[] storage ref"}},"id":7266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2748:6:39","memberName":"length","nodeType":"MemberAccess","src":"2724:30:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2757:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2724:34:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2704:54:39"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7270,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"2775:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7271,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7261,"src":"2784:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2775:18:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7288,"nodeType":"IfStatement","src":"2771:118:39","trueBody":{"id":7287,"nodeType":"Block","src":"2795:94:39","statements":[{"expression":{"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7273,"name":"pledgeInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7043,"src":"2810:11:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage_$","typeString":"mapping(address => struct Pledge.PledgeInfo storage ref[] storage ref)"}},"id":7277,"indexExpression":{"expression":{"id":7274,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2822:3:39","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2826:6:39","memberName":"sender","nodeType":"MemberAccess","src":"2822:10:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2810:23:39","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage","typeString":"struct Pledge.PledgeInfo storage ref[] storage ref"}},"id":7278,"indexExpression":{"id":7276,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"2834:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2810:30:39","typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_storage","typeString":"struct Pledge.PledgeInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":7279,"name":"pledgeInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7043,"src":"2843:11:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage_$","typeString":"mapping(address => struct Pledge.PledgeInfo storage ref[] storage ref)"}},"id":7282,"indexExpression":{"expression":{"id":7280,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2855:3:39","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2859:6:39","memberName":"sender","nodeType":"MemberAccess","src":"2855:10:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2843:23:39","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage","typeString":"struct Pledge.PledgeInfo storage ref[] storage ref"}},"id":7284,"indexExpression":{"id":7283,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7261,"src":"2867:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2843:34:39","typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_storage","typeString":"struct Pledge.PledgeInfo storage ref"}},"src":"2810:67:39","typeDescriptions":{"typeIdentifier":"t_struct$_PledgeInfo_$7013_storage","typeString":"struct Pledge.PledgeInfo storage ref"}},"id":7286,"nodeType":"ExpressionStatement","src":"2810:67:39"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":7289,"name":"pledgeInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7043,"src":"2901:11:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage_$","typeString":"mapping(address => struct Pledge.PledgeInfo storage ref[] storage ref)"}},"id":7292,"indexExpression":{"expression":{"id":7290,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2913:3:39","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2917:6:39","memberName":"sender","nodeType":"MemberAccess","src":"2913:10:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2901:23:39","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage","typeString":"struct Pledge.PledgeInfo storage ref[] storage ref"}},"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2925:3:39","memberName":"pop","nodeType":"MemberAccess","src":"2901:27:39","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_PledgeInfo_$7013_storage_$dyn_storage_ptr_$","typeString":"function (struct Pledge.PledgeInfo storage ref[] storage pointer)"}},"id":7294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2901:29:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7295,"nodeType":"ExpressionStatement","src":"2901:29:39"}]},"id":7297,"implemented":true,"kind":"function","modifiers":[],"name":"removePledge","nameLocation":"2573:12:39","nodeType":"FunctionDefinition","parameters":{"id":7247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7246,"mutability":"mutable","name":"index","nameLocation":"2594:5:39","nodeType":"VariableDeclaration","scope":7297,"src":"2586:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7245,"name":"uint256","nodeType":"ElementaryTypeName","src":"2586:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2585:15:39"},"returnParameters":{"id":7248,"nodeType":"ParameterList","parameters":[],"src":"2610:0:39"},"scope":7298,"src":"2564:374:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7299,"src":"89:2852:39","usedErrors":[],"usedEvents":[7023,7033]}],"src":"33:2910:39"}},"contracts/Proposal.sol":{"id":40,"ast":{"absolutePath":"contracts/Proposal.sol","exportedSymbols":{"Address":[3412],"Context":[3442],"Counters":[3516],"ECDSA":[4437],"EIP712":[4641],"ERC165":[4665],"ERC1967Upgrade":[500],"ERC20":[1490],"ERC20Pausable":[1605],"ERC20Permit":[1777],"ERC721":[2765],"ERC721URIStorage":[3055],"IBeacon":[510],"IERC165":[4677],"IERC1822Proxiable":[196],"IERC1967":[136],"IERC20":[1568],"IERC20Metadata":[1802],"IERC20Permit":[1838],"IERC4906":[158],"IERC5267":[183],"IERC721":[2881],"IERC721Metadata":[3082],"IERC721Receiver":[2899],"Initializable":[679],"JuryNFTSwap":[6864],"Math":[5543],"MelonNFT":[6942],"MelonToken":[7003],"Ownable":[112],"Pausable":[903],"Pledge":[7298],"Proposal":[8450],"ShortString":[3521],"ShortStrings":[3732],"SignedMath":[5648],"StorageSlot":[3842],"Strings":[4071],"UUPSUpgradeable":[795]},"id":8451,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7300,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:40"},{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts/proxy/utils/Initializable.sol","id":7301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8451,"sourceUnit":680,"src":"57:63:40","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","id":7302,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8451,"sourceUnit":796,"src":"121:65:40","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7303,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8451,"sourceUnit":1569,"src":"187:56:40","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/JuryNFTSwap.sol","file":"./JuryNFTSwap.sol","id":7304,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8451,"sourceUnit":6865,"src":"244:27:40","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/MelonToken.sol","file":"./MelonToken.sol","id":7305,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8451,"sourceUnit":7004,"src":"272:26:40","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Pledge.sol","file":"./Pledge.sol","id":7306,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8451,"sourceUnit":7299,"src":"299:22:40","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7307,"name":"Initializable","nameLocations":["344:13:40"],"nodeType":"IdentifierPath","referencedDeclaration":679,"src":"344:13:40"},"id":7308,"nodeType":"InheritanceSpecifier","src":"344:13:40"},{"baseName":{"id":7309,"name":"UUPSUpgradeable","nameLocations":["359:15:40"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"359:15:40"},"id":7310,"nodeType":"InheritanceSpecifier","src":"359:15:40"}],"canonicalName":"Proposal","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8450,"linearizedBaseContracts":[8450,795,500,136,196,679],"name":"Proposal","nameLocation":"332:8:40","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Proposal.Option","id":7317,"members":[{"constant":false,"id":7312,"mutability":"mutable","name":"desc","nameLocation":"412:4:40","nodeType":"VariableDeclaration","scope":7317,"src":"405:11:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7311,"name":"string","nodeType":"ElementaryTypeName","src":"405:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7314,"mutability":"mutable","name":"count","nameLocation":"434:5:40","nodeType":"VariableDeclaration","scope":7317,"src":"426:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7313,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7316,"mutability":"mutable","name":"voters","nameLocation":"457:6:40","nodeType":"VariableDeclaration","scope":7317,"src":"449:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7315,"name":"uint256","nodeType":"ElementaryTypeName","src":"449:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Option","nameLocation":"388:6:40","nodeType":"StructDefinition","scope":8450,"src":"381:89:40","visibility":"public"},{"canonicalName":"Proposal.ProposalInfo","id":7324,"members":[{"constant":false,"id":7319,"mutability":"mutable","name":"founder","nameLocation":"514:7:40","nodeType":"VariableDeclaration","scope":7324,"src":"506:15:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7318,"name":"address","nodeType":"ElementaryTypeName","src":"506:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7323,"mutability":"mutable","name":"options","nameLocation":"540:7:40","nodeType":"VariableDeclaration","scope":7324,"src":"531:16:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$7317_storage_$dyn_storage_ptr","typeString":"struct Proposal.Option[]"},"typeName":{"baseType":{"id":7321,"nodeType":"UserDefinedTypeName","pathNode":{"id":7320,"name":"Option","nameLocations":["531:6:40"],"nodeType":"IdentifierPath","referencedDeclaration":7317,"src":"531:6:40"},"referencedDeclaration":7317,"src":"531:6:40","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$7317_storage_ptr","typeString":"struct Proposal.Option"}},"id":7322,"nodeType":"ArrayTypeName","src":"531:8:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$7317_storage_$dyn_storage_ptr","typeString":"struct Proposal.Option[]"}},"visibility":"internal"}],"name":"ProposalInfo","nameLocation":"483:12:40","nodeType":"StructDefinition","scope":8450,"src":"476:78:40","visibility":"public"},{"canonicalName":"Proposal.VoteInfo","id":7329,"members":[{"constant":false,"id":7326,"mutability":"mutable","name":"user","nameLocation":"594:4:40","nodeType":"VariableDeclaration","scope":7329,"src":"586:12:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7325,"name":"address","nodeType":"ElementaryTypeName","src":"586:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7328,"mutability":"mutable","name":"amount","nameLocation":"616:6:40","nodeType":"VariableDeclaration","scope":7329,"src":"608:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7327,"name":"uint256","nodeType":"ElementaryTypeName","src":"608:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VoteInfo","nameLocation":"567:8:40","nodeType":"StructDefinition","scope":8450,"src":"560:69:40","visibility":"public"},{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":7335,"name":"Deposited","nameLocation":"641:9:40","nodeType":"EventDefinition","parameters":{"id":7334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7331,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"667:4:40","nodeType":"VariableDeclaration","scope":7335,"src":"651:20:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7330,"name":"address","nodeType":"ElementaryTypeName","src":"651:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7333,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"681:6:40","nodeType":"VariableDeclaration","scope":7335,"src":"673:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7332,"name":"uint256","nodeType":"ElementaryTypeName","src":"673:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"650:38:40"},"src":"635:54:40"},{"anonymous":false,"eventSelector":"c32b42768a47a585121e9b8d7a2ab9d3f34c326a192dee11ee1732e3d18313f3","id":7345,"name":"Voted","nameLocation":"701:5:40","nodeType":"EventDefinition","parameters":{"id":7344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7337,"indexed":true,"mutability":"mutable","name":"_address","nameLocation":"732:8:40","nodeType":"VariableDeclaration","scope":7345,"src":"716:24:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7336,"name":"address","nodeType":"ElementaryTypeName","src":"716:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7339,"indexed":true,"mutability":"mutable","name":"_proposalId","nameLocation":"766:11:40","nodeType":"VariableDeclaration","scope":7345,"src":"750:27:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7338,"name":"uint256","nodeType":"ElementaryTypeName","src":"750:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7341,"indexed":true,"mutability":"mutable","name":"_optionId","nameLocation":"803:9:40","nodeType":"VariableDeclaration","scope":7345,"src":"787:25:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7340,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7343,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"830:7:40","nodeType":"VariableDeclaration","scope":7345,"src":"822:15:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7342,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"706:137:40"},"src":"695:149:40"},{"anonymous":false,"eventSelector":"f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568","id":7353,"name":"Withdraw","nameLocation":"856:8:40","nodeType":"EventDefinition","parameters":{"id":7352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7347,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"881:4:40","nodeType":"VariableDeclaration","scope":7353,"src":"865:20:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7346,"name":"address","nodeType":"ElementaryTypeName","src":"865:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7349,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"895:6:40","nodeType":"VariableDeclaration","scope":7353,"src":"887:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7348,"name":"uint256","nodeType":"ElementaryTypeName","src":"887:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7351,"indexed":false,"mutability":"mutable","name":"balance","nameLocation":"911:7:40","nodeType":"VariableDeclaration","scope":7353,"src":"903:15:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7350,"name":"uint256","nodeType":"ElementaryTypeName","src":"903:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"864:55:40"},"src":"850:70:40"},{"anonymous":false,"eventSelector":"66a044198f8a0fc35ed879be5d27c3d6ca15787c13093f47e3ba8a94c78eb796","id":7362,"name":"Create","nameLocation":"932:6:40","nodeType":"EventDefinition","parameters":{"id":7361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7355,"indexed":true,"mutability":"mutable","name":"founder","nameLocation":"955:7:40","nodeType":"VariableDeclaration","scope":7362,"src":"939:23:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7354,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7357,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"980:2:40","nodeType":"VariableDeclaration","scope":7362,"src":"964:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7356,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7360,"indexed":false,"mutability":"mutable","name":"options","nameLocation":"993:7:40","nodeType":"VariableDeclaration","scope":7362,"src":"984:16:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7358,"name":"string","nodeType":"ElementaryTypeName","src":"984:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7359,"nodeType":"ArrayTypeName","src":"984:8:40","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"938:63:40"},"src":"926:76:40"},{"anonymous":false,"eventSelector":"96a54eb5c3629a7082316372c06617c472b5958a748182a70c0ba0b1c7e3c886","id":7371,"name":"Settle","nameLocation":"1014:6:40","nodeType":"EventDefinition","parameters":{"id":7370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7364,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"1029:10:40","nodeType":"VariableDeclaration","scope":7371,"src":"1021:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7363,"name":"uint256","nodeType":"ElementaryTypeName","src":"1021:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7366,"indexed":false,"mutability":"mutable","name":"winningOptionId","nameLocation":"1049:15:40","nodeType":"VariableDeclaration","scope":7371,"src":"1041:23:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7365,"name":"uint256","nodeType":"ElementaryTypeName","src":"1041:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7369,"indexed":false,"mutability":"mutable","name":"jurors","nameLocation":"1076:6:40","nodeType":"VariableDeclaration","scope":7371,"src":"1066:16:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7367,"name":"address","nodeType":"ElementaryTypeName","src":"1066:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7368,"nodeType":"ArrayTypeName","src":"1066:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1020:63:40"},"src":"1008:76:40"},{"anonymous":false,"eventSelector":"a0c8eda28ab82fe28c2bcaa48a1ce2b5eac8dbed005a6e8eb62398577e908d5c","id":7377,"name":"ExchangePoints","nameLocation":"1096:14:40","nodeType":"EventDefinition","parameters":{"id":7376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7373,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1127:4:40","nodeType":"VariableDeclaration","scope":7377,"src":"1111:20:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7372,"name":"address","nodeType":"ElementaryTypeName","src":"1111:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7375,"indexed":false,"mutability":"mutable","name":"points","nameLocation":"1141:6:40","nodeType":"VariableDeclaration","scope":7377,"src":"1133:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1133:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1110:38:40"},"src":"1090:59:40"},{"anonymous":false,"eventSelector":"b7c1f9298a18c36af08bd57eabbfbeb04695f24d0438f67614741ec15fb5c4a9","id":7383,"name":"Refunded","nameLocation":"1161:8:40","nodeType":"EventDefinition","parameters":{"id":7382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7379,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"1186:10:40","nodeType":"VariableDeclaration","scope":7383,"src":"1170:26:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1170:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7381,"indexed":false,"mutability":"mutable","name":"winOptionId","nameLocation":"1206:11:40","nodeType":"VariableDeclaration","scope":7383,"src":"1198:19:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7380,"name":"uint256","nodeType":"ElementaryTypeName","src":"1198:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1169:49:40"},"src":"1155:64:40"},{"anonymous":false,"eventSelector":"1034bcc6d30aa91c93d14ce14f959d5d304d6b8a76f50f026934b85d4e4122ed","id":7394,"name":"JurorsDistributeRewards","nameLocation":"1231:23:40","nodeType":"EventDefinition","parameters":{"id":7393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7385,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"1280:10:40","nodeType":"VariableDeclaration","scope":7394,"src":"1264:26:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1264:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7388,"indexed":false,"mutability":"mutable","name":"jurors","nameLocation":"1310:6:40","nodeType":"VariableDeclaration","scope":7394,"src":"1300:16:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7386,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7387,"nodeType":"ArrayTypeName","src":"1300:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7390,"indexed":false,"mutability":"mutable","name":"reward","nameLocation":"1334:6:40","nodeType":"VariableDeclaration","scope":7394,"src":"1326:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7389,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7392,"indexed":false,"mutability":"mutable","name":"rewardPerJuror","nameLocation":"1358:14:40","nodeType":"VariableDeclaration","scope":7394,"src":"1350:22:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7391,"name":"uint256","nodeType":"ElementaryTypeName","src":"1350:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1254:124:40"},"src":"1225:154:40"},{"errorSelector":"f6deaa04","id":7400,"name":"InsufficientBalance","nameLocation":"1391:19:40","nodeType":"ErrorDefinition","parameters":{"id":7399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7396,"mutability":"mutable","name":"user","nameLocation":"1419:4:40","nodeType":"VariableDeclaration","scope":7400,"src":"1411:12:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7395,"name":"address","nodeType":"ElementaryTypeName","src":"1411:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7398,"mutability":"mutable","name":"availableBalance","nameLocation":"1433:16:40","nodeType":"VariableDeclaration","scope":7400,"src":"1425:24:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1425:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1410:40:40"},"src":"1385:66:40"},{"errorSelector":"118cdaa7","id":7404,"name":"OwnableUnauthorizedAccount","nameLocation":"1463:26:40","nodeType":"ErrorDefinition","parameters":{"id":7403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7402,"mutability":"mutable","name":"account","nameLocation":"1498:7:40","nodeType":"VariableDeclaration","scope":7404,"src":"1490:15:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7401,"name":"address","nodeType":"ElementaryTypeName","src":"1490:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1489:17:40"},"src":"1457:50:40"},{"constant":false,"functionSelector":"8da5cb5b","id":7406,"mutability":"mutable","name":"owner","nameLocation":"1550:5:40","nodeType":"VariableDeclaration","scope":8450,"src":"1535:20:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7405,"name":"address","nodeType":"ElementaryTypeName","src":"1535:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9c1fcc4c","id":7408,"mutability":"mutable","name":"logicAddress","nameLocation":"1577:12:40","nodeType":"VariableDeclaration","scope":8450,"src":"1562:27:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7407,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"8a471df9","id":7411,"mutability":"mutable","name":"mlnToken","nameLocation":"1614:8:40","nodeType":"VariableDeclaration","scope":8450,"src":"1596:26:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_MelonToken_$7003","typeString":"contract MelonToken"},"typeName":{"id":7410,"nodeType":"UserDefinedTypeName","pathNode":{"id":7409,"name":"MelonToken","nameLocations":["1596:10:40"],"nodeType":"IdentifierPath","referencedDeclaration":7003,"src":"1596:10:40"},"referencedDeclaration":7003,"src":"1596:10:40","typeDescriptions":{"typeIdentifier":"t_contract$_MelonToken_$7003","typeString":"contract MelonToken"}},"visibility":"public"},{"constant":false,"functionSelector":"13eaa474","id":7414,"mutability":"mutable","name":"juryNFTSwap","nameLocation":"1665:11:40","nodeType":"VariableDeclaration","scope":8450,"src":"1646:30:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"},"typeName":{"id":7413,"nodeType":"UserDefinedTypeName","pathNode":{"id":7412,"name":"JuryNFTSwap","nameLocations":["1646:11:40"],"nodeType":"IdentifierPath","referencedDeclaration":6864,"src":"1646:11:40"},"referencedDeclaration":6864,"src":"1646:11:40","typeDescriptions":{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"}},"visibility":"public"},{"constant":false,"functionSelector":"88ffe867","id":7417,"mutability":"mutable","name":"pledge","nameLocation":"1697:6:40","nodeType":"VariableDeclaration","scope":8450,"src":"1683:20:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Pledge_$7298","typeString":"contract Pledge"},"typeName":{"id":7416,"nodeType":"UserDefinedTypeName","pathNode":{"id":7415,"name":"Pledge","nameLocations":["1683:6:40"],"nodeType":"IdentifierPath","referencedDeclaration":7298,"src":"1683:6:40"},"referencedDeclaration":7298,"src":"1683:6:40","typeDescriptions":{"typeIdentifier":"t_contract$_Pledge_$7298","typeString":"contract Pledge"}},"visibility":"public"},{"constant":false,"functionSelector":"b511328d","id":7421,"mutability":"mutable","name":"proposalInfos","nameLocation":"1732:13:40","nodeType":"VariableDeclaration","scope":8450,"src":"1710:35:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProposalInfo_$7324_storage_$dyn_storage","typeString":"struct Proposal.ProposalInfo[]"},"typeName":{"baseType":{"id":7419,"nodeType":"UserDefinedTypeName","pathNode":{"id":7418,"name":"ProposalInfo","nameLocations":["1710:12:40"],"nodeType":"IdentifierPath","referencedDeclaration":7324,"src":"1710:12:40"},"referencedDeclaration":7324,"src":"1710:12:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo"}},"id":7420,"nodeType":"ArrayTypeName","src":"1710:14:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProposalInfo_$7324_storage_$dyn_storage_ptr","typeString":"struct Proposal.ProposalInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"27e235e3","id":7425,"mutability":"mutable","name":"balances","nameLocation":"1805:8:40","nodeType":"VariableDeclaration","scope":8450,"src":"1770:43:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7424,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7422,"name":"address","nodeType":"ElementaryTypeName","src":"1778:7:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1770:27:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7423,"name":"uint256","nodeType":"ElementaryTypeName","src":"1789:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"b00673bc","id":7429,"mutability":"mutable","name":"votingLock","nameLocation":"1855:10:40","nodeType":"VariableDeclaration","scope":8450,"src":"1820:45:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7428,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7426,"name":"address","nodeType":"ElementaryTypeName","src":"1828:7:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1820:27:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"bdd8e72e","id":7437,"mutability":"mutable","name":"voting","nameLocation":"1962:6:40","nodeType":"VariableDeclaration","scope":8450,"src":"1904:64:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Proposal.VoteInfo[]))"},"typeName":{"id":7436,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7430,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1904:50:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Proposal.VoteInfo[]))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7435,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1931:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1923:30:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Proposal.VoteInfo[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":7433,"nodeType":"UserDefinedTypeName","pathNode":{"id":7432,"name":"VoteInfo","nameLocations":["1942:8:40"],"nodeType":"IdentifierPath","referencedDeclaration":7329,"src":"1942:8:40"},"referencedDeclaration":7329,"src":"1942:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_storage_ptr","typeString":"struct Proposal.VoteInfo"}},"id":7434,"nodeType":"ArrayTypeName","src":"1942:10:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_ptr","typeString":"struct Proposal.VoteInfo[]"}}}},"visibility":"public"},{"constant":false,"functionSelector":"0dca7ed8","id":7441,"mutability":"mutable","name":"winningOption","nameLocation":"2010:13:40","nodeType":"VariableDeclaration","scope":8450,"src":"1975:48:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":7440,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7438,"name":"uint256","nodeType":"ElementaryTypeName","src":"1983:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1975:27:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"0c7353e0","id":7447,"mutability":"mutable","name":"userProposalResults","nameLocation":"2136:19:40","nodeType":"VariableDeclaration","scope":8450,"src":"2082:73:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_int256_$_$","typeString":"mapping(uint256 => mapping(address => int256))"},"typeName":{"id":7446,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7442,"name":"uint256","nodeType":"ElementaryTypeName","src":"2090:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2082:46:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_int256_$_$","typeString":"mapping(uint256 => mapping(address => int256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7445,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7443,"name":"address","nodeType":"ElementaryTypeName","src":"2109:7:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2101:26:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_int256_$","typeString":"mapping(address => int256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7444,"name":"int256","nodeType":"ElementaryTypeName","src":"2120:6:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}}},"visibility":"public"},{"body":{"id":7461,"nodeType":"Block","src":"2262:122:40","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7449,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"2276:5:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7450,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2285:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2289:6:40","memberName":"sender","nodeType":"MemberAccess","src":"2285:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2276:19:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7459,"nodeType":"IfStatement","src":"2272:95:40","trueBody":{"id":7458,"nodeType":"Block","src":"2297:70:40","statements":[{"errorCall":{"arguments":[{"expression":{"id":7454,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2345:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2349:6:40","memberName":"sender","nodeType":"MemberAccess","src":"2345:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7453,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"2318:26:40","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2318:38:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7457,"nodeType":"RevertStatement","src":"2311:45:40"}]}},{"id":7460,"nodeType":"PlaceholderStatement","src":"2376:1:40"}]},"id":7462,"name":"onlyOwner","nameLocation":"2250:9:40","nodeType":"ModifierDefinition","parameters":{"id":7448,"nodeType":"ParameterList","parameters":[],"src":"2259:2:40"},"src":"2241:143:40","virtual":false,"visibility":"internal"},{"body":{"id":7496,"nodeType":"Block","src":"2544:170:40","statements":[{"expression":{"id":7477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7473,"name":"mlnToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"2554:8:40","typeDescriptions":{"typeIdentifier":"t_contract$_MelonToken_$7003","typeString":"contract MelonToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7475,"name":"_tokenAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"2576:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7474,"name":"MelonToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"2565:10:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MelonToken_$7003_$","typeString":"type(contract MelonToken)"}},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2565:22:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_MelonToken_$7003","typeString":"contract MelonToken"}},"src":"2554:33:40","typeDescriptions":{"typeIdentifier":"t_contract$_MelonToken_$7003","typeString":"contract MelonToken"}},"id":7478,"nodeType":"ExpressionStatement","src":"2554:33:40"},{"expression":{"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7479,"name":"juryNFTSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"2597:11:40","typeDescriptions":{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7481,"name":"_juryNFTSwapAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"2623:16:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7480,"name":"JuryNFTSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"2611:11:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_JuryNFTSwap_$6864_$","typeString":"type(contract JuryNFTSwap)"}},"id":7482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2611:29:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"}},"src":"2597:43:40","typeDescriptions":{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"}},"id":7484,"nodeType":"ExpressionStatement","src":"2597:43:40"},{"expression":{"id":7489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7485,"name":"pledge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"2650:6:40","typeDescriptions":{"typeIdentifier":"t_contract$_Pledge_$7298","typeString":"contract Pledge"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7487,"name":"_pledgeAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"2666:11:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7486,"name":"Pledge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"2659:6:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pledge_$7298_$","typeString":"type(contract Pledge)"}},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2659:19:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Pledge_$7298","typeString":"contract Pledge"}},"src":"2650:28:40","typeDescriptions":{"typeIdentifier":"t_contract$_Pledge_$7298","typeString":"contract Pledge"}},"id":7490,"nodeType":"ExpressionStatement","src":"2650:28:40"},{"expression":{"id":7494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7491,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"2689:5:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7492,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2697:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2701:6:40","memberName":"sender","nodeType":"MemberAccess","src":"2697:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2689:18:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7495,"nodeType":"ExpressionStatement","src":"2689:18:40"}]},"functionSelector":"c0c53b8b","id":7497,"implemented":true,"kind":"function","modifiers":[{"id":7471,"kind":"modifierInvocation","modifierName":{"id":7470,"name":"initializer","nameLocations":["2532:11:40"],"nodeType":"IdentifierPath","referencedDeclaration":581,"src":"2532:11:40"},"nodeType":"ModifierInvocation","src":"2532:11:40"}],"name":"initialize","nameLocation":"2415:10:40","nodeType":"FunctionDefinition","parameters":{"id":7469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7464,"mutability":"mutable","name":"_tokenAddr","nameLocation":"2443:10:40","nodeType":"VariableDeclaration","scope":7497,"src":"2435:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7463,"name":"address","nodeType":"ElementaryTypeName","src":"2435:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7466,"mutability":"mutable","name":"_juryNFTSwapAddr","nameLocation":"2471:16:40","nodeType":"VariableDeclaration","scope":7497,"src":"2463:24:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7465,"name":"address","nodeType":"ElementaryTypeName","src":"2463:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7468,"mutability":"mutable","name":"_pledgeAddr","nameLocation":"2505:11:40","nodeType":"VariableDeclaration","scope":7497,"src":"2497:19:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7467,"name":"address","nodeType":"ElementaryTypeName","src":"2497:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2425:97:40"},"returnParameters":{"id":7472,"nodeType":"ParameterList","parameters":[],"src":"2544:0:40"},"scope":8450,"src":"2406:308:40","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7510,"nodeType":"Block","src":"2780:50:40","statements":[{"expression":{"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7504,"name":"mlnToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"2790:8:40","typeDescriptions":{"typeIdentifier":"t_contract$_MelonToken_$7003","typeString":"contract MelonToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7506,"name":"_tokenAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"2812:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7505,"name":"MelonToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"2801:10:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MelonToken_$7003_$","typeString":"type(contract MelonToken)"}},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2801:22:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_MelonToken_$7003","typeString":"contract MelonToken"}},"src":"2790:33:40","typeDescriptions":{"typeIdentifier":"t_contract$_MelonToken_$7003","typeString":"contract MelonToken"}},"id":7509,"nodeType":"ExpressionStatement","src":"2790:33:40"}]},"functionSelector":"5ed411e5","id":7511,"implemented":true,"kind":"function","modifiers":[{"id":7502,"kind":"modifierInvocation","modifierName":{"id":7501,"name":"onlyOwner","nameLocations":["2770:9:40"],"nodeType":"IdentifierPath","referencedDeclaration":7462,"src":"2770:9:40"},"nodeType":"ModifierInvocation","src":"2770:9:40"}],"name":"setNewToken","nameLocation":"2729:11:40","nodeType":"FunctionDefinition","parameters":{"id":7500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7499,"mutability":"mutable","name":"_tokenAddr","nameLocation":"2749:10:40","nodeType":"VariableDeclaration","scope":7511,"src":"2741:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7498,"name":"address","nodeType":"ElementaryTypeName","src":"2741:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2740:20:40"},"returnParameters":{"id":7503,"nodeType":"ParameterList","parameters":[],"src":"2780:0:40"},"scope":8450,"src":"2720:110:40","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7524,"nodeType":"Block","src":"2908:60:40","statements":[{"expression":{"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7518,"name":"juryNFTSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"2918:11:40","typeDescriptions":{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7520,"name":"_juryNFTSwapAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7513,"src":"2944:16:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7519,"name":"JuryNFTSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"2932:11:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_JuryNFTSwap_$6864_$","typeString":"type(contract JuryNFTSwap)"}},"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2932:29:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"}},"src":"2918:43:40","typeDescriptions":{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"}},"id":7523,"nodeType":"ExpressionStatement","src":"2918:43:40"}]},"functionSelector":"b7914a5b","id":7525,"implemented":true,"kind":"function","modifiers":[{"id":7516,"kind":"modifierInvocation","modifierName":{"id":7515,"name":"onlyOwner","nameLocations":["2898:9:40"],"nodeType":"IdentifierPath","referencedDeclaration":7462,"src":"2898:9:40"},"nodeType":"ModifierInvocation","src":"2898:9:40"}],"name":"setNewJuryNFTSwap","nameLocation":"2845:17:40","nodeType":"FunctionDefinition","parameters":{"id":7514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7513,"mutability":"mutable","name":"_juryNFTSwapAddr","nameLocation":"2871:16:40","nodeType":"VariableDeclaration","scope":7525,"src":"2863:24:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7512,"name":"address","nodeType":"ElementaryTypeName","src":"2863:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2862:26:40"},"returnParameters":{"id":7517,"nodeType":"ParameterList","parameters":[],"src":"2908:0:40"},"scope":8450,"src":"2836:132:40","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7538,"nodeType":"Block","src":"3036:50:40","statements":[{"expression":{"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7532,"name":"pledge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"3046:6:40","typeDescriptions":{"typeIdentifier":"t_contract$_Pledge_$7298","typeString":"contract Pledge"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7534,"name":"_pledgeAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7527,"src":"3062:11:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7533,"name":"Pledge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"3055:6:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pledge_$7298_$","typeString":"type(contract Pledge)"}},"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:19:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Pledge_$7298","typeString":"contract Pledge"}},"src":"3046:28:40","typeDescriptions":{"typeIdentifier":"t_contract$_Pledge_$7298","typeString":"contract Pledge"}},"id":7537,"nodeType":"ExpressionStatement","src":"3046:28:40"}]},"functionSelector":"fb3ee525","id":7539,"implemented":true,"kind":"function","modifiers":[{"id":7530,"kind":"modifierInvocation","modifierName":{"id":7529,"name":"onlyOwner","nameLocations":["3026:9:40"],"nodeType":"IdentifierPath","referencedDeclaration":7462,"src":"3026:9:40"},"nodeType":"ModifierInvocation","src":"3026:9:40"}],"name":"setNewPledge","nameLocation":"2983:12:40","nodeType":"FunctionDefinition","parameters":{"id":7528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7527,"mutability":"mutable","name":"_pledgeAddr","nameLocation":"3004:11:40","nodeType":"VariableDeclaration","scope":7539,"src":"2996:19:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7526,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:21:40"},"returnParameters":{"id":7531,"nodeType":"ParameterList","parameters":[],"src":"3036:0:40"},"scope":8450,"src":"2974:112:40","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7552,"nodeType":"Block","src":"3157:49:40","statements":[{"expression":{"id":7550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7546,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"3167:8:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7548,"indexExpression":{"id":7547,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"3176:4:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3167:14:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7549,"name":"interestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"3185:14:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3167:32:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7551,"nodeType":"ExpressionStatement","src":"3167:32:40"}]},"functionSelector":"213b2ff3","id":7553,"implemented":true,"kind":"function","modifiers":[],"name":"addInterest","nameLocation":"3101:11:40","nodeType":"FunctionDefinition","parameters":{"id":7544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7541,"mutability":"mutable","name":"user","nameLocation":"3121:4:40","nodeType":"VariableDeclaration","scope":7553,"src":"3113:12:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7540,"name":"address","nodeType":"ElementaryTypeName","src":"3113:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7543,"mutability":"mutable","name":"interestAmount","nameLocation":"3132:14:40","nodeType":"VariableDeclaration","scope":7553,"src":"3127:19:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7542,"name":"uint","nodeType":"ElementaryTypeName","src":"3127:4:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3112:35:40"},"returnParameters":{"id":7545,"nodeType":"ParameterList","parameters":[],"src":"3157:0:40"},"scope":8450,"src":"3092:114:40","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7570,"nodeType":"Block","src":"3333:52:40","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":7564,"name":"voting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"3350:6:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Proposal.VoteInfo storage ref[] storage ref))"}},"id":7566,"indexExpression":{"id":7565,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7555,"src":"3357:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3350:18:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Proposal.VoteInfo storage ref[] storage ref)"}},"id":7568,"indexExpression":{"id":7567,"name":"optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7557,"src":"3369:8:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3350:28:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage","typeString":"struct Proposal.VoteInfo storage ref[] storage ref"}},"functionReturnParameters":7563,"id":7569,"nodeType":"Return","src":"3343:35:40"}]},"functionSelector":"46a0d50a","id":7571,"implemented":true,"kind":"function","modifiers":[],"name":"getVoting","nameLocation":"3221:9:40","nodeType":"FunctionDefinition","parameters":{"id":7558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7555,"mutability":"mutable","name":"proposalId","nameLocation":"3248:10:40","nodeType":"VariableDeclaration","scope":7571,"src":"3240:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7554,"name":"uint256","nodeType":"ElementaryTypeName","src":"3240:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7557,"mutability":"mutable","name":"optionId","nameLocation":"3276:8:40","nodeType":"VariableDeclaration","scope":7571,"src":"3268:16:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7556,"name":"uint256","nodeType":"ElementaryTypeName","src":"3268:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3230:60:40"},"returnParameters":{"id":7563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7571,"src":"3314:17:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteInfo_$7329_memory_ptr_$dyn_memory_ptr","typeString":"struct Proposal.VoteInfo[]"},"typeName":{"baseType":{"id":7560,"nodeType":"UserDefinedTypeName","pathNode":{"id":7559,"name":"VoteInfo","nameLocations":["3314:8:40"],"nodeType":"IdentifierPath","referencedDeclaration":7329,"src":"3314:8:40"},"referencedDeclaration":7329,"src":"3314:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_storage_ptr","typeString":"struct Proposal.VoteInfo"}},"id":7561,"nodeType":"ArrayTypeName","src":"3314:10:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_ptr","typeString":"struct Proposal.VoteInfo[]"}},"visibility":"internal"}],"src":"3313:19:40"},"scope":8450,"src":"3212:173:40","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7610,"nodeType":"Block","src":"3451:256:40","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":7581,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3504:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3508:6:40","memberName":"sender","nodeType":"MemberAccess","src":"3504:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7585,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3524:4:40","typeDescriptions":{"typeIdentifier":"t_contract$_Proposal_$8450","typeString":"contract Proposal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Proposal_$8450","typeString":"contract Proposal"}],"id":7584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3516:7:40","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7583,"name":"address","nodeType":"ElementaryTypeName","src":"3516:7:40","typeDescriptions":{}}},"id":7586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3516:13:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7587,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"3531:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7579,"name":"mlnToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"3482:8:40","typeDescriptions":{"typeIdentifier":"t_contract$_MelonToken_$7003","typeString":"contract MelonToken"}},"id":7580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3491:12:40","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1103,"src":"3482:21:40","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3482:56:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":7589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3552:17:40","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":7578,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3461:7:40","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3461:118:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7591,"nodeType":"ExpressionStatement","src":"3461:118:40"},{"expression":{"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7592,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"3589:8:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7595,"indexExpression":{"expression":{"id":7593,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3598:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3602:6:40","memberName":"sender","nodeType":"MemberAccess","src":"3598:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3589:20:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7596,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"3613:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3589:30:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7598,"nodeType":"ExpressionStatement","src":"3589:30:40"},{"eventCall":{"arguments":[{"expression":{"id":7600,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3644:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3648:6:40","memberName":"sender","nodeType":"MemberAccess","src":"3644:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7602,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"3656:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7599,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7335,"src":"3634:9:40","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3634:29:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7604,"nodeType":"EmitStatement","src":"3629:34:40"},{"expression":{"baseExpression":{"id":7605,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"3680:8:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7608,"indexExpression":{"expression":{"id":7606,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3689:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3693:6:40","memberName":"sender","nodeType":"MemberAccess","src":"3689:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3680:20:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7577,"id":7609,"nodeType":"Return","src":"3673:27:40"}]},"functionSelector":"b6b55f25","id":7611,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"3400:7:40","nodeType":"FunctionDefinition","parameters":{"id":7574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7573,"mutability":"mutable","name":"amount","nameLocation":"3416:6:40","nodeType":"VariableDeclaration","scope":7611,"src":"3408:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7572,"name":"uint256","nodeType":"ElementaryTypeName","src":"3408:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3407:16:40"},"returnParameters":{"id":7577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7611,"src":"3442:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7575,"name":"uint256","nodeType":"ElementaryTypeName","src":"3442:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3441:9:40"},"scope":8450,"src":"3391:316:40","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7731,"nodeType":"Block","src":"4041:651:40","statements":[{"assignments":[7633],"declarations":[{"constant":false,"id":7633,"mutability":"mutable","name":"proposal","nameLocation":"4072:8:40","nodeType":"VariableDeclaration","scope":7731,"src":"4051:29:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo"},"typeName":{"id":7632,"nodeType":"UserDefinedTypeName","pathNode":{"id":7631,"name":"ProposalInfo","nameLocations":["4051:12:40"],"nodeType":"IdentifierPath","referencedDeclaration":7324,"src":"4051:12:40"},"referencedDeclaration":7324,"src":"4051:12:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo"}},"visibility":"internal"}],"id":7637,"initialValue":{"baseExpression":{"id":7634,"name":"proposalInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"4083:13:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProposalInfo_$7324_storage_$dyn_storage","typeString":"struct Proposal.ProposalInfo storage ref[] storage ref"}},"id":7636,"indexExpression":{"id":7635,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"4097:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4083:25:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage","typeString":"struct Proposal.ProposalInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4051:57:40"},{"assignments":[7639],"declarations":[{"constant":false,"id":7639,"mutability":"mutable","name":"optionLength","nameLocation":"4126:12:40","nodeType":"VariableDeclaration","scope":7731,"src":"4118:20:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7638,"name":"uint256","nodeType":"ElementaryTypeName","src":"4118:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7643,"initialValue":{"expression":{"expression":{"id":7640,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"4141:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo storage pointer"}},"id":7641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4150:7:40","memberName":"options","nodeType":"MemberAccess","referencedDeclaration":7323,"src":"4141:16:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$7317_storage_$dyn_storage","typeString":"struct Proposal.Option storage ref[] storage ref"}},"id":7642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4158:6:40","memberName":"length","nodeType":"MemberAccess","src":"4141:23:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4118:46:40"},{"expression":{"id":7650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7644,"name":"optionDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"4175:17:40","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7648,"name":"optionLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"4208:12:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4195:12:40","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":7645,"name":"string","nodeType":"ElementaryTypeName","src":"4199:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7646,"nodeType":"ArrayTypeName","src":"4199:8:40","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4195:26:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"4175:46:40","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":7651,"nodeType":"ExpressionStatement","src":"4175:46:40"},{"expression":{"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7652,"name":"counts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"4231:6:40","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7656,"name":"optionLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"4254:12:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4240:13:40","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":7653,"name":"uint256","nodeType":"ElementaryTypeName","src":"4244:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7654,"nodeType":"ArrayTypeName","src":"4244:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:27:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"4231:36:40","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7659,"nodeType":"ExpressionStatement","src":"4231:36:40"},{"expression":{"id":7666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7660,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"4277:6:40","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7664,"name":"optionLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"4300:12:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4286:13:40","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":7661,"name":"uint256","nodeType":"ElementaryTypeName","src":"4290:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7662,"nodeType":"ArrayTypeName","src":"4290:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":7665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4286:27:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"4277:36:40","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7667,"nodeType":"ExpressionStatement","src":"4277:36:40"},{"expression":{"id":7671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7668,"name":"founder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"4323:7:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7669,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"4333:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo storage pointer"}},"id":7670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4342:7:40","memberName":"founder","nodeType":"MemberAccess","referencedDeclaration":7319,"src":"4333:16:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4323:26:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7672,"nodeType":"ExpressionStatement","src":"4323:26:40"},{"body":{"id":7729,"nodeType":"Block","src":"4403:283:40","statements":[{"expression":{"id":7691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7683,"name":"optionDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"4417:17:40","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":7685,"indexExpression":{"id":7684,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"4435:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4417:20:40","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":7686,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"4440:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo storage pointer"}},"id":7687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4449:7:40","memberName":"options","nodeType":"MemberAccess","referencedDeclaration":7323,"src":"4440:16:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$7317_storage_$dyn_storage","typeString":"struct Proposal.Option storage ref[] storage ref"}},"id":7689,"indexExpression":{"id":7688,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"4457:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4440:19:40","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$7317_storage","typeString":"struct Proposal.Option storage ref"}},"id":7690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4460:4:40","memberName":"desc","nodeType":"MemberAccess","referencedDeclaration":7312,"src":"4440:24:40","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"4417:47:40","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7692,"nodeType":"ExpressionStatement","src":"4417:47:40"},{"expression":{"id":7701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7693,"name":"counts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"4478:6:40","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7695,"indexExpression":{"id":7694,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"4485:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4478:9:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":7696,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"4490:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo storage pointer"}},"id":7697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4499:7:40","memberName":"options","nodeType":"MemberAccess","referencedDeclaration":7323,"src":"4490:16:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$7317_storage_$dyn_storage","typeString":"struct Proposal.Option storage ref[] storage ref"}},"id":7699,"indexExpression":{"id":7698,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"4507:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4490:19:40","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$7317_storage","typeString":"struct Proposal.Option storage ref"}},"id":7700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4510:5:40","memberName":"count","nodeType":"MemberAccess","referencedDeclaration":7314,"src":"4490:25:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4478:37:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7702,"nodeType":"ExpressionStatement","src":"4478:37:40"},{"expression":{"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7703,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"4529:6:40","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7705,"indexExpression":{"id":7704,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"4536:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4529:9:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":7706,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"4541:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo storage pointer"}},"id":7707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4550:7:40","memberName":"options","nodeType":"MemberAccess","referencedDeclaration":7323,"src":"4541:16:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$7317_storage_$dyn_storage","typeString":"struct Proposal.Option storage ref[] storage ref"}},"id":7709,"indexExpression":{"id":7708,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"4558:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4541:19:40","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$7317_storage","typeString":"struct Proposal.Option storage ref"}},"id":7710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4561:6:40","memberName":"voters","nodeType":"MemberAccess","referencedDeclaration":7316,"src":"4541:26:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4529:38:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7712,"nodeType":"ExpressionStatement","src":"4529:38:40"},{"expression":{"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7713,"name":"allVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"4581:9:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":7714,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"4594:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo storage pointer"}},"id":7715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4603:7:40","memberName":"options","nodeType":"MemberAccess","referencedDeclaration":7323,"src":"4594:16:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$7317_storage_$dyn_storage","typeString":"struct Proposal.Option storage ref[] storage ref"}},"id":7717,"indexExpression":{"id":7716,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"4611:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4594:19:40","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$7317_storage","typeString":"struct Proposal.Option storage ref"}},"id":7718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4614:6:40","memberName":"voters","nodeType":"MemberAccess","referencedDeclaration":7316,"src":"4594:26:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4581:39:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7720,"nodeType":"ExpressionStatement","src":"4581:39:40"},{"expression":{"id":7727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7721,"name":"allVotesCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"4634:12:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":7722,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"4650:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo storage pointer"}},"id":7723,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4659:7:40","memberName":"options","nodeType":"MemberAccess","referencedDeclaration":7323,"src":"4650:16:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$7317_storage_$dyn_storage","typeString":"struct Proposal.Option storage ref[] storage ref"}},"id":7725,"indexExpression":{"id":7724,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"4667:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4650:19:40","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$7317_storage","typeString":"struct Proposal.Option storage ref"}},"id":7726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4670:5:40","memberName":"count","nodeType":"MemberAccess","referencedDeclaration":7314,"src":"4650:25:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4634:41:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7728,"nodeType":"ExpressionStatement","src":"4634:41:40"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7677,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"4380:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7678,"name":"optionLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"4384:12:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4380:16:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7730,"initializationExpression":{"assignments":[7674],"declarations":[{"constant":false,"id":7674,"mutability":"mutable","name":"i","nameLocation":"4373:1:40","nodeType":"VariableDeclaration","scope":7730,"src":"4365:9:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7673,"name":"uint256","nodeType":"ElementaryTypeName","src":"4365:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7676,"initialValue":{"hexValue":"30","id":7675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4377:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4365:13:40"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4398:3:40","subExpression":{"id":7680,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"4398:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7682,"nodeType":"ExpressionStatement","src":"4398:3:40"},"nodeType":"ForStatement","src":"4360:326:40"}]},"functionSelector":"b93a89f7","id":7732,"implemented":true,"kind":"function","modifiers":[],"name":"getDetails","nameLocation":"3722:10:40","nodeType":"FunctionDefinition","parameters":{"id":7614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7613,"mutability":"mutable","name":"proposalId","nameLocation":"3750:10:40","nodeType":"VariableDeclaration","scope":7732,"src":"3742:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7612,"name":"uint256","nodeType":"ElementaryTypeName","src":"3742:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3732:34:40"},"returnParameters":{"id":7630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7616,"mutability":"mutable","name":"founder","nameLocation":"3833:7:40","nodeType":"VariableDeclaration","scope":7732,"src":"3825:15:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7615,"name":"address","nodeType":"ElementaryTypeName","src":"3825:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7619,"mutability":"mutable","name":"optionDescription","nameLocation":"3870:17:40","nodeType":"VariableDeclaration","scope":7732,"src":"3854:33:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7617,"name":"string","nodeType":"ElementaryTypeName","src":"3854:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7618,"nodeType":"ArrayTypeName","src":"3854:8:40","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":7622,"mutability":"mutable","name":"counts","nameLocation":"3918:6:40","nodeType":"VariableDeclaration","scope":7732,"src":"3901:23:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7620,"name":"uint256","nodeType":"ElementaryTypeName","src":"3901:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7621,"nodeType":"ArrayTypeName","src":"3901:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7625,"mutability":"mutable","name":"voters","nameLocation":"3955:6:40","nodeType":"VariableDeclaration","scope":7732,"src":"3938:23:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7623,"name":"uint256","nodeType":"ElementaryTypeName","src":"3938:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7624,"nodeType":"ArrayTypeName","src":"3938:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7627,"mutability":"mutable","name":"allVotesCast","nameLocation":"3983:12:40","nodeType":"VariableDeclaration","scope":7732,"src":"3975:20:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7626,"name":"uint256","nodeType":"ElementaryTypeName","src":"3975:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7629,"mutability":"mutable","name":"allVoters","nameLocation":"4017:9:40","nodeType":"VariableDeclaration","scope":7732,"src":"4009:17:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7628,"name":"uint256","nodeType":"ElementaryTypeName","src":"4009:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3811:225:40"},"scope":8450,"src":"3713:979:40","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7801,"nodeType":"Block","src":"4752:502:40","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7739,"name":"optionDescs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7735,"src":"4770:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":7740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4782:6:40","memberName":"length","nodeType":"MemberAccess","src":"4770:18:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4791:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4770:22:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6c656e206572726f72","id":7743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4794:11:40","typeDescriptions":{"typeIdentifier":"t_stringliteral_c598e91103c2f3ed0cebfffdd1a49cbe6bbf9b8206e14f1d2a023acd1a7c3c0d","typeString":"literal_string \"len error\""},"value":"len error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c598e91103c2f3ed0cebfffdd1a49cbe6bbf9b8206e14f1d2a023acd1a7c3c0d","typeString":"literal_string \"len error\""}],"id":7738,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4762:7:40","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4762:44:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7745,"nodeType":"ExpressionStatement","src":"4762:44:40"},{"assignments":[7748],"declarations":[{"constant":false,"id":7748,"mutability":"mutable","name":"newProposal","nameLocation":"4881:11:40","nodeType":"VariableDeclaration","scope":7801,"src":"4860:32:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo"},"typeName":{"id":7747,"nodeType":"UserDefinedTypeName","pathNode":{"id":7746,"name":"ProposalInfo","nameLocations":["4860:12:40"],"nodeType":"IdentifierPath","referencedDeclaration":7324,"src":"4860:12:40"},"referencedDeclaration":7324,"src":"4860:12:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo"}},"visibility":"internal"}],"id":7752,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7749,"name":"proposalInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"4895:13:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProposalInfo_$7324_storage_$dyn_storage","typeString":"struct Proposal.ProposalInfo storage ref[] storage ref"}},"id":7750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4909:4:40","memberName":"push","nodeType":"MemberAccess","src":"4895:18:40","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_ProposalInfo_$7324_storage_$dyn_storage_ptr_$returns$_t_struct$_ProposalInfo_$7324_storage_$attached_to$_t_array$_t_struct$_ProposalInfo_$7324_storage_$dyn_storage_ptr_$","typeString":"function (struct Proposal.ProposalInfo storage ref[] storage pointer) returns (struct Proposal.ProposalInfo storage ref)"}},"id":7751,"isConstant":false,"isLValue":true,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4895:20:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage","typeString":"struct Proposal.ProposalInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4860:55:40"},{"expression":{"id":7758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7753,"name":"newProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7748,"src":"4926:11:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo storage pointer"}},"id":7755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4938:7:40","memberName":"founder","nodeType":"MemberAccess","referencedDeclaration":7319,"src":"4926:19:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7756,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4948:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4952:6:40","memberName":"sender","nodeType":"MemberAccess","src":"4948:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4926:32:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7759,"nodeType":"ExpressionStatement","src":"4926:32:40"},{"body":{"id":7785,"nodeType":"Block","src":"5018:79:40","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":7777,"name":"optionDescs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7735,"src":"5064:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":7779,"indexExpression":{"id":7778,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"5076:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5064:14:40","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":7780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5080:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5083:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7776,"name":"Option","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"5057:6:40","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Option_$7317_storage_ptr_$","typeString":"type(struct Proposal.Option storage pointer)"}},"id":7782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5057:28:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Option_$7317_memory_ptr","typeString":"struct Proposal.Option memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Option_$7317_memory_ptr","typeString":"struct Proposal.Option memory"}],"expression":{"expression":{"id":7771,"name":"newProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7748,"src":"5032:11:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo storage pointer"}},"id":7774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5044:7:40","memberName":"options","nodeType":"MemberAccess","referencedDeclaration":7323,"src":"5032:19:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$7317_storage_$dyn_storage","typeString":"struct Proposal.Option storage ref[] storage ref"}},"id":7775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5052:4:40","memberName":"push","nodeType":"MemberAccess","src":"5032:24:40","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Option_$7317_storage_$dyn_storage_ptr_$_t_struct$_Option_$7317_storage_$returns$__$attached_to$_t_array$_t_struct$_Option_$7317_storage_$dyn_storage_ptr_$","typeString":"function (struct Proposal.Option storage ref[] storage pointer,struct Proposal.Option storage ref)"}},"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5032:54:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7784,"nodeType":"ExpressionStatement","src":"5032:54:40"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7764,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"4989:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7765,"name":"optionDescs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7735,"src":"4993:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5005:6:40","memberName":"length","nodeType":"MemberAccess","src":"4993:18:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4989:22:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7786,"initializationExpression":{"assignments":[7761],"declarations":[{"constant":false,"id":7761,"mutability":"mutable","name":"i","nameLocation":"4982:1:40","nodeType":"VariableDeclaration","scope":7786,"src":"4974:9:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7760,"name":"uint256","nodeType":"ElementaryTypeName","src":"4974:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7763,"initialValue":{"hexValue":"30","id":7762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4986:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4974:13:40"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5013:3:40","subExpression":{"id":7768,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"5013:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7770,"nodeType":"ExpressionStatement","src":"5013:3:40"},"nodeType":"ForStatement","src":"4969:128:40"},{"assignments":[7788],"declarations":[{"constant":false,"id":7788,"mutability":"mutable","name":"len","nameLocation":"5165:3:40","nodeType":"VariableDeclaration","scope":7801,"src":"5157:11:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7787,"name":"uint256","nodeType":"ElementaryTypeName","src":"5157:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7793,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7789,"name":"proposalInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"5171:13:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProposalInfo_$7324_storage_$dyn_storage","typeString":"struct Proposal.ProposalInfo storage ref[] storage ref"}},"id":7790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:6:40","memberName":"length","nodeType":"MemberAccess","src":"5171:20:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5194:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5171:24:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5157:38:40"},{"eventCall":{"arguments":[{"expression":{"id":7795,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5218:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5222:6:40","memberName":"sender","nodeType":"MemberAccess","src":"5218:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7797,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7788,"src":"5230:3:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7798,"name":"optionDescs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7735,"src":"5235:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}],"id":7794,"name":"Create","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7362,"src":"5211:6:40","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory[] memory)"}},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5211:36:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7800,"nodeType":"EmitStatement","src":"5206:41:40"}]},"functionSelector":"bdd69096","id":7802,"implemented":true,"kind":"function","modifiers":[],"name":"create","nameLocation":"4707:6:40","nodeType":"FunctionDefinition","parameters":{"id":7736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7735,"mutability":"mutable","name":"optionDescs","nameLocation":"4730:11:40","nodeType":"VariableDeclaration","scope":7802,"src":"4714:27:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7733,"name":"string","nodeType":"ElementaryTypeName","src":"4714:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7734,"nodeType":"ArrayTypeName","src":"4714:8:40","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4713:29:40"},"returnParameters":{"id":7737,"nodeType":"ParameterList","parameters":[],"src":"4752:0:40"},"scope":8450,"src":"4698:556:40","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7827,"nodeType":"Block","src":"5309:161:40","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7808,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"5327:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5336:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5327:10:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f696e7473206d7573742062652067726561746572207468616e207a65726f","id":7811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5339:34:40","typeDescriptions":{"typeIdentifier":"t_stringliteral_888ac6140e55689af008cd0fe0bb0528a29e1f99dc09d54949db482c83b4c3a7","typeString":"literal_string \"Points must be greater than zero\""},"value":"Points must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_888ac6140e55689af008cd0fe0bb0528a29e1f99dc09d54949db482c83b4c3a7","typeString":"literal_string \"Points must be greater than zero\""}],"id":7807,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5319:7:40","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5319:55:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7813,"nodeType":"ExpressionStatement","src":"5319:55:40"},{"expression":{"id":7819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7814,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"5384:8:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7817,"indexExpression":{"expression":{"id":7815,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5393:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5397:6:40","memberName":"sender","nodeType":"MemberAccess","src":"5393:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5384:20:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7818,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"5408:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5384:30:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7820,"nodeType":"ExpressionStatement","src":"5384:30:40"},{"eventCall":{"arguments":[{"expression":{"id":7822,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5444:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5448:6:40","memberName":"sender","nodeType":"MemberAccess","src":"5444:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7824,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"5456:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7821,"name":"ExchangePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7377,"src":"5429:14:40","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5429:34:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7826,"nodeType":"EmitStatement","src":"5424:39:40"}]},"functionSelector":"7c7b66f7","id":7828,"implemented":true,"kind":"function","modifiers":[],"name":"exchangePoints","nameLocation":"5269:14:40","nodeType":"FunctionDefinition","parameters":{"id":7805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7804,"mutability":"mutable","name":"points","nameLocation":"5292:6:40","nodeType":"VariableDeclaration","scope":7828,"src":"5284:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7803,"name":"uint256","nodeType":"ElementaryTypeName","src":"5284:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5283:16:40"},"returnParameters":{"id":7806,"nodeType":"ParameterList","parameters":[],"src":"5309:0:40"},"scope":8450,"src":"5260:210:40","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7878,"nodeType":"Block","src":"5519:379:40","statements":[{"assignments":[7834],"declarations":[{"constant":false,"id":7834,"mutability":"mutable","name":"availableBalance","nameLocation":"5537:16:40","nodeType":"VariableDeclaration","scope":7878,"src":"5529:24:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7833,"name":"uint256","nodeType":"ElementaryTypeName","src":"5529:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7839,"initialValue":{"arguments":[{"expression":{"id":7836,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5576:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5580:6:40","memberName":"sender","nodeType":"MemberAccess","src":"5576:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7835,"name":"getAvailableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"5556:19:40","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5556:31:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5529:58:40"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7840,"name":"availableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7834,"src":"5602:16:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7841,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"5621:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5602:25:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7850,"nodeType":"IfStatement","src":"5598:112:40","trueBody":{"id":7849,"nodeType":"Block","src":"5629:81:40","statements":[{"errorCall":{"arguments":[{"expression":{"id":7844,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5670:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5674:6:40","memberName":"sender","nodeType":"MemberAccess","src":"5670:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7846,"name":"availableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7834,"src":"5682:16:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7843,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7400,"src":"5650:19:40","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":7847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5650:49:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7848,"nodeType":"RevertStatement","src":"5643:56:40"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":7854,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5746:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5750:6:40","memberName":"sender","nodeType":"MemberAccess","src":"5746:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7856,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"5758:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7852,"name":"mlnToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"5728:8:40","typeDescriptions":{"typeIdentifier":"t_contract$_MelonToken_$7003","typeString":"contract MelonToken"}},"id":7853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5737:8:40","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1027,"src":"5728:17:40","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5728:37:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":7858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5767:17:40","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":7851,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5720:7:40","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:65:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7860,"nodeType":"ExpressionStatement","src":"5720:65:40"},{"expression":{"id":7866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7861,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"5796:8:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7864,"indexExpression":{"expression":{"id":7862,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5805:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5809:6:40","memberName":"sender","nodeType":"MemberAccess","src":"5805:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5796:20:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7865,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"5820:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5796:30:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7867,"nodeType":"ExpressionStatement","src":"5796:30:40"},{"eventCall":{"arguments":[{"expression":{"id":7869,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5850:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5854:6:40","memberName":"sender","nodeType":"MemberAccess","src":"5850:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7871,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"5862:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":7872,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"5870:8:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7875,"indexExpression":{"expression":{"id":7873,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5879:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5883:6:40","memberName":"sender","nodeType":"MemberAccess","src":"5879:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5870:20:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7868,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"5841:8:40","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":7876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5841:50:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7877,"nodeType":"EmitStatement","src":"5836:55:40"}]},"functionSelector":"2e1a7d4d","id":7879,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"5485:8:40","nodeType":"FunctionDefinition","parameters":{"id":7831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7830,"mutability":"mutable","name":"amount","nameLocation":"5502:6:40","nodeType":"VariableDeclaration","scope":7879,"src":"5494:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7829,"name":"uint256","nodeType":"ElementaryTypeName","src":"5494:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5493:16:40"},"returnParameters":{"id":7832,"nodeType":"ParameterList","parameters":[],"src":"5519:0:40"},"scope":8450,"src":"5476:422:40","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7951,"nodeType":"Block","src":"6011:478:40","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":7890,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6062:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6066:6:40","memberName":"sender","nodeType":"MemberAccess","src":"6062:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7889,"name":"getAvailableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"6042:19:40","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6042:31:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7893,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"6077:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6042:41:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420766f74696e6720726967687473","id":7895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6097:28:40","typeDescriptions":{"typeIdentifier":"t_stringliteral_08708e61edb6abda4b4e5f0a6b7fa9f2f9eb4447ccbaba9e67b398d115d75673","typeString":"literal_string \"Insufficient voting rights\""},"value":"Insufficient voting rights"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_08708e61edb6abda4b4e5f0a6b7fa9f2f9eb4447ccbaba9e67b398d115d75673","typeString":"literal_string \"Insufficient voting rights\""}],"id":7888,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6021:7:40","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:114:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7897,"nodeType":"ExpressionStatement","src":"6021:114:40"},{"expression":{"id":7903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7898,"name":"votingLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"6145:10:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7901,"indexExpression":{"expression":{"id":7899,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6156:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6160:6:40","memberName":"sender","nodeType":"MemberAccess","src":"6156:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6145:22:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7902,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"6171:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6145:32:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7904,"nodeType":"ExpressionStatement","src":"6145:32:40"},{"assignments":[7907],"declarations":[{"constant":false,"id":7907,"mutability":"mutable","name":"proposal","nameLocation":"6209:8:40","nodeType":"VariableDeclaration","scope":7951,"src":"6188:29:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo"},"typeName":{"id":7906,"nodeType":"UserDefinedTypeName","pathNode":{"id":7905,"name":"ProposalInfo","nameLocations":["6188:12:40"],"nodeType":"IdentifierPath","referencedDeclaration":7324,"src":"6188:12:40"},"referencedDeclaration":7324,"src":"6188:12:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo"}},"visibility":"internal"}],"id":7911,"initialValue":{"baseExpression":{"id":7908,"name":"proposalInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"6220:13:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProposalInfo_$7324_storage_$dyn_storage","typeString":"struct Proposal.ProposalInfo storage ref[] storage ref"}},"id":7910,"indexExpression":{"id":7909,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7881,"src":"6234:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6220:25:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage","typeString":"struct Proposal.ProposalInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6188:57:40"},{"expression":{"id":7919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":7912,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7907,"src":"6255:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo storage pointer"}},"id":7915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6264:7:40","memberName":"options","nodeType":"MemberAccess","referencedDeclaration":7323,"src":"6255:16:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$7317_storage_$dyn_storage","typeString":"struct Proposal.Option storage ref[] storage ref"}},"id":7916,"indexExpression":{"id":7914,"name":"optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"6272:8:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6255:26:40","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$7317_storage","typeString":"struct Proposal.Option storage ref"}},"id":7917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6282:5:40","memberName":"count","nodeType":"MemberAccess","referencedDeclaration":7314,"src":"6255:32:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7918,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"6291:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6255:42:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7920,"nodeType":"ExpressionStatement","src":"6255:42:40"},{"expression":{"id":7928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":7921,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7907,"src":"6307:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo storage pointer"}},"id":7924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6316:7:40","memberName":"options","nodeType":"MemberAccess","referencedDeclaration":7323,"src":"6307:16:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$7317_storage_$dyn_storage","typeString":"struct Proposal.Option storage ref[] storage ref"}},"id":7925,"indexExpression":{"id":7923,"name":"optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"6324:8:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:26:40","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$7317_storage","typeString":"struct Proposal.Option storage ref"}},"id":7926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6334:6:40","memberName":"voters","nodeType":"MemberAccess","referencedDeclaration":7316,"src":"6307:33:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6344:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6307:38:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7929,"nodeType":"ExpressionStatement","src":"6307:38:40"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":7937,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6399:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6403:6:40","memberName":"sender","nodeType":"MemberAccess","src":"6399:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7939,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"6411:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7936,"name":"VoteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"6390:8:40","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_VoteInfo_$7329_storage_ptr_$","typeString":"type(struct Proposal.VoteInfo storage pointer)"}},"id":7940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:28:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_memory_ptr","typeString":"struct Proposal.VoteInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VoteInfo_$7329_memory_ptr","typeString":"struct Proposal.VoteInfo memory"}],"expression":{"baseExpression":{"baseExpression":{"id":7930,"name":"voting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"6356:6:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Proposal.VoteInfo storage ref[] storage ref))"}},"id":7933,"indexExpression":{"id":7931,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7881,"src":"6363:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6356:18:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Proposal.VoteInfo storage ref[] storage ref)"}},"id":7934,"indexExpression":{"id":7932,"name":"optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"6375:8:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6356:28:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage","typeString":"struct Proposal.VoteInfo storage ref[] storage ref"}},"id":7935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6385:4:40","memberName":"push","nodeType":"MemberAccess","src":"6356:33:40","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_ptr_$_t_struct$_VoteInfo_$7329_storage_$returns$__$attached_to$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_ptr_$","typeString":"function (struct Proposal.VoteInfo storage ref[] storage pointer,struct Proposal.VoteInfo storage ref)"}},"id":7941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6356:63:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7942,"nodeType":"ExpressionStatement","src":"6356:63:40"},{"eventCall":{"arguments":[{"expression":{"id":7944,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6441:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6445:6:40","memberName":"sender","nodeType":"MemberAccess","src":"6441:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7946,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7881,"src":"6453:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7947,"name":"optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"6465:8:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7948,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"6475:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7943,"name":"Voted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"6435:5:40","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":7949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6435:47:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7950,"nodeType":"EmitStatement","src":"6430:52:40"}]},"functionSelector":"8a6655d6","id":7952,"implemented":true,"kind":"function","modifiers":[],"name":"vote","nameLocation":"5913:4:40","nodeType":"FunctionDefinition","parameters":{"id":7886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7881,"mutability":"mutable","name":"proposalId","nameLocation":"5935:10:40","nodeType":"VariableDeclaration","scope":7952,"src":"5927:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7880,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7883,"mutability":"mutable","name":"optionId","nameLocation":"5963:8:40","nodeType":"VariableDeclaration","scope":7952,"src":"5955:16:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7882,"name":"uint256","nodeType":"ElementaryTypeName","src":"5955:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7885,"mutability":"mutable","name":"amount","nameLocation":"5989:6:40","nodeType":"VariableDeclaration","scope":7952,"src":"5981:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7884,"name":"uint256","nodeType":"ElementaryTypeName","src":"5981:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5917:84:40"},"returnParameters":{"id":7887,"nodeType":"ParameterList","parameters":[],"src":"6011:0:40"},"scope":8450,"src":"5904:585:40","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8000,"nodeType":"Block","src":"6616:486:40","statements":[{"eventCall":{"arguments":[{"id":7963,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"6638:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7964,"name":"winOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7956,"src":"6650:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7965,"name":"jurors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7959,"src":"6663:6:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":7962,"name":"Settle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"6631:6:40","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,address[] memory)"}},"id":7966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6631:39:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7967,"nodeType":"EmitStatement","src":"6626:44:40"},{"assignments":[7969],"declarations":[{"constant":false,"id":7969,"mutability":"mutable","name":"isSingleOptionStatus","nameLocation":"6686:20:40","nodeType":"VariableDeclaration","scope":8000,"src":"6681:25:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7968,"name":"bool","nodeType":"ElementaryTypeName","src":"6681:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7974,"initialValue":{"arguments":[{"id":7971,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"6745:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7972,"name":"winOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7956,"src":"6769:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7970,"name":"isSingleOptionProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8109,"src":"6709:22:40","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) view returns (bool)"}},"id":7973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6709:81:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"6681:109:40"},{"condition":{"id":7975,"name":"isSingleOptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"6805:20:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7992,"nodeType":"Block","src":"6909:138:40","statements":[{"expression":{"arguments":[{"id":7983,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"6953:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7984,"name":"jurors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7959,"src":"6965:6:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":7982,"name":"handleJurorsDistributeRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8181,"src":"6923:29:40","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,address[] memory)"}},"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6923:49:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7986,"nodeType":"ExpressionStatement","src":"6923:49:40"},{"expression":{"arguments":[{"id":7988,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"7012:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7989,"name":"winOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7956,"src":"7024:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7987,"name":"handleMultiOptionProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8324,"src":"6986:25:40","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6986:50:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7991,"nodeType":"ExpressionStatement","src":"6986:50:40"}]},"id":7993,"nodeType":"IfStatement","src":"6801:246:40","trueBody":{"id":7981,"nodeType":"Block","src":"6827:76:40","statements":[{"expression":{"arguments":[{"id":7977,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"6868:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7978,"name":"winOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7956,"src":"6880:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7976,"name":"handleSingleOptionProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8236,"src":"6841:26:40","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6841:51:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7980,"nodeType":"ExpressionStatement","src":"6841:51:40"}]}},{"expression":{"id":7998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7994,"name":"winningOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7441,"src":"7056:13:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7996,"indexExpression":{"id":7995,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"7070:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7056:25:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7997,"name":"winOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7956,"src":"7084:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7056:39:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7999,"nodeType":"ExpressionStatement","src":"7056:39:40"}]},"functionSelector":"9b6f67be","id":8001,"implemented":true,"kind":"function","modifiers":[],"name":"settle","nameLocation":"6504:6:40","nodeType":"FunctionDefinition","parameters":{"id":7960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7954,"mutability":"mutable","name":"proposalId","nameLocation":"6528:10:40","nodeType":"VariableDeclaration","scope":8001,"src":"6520:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7953,"name":"uint256","nodeType":"ElementaryTypeName","src":"6520:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7956,"mutability":"mutable","name":"winOptionId","nameLocation":"6556:11:40","nodeType":"VariableDeclaration","scope":8001,"src":"6548:19:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7955,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7959,"mutability":"mutable","name":"jurors","nameLocation":"6594:6:40","nodeType":"VariableDeclaration","scope":8001,"src":"6577:23:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7957,"name":"address","nodeType":"ElementaryTypeName","src":"6577:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7958,"nodeType":"ArrayTypeName","src":"6577:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6510:96:40"},"returnParameters":{"id":7961,"nodeType":"ParameterList","parameters":[],"src":"6616:0:40"},"scope":8450,"src":"6495:607:40","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8054,"nodeType":"Block","src":"7181:366:40","statements":[{"assignments":[8009],"declarations":[{"constant":false,"id":8009,"mutability":"mutable","name":"totalLock","nameLocation":"7196:9:40","nodeType":"VariableDeclaration","scope":8054,"src":"7191:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8008,"name":"uint","nodeType":"ElementaryTypeName","src":"7191:4:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8011,"initialValue":{"hexValue":"30","id":8010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7208:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7191:18:40"},{"assignments":[8013],"declarations":[{"constant":false,"id":8013,"mutability":"mutable","name":"pledgeLock","nameLocation":"7225:10:40","nodeType":"VariableDeclaration","scope":8054,"src":"7220:15:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8012,"name":"uint","nodeType":"ElementaryTypeName","src":"7220:4:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8018,"initialValue":{"arguments":[{"id":8016,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"7256:4:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8014,"name":"pledge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"7238:6:40","typeDescriptions":{"typeIdentifier":"t_contract$_Pledge_$7298","typeString":"contract Pledge"}},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7245:10:40","memberName":"pledgeLock","nodeType":"MemberAccess","referencedDeclaration":7037,"src":"7238:17:40","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":8017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7238:23:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7220:41:40"},{"assignments":[8020],"declarations":[{"constant":false,"id":8020,"mutability":"mutable","name":"nftLock","nameLocation":"7276:7:40","nodeType":"VariableDeclaration","scope":8054,"src":"7271:12:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8019,"name":"uint","nodeType":"ElementaryTypeName","src":"7271:4:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8025,"initialValue":{"arguments":[{"id":8023,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"7306:4:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8021,"name":"juryNFTSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"7286:11:40","typeDescriptions":{"typeIdentifier":"t_contract$_JuryNFTSwap_$6864","typeString":"contract JuryNFTSwap"}},"id":8022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7298:7:40","memberName":"nftLock","nodeType":"MemberAccess","referencedDeclaration":6060,"src":"7286:19:40","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":8024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7286:25:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7271:40:40"},{"assignments":[8027],"declarations":[{"constant":false,"id":8027,"mutability":"mutable","name":"voteLock","nameLocation":"7329:8:40","nodeType":"VariableDeclaration","scope":8054,"src":"7321:16:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8026,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8031,"initialValue":{"baseExpression":{"id":8028,"name":"votingLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"7340:10:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8030,"indexExpression":{"id":8029,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"7351:4:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7340:16:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:35:40"},{"expression":{"id":8034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8032,"name":"totalLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"7367:9:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8033,"name":"nftLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8020,"src":"7380:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7367:20:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8035,"nodeType":"ExpressionStatement","src":"7367:20:40"},{"expression":{"id":8038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8036,"name":"totalLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"7397:9:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8037,"name":"voteLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8027,"src":"7410:8:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7397:21:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8039,"nodeType":"ExpressionStatement","src":"7397:21:40"},{"expression":{"id":8042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8040,"name":"totalLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"7428:9:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8041,"name":"pledgeLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8013,"src":"7441:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7428:23:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8043,"nodeType":"ExpressionStatement","src":"7428:23:40"},{"assignments":[8045],"declarations":[{"constant":false,"id":8045,"mutability":"mutable","name":"totalBalance","nameLocation":"7470:12:40","nodeType":"VariableDeclaration","scope":8054,"src":"7462:20:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8044,"name":"uint256","nodeType":"ElementaryTypeName","src":"7462:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8049,"initialValue":{"baseExpression":{"id":8046,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"7485:8:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8048,"indexExpression":{"id":8047,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"7494:4:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7485:14:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7462:37:40"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8050,"name":"totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8045,"src":"7516:12:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8051,"name":"totalLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"7531:9:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7516:24:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8007,"id":8053,"nodeType":"Return","src":"7509:31:40"}]},"functionSelector":"6c24a76f","id":8055,"implemented":true,"kind":"function","modifiers":[],"name":"getAvailableBalance","nameLocation":"7117:19:40","nodeType":"FunctionDefinition","parameters":{"id":8004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8003,"mutability":"mutable","name":"user","nameLocation":"7145:4:40","nodeType":"VariableDeclaration","scope":8055,"src":"7137:12:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8002,"name":"address","nodeType":"ElementaryTypeName","src":"7137:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7136:14:40"},"returnParameters":{"id":8007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8055,"src":"7172:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8005,"name":"uint256","nodeType":"ElementaryTypeName","src":"7172:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7171:9:40"},"scope":8450,"src":"7108:439:40","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8108,"nodeType":"Block","src":"7677:323:40","statements":[{"assignments":[8066],"declarations":[{"constant":false,"id":8066,"mutability":"mutable","name":"proposalInfo","nameLocation":"7707:12:40","nodeType":"VariableDeclaration","scope":8108,"src":"7687:32:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_memory_ptr","typeString":"struct Proposal.ProposalInfo"},"typeName":{"id":8065,"nodeType":"UserDefinedTypeName","pathNode":{"id":8064,"name":"ProposalInfo","nameLocations":["7687:12:40"],"nodeType":"IdentifierPath","referencedDeclaration":7324,"src":"7687:12:40"},"referencedDeclaration":7324,"src":"7687:12:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo"}},"visibility":"internal"}],"id":8070,"initialValue":{"baseExpression":{"id":8067,"name":"proposalInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"7722:13:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProposalInfo_$7324_storage_$dyn_storage","typeString":"struct Proposal.ProposalInfo storage ref[] storage ref"}},"id":8069,"indexExpression":{"id":8068,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"7736:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7722:25:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage","typeString":"struct Proposal.ProposalInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7687:60:40"},{"assignments":[8075],"declarations":[{"constant":false,"id":8075,"mutability":"mutable","name":"options","nameLocation":"7773:7:40","nodeType":"VariableDeclaration","scope":8108,"src":"7757:23:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$7317_memory_ptr_$dyn_memory_ptr","typeString":"struct Proposal.Option[]"},"typeName":{"baseType":{"id":8073,"nodeType":"UserDefinedTypeName","pathNode":{"id":8072,"name":"Option","nameLocations":["7757:6:40"],"nodeType":"IdentifierPath","referencedDeclaration":7317,"src":"7757:6:40"},"referencedDeclaration":7317,"src":"7757:6:40","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$7317_storage_ptr","typeString":"struct Proposal.Option"}},"id":8074,"nodeType":"ArrayTypeName","src":"7757:8:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$7317_storage_$dyn_storage_ptr","typeString":"struct Proposal.Option[]"}},"visibility":"internal"}],"id":8078,"initialValue":{"expression":{"id":8076,"name":"proposalInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8066,"src":"7783:12:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_memory_ptr","typeString":"struct Proposal.ProposalInfo memory"}},"id":8077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7796:7:40","memberName":"options","nodeType":"MemberAccess","referencedDeclaration":7323,"src":"7783:20:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$7317_memory_ptr_$dyn_memory_ptr","typeString":"struct Proposal.Option memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7757:46:40"},{"body":{"id":8104,"nodeType":"Block","src":"7858:115:40","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8090,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"7876:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8091,"name":"winOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"7881:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7876:16:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":8093,"name":"options","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"7896:7:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$7317_memory_ptr_$dyn_memory_ptr","typeString":"struct Proposal.Option memory[] memory"}},"id":8095,"indexExpression":{"id":8094,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"7904:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7896:10:40","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$7317_memory_ptr","typeString":"struct Proposal.Option memory"}},"id":8096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7907:5:40","memberName":"count","nodeType":"MemberAccess","referencedDeclaration":7314,"src":"7896:16:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7915:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7896:20:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7876:40:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8103,"nodeType":"IfStatement","src":"7872:91:40","trueBody":{"id":8102,"nodeType":"Block","src":"7918:45:40","statements":[{"expression":{"hexValue":"66616c7365","id":8100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7943:5:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":8063,"id":8101,"nodeType":"Return","src":"7936:12:40"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8083,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"7833:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8084,"name":"options","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"7837:7:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$7317_memory_ptr_$dyn_memory_ptr","typeString":"struct Proposal.Option memory[] memory"}},"id":8085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7845:6:40","memberName":"length","nodeType":"MemberAccess","src":"7837:14:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7833:18:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8105,"initializationExpression":{"assignments":[8080],"declarations":[{"constant":false,"id":8080,"mutability":"mutable","name":"i","nameLocation":"7826:1:40","nodeType":"VariableDeclaration","scope":8105,"src":"7818:9:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8079,"name":"uint256","nodeType":"ElementaryTypeName","src":"7818:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8082,"initialValue":{"hexValue":"30","id":8081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7830:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7818:13:40"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7853:3:40","subExpression":{"id":8087,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"7853:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8089,"nodeType":"ExpressionStatement","src":"7853:3:40"},"nodeType":"ForStatement","src":"7813:160:40"},{"expression":{"hexValue":"74727565","id":8106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7989:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":8063,"id":8107,"nodeType":"Return","src":"7982:11:40"}]},"id":8109,"implemented":true,"kind":"function","modifiers":[],"name":"isSingleOptionProposal","nameLocation":"7562:22:40","nodeType":"FunctionDefinition","parameters":{"id":8060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8057,"mutability":"mutable","name":"proposalId","nameLocation":"7602:10:40","nodeType":"VariableDeclaration","scope":8109,"src":"7594:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8056,"name":"uint256","nodeType":"ElementaryTypeName","src":"7594:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8059,"mutability":"mutable","name":"winOptionId","nameLocation":"7630:11:40","nodeType":"VariableDeclaration","scope":8109,"src":"7622:19:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8058,"name":"uint256","nodeType":"ElementaryTypeName","src":"7622:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7584:63:40"},"returnParameters":{"id":8063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8109,"src":"7671:4:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8061,"name":"bool","nodeType":"ElementaryTypeName","src":"7671:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7670:6:40"},"scope":8450,"src":"7553:447:40","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8180,"nodeType":"Block","src":"8121:521:40","statements":[{"assignments":[null,null,null,null,8118,null],"declarations":[null,null,null,null,{"constant":false,"id":8118,"mutability":"mutable","name":"allVotesCast","nameLocation":"8148:12:40","nodeType":"VariableDeclaration","scope":8180,"src":"8140:20:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8117,"name":"uint256","nodeType":"ElementaryTypeName","src":"8140:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":8122,"initialValue":{"arguments":[{"id":8120,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8111,"src":"8177:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8119,"name":"getDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"8166:10:40","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view returns (address,string memory[] memory,uint256[] memory,uint256[] memory,uint256,uint256)"}},"id":8121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8166:22:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$","typeString":"tuple(address,string memory[] memory,uint256[] memory,uint256[] memory,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8131:57:40"},{"assignments":[8124],"declarations":[{"constant":false,"id":8124,"mutability":"mutable","name":"reward","nameLocation":"8207:6:40","nodeType":"VariableDeclaration","scope":8180,"src":"8199:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8123,"name":"uint256","nodeType":"ElementaryTypeName","src":"8199:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8131,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8125,"name":"allVotesCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8118,"src":"8217:12:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":8126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8232:1:40","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8217:16:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8216:18:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":8129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8237:3:40","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"8216:24:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8199:41:40"},{"assignments":[8133],"declarations":[{"constant":false,"id":8133,"mutability":"mutable","name":"rewardPerJuror","nameLocation":"8258:14:40","nodeType":"VariableDeclaration","scope":8180,"src":"8250:22:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8132,"name":"uint256","nodeType":"ElementaryTypeName","src":"8250:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8138,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8134,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8124,"src":"8275:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":8135,"name":"jurors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"8284:6:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8291:6:40","memberName":"length","nodeType":"MemberAccess","src":"8284:13:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8275:22:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8250:47:40"},{"body":{"id":8171,"nodeType":"Block","src":"8352:143:40","statements":[{"expression":{"id":8156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8150,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"8366:8:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8154,"indexExpression":{"baseExpression":{"id":8151,"name":"jurors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"8375:6:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8153,"indexExpression":{"id":8152,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"8382:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8375:9:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8366:19:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8155,"name":"rewardPerJuror","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8133,"src":"8389:14:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8366:37:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8157,"nodeType":"ExpressionStatement","src":"8366:37:40"},{"expression":{"id":8169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8158,"name":"userProposalResults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"8417:19:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_int256_$_$","typeString":"mapping(uint256 => mapping(address => int256))"}},"id":8163,"indexExpression":{"id":8159,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8111,"src":"8437:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8417:31:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_int256_$","typeString":"mapping(address => int256)"}},"id":8164,"indexExpression":{"baseExpression":{"id":8160,"name":"jurors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"8449:6:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8162,"indexExpression":{"id":8161,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"8456:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8449:9:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8417:42:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8167,"name":"rewardPerJuror","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8133,"src":"8469:14:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8462:6:40","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8165,"name":"int256","nodeType":"ElementaryTypeName","src":"8462:6:40","typeDescriptions":{}}},"id":8168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8462:22:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"8417:67:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":8170,"nodeType":"ExpressionStatement","src":"8417:67:40"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8143,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"8328:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8144,"name":"jurors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"8332:6:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8339:6:40","memberName":"length","nodeType":"MemberAccess","src":"8332:13:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8328:17:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8172,"initializationExpression":{"assignments":[8140],"declarations":[{"constant":false,"id":8140,"mutability":"mutable","name":"i","nameLocation":"8321:1:40","nodeType":"VariableDeclaration","scope":8172,"src":"8313:9:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8139,"name":"uint256","nodeType":"ElementaryTypeName","src":"8313:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8142,"initialValue":{"hexValue":"30","id":8141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8325:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8313:13:40"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8347:3:40","subExpression":{"id":8147,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"8347:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8149,"nodeType":"ExpressionStatement","src":"8347:3:40"},"nodeType":"ForStatement","src":"8308:187:40"},{"eventCall":{"arguments":[{"id":8174,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8111,"src":"8547:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8175,"name":"jurors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"8571:6:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":8176,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8124,"src":"8591:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8177,"name":"rewardPerJuror","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8133,"src":"8611:14:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8173,"name":"JurorsDistributeRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7394,"src":"8510:23:40","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address[] memory,uint256,uint256)"}},"id":8178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8510:125:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8179,"nodeType":"EmitStatement","src":"8505:130:40"}]},"id":8181,"implemented":true,"kind":"function","modifiers":[],"name":"handleJurorsDistributeRewards","nameLocation":"8015:29:40","nodeType":"FunctionDefinition","parameters":{"id":8115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8111,"mutability":"mutable","name":"proposalId","nameLocation":"8062:10:40","nodeType":"VariableDeclaration","scope":8181,"src":"8054:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8110,"name":"uint256","nodeType":"ElementaryTypeName","src":"8054:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8114,"mutability":"mutable","name":"jurors","nameLocation":"8099:6:40","nodeType":"VariableDeclaration","scope":8181,"src":"8082:23:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8112,"name":"address","nodeType":"ElementaryTypeName","src":"8082:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8113,"nodeType":"ArrayTypeName","src":"8082:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"8044:67:40"},"returnParameters":{"id":8116,"nodeType":"ParameterList","parameters":[],"src":"8121:0:40"},"scope":8450,"src":"8006:636:40","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8235,"nodeType":"Block","src":"8756:368:40","statements":[{"assignments":[8193],"declarations":[{"constant":false,"id":8193,"mutability":"mutable","name":"voteRecords","nameLocation":"8805:11:40","nodeType":"VariableDeclaration","scope":8235,"src":"8766:50:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Proposal.VoteInfo[])"},"typeName":{"id":8192,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8188,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"8766:30:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Proposal.VoteInfo[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":8190,"nodeType":"UserDefinedTypeName","pathNode":{"id":8189,"name":"VoteInfo","nameLocations":["8785:8:40"],"nodeType":"IdentifierPath","referencedDeclaration":7329,"src":"8785:8:40"},"referencedDeclaration":7329,"src":"8785:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_storage_ptr","typeString":"struct Proposal.VoteInfo"}},"id":8191,"nodeType":"ArrayTypeName","src":"8785:10:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_ptr","typeString":"struct Proposal.VoteInfo[]"}}},"visibility":"internal"}],"id":8197,"initialValue":{"baseExpression":{"id":8194,"name":"voting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"8819:6:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Proposal.VoteInfo storage ref[] storage ref))"}},"id":8196,"indexExpression":{"id":8195,"name":"winOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8185,"src":"8839:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8819:41:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Proposal.VoteInfo storage ref[] storage ref)"}},"nodeType":"VariableDeclarationStatement","src":"8766:94:40"},{"body":{"id":8228,"nodeType":"Block","src":"8933:137:40","statements":[{"assignments":[8213],"declarations":[{"constant":false,"id":8213,"mutability":"mutable","name":"voteInfo","nameLocation":"8963:8:40","nodeType":"VariableDeclaration","scope":8228,"src":"8947:24:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_memory_ptr","typeString":"struct Proposal.VoteInfo"},"typeName":{"id":8212,"nodeType":"UserDefinedTypeName","pathNode":{"id":8211,"name":"VoteInfo","nameLocations":["8947:8:40"],"nodeType":"IdentifierPath","referencedDeclaration":7329,"src":"8947:8:40"},"referencedDeclaration":7329,"src":"8947:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_storage_ptr","typeString":"struct Proposal.VoteInfo"}},"visibility":"internal"}],"id":8219,"initialValue":{"baseExpression":{"baseExpression":{"id":8214,"name":"voteRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"8974:11:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Proposal.VoteInfo storage ref[] storage ref)"}},"id":8216,"indexExpression":{"id":8215,"name":"winOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8185,"src":"8986:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8974:24:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage","typeString":"struct Proposal.VoteInfo storage ref[] storage ref"}},"id":8218,"indexExpression":{"id":8217,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8199,"src":"8999:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8974:27:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_storage","typeString":"struct Proposal.VoteInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8947:54:40"},{"expression":{"id":8226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8220,"name":"votingLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"9015:10:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8223,"indexExpression":{"expression":{"id":8221,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"9026:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_memory_ptr","typeString":"struct Proposal.VoteInfo memory"}},"id":8222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9035:4:40","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":7326,"src":"9026:13:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9015:25:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":8224,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"9044:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_memory_ptr","typeString":"struct Proposal.VoteInfo memory"}},"id":8225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9053:6:40","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7328,"src":"9044:15:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9015:44:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8227,"nodeType":"ExpressionStatement","src":"9015:44:40"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8202,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8199,"src":"8891:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":8203,"name":"voteRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"8895:11:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Proposal.VoteInfo storage ref[] storage ref)"}},"id":8205,"indexExpression":{"id":8204,"name":"winOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8185,"src":"8907:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8895:24:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage","typeString":"struct Proposal.VoteInfo storage ref[] storage ref"}},"id":8206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8920:6:40","memberName":"length","nodeType":"MemberAccess","src":"8895:31:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8891:35:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8229,"initializationExpression":{"assignments":[8199],"declarations":[{"constant":false,"id":8199,"mutability":"mutable","name":"i","nameLocation":"8884:1:40","nodeType":"VariableDeclaration","scope":8229,"src":"8876:9:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8198,"name":"uint256","nodeType":"ElementaryTypeName","src":"8876:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8201,"initialValue":{"hexValue":"30","id":8200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8888:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8876:13:40"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8928:3:40","subExpression":{"id":8208,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8199,"src":"8928:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8210,"nodeType":"ExpressionStatement","src":"8928:3:40"},"nodeType":"ForStatement","src":"8871:199:40"},{"eventCall":{"arguments":[{"id":8231,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8183,"src":"9093:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8232,"name":"winOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8185,"src":"9105:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8230,"name":"Refunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7383,"src":"9084:8:40","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":8233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9084:33:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8234,"nodeType":"EmitStatement","src":"9079:38:40"}]},"id":8236,"implemented":true,"kind":"function","modifiers":[],"name":"handleSingleOptionProposal","nameLocation":"8657:26:40","nodeType":"FunctionDefinition","parameters":{"id":8186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8183,"mutability":"mutable","name":"proposalId","nameLocation":"8701:10:40","nodeType":"VariableDeclaration","scope":8236,"src":"8693:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8182,"name":"uint256","nodeType":"ElementaryTypeName","src":"8693:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8185,"mutability":"mutable","name":"winOptionId","nameLocation":"8729:11:40","nodeType":"VariableDeclaration","scope":8236,"src":"8721:19:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8184,"name":"uint256","nodeType":"ElementaryTypeName","src":"8721:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8683:63:40"},"returnParameters":{"id":8187,"nodeType":"ParameterList","parameters":[],"src":"8756:0:40"},"scope":8450,"src":"8648:476:40","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8323,"nodeType":"Block","src":"9237:792:40","statements":[{"assignments":[8245],"declarations":[{"constant":false,"id":8245,"mutability":"mutable","name":"proposalInfo","nameLocation":"9268:12:40","nodeType":"VariableDeclaration","scope":8323,"src":"9247:33:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo"},"typeName":{"id":8244,"nodeType":"UserDefinedTypeName","pathNode":{"id":8243,"name":"ProposalInfo","nameLocations":["9247:12:40"],"nodeType":"IdentifierPath","referencedDeclaration":7324,"src":"9247:12:40"},"referencedDeclaration":7324,"src":"9247:12:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo"}},"visibility":"internal"}],"id":8249,"initialValue":{"baseExpression":{"id":8246,"name":"proposalInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"9283:13:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProposalInfo_$7324_storage_$dyn_storage","typeString":"struct Proposal.ProposalInfo storage ref[] storage ref"}},"id":8248,"indexExpression":{"id":8247,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8238,"src":"9297:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9283:25:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage","typeString":"struct Proposal.ProposalInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9247:61:40"},{"assignments":[8251],"declarations":[{"constant":false,"id":8251,"mutability":"mutable","name":"optionCount","nameLocation":"9326:11:40","nodeType":"VariableDeclaration","scope":8323,"src":"9318:19:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8250,"name":"uint256","nodeType":"ElementaryTypeName","src":"9318:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8255,"initialValue":{"expression":{"expression":{"id":8252,"name":"proposalInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8245,"src":"9340:12:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo storage pointer"}},"id":8253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9353:7:40","memberName":"options","nodeType":"MemberAccess","referencedDeclaration":7323,"src":"9340:20:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$7317_storage_$dyn_storage","typeString":"struct Proposal.Option storage ref[] storage ref"}},"id":8254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9361:6:40","memberName":"length","nodeType":"MemberAccess","src":"9340:27:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9318:49:40"},{"assignments":[8261],"declarations":[{"constant":false,"id":8261,"mutability":"mutable","name":"voteRecords","nameLocation":"9417:11:40","nodeType":"VariableDeclaration","scope":8323,"src":"9378:50:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Proposal.VoteInfo[])"},"typeName":{"id":8260,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8256,"name":"uint256","nodeType":"ElementaryTypeName","src":"9386:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"9378:30:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Proposal.VoteInfo[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":8258,"nodeType":"UserDefinedTypeName","pathNode":{"id":8257,"name":"VoteInfo","nameLocations":["9397:8:40"],"nodeType":"IdentifierPath","referencedDeclaration":7329,"src":"9397:8:40"},"referencedDeclaration":7329,"src":"9397:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_storage_ptr","typeString":"struct Proposal.VoteInfo"}},"id":8259,"nodeType":"ArrayTypeName","src":"9397:10:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_ptr","typeString":"struct Proposal.VoteInfo[]"}}},"visibility":"internal"}],"id":8265,"initialValue":{"baseExpression":{"id":8262,"name":"voting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"9431:6:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Proposal.VoteInfo storage ref[] storage ref))"}},"id":8264,"indexExpression":{"id":8263,"name":"winOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8240,"src":"9451:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9431:41:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Proposal.VoteInfo storage ref[] storage ref)"}},"nodeType":"VariableDeclarationStatement","src":"9378:94:40"},{"assignments":[null,null,8270,null,8272,null],"declarations":[null,null,{"constant":false,"id":8270,"mutability":"mutable","name":"counts","nameLocation":"9505:6:40","nodeType":"VariableDeclaration","scope":8323,"src":"9488:23:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8268,"name":"uint256","nodeType":"ElementaryTypeName","src":"9488:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8269,"nodeType":"ArrayTypeName","src":"9488:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},null,{"constant":false,"id":8272,"mutability":"mutable","name":"allVotesCast","nameLocation":"9523:12:40","nodeType":"VariableDeclaration","scope":8323,"src":"9515:20:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8271,"name":"uint256","nodeType":"ElementaryTypeName","src":"9515:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":8276,"initialValue":{"arguments":[{"id":8274,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8238,"src":"9565:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8273,"name":"getDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"9541:10:40","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view returns (address,string memory[] memory,uint256[] memory,uint256[] memory,uint256,uint256)"}},"id":8275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9541:44:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$","typeString":"tuple(address,string memory[] memory,uint256[] memory,uint256[] memory,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9483:102:40"},{"expression":{"id":8287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8277,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"9595:8:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8280,"indexExpression":{"expression":{"id":8278,"name":"proposalInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8245,"src":"9604:12:40","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalInfo_$7324_storage_ptr","typeString":"struct Proposal.ProposalInfo storage pointer"}},"id":8279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9617:7:40","memberName":"founder","nodeType":"MemberAccess","referencedDeclaration":7319,"src":"9604:20:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9595:30:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8281,"name":"allVotesCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8272,"src":"9630:12:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"35","id":8282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9645:1:40","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"9630:16:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9629:18:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":8285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9650:3:40","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"9629:24:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9595:58:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8288,"nodeType":"ExpressionStatement","src":"9595:58:40"},{"assignments":[8290],"declarations":[{"constant":false,"id":8290,"mutability":"mutable","name":"totalStakeExtractFee","nameLocation":"9671:20:40","nodeType":"VariableDeclaration","scope":8323,"src":"9663:28:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8289,"name":"uint256","nodeType":"ElementaryTypeName","src":"9663:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8297,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8291,"name":"allVotesCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8272,"src":"9695:12:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3838","id":8292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9710:2:40","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},"src":"9695:17:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9694:19:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":8295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9716:3:40","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"9694:25:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9663:56:40"},{"body":{"id":8321,"nodeType":"Block","src":"9772:251:40","statements":[{"expression":{"arguments":[{"id":8309,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8238,"src":"9833:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8310,"name":"winOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8240,"src":"9861:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8311,"name":"totalStakeExtractFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8290,"src":"9890:20:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":8312,"name":"counts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8270,"src":"9928:6:40","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8314,"indexExpression":{"id":8313,"name":"winOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8240,"src":"9935:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9928:19:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":8315,"name":"voteRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8261,"src":"9965:11:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Proposal.VoteInfo storage ref[] storage ref)"}},"id":8317,"indexExpression":{"id":8316,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"9977:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9965:14:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage","typeString":"struct Proposal.VoteInfo storage ref[] storage ref"}},{"id":8318,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"9997:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage","typeString":"struct Proposal.VoteInfo storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8308,"name":"distributeRewardsAndPenalties","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8436,"src":"9786:29:40","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_struct$_VoteInfo_$7329_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256,struct Proposal.VoteInfo memory[] memory,uint256)"}},"id":8319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9786:226:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8320,"nodeType":"ExpressionStatement","src":"9786:226:40"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8302,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"9750:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8303,"name":"optionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8251,"src":"9754:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9750:15:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8322,"initializationExpression":{"assignments":[8299],"declarations":[{"constant":false,"id":8299,"mutability":"mutable","name":"i","nameLocation":"9743:1:40","nodeType":"VariableDeclaration","scope":8322,"src":"9735:9:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8298,"name":"uint256","nodeType":"ElementaryTypeName","src":"9735:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8301,"initialValue":{"hexValue":"30","id":8300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9747:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9735:13:40"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9767:3:40","subExpression":{"id":8305,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"9767:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8307,"nodeType":"ExpressionStatement","src":"9767:3:40"},"nodeType":"ForStatement","src":"9730:293:40"}]},"id":8324,"implemented":true,"kind":"function","modifiers":[],"name":"handleMultiOptionProposal","nameLocation":"9139:25:40","nodeType":"FunctionDefinition","parameters":{"id":8241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8238,"mutability":"mutable","name":"proposalId","nameLocation":"9182:10:40","nodeType":"VariableDeclaration","scope":8324,"src":"9174:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8237,"name":"uint256","nodeType":"ElementaryTypeName","src":"9174:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8240,"mutability":"mutable","name":"winOptionId","nameLocation":"9210:11:40","nodeType":"VariableDeclaration","scope":8324,"src":"9202:19:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8239,"name":"uint256","nodeType":"ElementaryTypeName","src":"9202:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9164:63:40"},"returnParameters":{"id":8242,"nodeType":"ParameterList","parameters":[],"src":"9237:0:40"},"scope":8450,"src":"9130:899:40","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8435,"nodeType":"Block","src":"10277:852:40","statements":[{"body":{"id":8433,"nodeType":"Block","src":"10334:789:40","statements":[{"assignments":[8354],"declarations":[{"constant":false,"id":8354,"mutability":"mutable","name":"voteInfo","nameLocation":"10364:8:40","nodeType":"VariableDeclaration","scope":8433,"src":"10348:24:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_memory_ptr","typeString":"struct Proposal.VoteInfo"},"typeName":{"id":8353,"nodeType":"UserDefinedTypeName","pathNode":{"id":8352,"name":"VoteInfo","nameLocations":["10348:8:40"],"nodeType":"IdentifierPath","referencedDeclaration":7329,"src":"10348:8:40"},"referencedDeclaration":7329,"src":"10348:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_storage_ptr","typeString":"struct Proposal.VoteInfo"}},"visibility":"internal"}],"id":8358,"initialValue":{"baseExpression":{"id":8355,"name":"voteInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8336,"src":"10375:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteInfo_$7329_memory_ptr_$dyn_memory_ptr","typeString":"struct Proposal.VoteInfo memory[] memory"}},"id":8357,"indexExpression":{"id":8356,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8342,"src":"10385:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10375:12:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_memory_ptr","typeString":"struct Proposal.VoteInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"10348:39:40"},{"expression":{"id":8365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8359,"name":"votingLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"10401:10:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8362,"indexExpression":{"expression":{"id":8360,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"10412:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_memory_ptr","typeString":"struct Proposal.VoteInfo memory"}},"id":8361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10421:4:40","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":7326,"src":"10412:13:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10401:25:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":8363,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"10430:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_memory_ptr","typeString":"struct Proposal.VoteInfo memory"}},"id":8364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10439:6:40","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7328,"src":"10430:15:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10401:44:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8366,"nodeType":"ExpressionStatement","src":"10401:44:40"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8367,"name":"optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"10464:8:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8368,"name":"winOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"10476:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10464:23:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8431,"nodeType":"Block","src":"10903:210:40","statements":[{"expression":{"id":8413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8407,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"10921:8:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8410,"indexExpression":{"expression":{"id":8408,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"10930:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_memory_ptr","typeString":"struct Proposal.VoteInfo memory"}},"id":8409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10939:4:40","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":7326,"src":"10930:13:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10921:23:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":8411,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"10948:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_memory_ptr","typeString":"struct Proposal.VoteInfo memory"}},"id":8412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10957:6:40","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7328,"src":"10948:15:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10921:42:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8414,"nodeType":"ExpressionStatement","src":"10921:42:40"},{"expression":{"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8415,"name":"userProposalResults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"10981:19:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_int256_$_$","typeString":"mapping(uint256 => mapping(address => int256))"}},"id":8419,"indexExpression":{"id":8416,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8326,"src":"11001:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10981:31:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_int256_$","typeString":"mapping(address => int256)"}},"id":8420,"indexExpression":{"expression":{"id":8417,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"11013:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_memory_ptr","typeString":"struct Proposal.VoteInfo memory"}},"id":8418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11022:4:40","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":7326,"src":"11013:13:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10981:46:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":8423,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"11057:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_memory_ptr","typeString":"struct Proposal.VoteInfo memory"}},"id":8424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11066:6:40","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7328,"src":"11057:15:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11050:6:40","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8421,"name":"int256","nodeType":"ElementaryTypeName","src":"11050:6:40","typeDescriptions":{}}},"id":8425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11050:23:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"11096:2:40","subExpression":{"hexValue":"31","id":8426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11097:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"src":"11050:48:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10981:117:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":8430,"nodeType":"ExpressionStatement","src":"10981:117:40"}]},"id":8432,"nodeType":"IfStatement","src":"10460:653:40","trueBody":{"id":8406,"nodeType":"Block","src":"10489:408:40","statements":[{"assignments":[8371],"declarations":[{"constant":false,"id":8371,"mutability":"mutable","name":"reward","nameLocation":"10515:6:40","nodeType":"VariableDeclaration","scope":8406,"src":"10507:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8370,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8379,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8372,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"10525:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_memory_ptr","typeString":"struct Proposal.VoteInfo memory"}},"id":8373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10534:6:40","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7328,"src":"10525:15:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8374,"name":"totalStakeExtractFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8330,"src":"10543:20:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10525:38:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10524:40:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8377,"name":"winVoteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8332,"src":"10587:12:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:75:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10507:92:40"},{"assignments":[8381],"declarations":[{"constant":false,"id":8381,"mutability":"mutable","name":"rewardExcludingPrincipal","nameLocation":"10625:24:40","nodeType":"VariableDeclaration","scope":8406,"src":"10617:32:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8380,"name":"uint256","nodeType":"ElementaryTypeName","src":"10617:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8386,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8382,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8371,"src":"10652:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":8383,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"10661:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_memory_ptr","typeString":"struct Proposal.VoteInfo memory"}},"id":8384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10670:6:40","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7328,"src":"10661:15:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10652:24:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10617:59:40"},{"expression":{"id":8392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8387,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"10694:8:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8390,"indexExpression":{"expression":{"id":8388,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"10703:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_memory_ptr","typeString":"struct Proposal.VoteInfo memory"}},"id":8389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10712:4:40","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":7326,"src":"10703:13:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10694:23:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8391,"name":"rewardExcludingPrincipal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"10721:24:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10694:51:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8393,"nodeType":"ExpressionStatement","src":"10694:51:40"},{"expression":{"id":8404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8394,"name":"userProposalResults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"10763:19:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_int256_$_$","typeString":"mapping(uint256 => mapping(address => int256))"}},"id":8398,"indexExpression":{"id":8395,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8326,"src":"10783:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10763:31:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_int256_$","typeString":"mapping(address => int256)"}},"id":8399,"indexExpression":{"expression":{"id":8396,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"10795:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_memory_ptr","typeString":"struct Proposal.VoteInfo memory"}},"id":8397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10804:4:40","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":7326,"src":"10795:13:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10763:46:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8402,"name":"rewardExcludingPrincipal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"10840:24:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10812:6:40","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8400,"name":"int256","nodeType":"ElementaryTypeName","src":"10812:6:40","typeDescriptions":{}}},"id":8403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10812:70:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10763:119:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":8405,"nodeType":"ExpressionStatement","src":"10763:119:40"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8345,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8342,"src":"10307:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8346,"name":"voteInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8336,"src":"10311:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteInfo_$7329_memory_ptr_$dyn_memory_ptr","typeString":"struct Proposal.VoteInfo memory[] memory"}},"id":8347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10321:6:40","memberName":"length","nodeType":"MemberAccess","src":"10311:16:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10307:20:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8434,"initializationExpression":{"assignments":[8342],"declarations":[{"constant":false,"id":8342,"mutability":"mutable","name":"j","nameLocation":"10300:1:40","nodeType":"VariableDeclaration","scope":8434,"src":"10292:9:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8341,"name":"uint256","nodeType":"ElementaryTypeName","src":"10292:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8344,"initialValue":{"hexValue":"30","id":8343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10304:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10292:13:40"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10329:3:40","subExpression":{"id":8349,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8342,"src":"10329:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8351,"nodeType":"ExpressionStatement","src":"10329:3:40"},"nodeType":"ForStatement","src":"10287:836:40"}]},"id":8436,"implemented":true,"kind":"function","modifiers":[],"name":"distributeRewardsAndPenalties","nameLocation":"10044:29:40","nodeType":"FunctionDefinition","parameters":{"id":8339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8326,"mutability":"mutable","name":"proposalId","nameLocation":"10091:10:40","nodeType":"VariableDeclaration","scope":8436,"src":"10083:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8325,"name":"uint256","nodeType":"ElementaryTypeName","src":"10083:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8328,"mutability":"mutable","name":"winOptionId","nameLocation":"10119:11:40","nodeType":"VariableDeclaration","scope":8436,"src":"10111:19:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8327,"name":"uint256","nodeType":"ElementaryTypeName","src":"10111:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8330,"mutability":"mutable","name":"totalStakeExtractFee","nameLocation":"10148:20:40","nodeType":"VariableDeclaration","scope":8436,"src":"10140:28:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8329,"name":"uint256","nodeType":"ElementaryTypeName","src":"10140:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8332,"mutability":"mutable","name":"winVoteCount","nameLocation":"10186:12:40","nodeType":"VariableDeclaration","scope":8436,"src":"10178:20:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8331,"name":"uint256","nodeType":"ElementaryTypeName","src":"10178:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8336,"mutability":"mutable","name":"voteInfos","nameLocation":"10226:9:40","nodeType":"VariableDeclaration","scope":8436,"src":"10208:27:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteInfo_$7329_memory_ptr_$dyn_memory_ptr","typeString":"struct Proposal.VoteInfo[]"},"typeName":{"baseType":{"id":8334,"nodeType":"UserDefinedTypeName","pathNode":{"id":8333,"name":"VoteInfo","nameLocations":["10208:8:40"],"nodeType":"IdentifierPath","referencedDeclaration":7329,"src":"10208:8:40"},"referencedDeclaration":7329,"src":"10208:8:40","typeDescriptions":{"typeIdentifier":"t_struct$_VoteInfo_$7329_storage_ptr","typeString":"struct Proposal.VoteInfo"}},"id":8335,"nodeType":"ArrayTypeName","src":"10208:10:40","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteInfo_$7329_storage_$dyn_storage_ptr","typeString":"struct Proposal.VoteInfo[]"}},"visibility":"internal"},{"constant":false,"id":8338,"mutability":"mutable","name":"optionId","nameLocation":"10253:8:40","nodeType":"VariableDeclaration","scope":8436,"src":"10245:16:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8337,"name":"uint256","nodeType":"ElementaryTypeName","src":"10245:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10073:194:40"},"returnParameters":{"id":8340,"nodeType":"ParameterList","parameters":[],"src":"10277:0:40"},"scope":8450,"src":"10035:1094:40","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[794],"body":{"id":8448,"nodeType":"Block","src":"11231:49:40","statements":[{"expression":{"id":8446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8444,"name":"logicAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"11241:12:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8445,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"11256:17:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11241:32:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8447,"nodeType":"ExpressionStatement","src":"11241:32:40"}]},"id":8449,"implemented":true,"kind":"function","modifiers":[{"id":8442,"kind":"modifierInvocation","modifierName":{"id":8441,"name":"onlyOwner","nameLocations":["11221:9:40"],"nodeType":"IdentifierPath","referencedDeclaration":7462,"src":"11221:9:40"},"nodeType":"ModifierInvocation","src":"11221:9:40"}],"name":"_authorizeUpgrade","nameLocation":"11144:17:40","nodeType":"FunctionDefinition","overrides":{"id":8440,"nodeType":"OverrideSpecifier","overrides":[],"src":"11212:8:40"},"parameters":{"id":8439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8438,"mutability":"mutable","name":"newImplementation","nameLocation":"11179:17:40","nodeType":"VariableDeclaration","scope":8449,"src":"11171:25:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8437,"name":"address","nodeType":"ElementaryTypeName","src":"11171:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11161:41:40"},"returnParameters":{"id":8443,"nodeType":"ParameterList","parameters":[],"src":"11231:0:40"},"scope":8450,"src":"11135:145:40","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":8451,"src":"323:10959:40","usedErrors":[7400,7404],"usedEvents":[123,130,135,525,7335,7345,7353,7362,7371,7377,7383,7394]}],"src":"32:11251:40"}}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"evm":{"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"irOptimized":""}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"ERC1967Upgrade":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"methodIdentifiers":{"implementation()":"5c60da1b"}},"irOptimized":""}},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":517,"contract":"@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":520,"contract":"@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"evm":{"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"irOptimized":""}},"@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":813,"contract":"@openzeppelin/contracts/security/Pausable.sol:Pausable","label":"_paused","offset":0,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}},"evm":{"methodIdentifiers":{"paused()":"5c975abb"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.5.0"},"storageLayout":{"storage":[{"astId":919,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":925,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":927,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":929,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":931,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"assembly":"\t.text\n\t.file\t\"ERC20.sol:ERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6 + r0]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_11\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_144\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.le\t@.BB0_46\n\tsub.s!\t@CPI0_7[0], r2, r4\n\tjump.gt\t@.BB0_52\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.eq\t@.BB0_66\n\tsub.s!\t@CPI0_12[0], r2, r4\n\tjump.eq\t@.BB0_73\n\tsub.s!\t@CPI0_13[0], r2, r1\n\tjump.ne\t@.BB0_144\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_144\n\tadd\t4, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r5\n\tshr.s\t1, r2, r1\n\tand\t127, r1, r4\n\tadd.eq\tr4, r0, r1\n\tsub.s!\t31, r1, r6\n\tadd\t0, r0, r6\n\tadd.gt\t1, r0, r6\n\txor\tr2, r6, r6\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_104\n\tst.1\t128, r1\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_107\n\tand\t@CPI0_35[0], r2, r1\n\tst.1\t160, r1\n\tsub!\tr4, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_114\n.BB0_11:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_144\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t128, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_15\n\tadd\t128, r5, r6\n\tptr.add\tr1, r0, r7\n.BB0_14:\n\tld.inc\tr7, r8, r7\n\tst.1.inc\tr4, r8, r4\n\tsub!\tr4, r6, r8\n\tjump.ne\t@.BB0_14\n.BB0_15:\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_17\n\tptr.add\tr1, r5, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r5, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_17:\n\tsub.s!\t64, r3, r1\n\tjump.lt\t@.BB0_144\n\tld.1\t128, r4\n\tsub.s!\t@CPI0_2[0], r4, r1\n\tjump.gt\t@.BB0_144\n\tadd\t31, r4, r1\n\tsub!\tr1, r3, r2\n\tadd\tr0, r0, r2\n\tadd.ge\t@CPI0_3[0], r0, r2\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r5\n\tadd\tr0, r0, r5\n\tadd.lt\t@CPI0_3[0], r0, r5\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd.ne\tr2, r0, r5\n\tsub!\tr5, r0, r1\n\tjump.ne\t@.BB0_144\n\tadd\t128, r4, r1\n\tld.1\tr1, r2\n\tsub.s!\t@CPI0_2[0], r2, r1\n\tjump.gt\t@.BB0_119\n\tadd\t31, r2, r1\n\tand\t@CPI0_36[0], r1, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_36[0], r1, r1\n\tld.1\t64, r9\n\tadd\tr9, r1, r5\n\tsub!\tr5, r9, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_2[0], r5, r6\n\tjump.gt\t@.BB0_119\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_119\n\tadd\t128, r3, r1\n\tst.1\t64, r5\n\tst.1.inc\tr9, r2, r10\n\tadd\t160, r4, r4\n\tadd\tr2, r4, r5\n\tsub!\tr5, r1, r5\n\tjump.gt\t@.BB0_144\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_27\n\tadd\tr0, r0, r5\n.BB0_26:\n\tadd\tr10, r5, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_26\n.BB0_27:\n\tadd\tr2, r9, r2\n\tadd\t32, r2, r2\n\tst.1\tr2, r0\n\tld.1\t160, r4\n\tsub.s!\t@CPI0_2[0], r4, r2\n\tjump.gt\t@.BB0_144\n\tadd\t31, r4, r2\n\tsub!\tr2, r3, r3\n\tadd\tr0, r0, r3\n\tadd.ge\t@CPI0_3[0], r0, r3\n\tand\t@CPI0_3[0], r2, r2\n\tsub!\tr2, r0, r5\n\tadd\tr0, r0, r5\n\tadd.lt\t@CPI0_3[0], r0, r5\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tadd.ne\tr3, r0, r5\n\tsub!\tr5, r0, r2\n\tjump.ne\t@.BB0_144\n\tadd\t128, r4, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.gt\t@.BB0_119\n\tadd\t31, r2, r3\n\tand\t@CPI0_36[0], r3, r3\n\tadd\t63, r3, r3\n\tand\t@CPI0_36[0], r3, r3\n\tld.1\t64, r7\n\tadd\tr7, r3, r3\n\tsub!\tr3, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_2[0], r3, r6\n\tjump.gt\t@.BB0_119\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_119\n\tst.1\t64, r3\n\tst.1.inc\tr7, r2, r6\n\tadd\t160, r4, r3\n\tadd\tr2, r3, r4\n\tsub!\tr4, r1, r1\n\tjump.gt\t@.BB0_144\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_36\n\tadd\tr0, r0, r1\n.BB0_35:\n\tadd\tr6, r1, r4\n\tadd\tr1, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r1, r1\n\tsub!\tr1, r2, r4\n\tjump.lt\t@.BB0_35\n.BB0_36:\n\tadd\tr2, r7, r1\n\tadd\t32, r1, r1\n\tst.1\tr1, r0\n\tld.1\tr9, r5\n\tsub.s!\t@CPI0_2[0], r5, r1\n\tjump.gt\t@.BB0_119\n\tadd\t3, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_104\n\tadd\tr10, r0, stack-[3]\n\tadd\tr9, r0, stack-[2]\n\tadd\tr6, r0, stack-[1]\n\tadd\tr7, r0, stack-[5]\n\tadd\tr3, r0, stack-[4]\n\tsub.s!\t32, r3, r1\n\tadd\tr5, r0, stack-[6]\n\tjump.lt\t@.BB0_42\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_144\n\tadd\tstack-[6], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[4], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\t3, r0, r4\n\tjump.ge\t@.BB0_42\n.BB0_41:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_41\n.BB0_42:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB0_126\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tsub.s\t32, r0, r2\n\tjump.eq\t@.BB0_144\n\tand!\tstack-[6], r2, r2\n\tld\tr1, r1\n\tjump.ne\t@.BB0_129\n\tadd\t32, r0, r3\n\tjump\t@.BB0_131\n.BB0_46:\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.le\t@.BB0_60\n\tsub.s!\t@CPI0_15[0], r2, r4\n\tjump.eq\t@.BB0_78\n\tsub.s!\t@CPI0_16[0], r2, r4\n\tjump.eq\t@.BB0_81\n\tsub.s!\t@CPI0_17[0], r2, r1\n\tjump.ne\t@.BB0_144\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_144\n\tadd\t18, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_21[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_52:\n\tsub.s!\t@CPI0_8[0], r2, r4\n\tjump.eq\t@.BB0_90\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.eq\t@.BB0_97\n\tsub.s!\t@CPI0_10[0], r2, r2\n\tjump.ne\t@.BB0_144\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_144\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_144\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tjump.gt\t@.BB0_144\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_20[0], r3, r1\n\tjump.gt\t@.BB0_144\n\tst.1\t0, r2\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tadd\tr3, r0, stack-[6]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\t64, r0, r2\n\tjump\t@.BB0_77\n.BB0_60:\n\tsub.s!\t@CPI0_18[0], r2, r4\n\tjump.eq\t@.BB0_102\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.ne\t@.BB0_144\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_144\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_144\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tjump.gt\t@.BB0_144\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tjump\t@.BB0_101\n.BB0_66:\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_144\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_144\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.gt\t@.BB0_144\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_144\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_144\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tr2, r1, r3\n\tsub!\tr3, r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_122\n\tadd\t@CPI0_30[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_31[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_73:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_144\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_144\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tjump.gt\t@.BB0_144\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n.BB0_77:\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_80\n.BB0_78:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_144\n\tadd\t2, r0, r1\n.BB0_80:\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_21[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_81:\n\tsub.s!\t100, r3, r2\n\tjump.lt\t@.BB0_144\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_144\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_20[0], r3, r2\n\tjump.gt\t@.BB0_144\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\t@CPI0_20[0], r2, r2\n\tjump.gt\t@.BB0_144\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r3\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_144\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_144\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\t@CPI0_37[0], r1, r2\n\tjump.eq\t@.BB0_124\n\tadd\tstack-[4], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_123\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_32[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_26[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_33[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_90:\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_144\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_144\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\t@CPI0_20[0], r2, r2\n\tjump.gt\t@.BB0_144\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_144\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_144\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[5], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_121\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_24[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_25[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_26[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_97:\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_144\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_144\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tjump.gt\t@.BB0_144\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n.BB0_101:\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_22[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_102:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_144\n\tadd\t3, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r5\n\tshr.s\t1, r2, r1\n\tand\t127, r1, r4\n\tadd.eq\tr4, r0, r1\n\tsub.s!\t31, r1, r6\n\tadd\t0, r0, r6\n\tadd.gt\t1, r0, r6\n\txor\tr2, r6, r6\n\tand!\t1, r6, r6\n\tjump.eq\t@.BB0_105\n.BB0_104:\n\tadd\t@CPI0_30[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_31[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_105:\n\tst.1\t128, r1\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_109\n\tand\t@CPI0_35[0], r2, r1\n\tst.1\t160, r1\n\tsub!\tr4, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_118\n.BB0_107:\n\tst.1\t0, r3\n\tsub.s!\t2, r2, r2\n\tjump.ge\t@.BB0_111\n\tjump\t@.BB0_110\n.BB0_109:\n\tst.1\t0, r3\n\tsub.s!\t2, r2, r2\n\tjump.ge\t@.BB0_115\n.BB0_110:\n\tadd\t32, r0, r1\n\tjump\t@.BB0_120\n.BB0_111:\n\tadd\t@CPI0_28[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_112:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_112\n\tadd\t192, r3, r1\n.BB0_114:\n\tjump\t@.BB0_118\n.BB0_115:\n\tadd\t@CPI0_34[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_116:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_116\n\tadd\t192, r3, r1\n.BB0_118:\n\tsub.s\t97, r1, r1\n\tand\t@CPI0_36[0], r1, r1\n\tsub.s!\t@CPI0_29[0], r1, r2\n\tjump.le\t@.BB0_120\n.BB0_119:\n\tadd\t@CPI0_30[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_31[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_120:\n\tadd\t128, r1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t64, r1\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tsub\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_121:\n\tsub\tr1, r3, r3\n.BB0_122:\n\tcontext.caller\tr1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tjump\t@.BB0_125\n.BB0_123:\n\tsub\tr1, r3, r3\n\tadd\tr4, r0, r1\n\tcontext.caller\tr2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n.BB0_124:\n\tadd\tr4, r0, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[4], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n.BB0_125:\n\tld.1\t64, r1\n\tadd\t1, r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_126:\n\tsub!\tstack-[6], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_128\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n.BB0_128:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tshr\t@CPI0_37[0], r2, r2\n\txor\t@CPI0_37[0], r2, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_134\n.BB0_129:\n\tsub.s\t1, r2, r3\n\tshr.s\t5, r3, r3\n\tadd\tr1, r3, r4\n\tadd\t32, r0, r3\n\tadd\t1, r4, r4\n\tadd\tstack-[2], r0, r6\n.BB0_130:\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r3, r3\n\tadd\t1, r1, r1\n\tsub!\tr1, r4, r5\n\tjump.ne\t@.BB0_130\n.BB0_131:\n\tsub.s!\tstack-[6], r2, r2\n\tjump.ge\t@.BB0_133\n\tadd\tstack-[6], r0, r2\n\tshl.s\t3, r2, r2\n\tand\t248, r2, r2\n\tshr\t@CPI0_37[0], r2, r2\n\txor\t@CPI0_37[0], r2, r2\n\tadd\tstack-[2], r3, r3\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB0_133:\n\tadd\tstack-[6], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n.BB0_134:\n\tadd\t3, r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_119\n\tadd\t4, r0, r1\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[4]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_104\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_140\n\tadd\t4, r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_144\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[4], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_140\n.BB0_139:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_139\n.BB0_140:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_145\n\tadd\t4, r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tsub.s\t32, r0, r2\n\tjump.eq\t@.BB0_144\n\tand!\tstack-[6], r2, r2\n\tld\tr1, r1\n\tjump.ne\t@.BB0_148\n\tadd\t32, r0, r3\n\tjump\t@.BB0_150\n.BB0_144:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_145:\n\tsub!\tstack-[6], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_147\n\tadd\tstack-[1], r0, r1\n\tld.1\tr1, r1\n.BB0_147:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tshr\t@CPI0_37[0], r2, r2\n\txor\t@CPI0_37[0], r2, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n\tjump\t@.BB0_153\n.BB0_148:\n\tsub.s\t1, r2, r3\n\tshr.s\t5, r3, r3\n\tadd\tr1, r3, r4\n\tadd\t32, r0, r3\n\tadd\t1, r4, r4\n\tadd\tstack-[5], r0, r6\n.BB0_149:\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r3, r3\n\tadd\t1, r1, r1\n\tsub!\tr1, r4, r5\n\tjump.ne\t@.BB0_149\n.BB0_150:\n\tsub.s!\tstack-[6], r2, r2\n\tjump.ge\t@.BB0_152\n\tadd\tstack-[6], r0, r2\n\tshl.s\t3, r2, r2\n\tand\t248, r2, r2\n\tshr\t@CPI0_37[0], r2, r2\n\txor\t@CPI0_37[0], r2, r2\n\tadd\tstack-[5], r3, r3\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB0_152:\n\tadd\t1, r0, r1\n\tadd\tstack-[6], r0, r2\n\tshl.s\t1, r2, r2\n.BB0_153:\n\tor\tr2, r1, r1\n\tadd\t4, r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_5[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1.inc\tr2, r2, r3\n\tst.1\tr4, r2\n\tadd\t64, r1, r1\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr1, r4, r5\n\tadd\tr3, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tadd\t31, r2, r2\n\tand\t@CPI1_0[0], r2, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\nfun_approve:\n.func_begin2:\n\tnop\tstack+=[3 + r0]\n\tand!\t@CPI2_0[0], r1, r1\n\tjump.eq\t@.BB2_1\n\tadd\tr3, r0, stack-[2]\n\tand!\t@CPI2_0[0], r2, stack-[3]\n\tjump.eq\t@.BB2_4\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\t@CPI2_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB2_6\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\t@CPI2_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\t@CPI2_1[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_1[0], r2, r3\n\tadd.ge\t@CPI2_1[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI2_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_6\n\tret\n.BB2_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tjump\t@.BB2_2\n.BB2_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n.BB2_2:\n\tst.1\tr2, r3\n\tadd\t@CPI2_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\t@CPI2_1[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_transfer:\n.func_begin3:\n\tnop\tstack+=[4 + r0]\n\tadd\tr3, r0, stack-[4]\n\tand!\t@CPI3_0[0], r1, r1\n\tjump.eq\t@.BB3_1\n\tand!\t@CPI3_0[0], r2, stack-[2]\n\tjump.eq\t@.BB3_4\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\t@CPI3_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[1]\n\tsub.s!\tstack-[4], r2, r1\n\tjump.lt\t@.BB3_8\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\t@CPI3_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_6\n\tadd\tstack-[1], r0, r3\n\tsub.s\tstack-[4], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\t@CPI3_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[4], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\t@CPI3_1[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_1[0], r2, r3\n\tadd.ge\t@CPI3_1[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI3_4[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_6\n\tret\n.BB3_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB3_2\n.BB3_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tjump\t@.BB3_2\n.BB3_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n.BB3_2:\n\tst.1\tr2, r3\n\tadd\t@CPI3_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\t@CPI3_1[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\n__sha3:\n.func_begin4:\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tadd.ge\t@CPI4_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI4_0[0], r2, r3\n\tadd.ge\t@CPI4_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r3\n\tadd.ge\t@CPI4_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_2\n\tld\tr1, r1\n\tret\n.BB4_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__farcall:\n.func_begin5:\n.tmp0:\n\tfar_call\tr1, r2, @.BB5_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n__staticcall:\n.func_begin6:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB6_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB6_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end6:\n\n\t.data\n\t.p2align\t5, 0x0\nptr_calldata:\n\t.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_1:\nCPI3_1:\nCPI4_0:\n\t.cell\t4294967295\nCPI0_1:\n\t.cell\t8589934560\nCPI0_2:\n\t.cell\t18446744073709551615\nCPI0_3:\n\t.cell\t-57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_4:\nCPI2_3:\nCPI3_3:\n\t.cell\t904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_5:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_6:\n\t.cell\t961581904\nCPI0_7:\n\t.cell\t2757214934\nCPI0_8:\n\t.cell\t2757214935\nCPI0_9:\n\t.cell\t2835717307\nCPI0_10:\n\t.cell\t3714247998\nCPI0_11:\n\t.cell\t961581905\nCPI0_12:\n\t.cell\t1889567281\nCPI0_13:\n\t.cell\t2514000705\nCPI0_14:\n\t.cell\t404098524\nCPI0_15:\n\t.cell\t404098525\nCPI0_16:\n\t.cell\t599290589\nCPI0_17:\n\t.cell\t826074471\nCPI0_18:\n\t.cell\t117300739\nCPI0_19:\n\t.cell\t157198259\nCPI0_20:\nCPI2_0:\nCPI3_0:\n\t.cell\t1461501637330902918203684832716283019655932542975\nCPI0_21:\n\t.cell\t2535301202817642044428229017600\nCPI0_22:\n\t.cell\t2535301200456458802993406410752\nCPI0_23:\nCPI2_2:\nCPI3_2:\n\t.cell\t904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_24:\n\t.cell\t14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI0_25:\n\t.cell\t31354931781638678506476475496475743842680577777870365728514456330491174612855\nCPI0_26:\nCPI2_7:\nCPI3_7:\n\t.cell\t3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_27:\nCPI2_8:\nCPI3_8:\n\t.cell\t10458117451882892562347801444352\nCPI0_28:\n\t.cell\t-53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI0_29:\n\t.cell\t18446744073709551487\nCPI0_30:\n\t.cell\t35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_31:\n\t.cell\t2852213850513516153367582212096\nCPI0_32:\n\t.cell\t31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI0_33:\n\t.cell\t7922816251426433759354395033600\nCPI0_34:\n\t.cell\t-27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI0_35:\n\t.cell\t-256\nCPI0_36:\nCPI1_0:\n\t.cell\t-32\nCPI0_37:\n\t.cell\t-1\nCPI2_4:\n\t.cell\t-52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI2_5:\n\t.cell\t52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI2_6:\n\t.cell\t31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI2_9:\n\t.cell\t51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI2_10:\n\t.cell\t31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI3_4:\n\t.cell\t-15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI3_5:\n\t.cell\t44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI3_6:\n\t.cell\t31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI3_9:\n\t.cell\t45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI3_10:\n\t.cell\t31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI3_11:\n\t.cell\t45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI3_12:\n\t.cell\t31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI4_1:\n\t.cell\t904625697166532776746648320380374280103671755200316906558262375061821325312\n","bytecode":{"object":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/// @use-src 12:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 13:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 16:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 24:\"@openzeppelin/contracts/utils/Context.sol\"\nobject \"ERC20_1490\" {\n    code {\n        {\n            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC20_1490\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            /// @src 12:2046:2059  \"_name = name_\"\n            let _4 := 0x03\n            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let _5 := sload(/** @src 12:2046:2059  \"_name = name_\" */ _4)\n            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let _6 := 1\n            length := shr(_6, _5)\n            let outOfPlaceEncoding := and(_5, _6)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            let _7 := 31\n            if gt(length, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:2046:2059  \"_name = name_\" */ _4)\n                /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let deleteStart := add(data, shr(5, add(newLen, _7)))\n                if lt(newLen, _3) { deleteStart := data }\n                let _8 := add(data, shr(5, add(length, _7)))\n                let start := deleteStart\n                for { } lt(start, _8) { start := add(start, _6) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            srcOffset := _3\n            switch gt(newLen, _7)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:2046:2059  \"_name = name_\" */ _4)\n                /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, _6)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 12:2046:2059  \"_name = name_\" */ _4, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 12:2046:2059  \"_name = name_\" */ _4, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(_6, newLen), _6))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 12:2046:2059  \"_name = name_\" */ _4, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ or(and(value, not(shr(shl(/** @src 12:2046:2059  \"_name = name_\" */ _4, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen), not(0)))), shl(_6, newLen)))\n            }\n            let newLen_1 := mload(value1)\n            if gt(newLen_1, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 12:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            /// @src 12:2069:2086  \"_symbol = symbol_\"\n            let _9 := 0x04\n            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let _10 := sload(/** @src 12:2069:2086  \"_symbol = symbol_\" */ _9)\n            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            length_1 := shr(_6, _10)\n            let outOfPlaceEncoding_1 := and(_10, _6)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 12:2069:2086  \"_symbol = symbol_\" */ _9, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            if gt(length_1, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:2069:2086  \"_symbol = symbol_\" */ _9)\n                /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _7)))\n                if lt(newLen_1, _3) { deleteStart_1 := data_1 }\n                let _11 := add(data_1, shr(5, add(length_1, _7)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _11) { start_1 := add(start_1, _6) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            srcOffset_1 := _3\n            switch gt(newLen_1, _7)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:2069:2086  \"_symbol = symbol_\" */ _9)\n                /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _3) }\n                {\n                    sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _6)\n                    srcOffset_1 := add(srcOffset_1, _3)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 12:2046:2059  \"_name = name_\" */ _4, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 12:2069:2086  \"_symbol = symbol_\" */ _9, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(_6, newLen_1), _6))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(value1, srcOffset_1))\n                }\n                sstore(/** @src 12:2069:2086  \"_symbol = symbol_\" */ _9, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ or(and(value_1, not(shr(shl(/** @src 12:2046:2059  \"_name = name_\" */ _4, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen_1), not(0)))), shl(_6, newLen_1)))\n            }\n            let _12 := mload(64)\n            let _13 := datasize(\"ERC20_1490_deployed\")\n            codecopy(_12, dataoffset(\"ERC20_1490_deployed\"), _13)\n            return(_12, _13)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            array := array_1\n        }\n    }\n    /// @use-src 12:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 24:\"@openzeppelin/contracts/utils/Context.sol\"\n    object \"ERC20_1490_deployed\" {\n        code {\n            {\n                /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret := _4\n                        let slotValue := sload(/** @src 12:2244:2249  \"_name\" */ 0x03)\n                        /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let length := _4\n                        let _5 := 1\n                        length := shr(1, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _6 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _6))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_1, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(_1, _6), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 12:2244:2249  \"_name\" */ 0x03)\n                            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _6) }\n                            {\n                                mstore(add(add(_1, i), _6), sload(dataPos))\n                                dataPos := add(dataPos, _5)\n                            }\n                            ret := add(add(_1, i), _6)\n                        }\n                        let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address()\n                        /// @src 12:4606:4612  \"amount\"\n                        fun_approve(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 12:4606:4612  \"amount\" */ value0, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ calldataload(36))\n                        let memPos := mload(_2)\n                        mstore(memPos, 1)\n                        return(memPos, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _7 := sload(/** @src 12:3342:3354  \"_totalSupply\" */ 0x02)\n                        /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, _7)\n                        return(memPos_1, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address()\n                        let value1 := abi_decode_address_4782()\n                        let value := calldataload(68)\n                        mstore(_4, and(value0_1, sub(shl(160, 1), 1)))\n                        mstore(32, 1)\n                        let _8 := keccak256(_4, _2)\n                        mstore(_4, /** @src 24:734:744  \"msg.sender\" */ caller())\n                        /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        mstore(32, _8)\n                        let _9 := sload(keccak256(_4, _2))\n                        /// @src 12:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                        if /** @src 12:11244:11281  \"currentAllowance != type(uint256).max\" */ iszero(eq(_9, /** @src 12:11264:11281  \"type(uint256).max\" */ not(0)))\n                        /// @src 12:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                        {\n                            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                            if /** @src 12:11305:11331  \"currentAllowance >= amount\" */ lt(_9, value)\n                            /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                            {\n                                let memPtr := mload(_2)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, _3), 32)\n                                mstore(add(memPtr, 36), 29)\n                                mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                                revert(memPtr, 100)\n                            }\n                            /// @src 12:11432:11457  \"currentAllowance - amount\"\n                            fun_approve(value0_1, /** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 12:11432:11457  \"currentAllowance - amount\" */ _9, value))\n                        }\n                        /// @src 12:5424:5430  \"amount\"\n                        fun_transfer(value0_1, value1, value)\n                        /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, /** @src 12:3186:3188  \"18\" */ 0x12)\n                        /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        return(memPos_3, 32)\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address()\n                        mstore(_4, /** @src 24:734:744  \"msg.sender\" */ caller())\n                        /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        mstore(32, 1)\n                        let _10 := keccak256(_4, _2)\n                        mstore(_4, and(value0_2, sub(shl(160, 1), 1)))\n                        mstore(32, _10)\n                        let _11 := sload(keccak256(_4, _2))\n                        let sum := add(_11, calldataload(36))\n                        if gt(_11, sum)\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x11)\n                            revert(_4, 36)\n                        }\n                        /// @src 12:6021:6059  \"allowance(owner, spender) + addedValue\"\n                        fun_approve(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 12:6021:6059  \"allowance(owner, spender) + addedValue\" */ value0_2, sum)\n                        /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, 1)\n                        return(memPos_4, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, _4)\n                        let _12 := sload(keccak256(_4, _2))\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, _12)\n                        return(memPos_5, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_1 := mload(_2)\n                        let ret_1 := _4\n                        let slotValue_1 := sload(_3)\n                        let length_1 := _4\n                        let _13 := 1\n                        length_1 := shr(1, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        let _14 := 32\n                        if eq(outOfPlaceEncoding_1, lt(length_1, _14))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr_1, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_1, _14), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr_1, shl(5, iszero(iszero(length_1)))), _14)\n                        }\n                        case 1 {\n                            mstore(_4, _3)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_1 := _4\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, _14) }\n                            {\n                                mstore(add(add(memPtr_1, i_1), _14), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _13)\n                            }\n                            ret_1 := add(add(memPtr_1, i_1), _14)\n                        }\n                        let newFreePtr_1 := add(memPtr_1, and(add(sub(ret_1, memPtr_1), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr_1), newFreePtr_1))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        mstore(_4, /** @src 24:734:744  \"msg.sender\" */ caller())\n                        /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        mstore(32, 1)\n                        let _15 := keccak256(_4, _2)\n                        mstore(_4, and(value0_3, sub(shl(160, 1), 1)))\n                        mstore(32, _15)\n                        let _16 := sload(keccak256(_4, _2))\n                        if /** @src 12:6792:6827  \"currentAllowance >= subtractedValue\" */ lt(_16, value_1)\n                        /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), 32)\n                            mstore(add(memPtr_2, 36), 37)\n                            mstore(add(memPtr_2, 68), \"ERC20: decreased allowance below\")\n                            mstore(add(memPtr_2, 100), \" zero\")\n                            revert(memPtr_2, 132)\n                        }\n                        /// @src 12:6928:6962  \"currentAllowance - subtractedValue\"\n                        fun_approve(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 12:6928:6962  \"currentAllowance - subtractedValue\" */ value0_3, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 12:6928:6962  \"currentAllowance - subtractedValue\" */ _16, value_1))\n                        /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, 1)\n                        return(memPos_6, 32)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_4 := abi_decode_address()\n                        /// @src 12:3894:3900  \"amount\"\n                        fun_transfer(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 12:3894:3900  \"amount\" */ value0_4, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ calldataload(36))\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, 1)\n                        return(memPos_7, 32)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_5 := abi_decode_address()\n                        let value1_1 := abi_decode_address_4782()\n                        let _17 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_5, _17))\n                        mstore(32, /** @src 12:4102:4113  \"_allowances\" */ 0x01)\n                        /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let _18 := keccak256(_4, _2)\n                        mstore(_4, and(value1_1, _17))\n                        mstore(32, _18)\n                        let _19 := sload(keccak256(_4, _2))\n                        let memPos_8 := mload(_2)\n                        mstore(memPos_8, _19)\n                        return(memPos_8, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_4782() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            /// @ast-id 1424 @src 12:10457:10797  \"function _approve(address owner, address spender, uint256 amount) internal virtual {...\"\n            function fun_approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 12:10558:10577  \"owner != address(0)\" */ var_owner, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1)\n                if /** @src 12:10558:10577  \"owner != address(0)\" */ iszero(/** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 12:10636:10657  \"spender != address(0)\" */ var_spender, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1)\n                if /** @src 12:10636:10657  \"spender != address(0)\" */ iszero(/** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                mstore(/** @src 12:10575:10576  \"0\" */ 0x00, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                mstore(0x20, /** @src 12:10707:10718  \"_allowances\" */ 0x01)\n                /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _4 := keccak256(/** @src 12:10575:10576  \"0\" */ 0x00, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40)\n                mstore(/** @src 12:10575:10576  \"0\" */ 0x00, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                mstore(0x20, _4)\n                sstore(keccak256(/** @src 12:10575:10576  \"0\" */ 0x00, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), var_amount)\n                /// @src 12:10758:10790  \"Approval(owner, spender, amount)\"\n                let _5 := /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(0x40)\n                mstore(_5, var_amount)\n                /// @src 12:10758:10790  \"Approval(owner, spender, amount)\"\n                log3(_5, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20, /** @src 12:10758:10790  \"Approval(owner, spender, amount)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _3)\n            }\n            /// @ast-id 1250 @src 12:7456:8244  \"function _transfer(address from, address to, uint256 amount) internal virtual {...\"\n            function fun_transfer(var_from, var_to, var_amount)\n            {\n                /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 12:7552:7570  \"from != address(0)\" */ var_from, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1)\n                if /** @src 12:7552:7570  \"from != address(0)\" */ iszero(/** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 12:7630:7646  \"to != address(0)\" */ var_to, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1)\n                if /** @src 12:7630:7646  \"to != address(0)\" */ iszero(/** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 35)\n                    mstore(add(memPtr_1, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr_1, 100), \"ess\")\n                    revert(memPtr_1, 132)\n                }\n                /// @src 12:7568:7569  \"0\"\n                let _4 := 0x00\n                /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src 12:7568:7569  \"0\" */ _4, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                mstore(0x20, /** @src 12:7568:7569  \"0\" */ _4)\n                /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _5 := sload(keccak256(/** @src 12:7568:7569  \"0\" */ _4, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40))\n                if /** @src 12:7801:7822  \"fromBalance >= amount\" */ lt(_5, var_amount)\n                /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                {\n                    let memPtr_2 := mload(0x40)\n                    mstore(memPtr_2, shl(229, 4594637))\n                    mstore(add(memPtr_2, 4), 0x20)\n                    mstore(add(memPtr_2, 36), 38)\n                    mstore(add(memPtr_2, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr_2, 100), \"alance\")\n                    revert(memPtr_2, 132)\n                }\n                mstore(/** @src 12:7568:7569  \"0\" */ _4, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                mstore(0x20, /** @src 12:7568:7569  \"0\" */ _4)\n                /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                sstore(keccak256(/** @src 12:7568:7569  \"0\" */ _4, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), sub(/** @src 12:7917:7937  \"fromBalance - amount\" */ _5, var_amount))\n                /// @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src 12:7568:7569  \"0\" */ _4, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let dataSlot := keccak256(/** @src 12:7568:7569  \"0\" */ _4, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 12:8114:8137  \"_balances[to] += amount\" */ dataSlot), /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ var_amount))\n                /// @src 12:8163:8189  \"Transfer(from, to, amount)\"\n                let _6 := /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(0x40)\n                mstore(_6, var_amount)\n                /// @src 12:8163:8189  \"Transfer(from, to, amount)\"\n                log3(_6, /** @src 12:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20, /** @src 12:8163:8189  \"Transfer(from, to, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122099d3043ec85fa1deaa3d71b8aa5c5b4d4b50eb852896cddbf378eaf6c2bdf58964736f6c63430008180033\"\n    }\n}\n","hash":"01000141024a7a93f4103a6ec73b25f8b4f4d9000049cda57aaf0315bc1a3645","factoryDependencies":{}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ERC20Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract unpausable.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":919,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":925,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":927,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":929,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":931,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":813,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_paused","offset":0,"slot":"5","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca\",\"dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":919,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":925,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":927,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":929,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":931,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":4470,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_nameFallback","offset":0,"slot":"5","type":"t_string_storage"},{"astId":4472,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_versionFallback","offset":0,"slot":"6","type":"t_string_storage"},{"astId":1628,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_nonces","offset":0,"slot":"7","type":"t_mapping(t_address,t_struct(Counter)3448_storage)"},{"astId":1636,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"8","type":"t_bytes32"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)3448_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Counters.Counter)","numberOfBytes":"32","value":"t_struct(Counter)3448_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)3448_storage":{"encoding":"inplace","label":"struct Counters.Counter","members":[{"astId":3447,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","eip712Domain()":"84b0196e","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.5.0"},"storageLayout":{"storage":[{"astId":1864,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1866,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1870,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1874,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1878,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1884,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"assembly":"\t.text\n\t.file\t\"ERC721.sol:ERC721\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6 + r0]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r4\n\tshr.s\t96, r4, r4\n\tand\t@CPI0_0[0], r4, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_22\n\tsub.s!\t4, r4, r2\n\tjump.lt\t@.BB0_169\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_6[0], r2, r3\n\tjump.le\t@.BB0_49\n\tsub.s!\t@CPI0_7[0], r2, r3\n\tjump.le\t@.BB0_56\n\tsub.s!\t@CPI0_8[0], r2, r3\n\tjump.gt\t@.BB0_68\n\tsub.s!\t@CPI0_11[0], r2, r3\n\tjump.eq\t@.BB0_75\n\tsub.s!\t@CPI0_12[0], r2, r2\n\tjump.ne\t@.BB0_169\n\tsub.s!\t132, r4, r2\n\tjump.lt\t@.BB0_169\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_169\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_23[0], r5, r2\n\tjump.gt\t@.BB0_169\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_23[0], r2, r3\n\tjump.gt\t@.BB0_169\n\tptr.add.s\t100, r1, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI0_2[0], r6, r3\n\tjump.gt\t@.BB0_169\n\tadd\t35, r6, r3\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_169\n\tadd\t4, r6, r7\n\tptr.add\tr1, r7, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_2[0], r3, r8\n\tjump.gt\t@.BB0_48\n\tadd\t31, r3, r8\n\tand\t@CPI0_53[0], r8, r8\n\tadd\t63, r8, r8\n\tand\t@CPI0_53[0], r8, r8\n\tsub.s!\t@CPI0_25[0], r8, r9\n\tjump.gt\t@.BB0_48\n\tadd\t128, r8, r8\n\tst.1\t64, r8\n\tst.1\t128, r3\n\tadd\tr6, r3, r6\n\tadd\t36, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB0_169\n\tadd\t32, r7, r4\n\tptr.add\tr1, r4, r4\n\tand\t31, r3, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB0_19\n\tadd\t160, r0, r8\n\tshl.s\t5, r7, r9\n\tadd\t160, r9, r9\n\tptr.add\tr4, r0, r10\n.BB0_18:\n\tld.inc\tr10, r11, r10\n\tst.1.inc\tr8, r11, r8\n\tsub!\tr8, r9, r11\n\tjump.ne\t@.BB0_18\n.BB0_19:\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_21\n\tshl.s\t5, r7, r7\n\tptr.add\tr4, r7, r4\n\tshl.s\t3, r6, r6\n\tadd\t160, r7, r7\n\tld.1\tr7, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr4, r4\n\tsub\t256, r6, r6\n\tshr\tr4, r6, r4\n\tshl\tr4, r6, r4\n\tor\tr4, r8, r4\n\tst.1\tr7, r4\n.BB0_21:\n\tadd\t160, r3, r3\n\tst.1\tr3, r0\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tadd\t128, r0, r4\n\tadd\tr5, r0, r1\n\tnear_call\tr0, @fun_safeTransferFrom, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_22:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_169\n\tadd\t31, r4, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t128, r2, r2\n\tst.1\t64, r2\n\tand\t31, r4, r2\n\tshr.s!\t5, r4, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_26\n\tadd\t128, r5, r6\n\tptr.add\tr1, r0, r7\n.BB0_25:\n\tld.inc\tr7, r8, r7\n\tst.1.inc\tr3, r8, r3\n\tsub!\tr3, r6, r8\n\tjump.ne\t@.BB0_25\n.BB0_26:\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_28\n\tptr.add\tr1, r5, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r5, r3\n\tld.1\tr3, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_28:\n\tsub.s!\t64, r4, r1\n\tjump.lt\t@.BB0_169\n\tld.1\t128, r3\n\tsub.s!\t@CPI0_2[0], r3, r1\n\tjump.gt\t@.BB0_169\n\tadd\t31, r3, r1\n\tsub!\tr1, r4, r2\n\tadd\tr0, r0, r2\n\tadd.ge\t@CPI0_3[0], r0, r2\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r5\n\tadd\tr0, r0, r5\n\tadd.lt\t@CPI0_3[0], r0, r5\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd.ne\tr2, r0, r5\n\tsub!\tr5, r0, r1\n\tjump.ne\t@.BB0_169\n\tadd\t128, r3, r1\n\tld.1\tr1, r2\n\tsub.s!\t@CPI0_2[0], r2, r1\n\tjump.gt\t@.BB0_48\n\tadd\t31, r2, r1\n\tand\t@CPI0_53[0], r1, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_53[0], r1, r1\n\tld.1\t64, r9\n\tadd\tr9, r1, r5\n\tsub!\tr5, r9, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_2[0], r5, r6\n\tjump.gt\t@.BB0_48\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_48\n\tadd\t128, r4, r1\n\tst.1\t64, r5\n\tst.1.inc\tr9, r2, r10\n\tadd\t160, r3, r3\n\tadd\tr2, r3, r5\n\tsub!\tr5, r1, r5\n\tjump.gt\t@.BB0_169\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_38\n\tadd\tr0, r0, r5\n.BB0_37:\n\tadd\tr10, r5, r6\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_37\n.BB0_38:\n\tadd\tr2, r9, r2\n\tadd\t32, r2, r2\n\tst.1\tr2, r0\n\tld.1\t160, r3\n\tsub.s!\t@CPI0_2[0], r3, r2\n\tjump.gt\t@.BB0_169\n\tadd\t31, r3, r2\n\tsub!\tr2, r4, r4\n\tadd\tr0, r0, r4\n\tadd.ge\t@CPI0_3[0], r0, r4\n\tand\t@CPI0_3[0], r2, r2\n\tsub!\tr2, r0, r5\n\tadd\tr0, r0, r5\n\tadd.lt\t@CPI0_3[0], r0, r5\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tadd.ne\tr4, r0, r5\n\tsub!\tr5, r0, r2\n\tjump.ne\t@.BB0_169\n\tadd\t128, r3, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_2[0], r2, r4\n\tjump.gt\t@.BB0_48\n\tadd\t31, r2, r4\n\tand\t@CPI0_53[0], r4, r4\n\tadd\t63, r4, r4\n\tand\t@CPI0_53[0], r4, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_2[0], r4, r6\n\tjump.gt\t@.BB0_48\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_48\n\tst.1\t64, r4\n\tst.1.inc\tr7, r2, r6\n\tadd\t160, r3, r3\n\tadd\tr2, r3, r4\n\tsub!\tr4, r1, r1\n\tjump.gt\t@.BB0_169\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_47\n\tadd\tr0, r0, r1\n.BB0_46:\n\tadd\tr6, r1, r4\n\tadd\tr1, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r1, r1\n\tsub!\tr1, r2, r4\n\tjump.lt\t@.BB0_46\n.BB0_47:\n\tadd\tr2, r7, r1\n\tadd\t32, r1, r1\n\tst.1\tr1, r0\n\tld.1\tr9, r4\n\tsub.s!\t@CPI0_2[0], r4, r1\n\tjump.le\t@.BB0_142\n.BB0_48:\n\tadd\t@CPI0_26[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_27[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_49:\n\tsub.s!\t@CPI0_16[0], r2, r3\n\tjump.gt\t@.BB0_63\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tjump.eq\t@.BB0_81\n\tsub.s!\t@CPI0_21[0], r2, r3\n\tjump.eq\t@.BB0_87\n\tsub.s!\t@CPI0_22[0], r2, r2\n\tjump.ne\t@.BB0_169\n\tsub.s!\t36, r4, r2\n\tjump.lt\t@.BB0_169\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_169\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getApproved, @DEFAULT_UNWIND\n\tjump\t@.BB0_93\n.BB0_56:\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.eq\t@.BB0_90\n\tsub.s!\t@CPI0_14[0], r2, r3\n\tjump.eq\t@.BB0_94\n\tsub.s!\t@CPI0_15[0], r2, r1\n\tjump.ne\t@.BB0_169\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_169\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r5\n\tshr.s\t1, r2, r1\n\tand\t127, r1, r4\n\tadd.eq\tr4, r0, r1\n\tsub.s!\t31, r1, r6\n\tadd\t0, r0, r6\n\tadd.gt\t1, r0, r6\n\txor\tr2, r6, r6\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_89\n\tst.1\t128, r1\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_112\n\tand\t@CPI0_54[0], r2, r1\n\tst.1\t160, r1\n\tsub!\tr4, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_131\n.BB0_63:\n\tsub.s!\t@CPI0_17[0], r2, r3\n\tjump.eq\t@.BB0_99\n\tsub.s!\t@CPI0_18[0], r2, r1\n\tjump.eq\t@.BB0_105\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.ne\t@.BB0_169\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_169\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr3, r0, stack-[4]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[3]\n\tnear_call\tr0, @finalize_allocation_10893, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tst.1\tr4, r0\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[4], r0, r3\n\tnear_call\tr0, @fun_safeTransferFrom, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_68:\n\tsub.s!\t@CPI0_9[0], r2, r3\n\tjump.eq\t@.BB0_107\n\tsub.s!\t@CPI0_10[0], r2, r2\n\tjump.ne\t@.BB0_169\n\tsub.s!\t68, r4, r2\n\tjump.lt\t@.BB0_169\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_169\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_23[0], r2, r3\n\tjump.gt\t@.BB0_169\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_23[0], r3, r1\n\tjump.gt\t@.BB0_169\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tadd\tr3, r0, stack-[6]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\t64, r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_24[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_75:\n\tsub.s!\t68, r4, r2\n\tjump.lt\t@.BB0_169\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_169\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_23[0], r3, r2\n\tjump.gt\t@.BB0_169\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r4\n\tsub!\tr4, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tsub!\tr4, r1, r1\n\tjump.ne\t@.BB0_169\n\tcontext.caller\tr2\n\tsub!\tr2, r3, r1\n\tjump.ne\t@.BB0_118\n\tadd\t@CPI0_30[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t25, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_32[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_81:\n\tsub.s!\t36, r4, r2\n\tjump.lt\t@.BB0_169\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_169\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r2\n\tand!\t@CPI0_49[0], r2, r1\n\tjump.ne\t@.BB0_169\n\tadd\t1, r0, r1\n\tsub.s!\t@CPI0_50[0], r2, r3\n\tjump.eq\t@.BB0_115\n\tsub.s!\t@CPI0_51[0], r2, r3\n\tjump.eq\t@.BB0_115\n\tsub.s!\t@CPI0_52[0], r2, r2\n\tadd.ne\tr0, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_24[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_87:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_169\n\tsload\tr0, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r1\n\tand\t127, r1, r3\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.eq\t@.BB0_110\n.BB0_89:\n\tadd\t@CPI0_26[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_27[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_90:\n\tsub.s!\t36, r4, r2\n\tjump.lt\t@.BB0_169\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_169\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_ownerOf, @DEFAULT_UNWIND\n.BB0_93:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_37[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_94:\n\tsub.s!\t36, r4, r2\n\tjump.lt\t@.BB0_169\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_169\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_23[0], r1, r2\n\tjump.gt\t@.BB0_169\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_114\n\tadd\t@CPI0_30[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t41, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_34[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_35[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_99:\n\tsub.s!\t68, r4, r2\n\tjump.lt\t@.BB0_169\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_169\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\t@CPI0_23[0], r2, r2\n\tjump.gt\t@.BB0_169\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_169\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_23[0], r1, r1\n\tjump.ne\t@.BB0_122\n.BB0_104:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_46[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_30[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_105:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_169\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr3, r0, r2\n\tadd\tr2, r0, stack-[4]\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_isApprovedOrOwner, @DEFAULT_UNWIND\n\tnear_call\tr0, @require_helper_stringliteral_12a8, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[4], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_107:\n\tsub.s!\t36, r4, r2\n\tjump.lt\t@.BB0_169\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_169\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_requireMinted, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tnear_call\tr0, @finalize_allocation_10893, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r1\n\tst.1\tr1, r0\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[5]\n\tnear_call\tr0, @finalize_allocation_10893, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r1\n\tst.1\tr1, r0\n\tadd\t32, r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[6]\n\tst.1.inc\tr3, r2, r2\n\tjump\t@.BB0_132\n.BB0_110:\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_116\n\tand\t@CPI0_54[0], r2, r1\n\tst.1\t160, r1\n\tsub!\tr3, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_131\n.BB0_112:\n\tst.1\t0, r3\n\tsub.s!\t2, r2, r2\n\tjump.ge\t@.BB0_125\n\tjump\t@.BB0_117\n.BB0_114:\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n.BB0_115:\n\tst.1\t128, r1\n\tadd\t@CPI0_24[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_116:\n\tst.1\t0, r0\n\tsub.s!\t2, r2, r2\n\tjump.ge\t@.BB0_128\n.BB0_117:\n\tadd\t160, r0, r1\n\tjump\t@.BB0_131\n.BB0_118:\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[6]\n\tadd\tr4, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_169\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[6], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_169\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_54[0], r2, r2\n\tor\tr2, r4, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r4\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_29[0], r0, r4\n\tcontext.caller\tr5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_169\n.BB0_121:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_122:\n\tsub!\tstack-[6], r1, r2\n\tjump.ne\t@.BB0_133\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_44[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_45[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t33, r0, r3\n.BB0_124:\n\tst.1\tr2, r3\n\tadd\t@CPI0_30[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_40[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_125:\n\tadd\t@CPI0_33[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_126:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_126\n\tjump\t@.BB0_130\n.BB0_128:\n\tadd\t@CPI0_48[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_129:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_129\n.BB0_130:\n\tadd\t192, r3, r1\n.BB0_131:\n\tsub.s\t128, r1, r2\n\tadd\t128, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[6]\n\tst.1.inc\tr2, r1, r2\n\tadd\t128, r0, r1\n.BB0_132:\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tsub\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_133:\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_138\n.BB0_134:\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_169\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_41[0], r2, r2\n\tor\tstack-[6], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_169\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_23[0], r1, r5\n\tjump.eq\t@.BB0_104\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_43[0], r0, r4\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_121\n\tjump\t@.BB0_169\n.BB0_138:\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_169\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_169\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_134\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_38[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_39[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t61, r0, r3\n\tjump\t@.BB0_124\n.BB0_142:\n\tsload\tr0, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_89\n\tadd\tr10, r0, stack-[3]\n\tadd\tr9, r0, stack-[2]\n\tadd\tr6, r0, stack-[1]\n\tadd\tr7, r0, stack-[5]\n\tadd\tr3, r0, stack-[4]\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[6]\n\tjump.lt\t@.BB0_147\n\tst.1\t0, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_169\n\tadd\tstack-[6], r0, r4\n\tadd\t31, r4, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r4, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[4], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_147\n.BB0_146:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_146\n.BB0_147:\n\tsub.s!\t31, r4, r1\n\tjump.le\t@.BB0_151\n\tst.1\t0, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tsub.s\t32, r0, r2\n\tjump.eq\t@.BB0_169\n\tand!\tstack-[6], r2, r2\n\tld\tr1, r1\n\tjump.ne\t@.BB0_154\n\tadd\t32, r0, r3\n\tjump\t@.BB0_156\n.BB0_151:\n\tsub!\tstack-[6], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_153\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n.BB0_153:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tshr\t@CPI0_55[0], r2, r2\n\txor\t@CPI0_55[0], r2, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_159\n.BB0_154:\n\tsub.s\t1, r2, r3\n\tshr.s\t5, r3, r3\n\tadd\tr1, r3, r4\n\tadd\t32, r0, r3\n\tadd\t1, r4, r4\n\tadd\tstack-[2], r0, r6\n.BB0_155:\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r3, r3\n\tadd\t1, r1, r1\n\tsub!\tr1, r4, r5\n\tjump.ne\t@.BB0_155\n.BB0_156:\n\tsub.s!\tstack-[6], r2, r2\n\tjump.ge\t@.BB0_158\n\tadd\tstack-[6], r0, r2\n\tshl.s\t3, r2, r2\n\tand\t248, r2, r2\n\tshr\t@CPI0_55[0], r2, r2\n\txor\t@CPI0_55[0], r2, r2\n\tadd\tstack-[2], r3, r3\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB0_158:\n\tadd\tstack-[6], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n.BB0_159:\n\tsstore\tr0, r1\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_48\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[4]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_89\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_165\n\tadd\t1, r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_169\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[4], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_165\n.BB0_164:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_164\n.BB0_165:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_170\n\tadd\t1, r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tsub.s\t32, r0, r2\n\tjump.eq\t@.BB0_169\n\tand!\tstack-[6], r2, r2\n\tld\tr1, r1\n\tjump.ne\t@.BB0_173\n\tadd\t32, r0, r3\n\tjump\t@.BB0_175\n.BB0_169:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_170:\n\tsub!\tstack-[6], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_172\n\tadd\tstack-[1], r0, r1\n\tld.1\tr1, r1\n.BB0_172:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tshr\t@CPI0_55[0], r2, r2\n\txor\t@CPI0_55[0], r2, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tjump\t@.BB0_178\n.BB0_173:\n\tsub.s\t1, r2, r3\n\tshr.s\t5, r3, r3\n\tadd\tr1, r3, r4\n\tadd\t32, r0, r3\n\tadd\t1, r4, r4\n\tadd\tstack-[5], r0, r6\n.BB0_174:\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r3, r3\n\tadd\t1, r1, r1\n\tsub!\tr1, r4, r5\n\tjump.ne\t@.BB0_174\n.BB0_175:\n\tsub.s!\tstack-[6], r2, r2\n\tjump.ge\t@.BB0_177\n\tadd\tstack-[6], r0, r2\n\tshl.s\t3, r2, r2\n\tand\t248, r2, r2\n\tshr\t@CPI0_55[0], r2, r2\n\txor\t@CPI0_55[0], r2, r2\n\tadd\tstack-[5], r3, r3\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB0_177:\n\tadd\tstack-[6], r0, r1\n\tshl.s\t1, r1, r1\n\tadd\t1, r0, r2\n.BB0_178:\n\tor\tr1, r2, r1\n\tadd\t1, r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_5[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tld.1.inc\tr1, r3, r4\n\tst.1.inc\tr2, r3, r1\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r2\n.BB1_2:\n\tadd\tr1, r2, r5\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r2, r2\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tand\t@CPI1_0[0], r2, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin2:\n\tsub.s!\t@CPI2_0[0], r1, r2\n\tjump.gt\t@.BB2_2\n\tsub.s!\t99, r1, r1\n\tjump.le\t@.BB2_2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tjump.gt\t@.BB2_2\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_1[0], r2, r4\n\tjump.gt\t@.BB2_2\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB2_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfinalize_allocation_10893:\n.func_begin3:\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tjump.ge\t@.BB3_1\n\tadd\t32, r1, r1\n\tst.1\t64, r1\n\tret\n.BB3_1:\n\tadd\t@CPI3_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfinalize_allocation:\n.func_begin4:\n\tadd\t31, r2, r2\n\tand\t@CPI4_3[0], r2, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tjump.gt\t@.BB4_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_2\n\tst.1\t64, r1\n\tret\n.BB4_2:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfun_getApproved:\n.func_begin5:\n\tnop\tstack+=[1 + r0]\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_0[0], r1, r2\n\tadd.ge\t@CPI5_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI5_2[0], r1, r1\n\tjump.eq\t@.BB5_3\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_0[0], r1, r2\n\tadd.ge\t@CPI5_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI5_2[0], r1, r1\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI5_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI5_0[0], r1, r2\n\tadd.ge\t@CPI5_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nrequire_helper_stringliteral_12a8:\n.func_begin6:\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB6_1\n\tret\n.BB6_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI6_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI6_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI6_3[0], r1, r2\n\tadd.ge\t@CPI6_3[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_ownerOf:\n.func_begin7:\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI7_2[0], r1, r1\n\tjump.eq\t@.BB7_3\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI7_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI7_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI7_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfun_safeTransferFrom:\n.func_begin8:\n\tnop\tstack+=[8 + r0]\n\tadd\tr4, r0, stack-[1]\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[5]\n\tadd\tr3, r0, stack-[6]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI8_2[0], r1, r1\n\tjump.eq\t@.BB8_3\n\tcontext.caller\tr2\n\tand\t@CPI8_2[0], r2, stack-[4]\n\tsub!\tstack-[4], r1, r2\n\tjump.eq\t@.BB8_14\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB8_14\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI8_2[0], r1, r1\n\tjump.eq\t@.BB8_3\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI8_2[0], r1, r1\n\tsub.s!\tstack-[4], r1, r1\n\tjump.ne\t@.BB8_12\n.BB8_14:\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI8_2[0], r1, r2\n\tjump.eq\t@.BB8_3\n\tadd\tstack-[5], r0, r1\n\tand\t@CPI8_2[0], r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB8_17\n\tadd\tr2, r0, stack-[5]\n\tadd\tstack-[3], r0, r1\n\tand!\t@CPI8_2[0], r1, stack-[4]\n\tjump.eq\t@.BB8_19\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI8_2[0], r1, r1\n\tadd\tstack-[5], r0, r2\n\tjump.eq\t@.BB8_3\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB8_17\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI8_9[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI8_9[0], r2, r2\n\tadd\tstack-[4], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI8_11[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[6], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB8_1\n\tcontext.sp\tr1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI8_12[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_13[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_29\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB8_31\n\tld.1\t64, r10\n\tadd\t100, r10, r1\n\tadd\t128, r0, r7\n\tst.1\tr1, r7\n\tadd\t68, r10, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r10, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI8_14[0], r0, r1\n\tst.1.inc\tr10, r1, r8\n\tadd\t4, r10, r1\n\tcontext.caller\tr2\n\tst.1\tr1, r2\n\tadd\tstack-[1], r0, r1\n\tld.1.inc\tr1, r2, r3\n\tadd\t132, r10, r1\n\tst.1\tr1, r2\n\tadd\t164, r10, r1\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB8_35\n\tadd\tr0, r0, r4\n.BB8_34:\n\tadd\tr4, r1, r5\n\tadd\tr3, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB8_34\n.BB8_35:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tcontext.gas_left\tr3\n\tadd\tstack-[4], r0, r5\n\tsub.s!\t4, r5, r4\n\tjump.ne\t@.BB8_37\n\tcontext.sp\tr5\n\tsub.s\t8, r5, r5\n\tshl.s\t5, r5, r5\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB8_44\n.BB8_31:\n\tcontext.sp\tr1\n\tsub\tstack-[2], r1, r1\n\tnop\tstack+=[0 + r1]\n\tret\n.BB8_37:\n\tadd\tr7, r0, stack-[3]\n\tadd\t31, r2, r2\n\tand\t@CPI8_26[0], r2, r2\n\tsub\tr2, r10, r2\n\tadd\tr2, r1, r1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI8_0[0], r10, r2\n\tadd\t@CPI8_0[0], r0, r2\n\tadd.lt\tr10, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr1, r2, r1\n\tsub.s!\t@CPI8_0[0], r3, r2\n\tadd.ge\t@CPI8_0[0], r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tadd\tr5, r0, r2\n\tadd\tr10, r0, stack-[6]\n\tadd\tr8, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r11\n\tadd\tstack-[6], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI8_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB8_40\n\tptr.add\tr1, r0, r7\n\tadd\tr10, r0, r8\n.BB8_39:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r11, r9\n\tjump.ne\t@.BB8_39\n.BB8_40:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB8_42\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB8_42:\n\tadd\tr3, r0, stack[@returndatasize]\n\tcontext.sp\tr5\n\tsub.s\t7, r5, r5\n\tshl.s\t5, r5, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_49\n.BB8_44:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI8_17[0], r1, r4\n\tjump.gt\t@.BB8_46\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB8_46\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB8_1\n\tld.1\tr10, r1\n\tand!\t@CPI8_18[0], r1, r2\n\tjump.ne\t@.BB8_1\n\tshr.s\t5, r5, r2\n\tadd\tr1, r0, stack[r2]\n\tcontext.sp\tr2\n\tsub\tstack-[2], r2, r2\n\tnop\tstack+=[0 + r2]\n\tand\t@CPI8_19[0], r1, r1\n\tsub.s!\t@CPI8_14[0], r1, r1\n\tjump.ne\t@.BB8_60\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI8_24[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_25[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_17:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI8_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI8_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB8_13\n.BB8_19:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI8_22[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI8_23[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n.BB8_13:\n\tst.1\tr2, r3\n\tadd\t@CPI8_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_29:\n\trevert\n.BB8_49:\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB8_52\n\tadd\t96, r0, r2\n\tjump\t@.BB8_51\n.BB8_12:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI8_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI8_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tjump\t@.BB8_13\n.BB8_52:\n\tadd\t31, r3, r2\n\tand\t@CPI8_15[0], r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI8_16[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI8_17[0], r4, r6\n\tjump.gt\t@.BB8_46\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB8_46\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr2, r3, r5\n\tadd\tr5, r0, stack-[3]\n\tshr.s!\t5, r3, r3\n\tshl.s\t5, r3, r3\n\tjump.eq\t@.BB8_57\n\tadd\tstack-[3], r0, r7\n\tadd\tr7, r3, r5\n\tptr.add\tr1, r0, r6\n.BB8_56:\n\tld.inc\tr6, r8, r6\n\tst.1.inc\tr7, r8, r7\n\tsub!\tr7, r5, r8\n\tjump.ne\t@.BB8_56\n.BB8_57:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB8_51\n\tptr.add\tr1, r3, r1\n\tadd\tstack-[3], r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB8_51:\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB8_59\n.BB8_60:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[6]\n\tadd\t@CPI8_5[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tsub\tr1, r3, r1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI8_0[0], r3, r2\n\tadd.ge\t@CPI8_0[0], r0, r3\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_46:\n\tadd\t@CPI8_20[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_21[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_59:\n\tadd\tstack-[3], r0, r3\n\tsub.s!\t@CPI8_0[0], r3, r2\n\tadd.ge\t@CPI8_0[0], r0, r3\n\tshl.s\t64, r3, r2\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nfun_requireMinted:\n.func_begin9:\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI9_2[0], r1, r1\n\tjump.eq\t@.BB9_3\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI9_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI9_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nfun_isApprovedOrOwner:\n.func_begin10:\n\tnop\tstack+=[2 + r0]\n\tadd\tr1, r0, stack-[2]\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI10_2[0], r1, r1\n\tjump.eq\t@.BB10_3\n\tadd\tstack-[2], r0, r2\n\tand\t@CPI10_2[0], r2, r3\n\tsub!\tr3, r1, r2\n\tjump.ne\t@.BB10_6\n\tadd\t1, r0, r1\n\tret\n.BB10_6:\n\tadd\tr3, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB10_9\n\tret\n.BB10_9:\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI10_2[0], r1, r1\n\tjump.eq\t@.BB10_3\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI10_2[0], r1, r1\n\tsub.s!\tstack-[2], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI10_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nfun_transfer:\n.func_begin11:\n\tnop\tstack+=[3 + r0]\n\tadd\tr2, r0, stack-[1]\n\tadd\tr1, r0, stack-[2]\n\tadd\tr3, r0, stack-[3]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI11_2[0], r1, r2\n\tjump.eq\t@.BB11_3\n\tadd\tstack-[2], r0, r1\n\tand\t@CPI11_2[0], r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB11_5\n\tadd\tr2, r0, stack-[2]\n\tadd\tstack-[1], r0, r1\n\tand!\t@CPI11_2[0], r1, stack-[1]\n\tjump.eq\t@.BB11_8\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI11_2[0], r1, r1\n\tadd\tstack-[2], r0, r2\n\tjump.eq\t@.BB11_3\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB11_5\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI11_7[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI11_7[0], r2, r2\n\tadd\tstack-[1], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI11_9[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB11_1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI11_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI11_13[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_5:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI11_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI11_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB11_6\n.BB11_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI11_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI11_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n.BB11_6:\n\tst.1\tr2, r3\n\tadd\t@CPI11_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI11_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nabi_encode_stringliteral_1e76:\n.func_begin12:\n\tadd\t96, r1, r2\n\tadd\t@CPI12_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI12_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t50, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end12:\n\n__cxa_throw:\n.func_begin13:\n\trevert\n.func_end13:\n\n__sha3:\n.func_begin14:\n\tsub.s!\t@CPI14_0[0], r1, r3\n\tadd.ge\t@CPI14_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI14_0[0], r2, r3\n\tadd.ge\t@CPI14_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_0[0], r2, r3\n\tadd.ge\t@CPI14_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_2\n\tld\tr1, r1\n\tret\n.BB14_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\n__farcall:\n.func_begin15:\n.tmp0:\n\tfar_call\tr1, r2, @.BB15_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB15_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end15:\n\n__staticcall:\n.func_begin16:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB16_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB16_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end16:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell\t0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n\t.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI5_0:\nCPI6_3:\nCPI7_0:\nCPI8_0:\nCPI9_0:\nCPI10_0:\nCPI11_0:\nCPI14_0:\n\t.cell\t4294967295\nCPI0_1:\nCPI8_15:\n\t.cell\t8589934560\nCPI0_2:\nCPI4_0:\nCPI8_17:\n\t.cell\t18446744073709551615\nCPI0_3:\n\t.cell\t-57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_4:\n\t.cell\t904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_5:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_6:\n\t.cell\t1666326813\nCPI0_7:\n\t.cell\t2720838756\nCPI0_8:\n\t.cell\t3363526364\nCPI0_9:\n\t.cell\t3363526365\nCPI0_10:\n\t.cell\t3917867461\nCPI0_11:\n\t.cell\t2720838757\nCPI0_12:\n\t.cell\t3096268766\nCPI0_13:\n\t.cell\t1666326814\nCPI0_14:\n\t.cell\t1889567281\nCPI0_15:\n\t.cell\t2514000705\nCPI0_16:\n\t.cell\t157198258\nCPI0_17:\n\t.cell\t157198259\nCPI0_18:\n\t.cell\t599290589\nCPI0_19:\n\t.cell\t1115958798\nCPI0_20:\n\t.cell\t33540519\nCPI0_21:\n\t.cell\t117300739\nCPI0_22:\n\t.cell\t135795452\nCPI0_23:\nCPI2_1:\nCPI5_2:\nCPI7_2:\nCPI8_2:\nCPI9_2:\nCPI10_2:\nCPI11_2:\n\t.cell\t1461501637330902918203684832716283019655932542975\nCPI0_24:\n\t.cell\t2535301202817642044428229017600\nCPI0_25:\n\t.cell\t18446744073709551487\nCPI0_26:\nCPI3_1:\nCPI4_1:\nCPI8_20:\n\t.cell\t35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_27:\nCPI3_2:\nCPI4_2:\nCPI8_21:\n\t.cell\t2852213850513516153367582212096\nCPI0_28:\nCPI5_1:\nCPI7_1:\nCPI8_1:\nCPI9_1:\nCPI10_1:\nCPI11_1:\n\t.cell\t904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_29:\n\t.cell\t10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI0_30:\nCPI5_4:\nCPI6_2:\nCPI7_4:\nCPI8_5:\nCPI9_4:\nCPI10_4:\nCPI11_5:\n\t.cell\t3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_31:\n\t.cell\t31354931916645375393762213565866891172307618523953520621822726397682830540800\nCPI0_32:\n\t.cell\t7922816253787617000789217640448\nCPI0_33:\n\t.cell\t-35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI0_34:\n\t.cell\t31354931916645375393761059704421056284766179208589378268252292504104988604001\nCPI0_35:\n\t.cell\t49035997637886268239882041675796387503892600671578232905754119059317383495680\nCPI0_36:\n\t.cell\t10458117454244075803782624051200\nCPI0_37:\n\t.cell\t2535301200456458802993406410752\nCPI0_38:\n\t.cell\t48576686418507356219831365361070156960199332940003936683527688631380237877248\nCPI0_39:\n\t.cell\t31354931916645375393762213565866891172284950498046585739320112041512459596911\nCPI0_40:\nCPI6_4:\nCPI8_6:\nCPI11_6:\n\t.cell\t10458117451882892562347801444352\nCPI0_41:\nCPI8_9:\nCPI11_7:\n\t.cell\t-1461501637330902918203684832716283019655932542976\nCPI0_42:\nCPI8_10:\nCPI11_8:\nCPI14_1:\n\t.cell\t904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_43:\n\t.cell\t-52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI0_44:\n\t.cell\t51563664738492368274558954261681333965909290046418063673820955378523815542784\nCPI0_45:\n\t.cell\t31354931916645375393762213565866890849608307089744918678309194418033790512741\nCPI0_46:\nCPI5_3:\nCPI7_3:\nCPI8_24:\nCPI9_3:\nCPI10_3:\nCPI11_12:\n\t.cell\t31354931916645375393958183653158686846599388074356949121886454872141515980800\nCPI0_47:\nCPI5_5:\nCPI7_5:\nCPI8_25:\nCPI9_5:\nCPI10_5:\nCPI11_13:\n\t.cell\t7922816251426433759354395033600\nCPI0_48:\n\t.cell\t18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI0_49:\nCPI8_18:\n\t.cell\t26959946667150639794667015087019630673637144422540572481103610249215\nCPI0_50:\n\t.cell\t904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI0_51:\n\t.cell\t41326688264978518566617017154793646184809722027297161851759941631668658372608\nCPI0_52:\n\t.cell\t-57591534043048631271602713168962198724648561309353517944097662808962438791168\nCPI0_53:\nCPI1_0:\nCPI4_3:\nCPI8_26:\n\t.cell\t-32\nCPI0_54:\n\t.cell\t-256\nCPI0_55:\n\t.cell\t-1\nCPI2_0:\n\t.cell\t57896044618658097711785492504343953926634992332820282019728792003956564819967\nCPI3_0:\n\t.cell\t18446744073709551584\nCPI6_0:\nCPI8_3:\n\t.cell\t51620973015253767882670130074298444487415533390198982457255807955294746574848\nCPI6_1:\nCPI8_4:\n\t.cell\t31354931916645375393809815203201166297542482068262457279726729202739757674085\nCPI8_7:\nCPI11_3:\n\t.cell\t50417742920509558439106150551775209266858149941038353264781520106005609840640\nCPI8_8:\nCPI11_4:\n\t.cell\t31354931916645375394228278154242914900316605976059021079503402663591234728992\nCPI8_11:\nCPI11_9:\n\t.cell\t-15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI8_12:\n\t.cell\t10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI8_13:\n\t.cell\t904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI8_14:\n\t.cell\t9518847204935358166548570266051330015907116135037852959641967396525866745856\nCPI8_16:\n\t.cell\t17179869152\nCPI8_19:\n\t.cell\t-26959946667150639794667015087019630673637144422540572481103610249216\nCPI8_22:\nCPI11_10:\n\t.cell\t51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI8_23:\nCPI11_11:\n\t.cell\t31354931916645375394228278154242914900316678601111040334909412358260906878052\nCPI12_0:\n\t.cell\t44958151438609599421424650306347963631972141104775375727422033337783813144576\nCPI12_1:\n\t.cell\t31354931916645375394228278154242914900316678601109191929828695483653754540645\n","bytecode":{"object":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/// @use-src 18:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 19:\"@openzeppelin/contracts/token/ERC721/IERC721.sol\", 22:\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\", 24:\"@openzeppelin/contracts/utils/Context.sol\", 31:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 32:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\"\nobject \"ERC721_2765\" {\n    code {\n        {\n            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC721_2765\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            /// @src -1:-1:-1\n            let _4 := 0\n            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let _5 := sload(/** @src -1:-1:-1 */ _4)\n            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let length := /** @src -1:-1:-1 */ _4\n            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let _6 := 1\n            length := shr(_6, _5)\n            let outOfPlaceEncoding := and(_5, _6)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            let _7 := 31\n            if gt(length, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, _4)\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let deleteStart := add(data, shr(5, add(newLen, _7)))\n                if lt(newLen, _3) { deleteStart := data }\n                let _8 := add(data, shr(5, add(length, _7)))\n                let start := deleteStart\n                for { } lt(start, _8) { start := add(start, _6) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _4)\n                }\n            }\n            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let srcOffset := /** @src -1:-1:-1 */ _4\n            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            srcOffset := _3\n            switch gt(newLen, _7)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ _4, _4)\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let i := /** @src -1:-1:-1 */ _4\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, _6)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src -1:-1:-1 */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ add(shl(_6, newLen), _6))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ _4\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src -1:-1:-1 */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_6, newLen)))\n            }\n            let newLen_1 := mload(value1)\n            if gt(newLen_1, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            let _9 := sload(_6)\n            let length_1 := /** @src -1:-1:-1 */ _4\n            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            length_1 := shr(_6, _9)\n            let outOfPlaceEncoding_1 := and(_9, _6)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            if gt(length_1, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _6)\n                let data_1 := keccak256(/** @src -1:-1:-1 */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _7)))\n                if lt(newLen_1, _3) { deleteStart_1 := data_1 }\n                let _10 := add(data_1, shr(5, add(length_1, _7)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _10) { start_1 := add(start_1, _6) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ _4)\n                }\n            }\n            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ _4\n            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            srcOffset_1 := _3\n            switch gt(newLen_1, _7)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _6)\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let i_1 := /** @src -1:-1:-1 */ _4\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _3) }\n                {\n                    sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _6)\n                    srcOffset_1 := add(srcOffset_1, _3)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                }\n                sstore(_6, add(shl(_6, newLen_1), _6))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ _4\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(value1, srcOffset_1))\n                }\n                sstore(_6, or(and(value_1, not(shr(shl(3, newLen_1), not(0)))), shl(_6, newLen_1)))\n            }\n            let _11 := mload(64)\n            let _12 := datasize(\"ERC721_2765_deployed\")\n            codecopy(_11, dataoffset(\"ERC721_2765_deployed\"), _12)\n            return(_11, _12)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            array := array_1\n        }\n    }\n    /// @use-src 18:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 23:\"@openzeppelin/contracts/utils/Address.sol\", 24:\"@openzeppelin/contracts/utils/Context.sol\", 28:\"@openzeppelin/contracts/utils/Strings.sol\", 31:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 33:\"@openzeppelin/contracts/utils/math/Math.sol\"\n    object \"ERC721_2765_deployed\" {\n        code {\n            {\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value := calldataload(_3)\n                        let _5 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _5)) { revert(_4, _4) }\n                        /// @src 18:1707:1811  \"interfaceId == type(IERC721).interfaceId ||...\"\n                        let expr := /** @src 18:1707:1747  \"interfaceId == type(IERC721).interfaceId\" */ eq(_5, /** @src 18:1722:1747  \"type(IERC721).interfaceId\" */ shl(224, 0x80ac58cd))\n                        /// @src 18:1707:1811  \"interfaceId == type(IERC721).interfaceId ||...\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 18:1763:1811  \"interfaceId == type(IERC721Metadata).interfaceId\" */ eq(_5, /** @src 18:1778:1811  \"type(IERC721Metadata).interfaceId\" */ shl(224, 0x5b5e139f))\n                        }\n                        /// @src 18:1707:1863  \"interfaceId == type(IERC721).interfaceId ||...\"\n                        let expr_1 := expr\n                        if iszero(expr)\n                        {\n                            expr_1 := /** @src 31:937:977  \"interfaceId == type(IERC165).interfaceId\" */ eq(_5, /** @src 31:952:977  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        mstore(_1, iszero(iszero(expr_1)))\n                        return(_1, 32)\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr := mload(_2)\n                        let ret := _4\n                        let slotValue := sload(_4)\n                        let length := _4\n                        let _6 := 1\n                        length := shr(1, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _7 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _7))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(memPtr, _7), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _7)\n                        }\n                        case 1 {\n                            mstore(_4, _4)\n                            let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _7) }\n                            {\n                                mstore(add(add(memPtr, i), _7), sload(dataPos))\n                                dataPos := add(dataPos, _6)\n                            }\n                            ret := add(add(memPtr, i), _7)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                        let memPos := mload(_2)\n                        mstore(memPos, _7)\n                        return(memPos, sub(abi_encode_string(memPtr, add(memPos, _7)), memPos))\n                    }\n                    case 0x081812fc {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let ret_1 := fun_getApproved(calldataload(_3))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, and(ret_1, sub(shl(160, 1), 1)))\n                        return(memPos_1, 32)\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        let _8 := sub(shl(160, 1), 1)\n                        /// @src 18:3605:3616  \"to != owner\"\n                        let _9 := /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 18:3564:3587  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(value_1), /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _8)\n                        let _10 := and(/** @src 18:3605:3616  \"to != owner\" */ value0, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _8)\n                        if /** @src 18:3605:3616  \"to != owner\" */ eq(/** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _10, /** @src 18:3605:3616  \"to != owner\" */ _9)\n                        /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        {\n                            let memPtr_1 := mload(_2)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _3), 32)\n                            mstore(add(memPtr_1, 36), 33)\n                            mstore(add(memPtr_1, 68), \"ERC721: approval to current owne\")\n                            mstore(add(memPtr_1, 100), \"r\")\n                            revert(memPtr_1, 132)\n                        }\n                        /// @src 18:3686:3748  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                        let expr_2 := /** @src 18:3686:3707  \"_msgSender() == owner\" */ eq(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 18:3686:3707  \"_msgSender() == owner\" */ _9)\n                        /// @src 18:3686:3748  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                        if iszero(expr_2)\n                        {\n                            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                            mstore(_4, _9)\n                            mstore(32, /** @src 18:4508:4526  \"_operatorApprovals\" */ 0x05)\n                            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                            let _11 := keccak256(_4, _2)\n                            mstore(_4, /** @src 24:734:744  \"msg.sender\" */ caller())\n                            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                            mstore(32, _11)\n                            /// @src 18:3686:3748  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                            expr_2 := /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(_4, _2)), 0xff)\n                        }\n                        if iszero(expr_2)\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), 32)\n                            mstore(add(memPtr_2, 36), 61)\n                            mstore(add(memPtr_2, 68), \"ERC721: approve caller is not to\")\n                            mstore(add(memPtr_2, 100), \"ken owner or approved for all\")\n                            revert(memPtr_2, 132)\n                        }\n                        mstore(_4, value_1)\n                        mstore(32, _3)\n                        let _12 := keccak256(_4, _2)\n                        sstore(_12, or(and(sload(_12), shl(160, 0xffffffffffffffffffffffff)), _10))\n                        /// @src 18:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\"\n                        log4(/** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _4, _4, /** @src 18:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 18:12699:12722  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(value_1), /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _8), /** @src 18:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ _10, value_1)\n                        /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        return(_4, _4)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        /// @src 18:4763:4862  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\")\"\n                        require_helper_stringliteral_12a8(/** @src 18:4771:4812  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 18:4771:4812  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ param_2))\n                        /// @src 18:4893:4900  \"tokenId\"\n                        fun_transfer(param, param_1, param_2)\n                        /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        return(_4, _4)\n                    }\n                    case 0x42842e0e {\n                        if callvalue() { revert(_4, _4) }\n                        let param_3, param_4, param_5 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let memPtr_3 := mload(_2)\n                        finalize_allocation_10893(memPtr_3)\n                        mstore(memPtr_3, _4)\n                        /// @src 18:5077:5116  \"safeTransferFrom(from, to, tokenId, \\\"\\\")\"\n                        fun_safeTransferFrom(param_3, param_4, param_5, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ memPtr_3)\n                        return(_4, _4)\n                    }\n                    case 0x6352211e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let ret_2 := fun_ownerOf(calldataload(_3))\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, and(ret_2, sub(shl(160, 1), 1)))\n                        return(memPos_2, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let _13 := and(abi_decode_address(), sub(shl(160, 1), 1))\n                        if /** @src 18:2028:2047  \"owner != address(0)\" */ iszero(/** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _13)\n                        {\n                            let memPtr_4 := mload(_2)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, _3), 32)\n                            mstore(add(memPtr_4, 36), 41)\n                            mstore(add(memPtr_4, 68), \"ERC721: address zero is not a va\")\n                            mstore(add(memPtr_4, 100), \"lid owner\")\n                            revert(memPtr_4, 132)\n                        }\n                        mstore(_4, _13)\n                        mstore(32, /** @src 18:2110:2119  \"_balances\" */ 0x03)\n                        /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        let _14 := sload(keccak256(_4, _2))\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, _14)\n                        return(memPos_3, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_5 := mload(_2)\n                        let ret_3 := _4\n                        /// @src 18:2721:2728  \"_symbol\"\n                        let _15 := 0x01\n                        /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        let slotValue_1 := sload(/** @src 18:2721:2728  \"_symbol\" */ 0x01)\n                        /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        let length_1 := _4\n                        length_1 := shr(/** @src 18:2721:2728  \"_symbol\" */ 0x01, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, /** @src 18:2721:2728  \"_symbol\" */ 0x01)\n                        /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        let _16 := 32\n                        if eq(outOfPlaceEncoding_1, lt(length_1, _16))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr_5, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_5, _16), and(slotValue_1, not(255)))\n                            ret_3 := add(add(memPtr_5, shl(5, iszero(iszero(length_1)))), _16)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 18:2721:2728  \"_symbol\" */ 0x01)\n                            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                            let dataPos_1 := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                            let i_1 := _4\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, _16) }\n                            {\n                                mstore(add(add(memPtr_5, i_1), _16), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, /** @src 18:2721:2728  \"_symbol\" */ _15)\n                            }\n                            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                            ret_3 := add(add(memPtr_5, i_1), _16)\n                        }\n                        finalize_allocation(memPtr_5, sub(ret_3, memPtr_5))\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, _16)\n                        return(memPos_4, sub(abi_encode_string(memPtr_5, add(memPos_4, _16)), memPos_4))\n                    }\n                    case 0xa22cb465 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address()\n                        let value_2 := calldataload(36)\n                        let _17 := iszero(iszero(value_2))\n                        if iszero(eq(value_2, _17)) { revert(_4, _4) }\n                        let _18 := and(/** @src 18:12990:13007  \"owner != operator\" */ value0_1, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 18:12990:13007  \"owner != operator\" */ eq(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _18)\n                        {\n                            let memPtr_6 := mload(_2)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, _3), 32)\n                            mstore(add(memPtr_6, 36), 25)\n                            mstore(add(memPtr_6, 68), \"ERC721: approve to caller\")\n                            revert(memPtr_6, 100)\n                        }\n                        mstore(_4, /** @src 24:734:744  \"msg.sender\" */ caller())\n                        /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        mstore(32, /** @src 18:13047:13065  \"_operatorApprovals\" */ 0x05)\n                        /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        let _19 := keccak256(_4, _2)\n                        mstore(_4, _18)\n                        mstore(32, _19)\n                        let dataSlot := keccak256(_4, _2)\n                        let value_3 := and(sload(dataSlot), not(255))\n                        sstore(dataSlot, or(value_3, and(_17, 255)))\n                        /// @src 18:13108:13149  \"ApprovalForAll(owner, operator, approved)\"\n                        let _20 := /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(_2)\n                        mstore(_20, _17)\n                        /// @src 18:13108:13149  \"ApprovalForAll(owner, operator, approved)\"\n                        log3(_20, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 32, /** @src 18:13108:13149  \"ApprovalForAll(owner, operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 18:13108:13149  \"ApprovalForAll(owner, operator, approved)\" */ _18)\n                        /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        return(_4, _4)\n                    }\n                    case 0xb88d4fde {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address()\n                        let value1 := abi_decode_address_8501()\n                        let offset := calldataload(100)\n                        if gt(offset, 0xffffffffffffffff) { revert(_4, _4) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                        let _21 := calldataload(add(_3, offset))\n                        let _22 := array_allocation_size_bytes(_21)\n                        let memPtr_7 := mload(_2)\n                        finalize_allocation(memPtr_7, _22)\n                        mstore(memPtr_7, _21)\n                        if gt(add(add(offset, _21), 36), calldatasize()) { revert(_4, _4) }\n                        calldatacopy(add(memPtr_7, 32), add(offset, 36), _21)\n                        mstore(add(add(memPtr_7, _21), 32), _4)\n                        fun_safeTransferFrom(value0_2, value1, calldataload(68), memPtr_7)\n                        return(_4, _4)\n                    }\n                    case 0xc87b56dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        /// @src 18:2914:2921  \"tokenId\"\n                        fun_requireMinted(/** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ calldataload(_3))\n                        let memPtr_8 := mload(_2)\n                        finalize_allocation_10893(memPtr_8)\n                        mstore(memPtr_8, _4)\n                        let memPtr_9 := mload(_2)\n                        finalize_allocation_10893(memPtr_9)\n                        mstore(memPtr_9, _4)\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, 32)\n                        return(memPos_5, sub(abi_encode_string(memPtr_9, add(memPos_5, 32)), memPos_5))\n                    }\n                    case 0xe985e9c5 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address()\n                        let value1_1 := abi_decode_address_8501()\n                        let _23 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_3, _23))\n                        mstore(32, /** @src 18:4508:4526  \"_operatorApprovals\" */ 0x05)\n                        /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        let _24 := keccak256(_4, _2)\n                        mstore(_4, and(value1_1, _23))\n                        mstore(32, _24)\n                        let value_4 := and(sload(keccak256(_4, _2)), 0xff)\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, iszero(iszero(value_4)))\n                        return(memPos_6, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_8501() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function finalize_allocation_10893(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x20)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            /// @ast-id 2113 @src 18:3935:4102  \"function getApproved(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_getApproved(var_tokenId) -> var_\n            {\n                /// @src 18:4045:4052  \"tokenId\"\n                fun_requireMinted(var_tokenId)\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 18:4071:4086  \"_tokenApprovals\" */ 0x04)\n                /// @src 18:4064:4095  \"return _tokenApprovals[tokenId]\"\n                var_ := /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1))\n            }\n            function require_helper_stringliteral_12a8(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 45)\n                    mstore(add(memPtr, 68), \"ERC721: caller is not token owne\")\n                    mstore(add(memPtr, 100), \"r or approved\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_b08d(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"ERC721: invalid token ID\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 1984 @src 18:2190:2409  \"function ownerOf(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_ownerOf(var_tokenId) -> var\n            {\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 18:6794:6801  \"_owners\" */ 0x02)\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1))\n                /// @src 18:2324:2380  \"require(owner != address(0), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 18:2332:2351  \"owner != address(0)\" */ iszero(iszero(/** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ cleaned)))\n                /// @src 18:2390:2402  \"return owner\"\n                var := cleaned\n            }\n            /// @ast-id 2224 @src 18:5189:5465  \"function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {...\"\n            function fun_safeTransferFrom(var_from, var_to, var_tokenId, var_data_2203_mpos)\n            {\n                /// @src 18:5311:5410  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\")\"\n                require_helper_stringliteral_12a8(/** @src 18:5319:5360  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 18:5319:5360  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ var_tokenId))\n                /// @src 18:6458:6465  \"tokenId\"\n                fun_transfer(var_from, var_to, var_tokenId)\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if iszero(/** @src 18:6484:6531  \"_checkOnERC721Received(from, to, tokenId, data)\" */ fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_2203_mpos))\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    revert(memPtr, sub(abi_encode_stringliteral_1e76(add(memPtr, 4)), memPtr))\n                }\n            }\n            /// @ast-id 2661 @src 18:13240:13373  \"function _requireMinted(uint256 tokenId) internal view virtual {...\"\n            function fun_requireMinted(var_tokenId)\n            {\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 18:6794:6801  \"_owners\" */ 0x02)\n                /// @src 18:13313:13366  \"require(_exists(tokenId), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 18:7208:7239  \"_ownerOf(tokenId) != address(0)\" */ iszero(iszero(/** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1)))))\n            }\n            /// @ast-id 2318 @src 18:7404:7665  \"function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_isApprovedOrOwner(var_spender, var_tokenId) -> var\n            {\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 18:7570:7586  \"spender == owner\"\n                let _2 := /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 18:7529:7552  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 18:7570:7586  \"spender == owner\"\n                let _3 := /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 18:7570:7586  \"spender == owner\" */ var_spender, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 18:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                let expr := /** @src 18:7570:7586  \"spender == owner\" */ eq(_3, _2)\n                /// @src 18:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                if iszero(expr)\n                {\n                    /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _2)\n                    mstore(0x20, /** @src 18:4508:4526  \"_operatorApprovals\" */ 0x05)\n                    /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    let _4 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                    mstore(0x20, _4)\n                    /// @src 18:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                    expr := /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), 0xff)\n                }\n                /// @src 18:7570:7657  \"spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 18:7626:7657  \"getApproved(tokenId) == spender\" */ eq(/** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 18:7626:7646  \"getApproved(tokenId)\" */ fun_getApproved(var_tokenId), /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), /** @src 18:7626:7657  \"getApproved(tokenId) == spender\" */ _3)\n                }\n                /// @src 18:7562:7658  \"return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender)\"\n                var := expr_1\n            }\n            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function require_helper_stringliteral_277f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC721: transfer from incorrect \")\n                    mstore(add(memPtr, 100), \"owner\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 2591 @src 18:11257:12460  \"function _transfer(address from, address to, uint256 tokenId) internal virtual {...\"\n            function fun_transfer(var_from, var_to, var_tokenId)\n            {\n                /// @src 18:11354:11377  \"ERC721.ownerOf(tokenId)\"\n                let expr := fun_ownerOf(var_tokenId)\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 18:11354:11385  \"ERC721.ownerOf(tokenId) == from\"\n                let _2 := /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 18:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ var_from, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 18:11346:11427  \"require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\")\"\n                require_helper_stringliteral_277f(/** @src 18:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ eq(/** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 18:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ expr, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), /** @src 18:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ _2))\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _3 := and(/** @src 18:11445:11461  \"to != address(0)\" */ var_to, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                if /** @src 18:11445:11461  \"to != address(0)\" */ iszero(/** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC721: transfer to the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 18:11647:11728  \"require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\")\"\n                require_helper_stringliteral_277f(/** @src 18:11655:11686  \"ERC721.ownerOf(tokenId) == from\" */ eq(/** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 18:11655:11678  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), /** @src 18:11655:11686  \"ERC721.ownerOf(tokenId) == from\" */ _2))\n                /// @src 18:11459:11460  \"0\"\n                let _4 := 0x00\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src 18:11459:11460  \"0\" */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 18:11797:11812  \"_tokenApprovals\" */ 0x04)\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let dataSlot := keccak256(/** @src 18:11459:11460  \"0\" */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)\n                let _5 := shl(160, 0xffffffffffffffffffffffff)\n                sstore(dataSlot, and(sload(dataSlot), _5))\n                mstore(/** @src 18:11459:11460  \"0\" */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _2)\n                mstore(0x20, 3)\n                let dataSlot_1 := keccak256(/** @src 18:11459:11460  \"0\" */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)\n                sstore(dataSlot_1, add(sload(/** @src 18:12265:12285  \"_balances[from] -= 1\" */ dataSlot_1), /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ not(0)))\n                mstore(/** @src 18:11459:11460  \"0\" */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let dataSlot_2 := keccak256(/** @src 18:11459:11460  \"0\" */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)\n                sstore(dataSlot_2, add(sload(/** @src 18:12299:12317  \"_balances[to] += 1\" */ dataSlot_2), /** @src 18:12284:12285  \"1\" */ 0x01))\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src 18:11459:11460  \"0\" */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 18:12337:12344  \"_owners\" */ 0x02)\n                /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _6 := keccak256(/** @src 18:11459:11460  \"0\" */ _4, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)\n                sstore(_6, or(and(sload(_6), _5), _3))\n                /// @src 18:12374:12401  \"Transfer(from, to, tokenId)\"\n                log4(/** @src 18:11459:11460  \"0\" */ _4, _4, /** @src 18:12374:12401  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3, var_tokenId)\n            }\n            /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function abi_encode_stringliteral_1e76(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 50)\n                mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n                mstore(add(headStart, 96), \"ceiver implementer\")\n                tail := add(headStart, 128)\n            }\n            /// @ast-id 2723 @src 18:13925:14756  \"function _checkOnERC721Received(...\"\n            function fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_mpos) -> var\n            {\n                /// @src 18:14090:14750  \"if (to.isContract()) {...\"\n                switch /** @src 23:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 23:1702:1721  \"account.code.length\" */ extcodesize(var_to)))\n                case /** @src 18:14090:14750  \"if (to.isContract()) {...\" */ 0 {\n                    /// @src 18:14728:14739  \"return true\"\n                    var := /** @src 18:14735:14739  \"true\" */ 0x01\n                    /// @src 18:14728:14739  \"return true\"\n                    leave\n                }\n                default /// @src 18:14090:14750  \"if (to.isContract()) {...\"\n                {\n                    /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    let _1 := sub(shl(160, 1), 1)\n                    /// @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let _2 := /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(64)\n                    let _3 := shl(225, 0x0a85bd01)\n                    /// @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    mstore(_2, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                    mstore(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ add(_2, 4), /** @src 24:734:744  \"msg.sender\" */ caller())\n                    /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    mstore(add(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 36), and(var_from, _1))\n                    mstore(add(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 68), var_tokenId)\n                    mstore(add(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 100), 128)\n                    /// @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let _4 := 32\n                    let _5 := sub(/** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ abi_encode_string(var_data_mpos, add(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 132)), /** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2)\n                    /// @src -1:-1:-1\n                    let _6 := 0\n                    /// @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let trySuccessCondition := call(gas(), /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 18:14129:14148  \"IERC721Receiver(to)\" */ var_to, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), /** @src -1:-1:-1 */ _6, /** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, _5, _2, _4)\n                    let expr := /** @src -1:-1:-1 */ _6\n                    /// @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    if trySuccessCondition\n                    {\n                        let _7 := _4\n                        if gt(_4, returndatasize()) { _7 := returndatasize() }\n                        finalize_allocation(_2, _7)\n                        /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        if slt(sub(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ add(_2, _7), /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _2), /** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4)\n                        /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        {\n                            revert(/** @src -1:-1:-1 */ _6, _6)\n                        }\n                        /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        let value := mload(_2)\n                        if iszero(eq(value, and(value, shl(224, 0xffffffff))))\n                        {\n                            revert(/** @src -1:-1:-1 */ _6, _6)\n                        }\n                        /// @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                        expr := value\n                    }\n                    /// @src 18:14125:14698  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    switch iszero(trySuccessCondition)\n                    case 0 {\n                        /// @src 18:14243:14301  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        var := /** @src 18:14250:14301  \"retval == IERC721Receiver.onERC721Received.selector\" */ eq(/** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 18:14250:14301  \"retval == IERC721Receiver.onERC721Received.selector\" */ expr, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0xffffffff)), _3)\n                        /// @src 18:14243:14301  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        leave\n                    }\n                    default /// @src 18:14125:14698  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    {\n                        /// @src 18:14317:14698  \"catch (bytes memory reason) {...\"\n                        let data := /** @src -1:-1:-1 */ _6\n                        /// @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _8 := returndatasize()\n                            let _9 := array_allocation_size_bytes(_8)\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, _9)\n                            mstore(memPtr, _8)\n                            data := memPtr\n                            returndatacopy(add(memPtr, /** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4), /** @src -1:-1:-1 */ _6, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ returndatasize())\n                        }\n                        /// @src 18:14367:14380  \"reason.length\"\n                        let expr_1 := /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(/** @src 18:14367:14380  \"reason.length\" */ data)\n                        /// @src 18:14363:14684  \"if (reason.length == 0) {...\"\n                        switch /** @src 18:14367:14385  \"reason.length == 0\" */ iszero(expr_1)\n                        case /** @src 18:14363:14684  \"if (reason.length == 0) {...\" */ 0 {\n                            /// @src 18:14571:14666  \"assembly {...\"\n                            revert(add(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4, /** @src 18:14571:14666  \"assembly {...\" */ data), expr_1)\n                        }\n                        default /// @src 18:14363:14684  \"if (reason.length == 0) {...\"\n                        {\n                            /// @src 18:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            let _10 := /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(64)\n                            /// @src 18:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            mstore(_10, /** @src 18:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(229, 4594637))\n                            /// @src 18:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            revert(_10, sub(abi_encode_stringliteral_1e76(add(_10, /** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 4)), /** @src 18:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\" */ _10))\n                        }\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220d608237bb06441359a57d0376e08be85f5a2dff93b8ddadaf9ddbf290d649c8a64736f6c63430008180033\"\n    }\n}\n","hash":"0100024dea578b29b6c9686a1dd7d1c88cf16a4bdbe1257aece3e99aeb62c86f","factoryDependencies":{}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1864,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1866,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1870,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1874,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1878,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1884,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2915,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.5.0"},"storageLayout":{"storage":[],"types":null},"evm":{"assembly":"\t.text\n\t.file\t\"Address.sol:Address\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000c8eafad0dca690f0c2b4776bb106b9a1f8639541c31b0c65ae99944429bf002e"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 23:\"@openzeppelin/contracts/utils/Address.sol\"\nobject \"Address_3412\" {\n    code {\n        {\n            /// @src 23:194:9363  \"library Address {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Address_3412_deployed\")\n            codecopy(_1, dataoffset(\"Address_3412_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 23:\"@openzeppelin/contracts/utils/Address.sol\"\n    object \"Address_3412_deployed\" {\n        code {\n            {\n                /// @src 23:194:9363  \"library Address {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212201243145648cd8b803fe5ceffdc44383916f87fa04de808e27d5832dc3f384dcb64736f6c63430008180033\"\n    }\n}\n","hash":"010000078fa801b4e08e7889676323d71297fe3faa0be0087b2c1265db7a5c22","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.5.0"},"storageLayout":{"storage":[],"types":null},"evm":{"assembly":"\t.text\n\t.file\t\"Counters.sol:Counters\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000004fe5308c6b1ff53643a189b3ce3f138975ca266e6406f91c3dce894e6cef5a38"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 25:\"@openzeppelin/contracts/utils/Counters.sol\"\nobject \"Counters_3516\" {\n    code {\n        {\n            /// @src 25:424:1395  \"library Counters {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Counters_3516_deployed\")\n            codecopy(_1, dataoffset(\"Counters_3516_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 25:\"@openzeppelin/contracts/utils/Counters.sol\"\n    object \"Counters_3516_deployed\" {\n        code {\n            {\n                /// @src 25:424:1395  \"library Counters {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220df48de7a7f88e8f290a521ece32963ec722ad56e17417a8a26eb7f8cf81738ce64736f6c63430008180033\"\n    }\n}\n","hash":"01000007cebb4640910541de977d1663f82c16166fc662513040af1440ee2274","factoryDependencies":{}}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.5.0"},"storageLayout":{"storage":[],"types":null},"evm":{"assembly":"\t.text\n\t.file\t\"ShortStrings.sol:ShortStrings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000004d955a62d7d30e64a04eab04b327a11f9a4744efcaaea688193764f70914aec1"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 26:\"@openzeppelin/contracts/utils/ShortStrings.sol\"\nobject \"ShortStrings_3732\" {\n    code {\n        {\n            /// @src 26:1235:4285  \"library ShortStrings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ShortStrings_3732_deployed\")\n            codecopy(_1, dataoffset(\"ShortStrings_3732_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 26:\"@openzeppelin/contracts/utils/ShortStrings.sol\"\n    object \"ShortStrings_3732_deployed\" {\n        code {\n            {\n                /// @src 26:1235:4285  \"library ShortStrings {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220b06bd7f1d8580a3c5688d366323b1e3f031172296296755acb2e19f1d46ed7ce64736f6c63430008180033\"\n    }\n}\n","hash":"01000007342f8036c10d417ed601666a2f8708a946e539dc740d3e8d12dcc7a8","factoryDependencies":{}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.5.0"},"storageLayout":{"storage":[],"types":null},"evm":{"assembly":"\t.text\n\t.file\t\"StorageSlot.sol:StorageSlot\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000fadd1c02c0b24a9f424e6406fb9cf486516c4477f8539e8e02d152790291a2df"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 27:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\nobject \"StorageSlot_3842\" {\n    code {\n        {\n            /// @src 27:1420:4105  \"library StorageSlot {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"StorageSlot_3842_deployed\")\n            codecopy(_1, dataoffset(\"StorageSlot_3842_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 27:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\n    object \"StorageSlot_3842_deployed\" {\n        code {\n            {\n                /// @src 27:1420:4105  \"library StorageSlot {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212205f3708a74a9dcc9da317e0cea2d3688f97851096172e3ac9662d991eebabc3a864736f6c63430008180033\"\n    }\n}\n","hash":"0100000782492b5dedd9ea30dc40ea7e785abfe871036bd880f7ba52c1cc7634","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.5.0"},"storageLayout":{"storage":[],"types":null},"evm":{"assembly":"\t.text\n\t.file\t\"Strings.sol:Strings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000e1654f44365c3ecd24462fc23c640ada8a794bd9a86081acc92a3e6da2eee5d6"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 28:\"@openzeppelin/contracts/utils/Strings.sol\"\nobject \"Strings_4071\" {\n    code {\n        {\n            /// @src 28:220:2779  \"library Strings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Strings_4071_deployed\")\n            codecopy(_1, dataoffset(\"Strings_4071_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 28:\"@openzeppelin/contracts/utils/Strings.sol\"\n    object \"Strings_4071_deployed\" {\n        code {\n            {\n                /// @src 28:220:2779  \"library Strings {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220edc18ed8abbd60d9b3d1ddeb1fa50f5a827cf75114ca33451fa4a524402c77a164736f6c63430008180033\"\n    }\n}\n","hash":"01000007de5507784385e3ce7e625bd055d032959f26c8af9fb9af0804d9dbee","factoryDependencies":{}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.5.0"},"storageLayout":{"storage":[],"types":null},"evm":{"assembly":"\t.text\n\t.file\t\"ECDSA.sol:ECDSA\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000009cf4da67c440f5593c95d06511f38a54c474fe1deae316ab01923d465d776ec"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 29:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\nobject \"ECDSA_4437\" {\n    code {\n        {\n            /// @src 29:369:9130  \"library ECDSA {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ECDSA_4437_deployed\")\n            codecopy(_1, dataoffset(\"ECDSA_4437_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 29:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\n    object \"ECDSA_4437_deployed\" {\n        code {\n            {\n                /// @src 29:369:9130  \"library ECDSA {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212208e51cc13650076e713861714b0fca3f39b1f0b434ba534beb9b3fefd94876dea64736f6c63430008180033\"\n    }\n}\n","hash":"0100000796f0301222dccb229af40dd09711126274069208bc84fcdbc262b6dd","factoryDependencies":{}}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":4470,"contract":"@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712","label":"_nameFallback","offset":0,"slot":"0","type":"t_string_storage"},{"astId":4472,"contract":"@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712","label":"_versionFallback","offset":0,"slot":"1","type":"t_string_storage"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"}}},"evm":{"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"irOptimized":""}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.5.0"},"storageLayout":{"storage":[],"types":null},"evm":{"assembly":"\t.text\n\t.file\t\"Math.sol:Math\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000d594a81e2a9ebb8a396057a62813a4b03793ef70d87afc7a147086ebe7d51d78"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 33:\"@openzeppelin/contracts/utils/math/Math.sol\"\nobject \"Math_5543\" {\n    code {\n        {\n            /// @src 33:202:12784  \"library Math {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Math_5543_deployed\")\n            codecopy(_1, dataoffset(\"Math_5543_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 33:\"@openzeppelin/contracts/utils/math/Math.sol\"\n    object \"Math_5543_deployed\" {\n        code {\n            {\n                /// @src 33:202:12784  \"library Math {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212206889ecb9eff5a70b51621d1d3f800a04336368b1ebff8b15cf9723dba11a1c6c64736f6c63430008180033\"\n    }\n}\n","hash":"01000007eb1a947dcaca5b3b4841f937efe9c17e0a3220cbffcb04ee6a30ccc0","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.5.0"},"storageLayout":{"storage":[],"types":null},"evm":{"assembly":"\t.text\n\t.file\t\"SignedMath.sol:SignedMath\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000e175f0f1c9d882aa7b5204a87817aba25d8403908d81347aeda60a4b262ba4b0"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 34:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\nobject \"SignedMath_5648\" {\n    code {\n        {\n            /// @src 34:215:1262  \"library SignedMath {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SignedMath_5648_deployed\")\n            codecopy(_1, dataoffset(\"SignedMath_5648_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 34:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\n    object \"SignedMath_5648_deployed\" {\n        code {\n            {\n                /// @src 34:215:1262  \"library SignedMath {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e498b531ed739ff42c6d5fe7d49e45d3b29ed5962d909d5609b3dab6bb1080e864736f6c63430008180033\"\n    }\n}\n","hash":"01000007a352fd50e5a2294ad96ba8b58609684b890bf31b5c4bc1860cb882d9","factoryDependencies":{}}},"contracts/Jury.sol":{"Jury":{"abi":[{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"JuryHasBeenCreated","type":"error"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"NotYetDue","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"winOption","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"CreateProposalJury","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"Fail","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"Success","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"winOptionId","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"create","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposald","type":"uint256"}],"name":"deleteById","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getDetail","outputs":[{"internalType":"address[]","name":"jurors","type":"address[]"},{"internalType":"uint256[]","name":"optionId","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"handleResult","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"impleAddr","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_proposalAddr","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"juryInfos","outputs":[{"internalType":"uint256","name":"winOptionId","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalAddr","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_proposalAddr","type":"address"}],"name":"setNewProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"optionId","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"JuryHasBeenCreated\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"NotYetDue\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winOption\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"CreateProposalJury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"Fail\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"Success\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winOptionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposald\",\"type\":\"uint256\"}],\"name\":\"deleteById\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getDetail\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"jurors\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"optionId\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"handleResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"impleAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proposalAddr\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"juryInfos\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winOptionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proposalAddr\",\"type\":\"address\"}],\"name\":\"setNewProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Jury.sol\":\"Jury\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca\",\"dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/Jury.sol\":{\"keccak256\":\"0x8eb1467c57dcaefcfb377ff33294c6433a7605091ca89a206475252ca1569fba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d73deb190b6cfe9d6c3f43c47e9b42dbc052967531b141f08f1b0fc791512823\",\"dweb:/ipfs/QmeZs9btpUQ8f4VKGSfqP2jZwrF1cn3kYHvaSuEbJVSGD2\"]},\"contracts/JuryNFTSwap.sol\":{\"keccak256\":\"0x30f17ce2fd1bf215d752c2da3b56ecb5558c26b60370c435688c34ae5ad1cf9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b90a2ac87d41e18ad2d462e56bd7ce6c95eeb9066501fd3e9be0c50526c86241\",\"dweb:/ipfs/QmQb2pBACQGLi7R5sUnefPRBhNCsYMYqQqJjXgyfjj8rsy\"]},\"contracts/MelonNFT.sol\":{\"keccak256\":\"0xab0b61c4ab90e62fafb8e658d23f801ee5f60e939c96ccfac65eac03b13e5622\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://016a5b35b4dc4e928312d1a9e28a9f6adb42a3d0c0cd6111b721f380c05b731a\",\"dweb:/ipfs/QmfX54cjitDyt6zwAfPPpVhRdFPWiSMBtvWRZRuG2gYtaf\"]},\"contracts/MelonToken.sol\":{\"keccak256\":\"0x0ea0df6c42e73bc65fd935a40ed9f23fed8d45aaaee85e37f205bfde2e921483\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4ab1aa07c0665f5e86d6218675001cb634f3ae692ad771a54ecfee04291fcd4\",\"dweb:/ipfs/QmYeZkZXgwSPWhEzx9S8rGCoGupQ2M4hAvxQc6sEUxPTqy\"]},\"contracts/Pledge.sol\":{\"keccak256\":\"0xcff21b4a553e8efb54746a7856f74e1a1fb95ba88750755064026579e4b9a225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e279646fd2aeb61d64fa967c5d1dc6d3c0dfa00a881ad89cfbff235e8a67550\",\"dweb:/ipfs/Qmeu81CZrHfZsydC96i98zSU2U8356gBMGeDeuhofiJDRH\"]},\"contracts/Proposal.sol\":{\"keccak256\":\"0xa3cdd02b298ba5f3bb6698fcaf01314309a5f2b65f30e82ed922bb4b459d6d71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef309cc333fb21ca6e6bdc6176dfacd520cc8ecdca45f0f4a6df286071b0a9e7\",\"dweb:/ipfs/QmcvdFBzabE9J13mMkmLtM3U7MuUNoN3MbJTJcDy7zeoGr\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.5.0"},"storageLayout":{"storage":[{"astId":517,"contract":"contracts/Jury.sol:Jury","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":520,"contract":"contracts/Jury.sol:Jury","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":5673,"contract":"contracts/Jury.sol:Jury","label":"proposalAddr","offset":2,"slot":"0","type":"t_address"},{"astId":5675,"contract":"contracts/Jury.sol:Jury","label":"impleAddr","offset":0,"slot":"1","type":"t_address"},{"astId":5680,"contract":"contracts/Jury.sol:Jury","label":"juryInfos","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_struct(JuryInfo)5666_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Selection)5671_storage)dyn_storage":{"base":"t_struct(Selection)5671_storage","encoding":"dynamic_array","label":"struct Jury.Selection[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_uint256,t_struct(JuryInfo)5666_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Jury.JuryInfo)","numberOfBytes":"32","value":"t_struct(JuryInfo)5666_storage"},"t_struct(JuryInfo)5666_storage":{"encoding":"inplace","label":"struct Jury.JuryInfo","members":[{"astId":5659,"contract":"contracts/Jury.sol:Jury","label":"winOptionId","offset":0,"slot":"0","type":"t_uint256"},{"astId":5663,"contract":"contracts/Jury.sol:Jury","label":"selections","offset":0,"slot":"1","type":"t_array(t_struct(Selection)5671_storage)dyn_storage"},{"astId":5665,"contract":"contracts/Jury.sol:Jury","label":"deadline","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(Selection)5671_storage":{"encoding":"inplace","label":"struct Jury.Selection","members":[{"astId":5668,"contract":"contracts/Jury.sol:Jury","label":"juror","offset":0,"slot":"0","type":"t_address"},{"astId":5670,"contract":"contracts/Jury.sol:Jury","label":"optionId","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"evm":{"assembly":"\t.text\n\t.file\t\"Jury.sol:Jury\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[16 + r0]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t@CPI0_0[0], r4, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r4, stack[@calldatasize]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r4\n\tjump.lt\t@.BB0_2\n\tld\tr1, r4\n\tshr.s\t224, r4, r4\n\tsub.s!\t@CPI0_2[0], r4, r5\n\tjump.le\t@.BB0_6\n\tsub.s!\t@CPI0_3[0], r4, r5\n\tjump.le\t@.BB0_14\n\tsub.s!\t@CPI0_4[0], r4, r5\n\tjump.gt\t@.BB0_20\n\tsub.s!\t@CPI0_7[0], r4, r5\n\tjump.eq\t@.BB0_183\n\tsub.s!\t@CPI0_8[0], r4, r4\n\tjump.ne\t@.BB0_2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_19[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tcontext.sp\tr6\n\tsub.s\t12, r6, r6\n\tshl.s\t5, r6, r6\n\tsload\tr0, r4\n\tand!\t65280, r4, r5\n\tjump.ne\t@.BB0_255\n\tcontext.sp\tr6\n\tsub.s\t11, r6, r6\n\tshl.s\t5, r6, r6\n\tand!\t255, r4, r1\n\tjump.ne\t@.BB0_255\n.BB0_263:\n\tand\t@CPI0_34[0], r4, r1\n\tshl.s\t16, r3, r3\n\tand\t@CPI0_33[0], r3, r3\n\tor\tr3, r1, r1\n\tor\t1, r1, r1\n\tsstore\tr0, r1\n\tadd\t1, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_35[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_36[0], r0, r4\n\tjump\t@.BB0_235\n.BB0_1:\n\tadd\t160, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.this\tr1\n\tst.1\t128, r1\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tadd\t1, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_6:\n\tsub.s!\t@CPI0_12[0], r4, r2\n\tjump.gt\t@.BB0_10\n\tsub.s!\t@CPI0_16[0], r4, r2\n\tjump.eq\t@.BB0_22\n\tsub.s!\t@CPI0_17[0], r4, r2\n\tjump.eq\t@.BB0_25\n\tsub.s!\t@CPI0_18[0], r4, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r4\n\tsstore\tr4, r0\n\tadd\t1, r4, r1\n\tsload\tr1, r3\n\tsstore\tr1, r0\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_95\n.BB0_96:\n\tadd\t2, r4, r1\n\tsstore\tr1, r0\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tsub.s!\t@CPI0_9[0], r4, r2\n\tjump.eq\t@.BB0_170\n\tsub.s!\t@CPI0_10[0], r4, r2\n\tjump.eq\t@.BB0_175\n\tsub.s!\t@CPI0_11[0], r4, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t2, r1, r2\n\tsload\tr2, r2\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tst.1\t160, r2\n\tadd\t@CPI0_49[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_10:\n\tsub.s!\t@CPI0_13[0], r4, r2\n\tjump.eq\t@.BB0_102\n\tsub.s!\t@CPI0_14[0], r4, r2\n\tjump.eq\t@.BB0_156\n\tsub.s!\t@CPI0_15[0], r4, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getDetail, @DEFAULT_UNWIND\n\tadd\t64, r0, r4\n\tld.1\t64, r3\n\tst.1.inc\tr3, r4, r4\n\tld.1\tr1, r6\n\tadd\t64, r3, r5\n\tst.1\tr5, r6\n\tadd\t96, r3, r5\n\tsub!\tr6, r0, r7\n\tjump.eq\t@.BB0_166\n\tadd\tr0, r0, r7\n.BB0_165:\n\tadd\t32, r1, r1\n\tld.1\tr1, r8\n\tand\t@CPI0_19[0], r8, r8\n\tst.1.inc\tr5, r8, r5\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_165\n.BB0_166:\n\tsub\tr5, r3, r1\n\tst.1\tr4, r1\n\tld.1\tr2, r4\n\tst.1.inc\tr5, r4, r1\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_169\n\tadd\tr0, r0, r5\n.BB0_168:\n\tadd\t32, r2, r2\n\tld.1\tr2, r6\n\tst.1.inc\tr1, r6, r1\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_168\n.BB0_169:\n\tsub\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_20:\n\tsub.s!\t@CPI0_5[0], r4, r2\n\tjump.eq\t@.BB0_264\n\tsub.s!\t@CPI0_6[0], r4, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tshr.s\t16, r1, r1\n\tjump\t@.BB0_24\n.BB0_183:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r5\n\tadd\t1, r5, r1\n\tsload\tr1, r7\n\tsub.s!\t@CPI0_37[0], r7, r2\n\tjump.gt\t@.BB0_36\n\tshl.s\t5, r7, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_38[0], r2, r2\n\tld.1\t64, r6\n\tadd\tr6, r2, r2\n\tsub!\tr2, r6, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_37[0], r2, r4\n\tjump.gt\t@.BB0_36\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_36\n\tadd\tr5, r0, stack-[7]\n\tst.1\t64, r2\n\tadd\tr6, r0, stack-[9]\n\tst.1.inc\tr6, r7, r2\n\tadd\tr2, r0, stack-[6]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_35[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr7, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r7\n\tsub!\tr7, r0, r2\n\tadd\tstack-[9], r0, r3\n\tjump.eq\t@.BB0_194\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_192:\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_39[0], r4, r5\n\tjump.gt\t@.BB0_36\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tsload\tr1, r5\n\tand\t@CPI0_19[0], r5, r5\n\tst.1.inc\tr4, r5, r5\n\tadd\t1, r1, r6\n\tsload\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t2, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r7, r4\n\tjump.lt\t@.BB0_192\n.BB0_194:\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r5\n\tld.1\t64, r6\n\tsub.s!\t@CPI0_40[0], r6, r1\n\tjump.gt\t@.BB0_36\n\tadd\t96, r6, r1\n\tst.1\t64, r1\n\tsload\tr5, r1\n\tst.1.inc\tr6, r1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t1, r5, r1\n\tsload\tr1, r7\n\tsub.s!\t@CPI0_37[0], r7, r2\n\tjump.gt\t@.BB0_36\n\tshl.s\t5, r7, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_38[0], r2, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[5]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_37[0], r2, r4\n\tjump.gt\t@.BB0_36\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_36\n\tadd\tr6, r0, stack-[3]\n\tadd\tr5, r0, stack-[4]\n\tst.1\t64, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tr7, r0, stack-[2]\n\tst.1.inc\tr2, r7, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_35[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[2], r0, r9\n\tsub!\tr9, r0, r2\n\tadd\tstack-[4], r0, r7\n\tadd\tstack-[3], r0, r8\n\tjump.eq\t@.BB0_204\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n\tadd\tstack-[5], r0, r3\n.BB0_202:\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_39[0], r4, r5\n\tjump.gt\t@.BB0_36\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tsload\tr1, r5\n\tand\t@CPI0_19[0], r5, r5\n\tst.1.inc\tr4, r5, r5\n\tadd\t1, r1, r6\n\tsload\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t2, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r9, r4\n\tjump.lt\t@.BB0_202\n.BB0_204:\n\tadd\tstack-[5], r0, r3\n\tadd\tstack-[8], r0, r1\n\tst.1\tr1, r3\n\tadd\t64, r8, r1\n\tadd\t2, r7, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tld.1\tr3, r1\n\tsub.s!\t@CPI0_37[0], r1, r2\n\tjump.gt\t@.BB0_36\n\tshl.s\t5, r1, r4\n\tadd\t63, r4, r2\n\tand\t@CPI0_38[0], r2, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[8]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_37[0], r2, r5\n\tjump.gt\t@.BB0_36\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_36\n\tst.1\t64, r2\n\tadd\tstack-[8], r0, r2\n\tst.1.inc\tr2, r1, r1\n\tand\t31, r4, r2\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_210\n\tshl.s\t5, r4, r4\n\tadd\tr1, r4, r4\n\tptr.add\tr3, r0, r5\n\tadd\tr1, r0, r6\n.BB0_209:\n\tld.inc\tr5, r7, r5\n\tst.1.inc\tr6, r7, r6\n\tsub!\tr6, r4, r7\n\tjump.ne\t@.BB0_209\n.BB0_210:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_212\n.BB0_212:\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r4\n\tsub.s!\t@CPI0_37[0], r4, r2\n\tjump.gt\t@.BB0_36\n\tshl.s\t5, r4, r6\n\tadd\t63, r6, r2\n\tand\t@CPI0_38[0], r2, r5\n\tld.1\t64, r2\n\tadd\tr2, r5, r5\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_37[0], r5, r8\n\tjump.gt\t@.BB0_36\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_36\n\tst.1\t64, r5\n\tst.1.inc\tr2, r4, r4\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_218\n\tshl.s\t5, r6, r6\n\tadd\tr4, r6, r6\n\tadd\tr4, r0, r7\n.BB0_217:\n\tld.inc\tr3, r8, r3\n\tst.1.inc\tr7, r8, r7\n\tsub!\tr7, r6, r8\n\tjump.ne\t@.BB0_217\n.BB0_218:\n\tsub!\tr5, r0, r3\n\tjump.eq\t@.BB0_220\n.BB0_220:\n\tadd\tstack-[5], r0, r10\n\tld.1\tr10, r3\n\tsub!\tr3, r0, r3\n\tadd\tstack-[8], r0, r9\n\tadd\tstack-[1], r0, r11\n\tjump.eq\t@.BB0_226\n\tadd\tr0, r0, r3\n.BB0_222:\n\tld.1\tr9, r5\n\tsub!\tr5, r3, r5\n\tjump.le\t@.BB0_223\n\tshl.s\t5, r3, r5\n\tadd\tr5, r1, r7\n\tadd\tr11, r5, r6\n\tld.1\tr6, r6\n\tld.1.inc\tr6, r8, r6\n\tand\t@CPI0_19[0], r8, r8\n\tst.1\tr7, r8\n\tld.1\tr2, r7\n\tsub!\tr7, r3, r7\n\tjump.le\t@.BB0_223\n\tadd\tr5, r4, r5\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tld.1\tr10, r5\n\tsub!\tr3, r5, r5\n\tjump.lt\t@.BB0_222\n.BB0_226:\n\tadd\tstack-[7], r0, r1\n\tadd\t2, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\t@CPI0_42[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_43[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_29\n\tld\tr1, r1\n\tsub!\tstack-[5], r1, r1\n\tjump.le\t@.BB0_229\n\tld.1\t64, r1\n\tadd\t36, r1, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_47[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[10], r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_22:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n.BB0_24:\n\tand\t@CPI0_19[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_25:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr2, r0, stack-[10]\n\tadd\t@CPI0_52[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_29\n\tld\tr1, r1\n\tand\t@CPI0_19[0], r1, r1\n\tcontext.this\tr2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_33\n.BB0_31:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_79[0], r0, r3\n\tjump\t@.BB0_32\n.BB0_170:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r2\n\tand\t@CPI0_51[0], r2, r2\n\tshl.s\t16, r1, r1\n\tand\t@CPI0_33[0], r1, r1\n\tor\tr2, r1, r1\n\tsstore\tr0, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_175:\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t192, r0, r2\n\tst.1\t64, r2\n\tcontext.caller\tr2\n\tst.1\t128, r2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tst.1\t160, r2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r3\n\tsub.s!\t@CPI0_37[0], r3, r2\n\tjump.gt\t@.BB0_36\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r1\n\tadd\tr3, r0, stack-[10]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r2\n\tshl.s\t1, r2, r2\n\tadd\tr1, r2, r1\n\tsload\tr1, r2\n\tand\t@CPI0_50[0], r2, r2\n\tld.1\t128, r3\n\tand\t@CPI0_19[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t1, r1, r1\n\tld.1\t160, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_102:\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r8\n\tsub.s!\t@CPI0_19[0], r8, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_37[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_2\n\tadd\t4, r4, r5\n\tptr.add\tr1, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_37[0], r2, r6\n\tjump.gt\t@.BB0_36\n\tadd\t31, r2, r6\n\tand\t@CPI0_80[0], r6, r6\n\tadd\t63, r6, r6\n\tand\t@CPI0_80[0], r6, r6\n\tsub.s!\t@CPI0_58[0], r6, r7\n\tjump.gt\t@.BB0_36\n\tadd\t128, r6, r6\n\tst.1\t64, r6\n\tst.1\t128, r2\n\tadd\tr4, r2, r4\n\tadd\t36, r4, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\tr8, r0, stack-[10]\n\tadd\t32, r5, r3\n\tptr.add\tr1, r3, r1\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r4\n\tshl.s\t5, r4, r4\n\tjump.eq\t@.BB0_112\n\tadd\t160, r0, r5\n\tadd\t160, r4, r6\n\tptr.add\tr1, r0, r7\n.BB0_111:\n\tld.inc\tr7, r8, r7\n\tst.1.inc\tr5, r8, r5\n\tsub!\tr5, r6, r8\n\tjump.ne\t@.BB0_111\n.BB0_112:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_114\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r3, r3\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_114:\n\tadd\t160, r2, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_52[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_29\n\tld\tr1, r1\n\tand\t@CPI0_19[0], r1, r1\n\tcontext.this\tr2\n\tsub!\tr2, r1, r2\n\tjump.eq\t@.BB0_31\n\tadd\t@CPI0_56[0], r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_19[0], r2, r2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_34\n\tadd\t1, r0, r3\n\tsload\tr3, r1\n\tand\t@CPI0_50[0], r1, r1\n\tor\tstack-[10], r1, r1\n\tadd\tr3, r0, stack-[8]\n\tsstore\tr3, r1\n\tadd\t@CPI0_59[0], r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_154\n\tld.1\t64, r2\n\tadd\t@CPI0_60[0], r0, r1\n\tadd\tr2, r0, stack-[9]\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[7]\n\tcontext.gas_left\tr1\n\tadd\tstack-[10], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_120\n\tcontext.sp\tr5\n\tsub.s\t14, r5, r5\n\tshl.s\t5, r5, r5\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_126\n.BB0_156:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_52[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_29\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld\tr1, r1\n\tand\t@CPI0_19[0], r1, r1\n\tcontext.this\tr4\n\tsub!\tr4, r1, r1\n\tjump.ne\t@.BB0_159\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr3, r1\n\tor\t@CPI0_57[0], r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_264:\n\tsub.s!\t100, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[9]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r3\n\tld\tr1, r1\n\tadd\t2, r1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_268\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r3\n\tsstore\tr1, r3\n\tadd\t2, r1, r1\n\tadd\tstack-[8], r0, r4\n\tsstore\tr1, r4\n\tld.1\t64, r1\n\tadd\t64, r1, r2\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_25[0], r0, r4\n.BB0_235:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_39:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_255:\n\tadd\tr6, r0, stack-[10]\n\tadd\tr5, r0, stack-[8]\n\tadd\tr4, r0, stack-[9]\n\tadd\tr3, r0, stack-[7]\n\tadd\t@CPI0_26[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_29\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_257\n\tadd\tstack-[9], r0, r4\n\tand\t255, r4, r1\n\tsub.s!\t1, r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tadd\tstack-[10], r0, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r0, stack[r2]\n\tjump.ne\t@.BB0_259\n\tsub!\tstack-[8], r0, r1\n\tjump.ne\t@.BB0_262\n\tld.1\t64, r2\n\tadd\tstack-[7], r0, r3\n\tjump\t@.BB0_263\n.BB0_95:\n\tsub.s!\t@CPI0_69[0], r3, r2\n\tjump.le\t@.BB0_98\n\tadd\t@CPI0_41[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_159:\n\tadd\t100, r3, r1\n\tadd\t@CPI0_54[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t68, r3, r1\n\tadd\t@CPI0_55[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r3, r1\n\tadd\t56, r0, r4\n\tst.1\tr1, r4\n\tadd\t@CPI0_30[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tor\t@CPI0_31[0], r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_268:\n\tld.1\t64, r1\n\tadd\t@CPI0_22[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_33:\n\tadd\t@CPI0_56[0], r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_19[0], r2, r2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_34\n\tadd\t1, r0, r6\n\tsload\tr6, r1\n\tand\t@CPI0_50[0], r1, r1\n\tadd\tstack-[10], r0, r2\n\tor\tr1, r2, r1\n\tsstore\tr6, r1\n\tld.1\t64, r7\n\tsub.s!\t@CPI0_72[0], r7, r1\n\tjump.lt\t@.BB0_38\n.BB0_36:\n\tadd\t@CPI0_41[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_98:\n\tadd\tr3, r0, stack-[9]\n\tadd\tr4, r0, stack-[10]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_35[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[10], r0, r4\n\tjump.ge\t@.BB0_96\n.BB0_101:\n\tsstore\tr1, r0\n\tadd\t1, r1, r3\n\tsstore\tr3, r0\n\tadd\t2, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_101\n\tjump\t@.BB0_96\n.BB0_257:\n\tadd\tstack-[10], r0, r1\n\tshr.s\t5, r1, r1\n\tadd\t0, r0, stack[r1]\n.BB0_259:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_28[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_29[0], r0, r3\n.BB0_58:\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tjump\t@.BB0_59\n.BB0_34:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_70[0], r0, r3\n.BB0_32:\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_71[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t44, r0, r3\n.BB0_59:\n\tst.1\tr2, r3\n\tadd\t@CPI0_30[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_38:\n\tadd\t32, r7, r3\n\tst.1\t64, r3\n\tst.1\tr7, r0\n\tadd\t@CPI0_59[0], r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_87\n\tadd\tr3, r0, stack-[6]\n\tld.1\t64, r9\n\tadd\t@CPI0_60[0], r0, r1\n\tst.1.inc\tr9, r1, r1\n\tadd\tr1, r0, stack-[9]\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_42\n\tcontext.sp\tr5\n\tsub.s\t16, r5, r5\n\tshl.s\t5, r5, r5\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_48\n.BB0_262:\n\tand\t@CPI0_32[0], r4, r1\n\tadd\tstack-[7], r0, r2\n\tshl.s\t16, r2, r2\n\tand\t@CPI0_33[0], r2, r2\n\tor\tr2, r1, r1\n\tor\t1, r1, r1\n\tsstore\tr0, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_87:\n\tadd\t@CPI0_26[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_29\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_89\n.BB0_55:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_77[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_78[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tjump\t@.BB0_59\n.BB0_42:\n\tadd\tr7, r0, stack-[8]\n\tsub.s!\t@CPI0_0[0], r9, r3\n\tadd\tr9, r0, stack-[7]\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r4, r1\n\tor\t@CPI0_61[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[9], r0, r10\n\tjump.eq\t@.BB0_45\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[7], r0, r8\n.BB0_44:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB0_44\n.BB0_45:\n\tsub!\tr5, r0, r7\n\tadd\tstack-[7], r0, r9\n\tjump.eq\t@.BB0_47\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr9, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_47:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr5\n\tsub.s\t15, r5, r5\n\tshl.s\t5, r5, r5\n\tand!\t1, r2, r1\n\tadd\t1, r0, r6\n\tadd\tstack-[8], r0, r7\n\tjump.eq\t@.BB0_57\n.BB0_48:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr9, r0, r8\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_37[0], r1, r4\n\tjump.gt\t@.BB0_36\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_36\n\tadd\tr7, r0, stack-[8]\n\tadd\tr6, r0, stack-[9]\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.ge\t@.BB0_51\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_51:\n\tld.1\tr8, r2\n\tshr.s\t5, r5, r3\n\tadd\tr2, r0, stack[r3]\n\tsub.s!\t@CPI0_56[0], r2, r2\n\tjump.ne\t@.BB0_52\n\tadd\t@CPI0_26[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_29\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_55\n\tadd\t@CPI0_56[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_50[0], r2, r2\n\tor\tstack-[10], r2, r2\n\tadd\tstack-[10], r0, r5\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_65[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_39\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tsub.s!\t@CPI0_40[0], r1, r1\n\tadd\tstack-[8], r0, r4\n\tjump.gt\t@.BB0_36\n\tadd\tstack-[7], r0, r5\n\tadd\t96, r5, r1\n\tst.1\t64, r1\n\tadd\t64, r5, r1\n\tadd\t@CPI0_66[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t39, r0, r1\n\tst.1.inc\tr5, r1, r2\n\tadd\t@CPI0_67[0], r0, r1\n\tadd\tr2, r0, stack-[5]\n\tst.1\tr2, r1\n\tld.1\tr4, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_64\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_65\n.BB0_154:\n\tadd\t@CPI0_26[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_29\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_55\n.BB0_89:\n\tadd\t@CPI0_56[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_50[0], r2, r2\n\tor\tstack-[10], r2, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_120:\n\tadd\tstack-[9], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[7], r0, r10\n\tjump.eq\t@.BB0_123\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[9], r0, r8\n.BB0_122:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB0_122\n.BB0_123:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_125\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[9], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_125:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr5\n\tsub.s\t13, r5, r5\n\tshl.s\t5, r5, r5\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_57\n.BB0_126:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[9], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_37[0], r1, r4\n\tjump.gt\t@.BB0_36\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_36\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tshr.s\t5, r5, r3\n\tadd\tr2, r0, stack[r3]\n\tsub.s!\t@CPI0_56[0], r2, r2\n\tjump.ne\t@.BB0_52\n\tadd\t@CPI0_26[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_29\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_55\n\tadd\t@CPI0_56[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_50[0], r2, r2\n\tor\tstack-[10], r2, r2\n\tadd\tstack-[10], r0, r5\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_65[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_40[0], r1, r1\n\tjump.gt\t@.BB0_36\n\tadd\tstack-[9], r0, r4\n\tadd\t96, r4, r1\n\tst.1\t64, r1\n\tadd\t64, r4, r1\n\tadd\t@CPI0_66[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t39, r0, r1\n\tst.1.inc\tr4, r1, r2\n\tadd\t@CPI0_67[0], r0, r1\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r1\n\tld.1\t128, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_136\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_137\n.BB0_57:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_73[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_74[0], r0, r3\n\tjump\t@.BB0_58\n.BB0_52:\n\tadd\t100, r1, r2\n\tadd\t@CPI0_62[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_63[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tjump\t@.BB0_59\n.BB0_223:\n\tadd\t@CPI0_41[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_64:\n\tadd\tstack-[6], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t64, r4, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tand\t1, r2, stack-[9]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_65:\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_79\n\tadd\t96, r0, r1\n\tadd\t128, r0, r2\n.BB0_67:\n\tld.1\tr1, r1\n\tsub!\tstack-[9], r0, r3\n\tjump.ne\t@.BB0_74\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_73\n\tld.1\t64, r1\n\tadd\t@CPI0_30[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tadd\t68, r1, r3\n\tsub!\tr2, r0, r4\n\tadd\tstack-[5], r0, r7\n\tjump.eq\t@.BB0_72\n\tadd\tr0, r0, r4\n.BB0_71:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_71\n.BB0_72:\n\tadd\t31, r2, r4\n\tand\t@CPI0_80[0], r4, r4\n\tadd\tr2, r3, r2\n\tst.1\tr2, r0\n\tadd\t68, r4, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_79:\n\tsub.s!\t@CPI0_37[0], r3, r1\n\tjump.gt\t@.BB0_36\n\tadd\t31, r3, r1\n\tand\t@CPI0_80[0], r1, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_80[0], r1, r2\n\tld.1\t64, r1\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_37[0], r2, r5\n\tjump.gt\t@.BB0_36\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_36\n\tst.1\t64, r2\n\tand\t31, r3, r4\n\tst.1.inc\tr1, r3, r2\n\tptr.add\tstack[@ptr_return_data], r0, r5\n\tshr.s!\t5, r3, r3\n\tshl.s\t5, r3, r3\n\tjump.eq\t@.BB0_85\n\tadd\tr2, r3, r6\n\tptr.add\tr5, r0, r7\n\tadd\tr2, r0, r8\n.BB0_84:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_84\n.BB0_85:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_67\n\tptr.add\tr5, r3, r5\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n\tjump\t@.BB0_67\n.BB0_74:\n\tsub!\tr1, r0, r1\n\tadd\tstack-[10], r0, r2\n\tjump.ne\t@.BB0_39\n\tadd\t@CPI0_26[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r2\n\tcontext.gas_left\tr1\n\tjump\t@.BB0_76\n.BB0_229:\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r5\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[6], r0, r4\n\tjump.eq\t@.BB0_231\n\tadd\tr0, r0, r2\n.BB0_233:\n\tshl.s\t5, r2, r3\n\tadd\tr4, r3, r3\n\tld.1\tr3, r3\n\tadd\t32, r3, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_234\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_233\n.BB0_231:\n\tadd\tr5, r0, stack-[7]\n\tsload\tr0, r1\n\tadd\t@CPI0_26[0], r0, r2\n\tst.2\t0, r2\n\tshr.s\t16, r1, r1\n\tand\t@CPI0_19[0], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_29\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\t96, r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_45[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r2\n\tadd\t100, r3, r1\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[7]\n\tadd\t132, r3, r1\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_240\n\tadd\tr0, r0, r3\n\tadd\tstack-[8], r0, r5\n.BB0_239:\n\tadd\t32, r5, r5\n\tld.1\tr5, r4\n\tand\t@CPI0_19[0], r4, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_239\n.BB0_240:\n\tcontext.gas_left\tr2\n\tadd\tstack-[9], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.eq\t@.BB0_248\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tor\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_242\n.BB0_248:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t@CPI0_37[0], r1, r1\n\tjump.gt\t@.BB0_36\n\tadd\tstack-[7], r0, r2\n\tst.1\t64, r2\n\tadd\tstack-[10], r0, r1\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_35[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_46[0], r0, r4\n\tjump\t@.BB0_235\n.BB0_136:\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_68[0], r1, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tand\t1, r2, stack-[8]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_137:\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_146\n\tadd\t96, r0, r1\n\tadd\t128, r0, r2\n.BB0_139:\n\tld.1\tr1, r1\n\tsub!\tstack-[8], r0, r3\n\tjump.ne\t@.BB0_144\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_73\n\tld.1\t64, r1\n\tadd\t@CPI0_30[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tadd\t68, r1, r3\n\tsub!\tr2, r0, r4\n\tadd\tstack-[7], r0, r7\n\tjump.eq\t@.BB0_72\n\tadd\tr0, r0, r4\n.BB0_143:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_143\n\tjump\t@.BB0_72\n.BB0_73:\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_146:\n\tsub.s!\t@CPI0_37[0], r3, r1\n\tjump.gt\t@.BB0_36\n\tadd\t31, r3, r1\n\tand\t@CPI0_80[0], r1, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_80[0], r1, r2\n\tld.1\t64, r1\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_37[0], r2, r5\n\tjump.gt\t@.BB0_36\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_36\n\tst.1\t64, r2\n\tand\t31, r3, r4\n\tst.1.inc\tr1, r3, r2\n\tptr.add\tstack[@ptr_return_data], r0, r5\n\tshr.s!\t5, r3, r3\n\tshl.s\t5, r3, r3\n\tjump.eq\t@.BB0_152\n\tadd\tr2, r3, r6\n\tptr.add\tr5, r0, r7\n\tadd\tr2, r0, r8\n.BB0_151:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_151\n.BB0_152:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_139\n\tptr.add\tr5, r3, r5\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n\tjump\t@.BB0_139\n.BB0_144:\n\tsub!\tr1, r0, r1\n\tadd\tstack-[10], r0, r2\n\tjump.ne\t@.BB0_39\n\tadd\t@CPI0_26[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r2\n\tcontext.gas_left\tr1\n.BB0_76:\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_29\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_39\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_75[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_30[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_29:\n\trevert\n.BB0_234:\n\tld.1\t64, r1\n\tst.1\tr1, r0\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_35[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_44[0], r0, r4\n\tjump\t@.BB0_235\n.BB0_242:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_245\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_244:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_244\n.BB0_245:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_247\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_247:\n\tshl.s\t96, r3, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nfun_getDetail:\n.func_begin1:\n\tnop\tstack+=[6 + r0]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI1_0[0], r1, r2\n\tadd.ge\t@CPI1_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_1\n\tld\tr1, r6\n\tld.1\t64, r7\n\tsub.s!\t@CPI1_2[0], r7, r1\n\tjump.ge\t@.BB1_3\n\tadd\t96, r7, r1\n\tst.1\t64, r1\n\tsload\tr6, r1\n\tst.1.inc\tr7, r1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t1, r6, r1\n\tsload\tr1, r8\n\tsub.s!\t@CPI1_3[0], r8, r2\n\tjump.gt\t@.BB1_3\n\tshl.s\t5, r8, r2\n\tadd\t63, r2, r2\n\tand\t@CPI1_4[0], r2, r2\n\tld.1\t64, r5\n\tadd\tr5, r2, r2\n\tsub!\tr2, r5, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI1_3[0], r2, r4\n\tjump.gt\t@.BB1_3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB1_3\n\tadd\tr7, r0, stack-[3]\n\tadd\tr6, r0, stack-[4]\n\tst.1\t64, r2\n\tadd\tr5, r0, stack-[6]\n\tst.1.inc\tr5, r8, r2\n\tadd\tr2, r0, stack-[5]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI1_0[0], r1, r2\n\tadd.ge\t@CPI1_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr8, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_1\n\tadd\tstack-[2], r0, r9\n\tsub!\tr9, r0, r2\n\tadd\tstack-[6], r0, r10\n\tadd\tstack-[5], r0, r11\n\tadd\tstack-[4], r0, r7\n\tadd\tstack-[3], r0, r8\n\tjump.eq\t@.BB1_13\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n\tadd\tr10, r0, r3\n.BB1_11:\n\tld.1\t64, r4\n\tsub.s!\t@CPI1_6[0], r4, r5\n\tjump.gt\t@.BB1_3\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tsload\tr1, r5\n\tand\t@CPI1_7[0], r5, r5\n\tst.1.inc\tr4, r5, r5\n\tadd\t1, r1, r6\n\tsload\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t2, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r9, r4\n\tjump.lt\t@.BB1_11\n.BB1_13:\n\tadd\tstack-[1], r0, r1\n\tst.1\tr1, r10\n\tadd\t64, r8, r1\n\tadd\t2, r7, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tld.1\tr10, r2\n\tsub.s!\t@CPI1_3[0], r2, r1\n\tjump.gt\t@.BB1_3\n\tshl.s\t5, r2, r5\n\tadd\t63, r5, r1\n\tand\t@CPI1_4[0], r1, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tsub!\tr3, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI1_3[0], r3, r6\n\tjump.gt\t@.BB1_3\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB1_3\n\tst.1\t64, r3\n\tst.1.inc\tr1, r2, r3\n\tand\t31, r5, r2\n\tadd\tstack[@calldatasize], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB1_19\n\tshl.s\t5, r5, r5\n\tadd\tr3, r5, r5\n\tptr.add\tr4, r0, r6\n\tadd\tr3, r0, r7\n.BB1_18:\n\tld.inc\tr6, r8, r6\n\tst.1.inc\tr7, r8, r7\n\tsub!\tr7, r5, r8\n\tjump.ne\t@.BB1_18\n.BB1_19:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB1_21\n.BB1_21:\n\tld.1\tr10, r5\n\tsub.s!\t@CPI1_3[0], r5, r2\n\tjump.gt\t@.BB1_3\n\tshl.s\t5, r5, r7\n\tadd\t63, r7, r2\n\tand\t@CPI1_4[0], r2, r6\n\tld.1\t64, r2\n\tadd\tr2, r6, r6\n\tsub!\tr6, r2, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI1_3[0], r6, r9\n\tjump.gt\t@.BB1_3\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB1_3\n\tst.1\t64, r6\n\tst.1.inc\tr2, r5, r5\n\tand\t31, r7, r6\n\tshr.s!\t5, r7, r7\n\tjump.eq\t@.BB1_27\n\tshl.s\t5, r7, r7\n\tadd\tr5, r7, r7\n\tadd\tr5, r0, r8\n.BB1_26:\n\tld.inc\tr4, r9, r4\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r7, r9\n\tjump.ne\t@.BB1_26\n.BB1_27:\n\tsub!\tr6, r0, r4\n\tjump.eq\t@.BB1_29\n.BB1_29:\n\tld.1\tr10, r4\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB1_31\n\tadd\tr0, r0, r4\n.BB1_32:\n\tld.1\tr1, r6\n\tsub!\tr6, r4, r6\n\tjump.le\t@.BB1_33\n\tshl.s\t5, r4, r6\n\tadd\tr6, r3, r8\n\tadd\tr11, r6, r7\n\tld.1\tr7, r7\n\tld.1.inc\tr7, r9, r7\n\tand\t@CPI1_7[0], r9, r9\n\tst.1\tr8, r9\n\tld.1\tr2, r8\n\tsub!\tr8, r4, r8\n\tjump.le\t@.BB1_33\n\tadd\tr6, r5, r6\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tld.1\tr10, r6\n\tsub!\tr4, r6, r6\n\tjump.lt\t@.BB1_32\n.BB1_31:\n\tret\n.BB1_33:\n\tadd\t@CPI1_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\t@CPI1_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__cxa_throw:\n.func_begin2:\n\trevert\n.func_end2:\n\n__sha3:\n.func_begin3:\n\tsub.s!\t@CPI3_0[0], r1, r3\n\tadd.ge\t@CPI3_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI3_0[0], r2, r3\n\tadd.ge\t@CPI3_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_0[0], r2, r3\n\tadd.ge\t@CPI3_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_2\n\tld\tr1, r1\n\tret\n.BB3_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\n__farcall:\n.func_begin4:\n.tmp0:\n\tfar_call\tr1, r2, @.BB4_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n__staticcall:\n.func_begin5:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB5_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n__delegatecall:\n.func_begin6:\n.tmp6:\n\tfar_call.delegate\tr1, r2, @.BB6_2\n.tmp7:\n\tadd\t1, r0, r2\n\tret\n.BB6_2:\n.tmp8:\n\tadd\tr0, r0, r2\n\tret\n.func_end6:\n\n\t.data\n\t.p2align\t5, 0x0\ncalldatasize:\n\t.cell\t0\n\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell\t0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n\t.cell\t0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n\t.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI3_0:\n\t.cell\t4294967295\nCPI0_1:\n\t.cell\t53919893334301279589334030174039261357415493651629346657050491355136\nCPI0_2:\n\t.cell\t2907439472\nCPI0_3:\n\t.cell\t3268770747\nCPI0_4:\n\t.cell\t3380603210\nCPI0_5:\n\t.cell\t3380603211\nCPI0_6:\n\t.cell\t3684594053\nCPI0_7:\n\t.cell\t3268770748\nCPI0_8:\n\t.cell\t3302387176\nCPI0_9:\n\t.cell\t2907439473\nCPI0_10:\n\t.cell\t3011816431\nCPI0_11:\n\t.cell\t3155665258\nCPI0_12:\n\t.cell\t1327428229\nCPI0_13:\n\t.cell\t1327428230\nCPI0_14:\n\t.cell\t1389465645\nCPI0_15:\n\t.cell\t2640751053\nCPI0_16:\n\t.cell\t597826755\nCPI0_17:\n\t.cell\t911855590\nCPI0_18:\n\t.cell\t1314139231\nCPI0_19:\nCPI1_7:\n\t.cell\t1461501637330902918203684832716283019655932542975\nCPI0_20:\n\t.cell\t2535301202817642044428229017600\nCPI0_21:\nCPI1_1:\n\t.cell\t904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_22:\n\t.cell\t49122361874179529743860623009855109178383175347558101805724769328185410060288\nCPI0_23:\nCPI1_9:\n\t.cell\t2852213850513516153367582212096\nCPI0_24:\n\t.cell\t904625697166532776746648320380374280103671762806220507927638784042040557568\nCPI0_25:\n\t.cell\t49195773201064535426866514107855381395993638329588097414275565437609983388031\nCPI0_26:\n\t.cell\t10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_27:\n\t.cell\t904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_28:\n\t.cell\t45445297051470054334538976711054531813460623115156291166328260229624781340672\nCPI0_29:\n\t.cell\t33213918945522163348297488160619434111254143694905912425159868126486596838753\nCPI0_30:\n\t.cell\t3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_31:\n\t.cell\t10458117451882892562347801444352\nCPI0_32:\n\t.cell\t-95780971304118053647396689196894323976171195136409856\nCPI0_33:\n\t.cell\t95780971304118053647396689196894323976171195136409600\nCPI0_34:\n\t.cell\t-95780971304118053647396689196894323976171195136475136\nCPI0_35:\nCPI1_5:\n\t.cell\t904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_36:\n\t.cell\t57512143604608921510564439283751233207941214245504845198923540334447261918360\nCPI0_37:\nCPI1_3:\n\t.cell\t18446744073709551615\nCPI0_38:\nCPI1_4:\n\t.cell\t57896044618658097711785492504343953926634992332820282019728792003956564819936\nCPI0_39:\nCPI1_6:\n\t.cell\t18446744073709551551\nCPI0_40:\n\t.cell\t18446744073709551519\nCPI0_41:\nCPI1_8:\n\t.cell\t35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_42:\n\t.cell\t54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_43:\n\t.cell\t904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_44:\n\t.cell\t8250983098398750232877880262727279466944587629545461215413131800530017725439\nCPI0_45:\n\t.cell\t-45486761680455918378430327390039756122627142469781236244316798502597497454592\nCPI0_46:\n\t.cell\t24801082490267629261989282285662029596687111990311450233116229364025161702488\nCPI0_47:\n\t.cell\t-10207433116917266025239585919746969581336260268971215721762480864257420296192\nCPI0_48:\n\t.cell\t5387515050969974956360988622848\nCPI0_49:\n\t.cell\t5070602403274100847421635428352\nCPI0_50:\n\t.cell\t-1461501637330902918203684832716283019655932542976\nCPI0_51:\n\t.cell\t-95780971304118053647396689196894323976171195136409601\nCPI0_52:\n\t.cell\t22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_53:\n\t.cell\t904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_54:\n\t.cell\t49028930250147552009423198470819527052274638315267462323702687215708847210496\nCPI0_55:\n\t.cell\t38597328516464907450381791897611812109118893678090996085186089136390337159532\nCPI0_56:\n\t.cell\t24440054405305269366569402256811496959409073762505157381672968839269610695612\nCPI0_57:\n\t.cell\t2535301200456458802993406410752\nCPI0_58:\n\t.cell\t18446744073709551487\nCPI0_59:\n\t.cell\t33048860383849004559742813297059419343339852917517107368639918720169455489347\nCPI0_60:\n\t.cell\t37459919685038064034459671678110462261607019371023489081125878126755520184320\nCPI0_61:\n\t.cell\t316912650057057350374175801344\nCPI0_62:\n\t.cell\t47664912560014345066685778438402563143956901868464129892614585335817688842240\nCPI0_63:\n\t.cell\t31354931755624933825474123435272379398210001229669056050698106585324926955384\nCPI0_64:\nCPI3_1:\n\t.cell\t904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_65:\n\t.cell\t-30536698362301869620703524882028299911890425965968411027149867401609008632517\nCPI0_66:\n\t.cell\t14654901866877395549149391597484105336708473837108585137082493300548441210880\nCPI0_67:\n\t.cell\t29577713123142787666065354962605974352286555015652805685687967870311454567532\nCPI0_68:\n\t.cell\t2951479051793528258560\nCPI0_69:\n\t.cell\t57896044618658097711785492504343953926634992332820282019728792003956564819967\nCPI0_70:\n\t.cell\t44050067617828979011878578625180248225014146853756292052128471792154780368896\nCPI0_71:\n\t.cell\t31869382380800184552205435258528072406063111974373436732989712343482266773536\nCPI0_72:\n\t.cell\t18446744073709551584\nCPI0_73:\n\t.cell\t50401303068669943775684736735757017138977288973911071831392451021110784294912\nCPI0_74:\n\t.cell\t31354931755624933825474123435272379398200649977419909409797735310156391085161\nCPI0_75:\n\t.cell\t29577713123142787666064487680123823951345158729797978021083438401868913442816\nCPI0_76:\n\t.cell\t7922816251426433759354395033600\nCPI0_77:\n\t.cell\t50411903926665684337970802942352511357568373430877458990420567558264874598400\nCPI0_78:\n\t.cell\t31354931755624933654031447922210259146857421806447843296373930569683382247534\nCPI0_79:\n\t.cell\t45410484534316578986337634331317446511511056819483496063341795534749768351744\nCPI0_80:\n\t.cell\t-32\nCPI1_2:\n\t.cell\t18446744073709551520\n","bytecode":{"object":""},"methodIdentifiers":{"create(uint256,uint256,uint256)":"c97fe94b","deleteById(uint256)":"4e542c5f","getDetail(uint256)":"9d66a9cd","handleResult(uint256)":"c2d57bbc","impleAddr()":"23a21cc3","initialize(address)":"c4d66de8","juryInfos(uint256)":"bc17a16a","proposalAddr()":"db9e7185","proxiableUUID()":"52d1902d","setNewProposal(address)":"ad4c0171","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","vote(uint256,uint256)":"b384abef"}},"irOptimized":"/// @use-src 2:\"@openzeppelin/contracts/interfaces/IERC1967.sol\", 6:\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\", 7:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\", 9:\"@openzeppelin/contracts/proxy/utils/Initializable.sol\", 10:\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\", 35:\"contracts/Jury.sol\"\nobject \"Jury_6002\" {\n    code {\n        {\n            /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n            let _1 := memoryguard(0xa0)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            /// @src 10:1080:1093  \"address(this)\"\n            mstore(128, /** @src 10:1088:1092  \"this\" */ address())\n            /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n            let _2 := datasize(\"Jury_6002_deployed\")\n            codecopy(_1, dataoffset(\"Jury_6002_deployed\"), _2)\n            setimmutable(_1, \"695\", mload(/** @src 10:1080:1093  \"address(this)\" */ 128))\n            /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n            return(_1, _2)\n        }\n    }\n    /// @use-src 7:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\", 9:\"@openzeppelin/contracts/proxy/utils/Initializable.sol\", 10:\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\", 23:\"@openzeppelin/contracts/utils/Address.sol\", 27:\"@openzeppelin/contracts/utils/StorageSlot.sol\", 35:\"contracts/Jury.sol\"\n    object \"Jury_6002_deployed\" {\n        code {\n            {\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x23a21cc3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        mstore(_1, and(sload(/** @src 35:496:520  \"address public impleAddr\" */ 1), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                        return(_1, 32)\n                    }\n                    case 0x3659cfe6 {\n                        if callvalue() { revert(_4, _4) }\n                        let _5 := 32\n                        if slt(add(calldatasize(), not(3)), _5) { revert(_4, _4) }\n                        let value0 := abi_decode_address()\n                        let _6 := sub(shl(160, 1), 1)\n                        /// @src 10:1637:1660  \"address(this) != __self\"\n                        let _7 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ and(/** @src 10:1654:1660  \"__self\" */ loadimmutable(\"695\"), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _6)\n                        /// @src 10:1629:1709  \"require(address(this) != __self, \\\"Function must be called through delegatecall\\\")\"\n                        require_helper_stringliteral_36e1(/** @src 10:1637:1660  \"address(this) != __self\" */ iszero(eq(/** @src 10:1645:1649  \"this\" */ address(), /** @src 10:1637:1660  \"address(this) != __self\" */ _7)))\n                        /// @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                        let _8 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                        /// @src 10:1719:1806  \"require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\")\"\n                        require_helper_stringliteral_52f1(/** @src 10:1727:1757  \"_getImplementation() == __self\" */ eq(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ and(sload(/** @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _8), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _6), /** @src 10:1727:1757  \"_getImplementation() == __self\" */ _7))\n                        /// @src 10:3242:3259  \"newImplementation\"\n                        fun_authorizeUpgrade(value0)\n                        /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                        let memPtr := mload(_2)\n                        let newFreePtr := add(memPtr, _5)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        mstore(memPtr, _4)\n                        /// @src 7:2906:3410  \"if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {...\"\n                        switch /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ and(/** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ sload(0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 0xff)\n                        case /** @src 7:2906:3410  \"if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {...\" */ 0 {\n                            /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                            let _9 := and(/** @src 7:3046:3082  \"IERC1822Proxiable(newImplementation)\" */ value0, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _6)\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            let _10 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(_2)\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            mstore(_10, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ shl(224, 0x52d1902d))\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            let trySuccessCondition := staticcall(gas(), _9, _10, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _3, /** @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _10, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _5)\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            let expr := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _4\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            if trySuccessCondition\n                            {\n                                let _11 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _5\n                                /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                if gt(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _5, /** @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ returndatasize()) { _11 := returndatasize() }\n                                finalize_allocation(_10, _11)\n                                /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                if slt(sub(/** @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ add(_10, _11), /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ _10), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _5)\n                                /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                {\n                                    /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                                    revert(_4, _4)\n                                }\n                                /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                expr := /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ mload(_10)\n                            }\n                            /// @src 7:3042:3333  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                            switch iszero(trySuccessCondition)\n                            case 0 {\n                                /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                if iszero(/** @src 7:3148:3176  \"slot == _IMPLEMENTATION_SLOT\" */ eq(expr, /** @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _8))\n                                /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                {\n                                    let memPtr_1 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(_2)\n                                    /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                    mstore(memPtr_1, shl(229, 4594637))\n                                    mstore(add(memPtr_1, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _3), _5)\n                                    mstore(/** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ add(memPtr_1, 36), 41)\n                                    mstore(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ add(/** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ memPtr_1, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 68), /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ \"ERC1967Upgrade: unsupported prox\")\n                                    mstore(add(memPtr_1, 100), \"iableUUID\")\n                                    revert(memPtr_1, 132)\n                                }\n                            }\n                            default /// @src 7:3042:3333  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                            {\n                                /// @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                let _12 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(_2)\n                                /// @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                mstore(_12, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                                mstore(/** @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ add(_12, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _3), _5)\n                                mstore(/** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ add(/** @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _12, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 36), 46)\n                                mstore(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ add(/** @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _12, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 68), /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ \"ERC1967Upgrade: new implementati\")\n                                mstore(add(/** @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _12, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 100), \"on is not UUPS\")\n                                /// @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                revert(_12, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 132)\n                            }\n                            /// @src 7:1856:1873  \"newImplementation\"\n                            fun_setImplementation(value0)\n                            /// @src 7:1889:1916  \"Upgraded(newImplementation)\"\n                            log2(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _4, _4, /** @src 7:1889:1916  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _9)\n                            /// @src 7:2208:2223  \"data.length > 0\"\n                            let _13 := iszero(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 7:2208:2219  \"data.length\" */ memPtr))\n                            /// @src 7:2208:2236  \"data.length > 0 || forceCall\"\n                            let expr_1 := /** @src 7:2208:2223  \"data.length > 0\" */ iszero(_13)\n                            /// @src 7:2208:2236  \"data.length > 0 || forceCall\"\n                            if _13\n                            {\n                                expr_1 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _4\n                            }\n                            /// @src 7:2204:2316  \"if (data.length > 0 || forceCall) {...\"\n                            if expr_1\n                            {\n                                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                                let memPtr_2 := mload(_2)\n                                finalize_allocation_16058(memPtr_2)\n                                mstore(memPtr_2, 39)\n                                mstore(add(memPtr_2, _5), \"Address: low-level delegate call\")\n                                mstore(add(memPtr_2, _2), \" failed\")\n                                /// @src 23:7265:7290  \"target.delegatecall(data)\"\n                                let expr_component := delegatecall(gas(), value0, newFreePtr, mload(memPtr), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _4, _4)\n                                /// @src 23:7265:7290  \"target.delegatecall(data)\"\n                                let data := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _4\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _14 := returndatasize()\n                                    let _15 := array_allocation_size_bytes(_14)\n                                    let memPtr_3 := mload(_2)\n                                    finalize_allocation(memPtr_3, _15)\n                                    mstore(memPtr_3, _14)\n                                    data := memPtr_3\n                                    returndatacopy(add(memPtr_3, _5), _4, returndatasize())\n                                }\n                                /// @src 23:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\"\n                                pop(fun_verifyCallResultFromTarget(value0, expr_component, /** @src 23:7265:7290  \"target.delegatecall(data)\" */ data, /** @src 23:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ memPtr_2))\n                            }\n                        }\n                        default /// @src 7:2906:3410  \"if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {...\"\n                        {\n                            /// @src 7:2993:3010  \"newImplementation\"\n                            fun_setImplementation(value0)\n                        }\n                        /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                        return(_4, _4)\n                    }\n                    case 0x4e542c5f {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, calldataload(_3))\n                        /// @src 35:1746:1755  \"juryInfos\"\n                        let _16 := 0x02\n                        /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                        mstore(32, /** @src 35:1746:1755  \"juryInfos\" */ 0x02)\n                        /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                        let dataSlot := keccak256(_4, _2)\n                        sstore(dataSlot, _4)\n                        let _17 := 1\n                        let _18 := add(dataSlot, 1)\n                        let oldLen := sload(_18)\n                        sstore(_18, _4)\n                        if iszero(iszero(oldLen))\n                        {\n                            if iszero(eq(oldLen, and(oldLen, sub(shl(255, 1), 1))))\n                            {\n                                mstore(_4, shl(224, 0x4e487b71))\n                                mstore(_3, 0x11)\n                                revert(_4, 0x24)\n                            }\n                            mstore(_4, _18)\n                            let data_1 := keccak256(_4, 32)\n                            let _19 := add(data_1, shl(1, oldLen))\n                            let start := data_1\n                            for { }\n                            lt(start, _19)\n                            {\n                                start := add(start, /** @src 35:1746:1755  \"juryInfos\" */ _16)\n                            }\n                            /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                            {\n                                sstore(start, _4)\n                                sstore(add(start, _17), _4)\n                            }\n                        }\n                        sstore(add(dataSlot, /** @src 35:1746:1755  \"juryInfos\" */ 0x02), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _4)\n                        return(_4, _4)\n                    }\n                    case 0x4f1ef286 {\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address()\n                        let offset := calldataload(36)\n                        if gt(offset, 0xffffffffffffffff) { revert(_4, _4) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                        let _20 := calldataload(add(_3, offset))\n                        let _21 := array_allocation_size_bytes(_20)\n                        let memPtr_4 := mload(_2)\n                        finalize_allocation(memPtr_4, _21)\n                        mstore(memPtr_4, _20)\n                        let _22 := 32\n                        let dst := add(memPtr_4, _22)\n                        if gt(add(add(offset, _20), 36), calldatasize()) { revert(_4, _4) }\n                        calldatacopy(dst, add(offset, 36), _20)\n                        mstore(add(add(memPtr_4, _20), _22), _4)\n                        let _23 := sub(shl(160, 1), 1)\n                        /// @src 10:1637:1660  \"address(this) != __self\"\n                        let _24 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ and(/** @src 10:1654:1660  \"__self\" */ loadimmutable(\"695\"), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _23)\n                        /// @src 10:1629:1709  \"require(address(this) != __self, \\\"Function must be called through delegatecall\\\")\"\n                        require_helper_stringliteral_36e1(/** @src 10:1637:1660  \"address(this) != __self\" */ iszero(eq(/** @src 10:1645:1649  \"this\" */ address(), /** @src 10:1637:1660  \"address(this) != __self\" */ _24)))\n                        /// @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                        let _25 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                        /// @src 10:1719:1806  \"require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\")\"\n                        require_helper_stringliteral_52f1(/** @src 10:1727:1757  \"_getImplementation() == __self\" */ eq(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ and(sload(/** @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _25), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _23), /** @src 10:1727:1757  \"_getImplementation() == __self\" */ _24))\n                        /// @src 10:3790:3807  \"newImplementation\"\n                        fun_authorizeUpgrade(value0_1)\n                        /// @src 7:2906:3410  \"if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {...\"\n                        switch /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ and(/** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ sload(0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 0xff)\n                        case /** @src 7:2906:3410  \"if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {...\" */ 0 {\n                            /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                            let _26 := and(/** @src 7:3046:3082  \"IERC1822Proxiable(newImplementation)\" */ value0_1, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _23)\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            let _27 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(_2)\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            mstore(_27, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ shl(224, 0x52d1902d))\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            let trySuccessCondition_1 := staticcall(gas(), _26, _27, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _3, /** @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _27, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _22)\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            let expr_2 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _4\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            if trySuccessCondition_1\n                            {\n                                let _28 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _22\n                                /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                if gt(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _22, /** @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ returndatasize()) { _28 := returndatasize() }\n                                finalize_allocation(_27, _28)\n                                /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                if slt(sub(/** @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ add(_27, _28), /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ _27), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _22)\n                                /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                {\n                                    /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                                    revert(_4, _4)\n                                }\n                                /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                expr_2 := /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ mload(_27)\n                            }\n                            /// @src 7:3042:3333  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                            switch iszero(trySuccessCondition_1)\n                            case 0 {\n                                /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                if iszero(/** @src 7:3148:3176  \"slot == _IMPLEMENTATION_SLOT\" */ eq(expr_2, /** @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _25))\n                                /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                {\n                                    let memPtr_5 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(_2)\n                                    /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                    mstore(memPtr_5, shl(229, 4594637))\n                                    mstore(add(memPtr_5, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _3), _22)\n                                    mstore(/** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ add(memPtr_5, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 36), /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 41)\n                                    mstore(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ add(/** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ memPtr_5, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 68), /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ \"ERC1967Upgrade: unsupported prox\")\n                                    mstore(add(memPtr_5, 100), \"iableUUID\")\n                                    revert(memPtr_5, 132)\n                                }\n                            }\n                            default /// @src 7:3042:3333  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                            {\n                                /// @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                let _29 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(_2)\n                                /// @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                mstore(_29, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                                mstore(/** @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ add(_29, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _3), _22)\n                                mstore(/** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ add(/** @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _29, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 36), /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 46)\n                                mstore(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ add(/** @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _29, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 68), /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ \"ERC1967Upgrade: new implementati\")\n                                mstore(add(/** @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _29, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 100), \"on is not UUPS\")\n                                /// @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                revert(_29, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 132)\n                            }\n                            /// @src 7:1856:1873  \"newImplementation\"\n                            fun_setImplementation(value0_1)\n                            /// @src 7:1889:1916  \"Upgraded(newImplementation)\"\n                            log2(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _4, _4, /** @src 7:1889:1916  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _26)\n                            /// @src 7:2208:2223  \"data.length > 0\"\n                            let _30 := iszero(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 7:2208:2219  \"data.length\" */ memPtr_4))\n                            /// @src 7:2208:2236  \"data.length > 0 || forceCall\"\n                            let expr_3 := /** @src 7:2208:2223  \"data.length > 0\" */ iszero(_30)\n                            /// @src 7:2208:2236  \"data.length > 0 || forceCall\"\n                            if _30\n                            {\n                                expr_3 := /** @src 10:3865:3869  \"true\" */ 0x01\n                            }\n                            /// @src 7:2204:2316  \"if (data.length > 0 || forceCall) {...\"\n                            if expr_3\n                            {\n                                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                                let memPtr_6 := mload(_2)\n                                finalize_allocation_16058(memPtr_6)\n                                mstore(memPtr_6, 39)\n                                mstore(add(memPtr_6, _22), \"Address: low-level delegate call\")\n                                mstore(add(memPtr_6, _2), \" failed\")\n                                /// @src 23:7265:7290  \"target.delegatecall(data)\"\n                                let expr_component_1 := delegatecall(gas(), value0_1, dst, mload(memPtr_4), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _4, _4)\n                                /// @src 23:7265:7290  \"target.delegatecall(data)\"\n                                let data_2 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _4\n                                switch returndatasize()\n                                case 0 { data_2 := 96 }\n                                default {\n                                    let _31 := returndatasize()\n                                    let _32 := array_allocation_size_bytes(_31)\n                                    let memPtr_7 := mload(_2)\n                                    finalize_allocation(memPtr_7, _32)\n                                    mstore(memPtr_7, _31)\n                                    data_2 := memPtr_7\n                                    returndatacopy(add(memPtr_7, _22), _4, returndatasize())\n                                }\n                                /// @src 23:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\"\n                                pop(fun_verifyCallResultFromTarget(value0_1, expr_component_1, /** @src 23:7265:7290  \"target.delegatecall(data)\" */ data_2, /** @src 23:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ memPtr_6))\n                            }\n                        }\n                        default /// @src 7:2906:3410  \"if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {...\"\n                        {\n                            /// @src 7:2993:3010  \"newImplementation\"\n                            fun_setImplementation(value0_1)\n                        }\n                        /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                        return(_4, _4)\n                    }\n                    case 0x52d1902d {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        if iszero(/** @src 10:2072:2095  \"address(this) == __self\" */ eq(/** @src 10:2080:2084  \"this\" */ address(), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ and(/** @src 10:2089:2095  \"__self\" */ loadimmutable(\"695\"), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1))))\n                        {\n                            let memPtr_8 := mload(_2)\n                            mstore(memPtr_8, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                            /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                            mstore(add(memPtr_8, _3), 32)\n                            mstore(add(memPtr_8, 36), 56)\n                            mstore(add(memPtr_8, 68), \"UUPSUpgradeable: must not be cal\")\n                            mstore(add(memPtr_8, 100), \"led through delegatecall\")\n                            revert(memPtr_8, 132)\n                        }\n                        let memPos := mload(_2)\n                        mstore(memPos, /** @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n                        /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                        return(memPos, 32)\n                    }\n                    case 0x9d66a9cd {\n                        if callvalue() { revert(_4, _4) }\n                        let _33 := 32\n                        if slt(add(calldatasize(), not(3)), _33) { revert(_4, _4) }\n                        let ret, ret_1 := fun_getDetail(calldataload(_3))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, _2)\n                        let tail := abi_encode_array_address_dyn(ret, add(memPos_1, _2))\n                        mstore(add(memPos_1, _33), sub(tail, memPos_1))\n                        let pos := tail\n                        let length := mload(ret_1)\n                        mstore(tail, length)\n                        pos := add(tail, _33)\n                        let srcPtr := add(ret_1, _33)\n                        let i := _4\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            mstore(pos, mload(srcPtr))\n                            pos := add(pos, _33)\n                            srcPtr := add(srcPtr, _33)\n                        }\n                        return(memPos_1, sub(pos, memPos_1))\n                    }\n                    case 0xad4c0171 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address()\n                        let _34 := sload(_4)\n                        sstore(_4, or(and(_34, not(sub(shl(176, 1), 65536))), and(shl(16, value0_2), sub(shl(176, 1), 65536))))\n                        return(_4, _4)\n                    }\n                    case 0xb384abef {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let memPtr_9 := mload(_2)\n                        finalize_allocation_10504(memPtr_9)\n                        mstore(memPtr_9, /** @src 35:2386:2396  \"msg.sender\" */ caller())\n                        /// @src 35:2355:2439  \"Selection({...\"\n                        let _35 := add(memPtr_9, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 32)\n                        mstore(_35, calldataload(36))\n                        mstore(_4, calldataload(_3))\n                        mstore(32, /** @src 35:2482:2491  \"juryInfos\" */ 0x02)\n                        /// @src 35:2514:2537  \"proposalJury.selections\"\n                        let _36 := add(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ keccak256(_4, _2), 1)\n                        let oldLen_1 := sload(_36)\n                        if iszero(lt(oldLen_1, 18446744073709551616))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 36)\n                        }\n                        let _37 := add(oldLen_1, 1)\n                        sstore(_36, _37)\n                        if iszero(lt(oldLen_1, _37))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x32)\n                            revert(_4, 36)\n                        }\n                        mstore(_4, _36)\n                        let data_3 := keccak256(_4, 32)\n                        let slot := add(data_3, shl(1, oldLen_1))\n                        sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(mload(memPtr_9), sub(shl(160, 1), 1))))\n                        sstore(add(slot, 1), mload(_35))\n                        return(_4, _4)\n                    }\n                    case 0xbc17a16a {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, calldataload(_3))\n                        mstore(32, /** @src 35:531:576  \"mapping(uint256 => JuryInfo) public juryInfos\" */ 2)\n                        /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                        let dataSlot_1 := keccak256(_4, _2)\n                        let _38 := sload(/** @src 35:531:576  \"mapping(uint256 => JuryInfo) public juryInfos\" */ dataSlot_1)\n                        /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                        let _39 := sload(/** @src 35:531:576  \"mapping(uint256 => JuryInfo) public juryInfos\" */ add(dataSlot_1, 2))\n                        /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, _38)\n                        mstore(add(memPos_2, 32), _39)\n                        return(memPos_2, _2)\n                    }\n                    case 0xc2d57bbc {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        fun_handleResult(calldataload(_3))\n                        return(_4, _4)\n                    }\n                    case 0xc4d66de8 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address()\n                        let _40 := sload(_4)\n                        /// @src 9:3336:3370  \"isTopLevelCall && _initialized < 1\"\n                        let expr_4 := /** @src 9:3290:3304  \"!_initializing\" */ iszero(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ and(shr(8, _40), 0xff))\n                        /// @src 9:3336:3370  \"isTopLevelCall && _initialized < 1\"\n                        let expr_5 := expr_4\n                        if expr_4\n                        {\n                            expr_4 := /** @src 9:3354:3370  \"_initialized < 1\" */ lt(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ and(_40, 0xff), /** @src 9:3369:3370  \"1\" */ 0x01)\n                        }\n                        /// @src 9:3335:3432  \"(isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1)\"\n                        let expr_6 := expr_4\n                        if iszero(expr_4)\n                        {\n                            /// @src 9:3376:3431  \"!Address.isContract(address(this)) && _initialized == 1\"\n                            let expr_7 := /** @src 23:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 23:1702:1721  \"account.code.length\" */ extcodesize(/** @src 9:3404:3408  \"this\" */ address()))\n                            /// @src 9:3376:3431  \"!Address.isContract(address(this)) && _initialized == 1\"\n                            if expr_7\n                            {\n                                expr_7 := /** @src 9:3414:3431  \"_initialized == 1\" */ eq(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ and(_40, 0xff), /** @src 9:3430:3431  \"1\" */ 0x01)\n                            }\n                            /// @src 9:3335:3432  \"(isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1)\"\n                            expr_6 := expr_7\n                        }\n                        /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                        if iszero(expr_6)\n                        {\n                            let memPtr_10 := mload(_2)\n                            mstore(memPtr_10, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                            /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                            mstore(add(memPtr_10, _3), 32)\n                            mstore(add(memPtr_10, 36), 46)\n                            mstore(add(memPtr_10, 68), \"Initializable: contract is alrea\")\n                            mstore(add(memPtr_10, 100), \"dy initialized\")\n                            revert(memPtr_10, 132)\n                        }\n                        sstore(_4, or(and(_40, not(255)), /** @src 9:3529:3530  \"1\" */ 0x01))\n                        /// @src 9:3540:3605  \"if (isTopLevelCall) {...\"\n                        if expr_5\n                        {\n                            /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                            sstore(_4, or(and(_40, not(65535)), 257))\n                        }\n                        let _41 := sload(_4)\n                        let toInsert := and(shl(16, value0_3), sub(shl(176, 1), 65536))\n                        sstore(_4, or(and(_41, not(sub(shl(176, 1), 65536))), toInsert))\n                        /// @src 9:3625:3724  \"if (isTopLevelCall) {...\"\n                        if expr_5\n                        {\n                            /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                            sstore(_4, or(and(_41, not(sub(shl(176, 1), 256))), toInsert))\n                            /// @src 9:3699:3713  \"Initialized(1)\"\n                            let _42 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(_2)\n                            mstore(_42, /** @src 9:3529:3530  \"1\" */ 0x01)\n                            /// @src 9:3699:3713  \"Initialized(1)\"\n                            log1(_42, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 32, /** @src 9:3699:3713  \"Initialized(1)\" */ 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498)\n                        }\n                        /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                        return(_4, _4)\n                    }\n                    case 0xc97fe94b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value := calldataload(_3)\n                        let value_1 := calldataload(36)\n                        let value_2 := calldataload(68)\n                        mstore(_4, value)\n                        mstore(32, /** @src 35:1907:1916  \"juryInfos\" */ 0x02)\n                        /// @src 35:1903:2006  \"if (juryInfos[proposalId].deadline != 0) {...\"\n                        if /** @src 35:1907:1942  \"juryInfos[proposalId].deadline != 0\" */ iszero(iszero(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 35:1907:1937  \"juryInfos[proposalId].deadline\" */ add(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ keccak256(_4, _2), /** @src 35:1907:1916  \"juryInfos\" */ 0x02))))\n                        /// @src 35:1903:2006  \"if (juryInfos[proposalId].deadline != 0) {...\"\n                        {\n                            /// @src 35:1965:1995  \"JuryHasBeenCreated(proposalId)\"\n                            let _43 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(_2)\n                            /// @src 35:1965:1995  \"JuryHasBeenCreated(proposalId)\"\n                            mstore(_43, shl(226, 0x1b269161))\n                            /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                            mstore(/** @src 35:1965:1995  \"JuryHasBeenCreated(proposalId)\" */ add(_43, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _3), value)\n                            /// @src 35:1965:1995  \"JuryHasBeenCreated(proposalId)\"\n                            revert(_43, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 36)\n                        }\n                        mstore(_4, value)\n                        mstore(32, /** @src 35:1907:1916  \"juryInfos\" */ 0x02)\n                        /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                        let dataSlot_2 := keccak256(_4, _2)\n                        sstore(dataSlot_2, value_1)\n                        sstore(/** @src 35:2135:2159  \"newProposalJury.deadline\" */ add(dataSlot_2, /** @src 35:1907:1916  \"juryInfos\" */ 0x02), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ value_2)\n                        /// @src 35:2186:2239  \"CreateProposalJury(proposalId, winOptionId, deadline)\"\n                        let _44 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(_2)\n                        mstore(_44, value)\n                        mstore(add(_44, 32), value_1)\n                        mstore(add(_44, _2), value_2)\n                        /// @src 35:2186:2239  \"CreateProposalJury(proposalId, winOptionId, deadline)\"\n                        log1(_44, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 96, /** @src 35:2186:2239  \"CreateProposalJury(proposalId, winOptionId, deadline)\" */ 0x6cc3d22573be20dfd1b2cdaf1c53f2c6964223283a4b3ed2b8e51ef4a5e0a97f)\n                        /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                        return(_4, _4)\n                    }\n                    case 0xdb9e7185 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_3 := and(shr(16, sload(_4)), sub(shl(160, 1), 1))\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, value_3)\n                        return(memPos_3, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation_10504(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_16058(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_encode_array_address_dyn(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                let srcPtr := add(value, 0x20)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                end := pos\n            }\n            function require_helper_stringliteral_36e1(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                    /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 44)\n                    mstore(add(memPtr, 68), \"Function must be called through \")\n                    mstore(add(memPtr, 100), \"delegatecall\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_52f1(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                    /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 44)\n                    mstore(add(memPtr, 68), \"Function must be called through \")\n                    mstore(add(memPtr, 100), \"active proxy\")\n                    revert(memPtr, 132)\n                }\n            }\n            function array_allocation_size_array_struct_Selection_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function copy_array_from_storage_to_memory_array_struct_Selection__dyn(slot) -> memPtr\n            {\n                let length := sload(slot)\n                let _1 := array_allocation_size_array_struct_Selection_dyn(length)\n                let _2 := 64\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                let mpos := memPtr_1\n                let _3 := 0x20\n                mpos := add(memPtr_1, 0x20)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ slot)\n                let spos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 0x20)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let memPtr_2 := mload(_2)\n                    finalize_allocation_10504(memPtr_2)\n                    mstore(memPtr_2, and(sload(spos), sub(shl(160, 1), 1)))\n                    mstore(add(memPtr_2, _3), sload(add(spos, 1)))\n                    mstore(mpos, memPtr_2)\n                    mpos := add(mpos, _3)\n                    spos := add(spos, 2)\n                }\n            }\n            function memory_array_index_access_struct_Selection_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            /// @ast-id 5807 @src 35:1108:1677  \"function getDetail(...\"\n            function fun_getDetail(var_proposalId) -> var_jurors_mpos, var_optionId_mpos\n            {\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ var_proposalId)\n                /// @src 35:1334:1353  \"juryInfo.selections\"\n                let _1 := 32\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                mstore(/** @src 35:1334:1353  \"juryInfo.selections\" */ 32, /** @src 35:1271:1280  \"juryInfos\" */ 0x02)\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                let _2 := 0x40\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _2)\n                let memPtr := mload(_2)\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 0x24)\n                }\n                mstore(_2, newFreePtr)\n                mstore(memPtr, sload(dataSlot))\n                let _3 := 1\n                let _4 := copy_array_from_storage_to_memory_array_struct_Selection__dyn(add(dataSlot, 1))\n                mstore(add(memPtr, /** @src 35:1334:1353  \"juryInfo.selections\" */ 32), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _4)\n                mstore(add(memPtr, _2), sload(add(dataSlot, /** @src 35:1271:1280  \"juryInfos\" */ 0x02)))\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                let _5 := mload(/** @src 35:1387:1404  \"selections.length\" */ _4)\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                let _6 := array_allocation_size_array_struct_Selection_dyn(_5)\n                let memPtr_1 := mload(_2)\n                finalize_allocation(memPtr_1, _6)\n                mstore(memPtr_1, _5)\n                let dataSize := array_allocation_size_array_struct_Selection_dyn(_5)\n                let _7 := not(31)\n                calldatacopy(add(memPtr_1, /** @src 35:1334:1353  \"juryInfo.selections\" */ 32), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ calldatasize(), add(dataSize, _7))\n                /// @src 35:1364:1405  \"jurors = new address[](selections.length)\"\n                var_jurors_mpos := memPtr_1\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                let _8 := mload(/** @src 35:1440:1457  \"selections.length\" */ _4)\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                let _9 := array_allocation_size_array_struct_Selection_dyn(_8)\n                let memPtr_2 := mload(_2)\n                finalize_allocation(memPtr_2, _9)\n                mstore(memPtr_2, _8)\n                calldatacopy(add(memPtr_2, /** @src 35:1334:1353  \"juryInfo.selections\" */ 32), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ calldatasize(), add(array_allocation_size_array_struct_Selection_dyn(_8), _7))\n                /// @src 35:1415:1458  \"optionId = new uint256[](selections.length)\"\n                var_optionId_mpos := memPtr_2\n                /// @src 35:1474:1487  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 35:1469:1671  \"for (uint256 i = 0; i < selections.length; i++) {...\"\n                for { }\n                /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _3\n                /// @src 35:1474:1487  \"uint256 i = 0\"\n                {\n                    /// @src 35:1512:1515  \"i++\"\n                    var_i := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ add(/** @src 35:1512:1515  \"i++\" */ var_i, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _3)\n                }\n                /// @src 35:1512:1515  \"i++\"\n                {\n                    /// @src 35:1489:1510  \"i < selections.length\"\n                    if iszero(lt(var_i, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 35:1493:1510  \"selections.length\" */ _4)))\n                    /// @src 35:1489:1510  \"i < selections.length\"\n                    { break }\n                    /// @src 35:1560:1573  \"selections[i]\"\n                    let _mpos := mload(memory_array_index_access_struct_Selection_dyn(_4, var_i))\n                    /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                    mstore(/** @src 35:1587:1614  \"jurors[i] = selection.juror\" */ memory_array_index_access_struct_Selection_dyn(memPtr_1, var_i), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ and(mload(/** @src 35:1599:1614  \"selection.juror\" */ _mpos), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                    mstore(/** @src 35:1628:1660  \"optionId[i] = selection.optionId\" */ memory_array_index_access_struct_Selection_dyn(memPtr_2, var_i), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 35:1642:1660  \"selection.optionId\" */ add(_mpos, /** @src 35:1334:1353  \"juryInfo.selections\" */ _1)))\n                }\n            }\n            /// @ast-id 5990 @src 35:2569:3348  \"function handleResult(uint256 proposalId) external {...\"\n            function fun_handleResult(var_proposalId)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ var_proposalId)\n                let _2 := 0x20\n                mstore(0x20, /** @src 35:2658:2667  \"juryInfos\" */ 0x02)\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                let _3 := 0x40\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _3)\n                /// @src 35:2721:2740  \"juryInfo.selections\"\n                let _4 := 1\n                /// @src 35:2689:2740  \"Selection[] memory selections = juryInfo.selections\"\n                let var_selections_mpos := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ copy_array_from_storage_to_memory_array_struct_Selection__dyn(/** @src 35:2721:2740  \"juryInfo.selections\" */ add(dataSlot, 1))\n                /// @src 35:2780:2801  \"getDetail(proposalId)\"\n                let expr_component_mpos, expr_5924_component_2_mpos := fun_getDetail(var_proposalId)\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                let _5 := sload(/** @src 35:2816:2833  \"juryInfo.deadline\" */ add(dataSlot, /** @src 35:2658:2667  \"juryInfos\" */ 0x02))\n                /// @src 35:2812:2925  \"if (juryInfo.deadline > block.timestamp) {...\"\n                if /** @src 35:2816:2851  \"juryInfo.deadline > block.timestamp\" */ gt(_5, /** @src 35:2836:2851  \"block.timestamp\" */ timestamp())\n                /// @src 35:2812:2925  \"if (juryInfo.deadline > block.timestamp) {...\"\n                {\n                    /// @src 35:2874:2914  \"NotYetDue(proposalId, juryInfo.deadline)\"\n                    let _6 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(_3)\n                    /// @src 35:2874:2914  \"NotYetDue(proposalId, juryInfo.deadline)\"\n                    mstore(_6, shl(224, 0xe96ecc2f))\n                    /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                    mstore(/** @src 35:2874:2914  \"NotYetDue(proposalId, juryInfo.deadline)\" */ add(_6, 4), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ var_proposalId)\n                    mstore(add(/** @src 35:2874:2914  \"NotYetDue(proposalId, juryInfo.deadline)\" */ _6, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 36), _5)\n                    /// @src 35:2874:2914  \"NotYetDue(proposalId, juryInfo.deadline)\"\n                    revert(_6, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 68)\n                }\n                /// @src 35:2940:2953  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ _1\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                let _7 := sload(/** @src 35:3079:3099  \"juryInfo.winOptionId\" */ dataSlot)\n                /// @src 35:2935:3226  \"for (uint256 i = 0; i < selections.length; i++) {...\"\n                for { }\n                /** @src 35:2721:2740  \"juryInfo.selections\" */ _4\n                /// @src 35:2940:2953  \"uint256 i = 0\"\n                {\n                    /// @src 35:2978:2981  \"i++\"\n                    var_i := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ add(/** @src 35:2978:2981  \"i++\" */ var_i, /** @src 35:2721:2740  \"juryInfo.selections\" */ _4)\n                }\n                /// @src 35:2978:2981  \"i++\"\n                {\n                    /// @src 35:2955:2976  \"i < selections.length\"\n                    if iszero(lt(var_i, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 35:2959:2976  \"selections.length\" */ var_selections_mpos)))\n                    /// @src 35:2955:2976  \"i < selections.length\"\n                    { break }\n                    /// @src 35:3053:3216  \"if (selection.optionId != juryInfo.winOptionId) {...\"\n                    if /** @src 35:3057:3099  \"selection.optionId != juryInfo.winOptionId\" */ iszero(eq(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 35:3057:3075  \"selection.optionId\" */ add(/** @src 35:3026:3039  \"selections[i]\" */ mload(memory_array_index_access_struct_Selection_dyn(var_selections_mpos, var_i)), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _2)), /** @src 35:3057:3099  \"selection.optionId != juryInfo.winOptionId\" */ _7))\n                    /// @src 35:3053:3216  \"if (selection.optionId != juryInfo.winOptionId) {...\"\n                    {\n                        /// @src 35:3161:3177  \"Fail(proposalId)\"\n                        let _8 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(_3)\n                        mstore(_8, /** @src -1:-1:-1 */ _1)\n                        /// @src 35:3161:3177  \"Fail(proposalId)\"\n                        log1(_8, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ _2, /** @src 35:3161:3177  \"Fail(proposalId)\" */ 0x123de41493f6e442c2fdb676dd1c3d9f1e0a7b7531ca0cdb9f1026f7569e2bff)\n                        /// @src 35:3195:3202  \"return;\"\n                        leave\n                    }\n                }\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                let value := and(shr(16, sload(/** @src -1:-1:-1 */ _1)), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1))\n                /// @src 35:3236:3307  \"Proposal(proposalAddr).settle(proposalId, juryInfo.winOptionId, jurors)\"\n                if iszero(extcodesize(value))\n                {\n                    /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                    revert(/** @src -1:-1:-1 */ _1, _1)\n                }\n                /// @src 35:3236:3307  \"Proposal(proposalAddr).settle(proposalId, juryInfo.winOptionId, jurors)\"\n                let _9 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(_3)\n                /// @src 35:3236:3307  \"Proposal(proposalAddr).settle(proposalId, juryInfo.winOptionId, jurors)\"\n                mstore(_9, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ shl(225, 0x4db7b3df))\n                mstore(/** @src 35:3236:3307  \"Proposal(proposalAddr).settle(proposalId, juryInfo.winOptionId, jurors)\" */ add(_9, 4), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ var_proposalId)\n                mstore(add(/** @src 35:3236:3307  \"Proposal(proposalAddr).settle(proposalId, juryInfo.winOptionId, jurors)\" */ _9, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 36), _7)\n                mstore(add(/** @src 35:3236:3307  \"Proposal(proposalAddr).settle(proposalId, juryInfo.winOptionId, jurors)\" */ _9, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 68), 96)\n                /// @src 35:3236:3307  \"Proposal(proposalAddr).settle(proposalId, juryInfo.winOptionId, jurors)\"\n                let _10 := call(gas(), value, /** @src -1:-1:-1 */ _1, /** @src 35:3236:3307  \"Proposal(proposalAddr).settle(proposalId, juryInfo.winOptionId, jurors)\" */ _9, sub(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ abi_encode_array_address_dyn(expr_component_mpos, add(/** @src 35:3236:3307  \"Proposal(proposalAddr).settle(proposalId, juryInfo.winOptionId, jurors)\" */ _9, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 100)), /** @src 35:3236:3307  \"Proposal(proposalAddr).settle(proposalId, juryInfo.winOptionId, jurors)\" */ _9), _9, /** @src -1:-1:-1 */ _1)\n                /// @src 35:3236:3307  \"Proposal(proposalAddr).settle(proposalId, juryInfo.winOptionId, jurors)\"\n                if iszero(_10)\n                {\n                    /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                    let pos := mload(_3)\n                    returndatacopy(pos, /** @src -1:-1:-1 */ _1, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 35:3236:3307  \"Proposal(proposalAddr).settle(proposalId, juryInfo.winOptionId, jurors)\"\n                if _10\n                {\n                    /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                    if gt(_9, 0xffffffffffffffff)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 35:3236:3307  \"Proposal(proposalAddr).settle(proposalId, juryInfo.winOptionId, jurors)\" */ 4, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ _1, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 36)\n                    }\n                    mstore(_3, _9)\n                }\n                /// @src 35:3322:3341  \"Success(proposalId)\"\n                let _11 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(_3)\n                mstore(_11, var_proposalId)\n                /// @src 35:3322:3341  \"Success(proposalId)\"\n                log1(_11, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 0x20, /** @src 35:3322:3341  \"Success(proposalId)\" */ 0x36d4ea4d2a836eb91a99a36614ff84d373648ee61d232da708aa2eb96ef45c58)\n            }\n            /// @ast-id 6001 @src 35:3354:3486  \"function _authorizeUpgrade(...\"\n            function fun_authorizeUpgrade(var_newImplementation)\n            {\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                sstore(/** @src 35:3450:3479  \"impleAddr = newImplementation\" */ 0x01, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ or(and(sload(/** @src 35:3450:3479  \"impleAddr = newImplementation\" */ 0x01), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(var_newImplementation, sub(shl(160, 1), 1))))\n            }\n            /// @ast-id 250 @src 7:1406:1665  \"function _setImplementation(address newImplementation) private {...\"\n            function fun_setImplementation(var_newImplementation)\n            {\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                if /** @src 23:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 23:1702:1721  \"account.code.length\" */ extcodesize(var_newImplementation))\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                    /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 45)\n                    mstore(add(memPtr, 68), \"ERC1967: new implementation is n\")\n                    mstore(add(memPtr, 100), \"ot a contract\")\n                    revert(memPtr, 132)\n                }\n                /// @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                let _1 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                sstore(/** @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _1, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ or(and(sload(/** @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _1), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(var_newImplementation, sub(shl(160, 1), 1))))\n            }\n            /// @ast-id 3367 @src 23:7671:8299  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos, var_errorMessage_mpos) -> var_mpos\n            {\n                /// @src 23:7875:8293  \"if (success) {...\"\n                switch var_success\n                case 0 {\n                    /// @src 23:8976:9355  \"if (returndata.length > 0) {...\"\n                    switch /** @src 23:8980:9001  \"returndata.length > 0\" */ iszero(iszero(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 23:8980:8997  \"returndata.length\" */ var_returndata_mpos)))\n                    case /** @src 23:8976:9355  \"if (returndata.length > 0) {...\" */ 0 {\n                        /// @src 23:9324:9344  \"revert(errorMessage)\"\n                        let _1 := /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                        /// @src 23:9324:9344  \"revert(errorMessage)\"\n                        mstore(_1, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                        /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                        let _2 := 32\n                        mstore(/** @src 23:9324:9344  \"revert(errorMessage)\" */ add(_1, 4), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 32)\n                        let length := mload(var_errorMessage_mpos)\n                        mstore(add(/** @src 23:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 36), length)\n                        let i := /** @src 23:9000:9001  \"0\" */ 0x00\n                        /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                        for { } lt(i, length) { i := add(i, _2) }\n                        {\n                            mstore(add(add(/** @src 23:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ i), 68), mload(add(add(var_errorMessage_mpos, i), _2)))\n                        }\n                        mstore(add(add(/** @src 23:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ length), 68), /** @src 23:9000:9001  \"0\" */ 0x00)\n                        /// @src 23:9324:9344  \"revert(errorMessage)\"\n                        revert(_1, add(sub(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ add(/** @src 23:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ and(add(length, 31), not(31))), /** @src 23:9324:9344  \"revert(errorMessage)\" */ _1), /** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ 68))\n                    }\n                    default /// @src 23:8976:9355  \"if (returndata.length > 0) {...\"\n                    {\n                        /// @src 23:9152:9294  \"assembly {...\"\n                        revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                    }\n                }\n                default /// @src 23:7875:8293  \"if (success) {...\"\n                {\n                    /// @src 23:7902:8188  \"if (returndata.length == 0) {...\"\n                    if /** @src 23:7906:7928  \"returndata.length == 0\" */ iszero(/** @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 23:7906:7923  \"returndata.length\" */ var_returndata_mpos))\n                    /// @src 23:7902:8188  \"if (returndata.length == 0) {...\"\n                    {\n                        /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                        if /** @src 23:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 23:1702:1721  \"account.code.length\" */ extcodesize(var_target))\n                        /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                            /// @src 35:214:3488  \"contract Jury is Initializable, UUPSUpgradeable {...\"\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 29)\n                            mstore(add(memPtr, 68), \"Address: call to non-contract\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    /// @src 23:8201:8218  \"return returndata\"\n                    var_mpos := var_returndata_mpos\n                    leave\n                }\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122033d8bb464dc9d0d47df7b7772fb39a8046868739110bb7fbe2a744454ce6f86964736f6c63430008180033\"\n    }\n}\n","hash":"0100024150852b9ee6fa24e558c751861b5e0507200da166705004426652f2ce","factoryDependencies":{}}},"contracts/JuryNFTSwap.sol":{"JuryNFTSwap":{"abi":[{"inputs":[{"internalType":"address","name":"_melonNFTAddr","type":"address"},{"internalType":"uint256","name":"_commonNFTsLimitPerUser","type":"uint256"},{"internalType":"uint256","name":"_startUpNFTsLimit","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"AlreadyListed","type":"error"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"holdAmount","type":"uint256"}],"name":"MaximumNumberOfHoldings","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"NotListed","type":"error"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"NotNFTOwner","type":"error"},{"inputs":[{"internalType":"address","name":"NFTAddr","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"redemptionTime","type":"uint256"}],"name":"RedemptionTimeNotReached","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"pledgeAmount","type":"uint256"}],"name":"ApplyStartUpNFT","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"BuyNFT","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"HangOut","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"redeemer","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"redeemPrice","type":"uint256"}],"name":"Redeem","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"StartUpNFTSending","type":"event"},{"inputs":[],"name":"COMMON_NFT_LIMIT_PER_USER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"START_UP_NFT_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"pledgeAmount","type":"uint256"}],"name":"applyStartUpNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"applyStartUpNFTInfos","outputs":[{"internalType":"uint256","name":"pledgeAmount","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"commonNFTs","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"uint256","name":"gainTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"users","type":"address[]"},{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"distributeStartUpNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllCommonNFTs","outputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"uint256","name":"gainTime","type":"uint256"}],"internalType":"struct JuryNFTSwap.NFTListInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllStartUpNFTs","outputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"uint256","name":"gainTime","type":"uint256"}],"internalType":"struct JuryNFTSwap.NFTListInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getApplyStartUpNFTInfos","outputs":[{"components":[{"internalType":"uint256","name":"pledgeAmount","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"internalType":"struct JuryNFTSwap.ApplyStartUpNFTInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalApplyInfo","outputs":[{"internalType":"uint256","name":"totalApplicants","type":"uint256"},{"internalType":"uint256","name":"totalPledgedAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserNFTHolding","outputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"uint256","name":"gainTime","type":"uint256"}],"internalType":"struct JuryNFTSwap.NFTListInfo","name":"","type":"tuple"},{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"uint256","name":"gainTime","type":"uint256"}],"internalType":"struct JuryNFTSwap.NFTListInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"infoByTokenId","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"uint256","name":"gainTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"initialNFTHangOut","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"melonNFT","outputs":[{"internalType":"contract MelonNFT","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nftLock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"contract Proposal","name":"proposal","type":"address"}],"name":"purchaseCommonNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"contract Proposal","name":"proposal","type":"address"}],"name":"redeem","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"startUpNFTs","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"uint256","name":"gainTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userCommonNFTs","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"uint256","name":"gainTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userStartUpNFTs","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"uint256","name":"gainTime","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_melonNFTAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_commonNFTsLimitPerUser\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startUpNFTsLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AlreadyListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"holdAmount\",\"type\":\"uint256\"}],\"name\":\"MaximumNumberOfHoldings\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NotListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NotNFTOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"NFTAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionTime\",\"type\":\"uint256\"}],\"name\":\"RedemptionTimeNotReached\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pledgeAmount\",\"type\":\"uint256\"}],\"name\":\"ApplyStartUpNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"BuyNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"HangOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"redeemPrice\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"StartUpNFTSending\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COMMON_NFT_LIMIT_PER_USER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"START_UP_NFT_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pledgeAmount\",\"type\":\"uint256\"}],\"name\":\"applyStartUpNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"applyStartUpNFTInfos\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pledgeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"commonNFTs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gainTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"distributeStartUpNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllCommonNFTs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gainTime\",\"type\":\"uint256\"}],\"internalType\":\"struct JuryNFTSwap.NFTListInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllStartUpNFTs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gainTime\",\"type\":\"uint256\"}],\"internalType\":\"struct JuryNFTSwap.NFTListInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getApplyStartUpNFTInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pledgeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"internalType\":\"struct JuryNFTSwap.ApplyStartUpNFTInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalApplyInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalApplicants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPledgedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserNFTHolding\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gainTime\",\"type\":\"uint256\"}],\"internalType\":\"struct JuryNFTSwap.NFTListInfo\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gainTime\",\"type\":\"uint256\"}],\"internalType\":\"struct JuryNFTSwap.NFTListInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"infoByTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gainTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"initialNFTHangOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"melonNFT\",\"outputs\":[{\"internalType\":\"contract MelonNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nftLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"contract Proposal\",\"name\":\"proposal\",\"type\":\"address\"}],\"name\":\"purchaseCommonNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"contract Proposal\",\"name\":\"proposal\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"startUpNFTs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gainTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userCommonNFTs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gainTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStartUpNFTs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gainTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/JuryNFTSwap.sol\":\"JuryNFTSwap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca\",\"dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/JuryNFTSwap.sol\":{\"keccak256\":\"0x30f17ce2fd1bf215d752c2da3b56ecb5558c26b60370c435688c34ae5ad1cf9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b90a2ac87d41e18ad2d462e56bd7ce6c95eeb9066501fd3e9be0c50526c86241\",\"dweb:/ipfs/QmQb2pBACQGLi7R5sUnefPRBhNCsYMYqQqJjXgyfjj8rsy\"]},\"contracts/MelonNFT.sol\":{\"keccak256\":\"0xab0b61c4ab90e62fafb8e658d23f801ee5f60e939c96ccfac65eac03b13e5622\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://016a5b35b4dc4e928312d1a9e28a9f6adb42a3d0c0cd6111b721f380c05b731a\",\"dweb:/ipfs/QmfX54cjitDyt6zwAfPPpVhRdFPWiSMBtvWRZRuG2gYtaf\"]},\"contracts/MelonToken.sol\":{\"keccak256\":\"0x0ea0df6c42e73bc65fd935a40ed9f23fed8d45aaaee85e37f205bfde2e921483\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4ab1aa07c0665f5e86d6218675001cb634f3ae692ad771a54ecfee04291fcd4\",\"dweb:/ipfs/QmYeZkZXgwSPWhEzx9S8rGCoGupQ2M4hAvxQc6sEUxPTqy\"]},\"contracts/Pledge.sol\":{\"keccak256\":\"0xcff21b4a553e8efb54746a7856f74e1a1fb95ba88750755064026579e4b9a225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e279646fd2aeb61d64fa967c5d1dc6d3c0dfa00a881ad89cfbff235e8a67550\",\"dweb:/ipfs/Qmeu81CZrHfZsydC96i98zSU2U8356gBMGeDeuhofiJDRH\"]},\"contracts/Proposal.sol\":{\"keccak256\":\"0xa3cdd02b298ba5f3bb6698fcaf01314309a5f2b65f30e82ed922bb4b459d6d71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef309cc333fb21ca6e6bdc6176dfacd520cc8ecdca45f0f4a6df286071b0a9e7\",\"dweb:/ipfs/QmcvdFBzabE9J13mMkmLtM3U7MuUNoN3MbJTJcDy7zeoGr\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.5.0"},"storageLayout":{"storage":[{"astId":7,"contract":"contracts/JuryNFTSwap.sol:JuryNFTSwap","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":6033,"contract":"contracts/JuryNFTSwap.sol:JuryNFTSwap","label":"melonNFT","offset":0,"slot":"1","type":"t_contract(MelonNFT)6942"},{"astId":6037,"contract":"contracts/JuryNFTSwap.sol:JuryNFTSwap","label":"startUpNFTs","offset":0,"slot":"2","type":"t_array(t_struct(NFTListInfo)6021_storage)dyn_storage"},{"astId":6041,"contract":"contracts/JuryNFTSwap.sol:JuryNFTSwap","label":"commonNFTs","offset":0,"slot":"3","type":"t_array(t_struct(NFTListInfo)6021_storage)dyn_storage"},{"astId":6046,"contract":"contracts/JuryNFTSwap.sol:JuryNFTSwap","label":"userStartUpNFTs","offset":0,"slot":"4","type":"t_mapping(t_address,t_struct(NFTListInfo)6021_storage)"},{"astId":6052,"contract":"contracts/JuryNFTSwap.sol:JuryNFTSwap","label":"userCommonNFTs","offset":0,"slot":"5","type":"t_mapping(t_address,t_array(t_struct(NFTListInfo)6021_storage)dyn_storage)"},{"astId":6056,"contract":"contracts/JuryNFTSwap.sol:JuryNFTSwap","label":"applyStartUpNFTInfos","offset":0,"slot":"6","type":"t_array(t_struct(ApplyStartUpNFTInfo)6026_storage)dyn_storage"},{"astId":6060,"contract":"contracts/JuryNFTSwap.sol:JuryNFTSwap","label":"nftLock","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"},{"astId":6065,"contract":"contracts/JuryNFTSwap.sol:JuryNFTSwap","label":"infoByTokenId","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_struct(NFTListInfo)6021_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(ApplyStartUpNFTInfo)6026_storage)dyn_storage":{"base":"t_struct(ApplyStartUpNFTInfo)6026_storage","encoding":"dynamic_array","label":"struct JuryNFTSwap.ApplyStartUpNFTInfo[]","numberOfBytes":"32"},"t_array(t_struct(NFTListInfo)6021_storage)dyn_storage":{"base":"t_struct(NFTListInfo)6021_storage","encoding":"dynamic_array","label":"struct JuryNFTSwap.NFTListInfo[]","numberOfBytes":"32"},"t_contract(MelonNFT)6942":{"encoding":"inplace","label":"contract MelonNFT","numberOfBytes":"20"},"t_mapping(t_address,t_array(t_struct(NFTListInfo)6021_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct JuryNFTSwap.NFTListInfo[])","numberOfBytes":"32","value":"t_array(t_struct(NFTListInfo)6021_storage)dyn_storage"},"t_mapping(t_address,t_struct(NFTListInfo)6021_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct JuryNFTSwap.NFTListInfo)","numberOfBytes":"32","value":"t_struct(NFTListInfo)6021_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(NFTListInfo)6021_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct JuryNFTSwap.NFTListInfo)","numberOfBytes":"32","value":"t_struct(NFTListInfo)6021_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(ApplyStartUpNFTInfo)6026_storage":{"encoding":"inplace","label":"struct JuryNFTSwap.ApplyStartUpNFTInfo","members":[{"astId":6023,"contract":"contracts/JuryNFTSwap.sol:JuryNFTSwap","label":"pledgeAmount","offset":0,"slot":"0","type":"t_uint256"},{"astId":6025,"contract":"contracts/JuryNFTSwap.sol:JuryNFTSwap","label":"user","offset":0,"slot":"1","type":"t_address"}],"numberOfBytes":"64"},"t_struct(NFTListInfo)6021_storage":{"encoding":"inplace","label":"struct JuryNFTSwap.NFTListInfo","members":[{"astId":6014,"contract":"contracts/JuryNFTSwap.sol:JuryNFTSwap","label":"tokenId","offset":0,"slot":"0","type":"t_uint256"},{"astId":6016,"contract":"contracts/JuryNFTSwap.sol:JuryNFTSwap","label":"price","offset":0,"slot":"1","type":"t_uint256"},{"astId":6018,"contract":"contracts/JuryNFTSwap.sol:JuryNFTSwap","label":"uri","offset":0,"slot":"2","type":"t_string_storage"},{"astId":6020,"contract":"contracts/JuryNFTSwap.sol:JuryNFTSwap","label":"gainTime","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"assembly":"\t.text\n\t.file\t\"JuryNFTSwap.sol:JuryNFTSwap\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[16 + r0]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_12\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_572\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_7[0], r2, r4\n\tjump.gt\t@.BB0_22\n\tsub.s!\t@CPI0_23[0], r2, r4\n\tjump.gt\t@.BB0_29\n\tsub.s!\t@CPI0_31[0], r2, r4\n\tjump.gt\t@.BB0_155\n\tsub.s!\t@CPI0_35[0], r2, r4\n\tjump.eq\t@.BB0_243\n\tsub.s!\t@CPI0_36[0], r2, r4\n\tjump.eq\t@.BB0_193\n\tsub.s!\t@CPI0_37[0], r2, r2\n\tjump.ne\t@.BB0_572\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_572\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_572\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t6, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.ge\t@.BB0_572\n\tnear_call\tr0, @storage_array_index_access_struct_ApplyStartUpNFTInfo__dyn, @DEFAULT_UNWIND\n\tsload\tr1, r2\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r1\n\tst.1\tr3, r2\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_91[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_12:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_572\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t192, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_16\n\tadd\t192, r0, r5\n\tshl.s\t5, r4, r6\n\tadd\t192, r6, r6\n\tptr.add\tr1, r0, r7\n.BB0_15:\n\tld.inc\tr7, r8, r7\n\tst.1.inc\tr5, r8, r5\n\tsub!\tr5, r6, r8\n\tjump.ne\t@.BB0_15\n.BB0_16:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_18\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t192, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_18:\n\tsub.s!\t96, r3, r1\n\tjump.lt\t@.BB0_572\n\tld.1\t192, r1\n\tadd\tr1, r0, stack-[12]\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_572\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r2\n\tcontext.caller\tr6\n\tor\tr2, r6, r2\n\tld.1\t256, r3\n\tadd\tr3, r0, stack-[11]\n\tld.1\t224, r3\n\tadd\tr3, r0, stack-[10]\n\tsstore\tr0, r2\n\tcontext.gas_left\tr2\n\tand\t@CPI0_2[0], r1, r5\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_572\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tor\tstack-[12], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tst.1\t128, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\t160, r2\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tst.2\t384, r1\n\tst.2\t416, r2\n\tst.2\t256, r1\n\tadd\t2, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_22:\n\tsub.s!\t@CPI0_8[0], r2, r4\n\tjump.gt\t@.BB0_37\n\tsub.s!\t@CPI0_16[0], r2, r4\n\tjump.gt\t@.BB0_160\n\tsub.s!\t@CPI0_20[0], r2, r4\n\tjump.eq\t@.BB0_249\n\tsub.s!\t@CPI0_21[0], r2, r4\n\tjump.eq\t@.BB0_198\n\tsub.s!\t@CPI0_22[0], r2, r1\n\tjump.ne\t@.BB0_572\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_572\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[14]\n\tadd\t32, r0, stack-[13]\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t14, r4, r4\n\tjump\t@.BB0_236\n.BB0_29:\n\tsub.s!\t@CPI0_24[0], r2, r4\n\tjump.gt\t@.BB0_167\n\tsub.s!\t@CPI0_28[0], r2, r4\n\tjump.eq\t@.BB0_252\n\tsub.s!\t@CPI0_29[0], r2, r4\n\tjump.eq\t@.BB0_202\n\tsub.s!\t@CPI0_30[0], r2, r2\n\tjump.ne\t@.BB0_572\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_572\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_572\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t3, r0, r2\n\tsload\tr2, r3\n\tsub!\tr1, r3, r3\n\tjump.ge\t@.BB0_572\n\tst.1\t0, r2\n\tshl.s\t2, r1, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\t@CPI0_74[0], r2, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t@CPI0_72[0], r2, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI0_75[0], r2, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r2\n\tadd\t@CPI0_76[0], r2, r2\n\tjump\t@.BB0_261\n.BB0_37:\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.gt\t@.BB0_173\n\tsub.s!\t@CPI0_13[0], r2, r4\n\tjump.eq\t@.BB0_256\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.eq\t@.BB0_213\n\tsub.s!\t@CPI0_15[0], r2, r2\n\tjump.ne\t@.BB0_572\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_572\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_572\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_38[0], r2, r4\n\tjump.gt\t@.BB0_572\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_572\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_38[0], r5, r4\n\tjump.gt\t@.BB0_287\n\tshl.s\t5, r5, r4\n\tadd\t63, r4, r6\n\tand\t@CPI0_39[0], r6, r6\n\tsub.s!\t@CPI0_40[0], r6, r7\n\tjump.gt\t@.BB0_287\n\tadd\t128, r6, r6\n\tst.1\t64, r6\n\tst.1\t128, r5\n\tadd\t36, r2, r2\n\tadd\tr4, r2, r4\n\tsub!\tr4, r3, r6\n\tjump.gt\t@.BB0_572\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB0_52\n\tadd\t160, r0, r5\n.BB0_50:\n\tptr.add\tr1, r2, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI0_2[0], r6, r7\n\tjump.gt\t@.BB0_572\n\tst.1.inc\tr5, r6, r5\n\tadd\t32, r2, r2\n\tsub!\tr2, r4, r6\n\tjump.lt\t@.BB0_50\n.BB0_52:\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_38[0], r2, r4\n\tjump.gt\t@.BB0_572\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r5\n\tadd\tr0, r0, r5\n\tadd.lt\t@CPI0_51[0], r0, r5\n\tand\t@CPI0_51[0], r4, r4\n\tsub!\tr4, r0, r6\n\tadd\tr0, r0, r6\n\tadd.gt\t@CPI0_51[0], r0, r6\n\tsub.s!\t@CPI0_51[0], r4, r4\n\tadd.ne\tr5, r0, r6\n\tsub!\tr6, r0, r4\n\tjump.eq\t@.BB0_572\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_38[0], r4, r5\n\tjump.gt\t@.BB0_287\n\tshl.s\t5, r4, r5\n\tadd\t63, r5, r6\n\tand\t@CPI0_39[0], r6, r6\n\tld.1\t64, r7\n\tadd\tr7, r6, r6\n\tadd\tr7, r0, stack-[4]\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_38[0], r6, r8\n\tjump.gt\t@.BB0_287\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_287\n\tst.1\t64, r6\n\tadd\tstack-[4], r0, r6\n\tst.1.inc\tr6, r4, r6\n\tadd\tr6, r0, stack-[3]\n\tadd\t36, r2, r2\n\tadd\tr2, r5, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB0_572\n\tsub!\tr4, r0, r3\n\tjump.eq\t@.BB0_61\n\tadd\tstack-[3], r0, r3\n.BB0_60:\n\tptr.add\tr1, r2, r4\n\tld\tr4, r4\n\tst.1.inc\tr3, r4, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r5, r4\n\tjump.lt\t@.BB0_60\n.BB0_61:\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_385\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r2\n\tld.1\t128, r1\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_400\n\tadd\t6, r0, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[10]\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_416\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_342\n.BB0_65:\n\tadd\tr0, r0, stack-[10]\n.BB0_66:\n\tadd\tstack-[10], r0, r3\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB0_568\n\tshl.s\t5, r3, r1\n\tadd\t160, r1, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_2[0], r2, stack-[11]\n\tadd\tstack-[4], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_568\n\tadd\tstack-[3], r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r4\n\tadd\t2, r4, r1\n\tadd\tr1, r0, stack-[7]\n\tsload\tr1, r2\n\tand!\t1, r2, r1\n\tshr.s\t1, r2, r3\n\tand\t127, r3, r1\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr2, r3, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_233\n\tadd\tr4, r0, stack-[9]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_339\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_55[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_573\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_572\n\tld.1\t64, r4\n\tadd\t68, r4, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_57[0], r0, r1\n\tst.1\tr4, r1\n\tcontext.this\tr1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB0_75\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tadd\tr4, r0, stack-[6]\n\tshl.s\t64, r3, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r4, r1\n\tor\t@CPI0_58[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_528\n.BB0_75:\n\tsub.s!\t@CPI0_38[0], r4, r1\n\tjump.gt\t@.BB0_287\n\tst.1\t64, r4\n\tadd\t@CPI0_59[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_60[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_573\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tadd\t3, r2, r2\n\tadd\tr2, r0, stack-[6]\n\tsstore\tr2, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r4\n\tadd\tstack-[9], r0, r2\n\tsub!\tr4, r2, r1\n\tadd\t1, r2, stack-[8]\n\tadd\tstack-[12], r0, r5\n\tjump.eq\t@.BB0_102\n\tsload\tr2, r1\n\tsstore\tr4, r1\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r1\n\tadd\t1, r4, r2\n\tsstore\tr2, r1\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r6\n\tadd.ne\tr2, r0, r6\n\tsub.s!\t31, r6, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_233\n\tsub.s!\t@CPI0_38[0], r6, r1\n\tjump.gt\t@.BB0_287\n\tadd\t2, r4, r7\n\tsload\tr7, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_233\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[2]\n\tadd\tr6, r0, stack-[9]\n\tadd\tr7, r0, stack-[5]\n\tjump.lt\t@.BB0_87\n\tadd\tr3, r0, stack-[1]\n\tst.1\t0, r7\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tadd\tstack-[9], r0, r6\n\tadd\t31, r6, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r6, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[2], r0, r4\n\tadd\tstack-[5], r0, r7\n\tjump.ge\t@.BB0_87\n.BB0_86:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_86\n.BB0_87:\n\tsub.s!\t32, r6, r1\n\tjump.lt\t@.BB0_93\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r3\n\tand\t@CPI0_39[0], r3, stack-[7]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r5\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_97\n\tsub.s\t1, r5, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tadd\t1, r2, r3\n\tadd\tr0, r0, r2\n\tadd\tstack-[9], r0, r6\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[1], r0, r8\n.BB0_92:\n\tadd\tr2, r8, r4\n\tsload\tr4, r4\n\tsstore\tr1, r4\n\tadd\t1, r2, r2\n\tadd\t1, r1, r1\n\tsub!\tr1, r3, r4\n\tjump.ne\t@.BB0_92\n\tjump\t@.BB0_98\n.BB0_93:\n\tsub!\tr6, r0, r1\n\tjump.eq\t@.BB0_95\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r1\n\tjump\t@.BB0_96\n.BB0_95:\n\tadd\tr0, r0, r1\n.BB0_96:\n\tshl.s\t3, r6, r2\n\tshr\t@CPI0_97[0], r2, r2\n\txor\t@CPI0_97[0], r2, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r6, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_101\n.BB0_97:\n\tadd\tr0, r0, r2\n\tadd\tstack-[9], r0, r6\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[1], r0, r8\n.BB0_98:\n\tsub!\tr5, r6, r3\n\tadd\tstack-[12], r0, r5\n\tjump.ge\t@.BB0_100\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tshr\t@CPI0_97[0], r3, r3\n\txor\t@CPI0_97[0], r3, r3\n\tadd\tr2, r8, r2\n\tsload\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_100:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[2], r0, r4\n.BB0_101:\n\tsstore\tr7, r1\n\tadd\t3, r4, r1\n\tadd\tstack-[6], r0, r2\n\tsload\tr2, r2\n\tsstore\tr1, r2\n.BB0_102:\n\tst.1\t0, r5\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r3\n\tsstore\tr3, r0\n\tadd\t1, r3, r1\n\tsstore\tr1, r0\n\tadd\t2, r3, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r6\n\tadd.ne\tr2, r0, r6\n\tsub.s!\t31, r6, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tadd\tstack-[12], r0, r5\n\tjump.ne\t@.BB0_233\n\tsub!\tr6, r0, r1\n\tjump.eq\t@.BB0_113\n\tsub.s!\t31, r6, r1\n\tjump.le\t@.BB0_111\n\tadd\tr6, r0, stack-[6]\n\tadd\tr3, r0, stack-[9]\n\tadd\tr4, r0, stack-[7]\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tadd\t1, r1, r3\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB0_110\n.BB0_109:\n\tsstore\tr3, r0\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_109\n.BB0_110:\n\tadd\tstack-[7], r0, r2\n\tsstore\tr2, r0\n\tadd\tr1, r0, r4\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[9], r0, r3\n\tjump\t@.BB0_112\n.BB0_111:\n.BB0_112:\n\tsstore\tr4, r0\n.BB0_113:\n\tadd\t3, r3, r1\n\tsstore\tr1, r0\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_153\n\tadd\t2, r0, r2\n\tst.1\t0, r2\n\tadd\tr0, r0, r2\n.BB0_115:\n\tshl.s\t2, r2, r6\n\tadd\t@CPI0_41[0], r6, r3\n\tsload\tr3, r4\n\tsub!\tr4, r5, r4\n\tjump.eq\t@.BB0_117\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_115\n\tjump\t@.BB0_153\n.BB0_117:\n\tsub.s\t1, r1, r4\n\tshl.s\t2, r4, r7\n\tsub!\tr6, r7, r1\n\tjump.eq\t@.BB0_142\n\tadd\t@CPI0_41[0], r7, r1\n\tsload\tr1, r1\n\tsstore\tr3, r1\n\tadd\t@CPI0_61[0], r7, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_61[0], r6, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_62[0], r7, r9\n\tsload\tr9, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r4\n\tadd.ne\tr2, r0, r4\n\tsub.s!\t31, r4, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tadd\t@CPI0_62[0], r6, r8\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_233\n\tsub.s!\t@CPI0_38[0], r4, r1\n\tjump.gt\t@.BB0_287\n\tsload\tr8, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_233\n\tsub.s!\t32, r3, r1\n\tadd\tr6, r0, stack-[9]\n\tadd\tr7, r0, stack-[5]\n\tadd\tr8, r0, stack-[6]\n\tadd\tr4, r0, stack-[7]\n\tjump.lt\t@.BB0_126\n\tadd\tr3, r0, stack-[1]\n\tadd\tr9, r0, stack-[2]\n\tst.1\t0, r8\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tadd\tstack-[7], r0, r4\n\tadd\t31, r4, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r4, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[9], r0, r6\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[6], r0, r8\n\tadd\tstack-[2], r0, r9\n\tjump.ge\t@.BB0_126\n.BB0_125:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_125\n.BB0_126:\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB0_132\n\tst.1\t0, r9\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand\t@CPI0_39[0], r3, stack-[2]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r9\n\tsub!\tr9, r0, r2\n\tjump.eq\t@.BB0_136\n\tsub.s\t1, r9, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tadd\t1, r2, r3\n\tadd\tr0, r0, r2\n\tadd\tstack-[9], r0, r6\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[6], r0, r8\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[1], r0, r10\n.BB0_131:\n\tadd\tr2, r10, r4\n\tsload\tr4, r4\n\tsstore\tr1, r4\n\tadd\t1, r2, r2\n\tadd\t1, r1, r1\n\tsub!\tr1, r3, r4\n\tjump.ne\t@.BB0_131\n\tjump\t@.BB0_137\n.BB0_132:\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB0_134\n\tsload\tr9, r1\n\tjump\t@.BB0_135\n.BB0_134:\n\tadd\tr0, r0, r1\n.BB0_135:\n\tshl.s\t3, r4, r2\n\tshr\t@CPI0_97[0], r2, r2\n\txor\t@CPI0_97[0], r2, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_140\n.BB0_136:\n\tadd\tr0, r0, r2\n\tadd\tstack-[9], r0, r6\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[6], r0, r8\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[1], r0, r10\n.BB0_137:\n\tsub!\tr9, r5, r3\n\tjump.ge\t@.BB0_139\n\tshl.s\t3, r5, r3\n\tand\t248, r3, r3\n\tshr\t@CPI0_97[0], r3, r3\n\txor\t@CPI0_97[0], r3, r3\n\tadd\tr2, r10, r2\n\tsload\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_139:\n\tshl.s\t1, r5, r1\n\tor\t1, r1, r1\n\tadd\tstack-[12], r0, r5\n.BB0_140:\n\tsstore\tr8, r1\n\tadd\t@CPI0_63[0], r6, r1\n\tadd\t@CPI0_63[0], r7, r2\n\tsload\tr2, r2\n\tsstore\tr1, r2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_575\n\tsub.s\t1, r1, r4\n\tshl.s\t2, r4, r6\n.BB0_142:\n\tadd\t2, r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_41[0], r6, r1\n\tsstore\tr1, r0\n\tadd\t@CPI0_61[0], r6, r1\n\tsstore\tr1, r0\n\tadd\t@CPI0_62[0], r6, r3\n\tsload\tr3, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r7\n\tadd.ne\tr2, r0, r7\n\tsub.s!\t31, r7, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_233\n\tsub!\tr7, r0, r1\n\tjump.eq\t@.BB0_152\n\tsub.s!\t31, r7, r1\n\tjump.le\t@.BB0_150\n\tadd\tr7, r0, stack-[5]\n\tadd\tr4, r0, stack-[7]\n\tadd\tr6, r0, stack-[9]\n\tadd\tr3, r0, stack-[6]\n\tst.1\t0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tadd\t1, r1, r3\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB0_149\n.BB0_148:\n\tsstore\tr3, r0\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_148\n.BB0_149:\n\tadd\tstack-[6], r0, r2\n\tsstore\tr2, r0\n\tadd\tr1, r0, r3\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[9], r0, r6\n\tadd\tstack-[7], r0, r4\n\tjump\t@.BB0_151\n.BB0_150:\n.BB0_151:\n\tsstore\tr3, r0\n.BB0_152:\n\tadd\t@CPI0_63[0], r6, r1\n\tsstore\tr1, r0\n\tadd\t2, r0, r1\n\tsstore\tr1, r4\n.BB0_153:\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tst.1\tr2, r5\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_64[0], r0, r4\n\tadd\tstack-[11], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_572\n\tadd\tstack-[10], r0, r2\n\tadd\t1, r2, stack-[10]\n\tld.1\t128, r1\n\tsub!\tstack-[10], r1, r2\n\tjump.lt\t@.BB0_66\n\tjump\t@.BB0_342\n.BB0_155:\n\tsub.s!\t@CPI0_32[0], r2, r4\n\tjump.eq\t@.BB0_263\n\tsub.s!\t@CPI0_33[0], r2, r4\n\tjump.eq\t@.BB0_219\n\tsub.s!\t@CPI0_34[0], r2, r1\n\tjump.ne\t@.BB0_572\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_572\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tjump\t@.BB0_251\n.BB0_160:\n\tsub.s!\t@CPI0_17[0], r2, r4\n\tjump.eq\t@.BB0_268\n\tsub.s!\t@CPI0_18[0], r2, r4\n\tjump.eq\t@.BB0_228\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.ne\t@.BB0_572\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_572\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_572\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t2, r0, r2\n\tsload\tr2, r3\n\tsub!\tr1, r3, r3\n\tjump.ge\t@.BB0_572\n\tst.1\t0, r2\n\tshl.s\t2, r1, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\t@CPI0_61[0], r2, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t@CPI0_41[0], r2, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI0_62[0], r2, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r2\n\tadd\t@CPI0_63[0], r2, r2\n\tjump\t@.BB0_261\n.BB0_167:\n\tsub.s!\t@CPI0_25[0], r2, r4\n\tjump.eq\t@.BB0_280\n\tsub.s!\t@CPI0_26[0], r2, r1\n\tjump.eq\t@.BB0_234\n\tsub.s!\t@CPI0_27[0], r2, r1\n\tjump.ne\t@.BB0_572\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_572\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_288\n\tand\t@CPI0_3[0], r1, r1\n\tsstore\tr0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_341\n.BB0_173:\n\tsub.s!\t@CPI0_10[0], r2, r4\n\tjump.eq\t@.BB0_284\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.eq\t@.BB0_237\n\tsub.s!\t@CPI0_12[0], r2, r1\n\tjump.ne\t@.BB0_572\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_572\n\tadd\t2, r0, r1\n\tsload\tr1, r6\n\tsub.s!\t@CPI0_38[0], r6, r2\n\tjump.gt\t@.BB0_287\n\tshl.s\t5, r6, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_39[0], r2, r2\n\tsub.s!\t@CPI0_40[0], r2, r3\n\tjump.gt\t@.BB0_287\n\tadd\t128, r2, r5\n\tst.1\t64, r5\n\tst.1\t128, r6\n\tst.1\t0, r1\n\tsub!\tr6, r0, r1\n\tjump.eq\t@.BB0_267\n\tadd\t160, r0, r7\n\tadd\t@CPI0_41[0], r0, r8\n\tsub.s\t32, r0, r9\n\tadd\tr0, r0, r10\n\tadd\tr6, r0, stack-[5]\n.BB0_181:\n\tsub.s!\t@CPI0_40[0], r5, r1\n\tjump.gt\t@.BB0_287\n\tadd\t128, r5, r1\n\tst.1\t64, r1\n\tsload\tr8, r1\n\tst.1.inc\tr5, r1, r1\n\tor\t1, r8, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t2, r8, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r12\n\tadd.ne\tr4, r0, r12\n\tsub.s!\t31, r12, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_233\n\tld.1\t64, r11\n\tst.1.inc\tr11, r12, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_188\n\tadd\tr4, r0, stack-[6]\n\tadd\tr12, r0, stack-[9]\n\tadd\tr11, r0, stack-[7]\n\tadd\tr10, r0, stack-[10]\n\tadd\tr8, r0, stack-[8]\n\tadd\tr7, r0, stack-[11]\n\tadd\tr5, r0, stack-[12]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tadd\tstack-[9], r0, r12\n\tsub!\tr12, r0, r2\n\tadd\tstack-[5], r0, r6\n\tadd\tstack-[11], r0, r7\n\tsub.s\t32, r0, r9\n\tadd\tstack-[10], r0, r10\n\tjump.eq\t@.BB0_189\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[8], r0, r8\n\tadd\tstack-[7], r0, r11\n\tadd\tstack-[6], r0, r13\n.BB0_187:\n\tadd\tr13, r1, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r12, r3\n\tjump.lt\t@.BB0_187\n\tjump\t@.BB0_190\n.BB0_188:\n\tand\t@CPI0_98[0], r2, r1\n\tst.1\tr4, r1\n\tsub!\tr12, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_190\n.BB0_189:\n\tadd\tr0, r0, r1\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[8], r0, r8\n\tadd\tstack-[7], r0, r11\n.BB0_190:\n\tadd\t63, r1, r1\n\tand\tr1, r9, r2\n\tadd\tr2, r11, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_38[0], r1, r3\n\tjump.gt\t@.BB0_287\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_287\n\tst.1\t64, r1\n\tadd\t64, r5, r1\n\tst.1\tr1, r11\n\tadd\t3, r8, r1\n\tsload\tr1, r1\n\tadd\t96, r5, r2\n\tst.1\tr2, r1\n\tst.1.inc\tr7, r5, r7\n\tadd\t4, r8, r8\n\tld.1\t64, r5\n\tadd\t1, r10, r10\n\tsub!\tr10, r6, r1\n\tjump.lt\t@.BB0_181\n\tjump\t@.BB0_267\n.BB0_193:\n\tsub.s!\t100, r3, r2\n\tjump.lt\t@.BB0_572\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_572\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[12]\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, stack-[10]\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_572\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_82[0], r0, r1\n\tst.1\t128, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr2, r0, stack-[9]\n\tjump.ne\t@.BB0_313\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_319\n.BB0_198:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_572\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_572\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_572\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_79[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_202:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_572\n\tadd\t6, r0, r3\n\tsload\tr3, r2\n\tsub.s!\t@CPI0_38[0], r2, r1\n\tjump.gt\t@.BB0_287\n\tshl.s\t5, r2, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_39[0], r1, r1\n\tsub.s!\t@CPI0_40[0], r1, r4\n\tjump.gt\t@.BB0_287\n\tadd\t128, r1, r1\n\tst.1\t64, r1\n\tst.1\t128, r2\n\tst.1\t0, r3\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_209\n\tadd\t160, r0, r3\n\tadd\t@CPI0_47[0], r0, r4\n\tadd\tr0, r0, r5\n.BB0_207:\n\tsub.s!\t@CPI0_89[0], r1, r6\n\tjump.gt\t@.BB0_287\n\tadd\t64, r1, r6\n\tst.1\t64, r6\n\tsload\tr4, r6\n\tst.1.inc\tr1, r6, r6\n\tadd\t1, r4, r7\n\tsload\tr7, r7\n\tand\t@CPI0_2[0], r7, r7\n\tst.1\tr6, r7\n\tst.1.inc\tr3, r1, r3\n\tadd\t2, r4, r4\n\tld.1\t64, r1\n\tadd\t1, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_207\n.BB0_209:\n\tadd\t32, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\t128, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_212\n\tadd\t160, r0, r4\n\tadd\tr0, r0, r5\n.BB0_211:\n\tld.1.inc\tr4, r6, r4\n\tld.1.inc\tr6, r6, r7\n\tst.1.inc\tr2, r6, r6\n\tld.1\tr7, r7\n\tand\t@CPI0_2[0], r7, r7\n\tst.1\tr6, r7\n\tadd\t64, r2, r2\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_211\n.BB0_212:\n\tsub\tr2, r1, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_213:\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_572\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_572\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.gt\t@.BB0_572\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[12], r2, r2\n\tjump.ge\t@.BB0_572\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_NFTListInfo__dyn, @DEFAULT_UNWIND\n\tjump\t@.BB0_260\n.BB0_219:\n\tsub.s!\t132, r3, r2\n\tjump.lt\t@.BB0_572\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_572\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_572\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_572\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_38[0], r2, r4\n\tjump.gt\t@.BB0_572\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_572\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_38[0], r1, r4\n\tjump.gt\t@.BB0_572\n\tadd\tr2, r1, r1\n\tadd\t36, r1, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB0_572\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_79[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_228:\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_572\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_572\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[12]\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_572\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\t2, r1, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r1\n\tshr.s\t1, r2, r3\n\tand\t127, r3, r1\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr2, r3, r2\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_338\n.BB0_233:\n\tadd\t@CPI0_93[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_66[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_234:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_572\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[16]\n\tadd\t0, r0, stack-[15]\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t16, r4, r4\n.BB0_236:\n\tshl.s\t5, r4, r4\n\tadd\t@CPI0_67[0], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tst.1\t128, r1\n\tadd\t@CPI0_79[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_237:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_572\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_572\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_2[0], r6, r1\n\tjump.gt\t@.BB0_572\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_288\n\tsub!\tr6, r0, r2\n\tjump.ne\t@.BB0_340\n\tadd\t@CPI0_43[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t38, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_44[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_45[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_46[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_243:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_572\n\tadd\t6, r0, r3\n\tsload\tr3, r1\n\tsub!\tr1, r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_248\n\tst.1\t0, r3\n\tadd\tr0, r0, r3\n\tadd\tr0, r0, r2\n.BB0_246:\n\tshl.s\t1, r3, r4\n\tadd\t@CPI0_47[0], r4, r4\n\tsload\tr4, r4\n\tadd\tr4, r2, r2\n\tsub!\tr2, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t1, r4, r4\n\tjump.eq\t@.BB0_503\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_246\n.BB0_248:\n\tst.1\t128, r1\n\tst.1\t160, r2\n\tadd\t@CPI0_96[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_249:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_572\n\tsload\tr0, r1\n.BB0_251:\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_79[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_252:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_572\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_572\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_572\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tjump\t@.BB0_259\n.BB0_256:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_572\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_572\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n.BB0_259:\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n.BB0_260:\n\tadd\tr1, r0, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\t1, r2, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tsload\tr2, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t2, r2, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r2\n\tadd\t3, r2, r2\n.BB0_261:\n\tsload\tr2, r5\n\tadd\tr1, r0, r4\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tstack-[11], r0, r2\n\tadd\tstack-[12], r0, r3\n\tnear_call\tr0, @abi_encode_uint256_uint256_string_uint256, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r3\n.BB0_262:\n\tsub\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_263:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_572\n\tadd\t3, r0, r1\n\tsload\tr1, r6\n\tsub.s!\t@CPI0_38[0], r6, r2\n\tjump.gt\t@.BB0_287\n\tshl.s\t5, r6, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_39[0], r2, r2\n\tsub.s!\t@CPI0_40[0], r2, r3\n\tjump.gt\t@.BB0_287\n\tadd\t128, r2, r5\n\tst.1\t64, r5\n\tst.1\t128, r6\n\tst.1\t0, r1\n\tsub!\tr6, r0, r1\n\tjump.ne\t@.BB0_349\n.BB0_267:\n\tadd\tr5, r0, stack-[12]\n\tadd\t32, r0, r1\n\tst.1.inc\tr5, r1, r2\n\tadd\t128, r0, r1\n\tnear_call\tr0, @abi_encode_array_struct_NFTListInfo_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r3\n\tjump\t@.BB0_262\n.BB0_268:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_572\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_572\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_572\n\tadd\t256, r0, r2\n\tst.1\t64, r2\n\tst.1\t128, r0\n\tst.1\t160, r0\n\tadd\t96, r0, r2\n\tst.1\t192, r2\n\tst.1\t224, r0\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r5\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[4]\n\tsub.s!\t@CPI0_40[0], r1, r1\n\tjump.gt\t@.BB0_287\n\tadd\tstack-[4], r0, r2\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[12], r0, r3\n\tsload\tr3, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\t1, r3, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t2, r3, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r7\n\tadd.ne\tr4, r0, r7\n\tsub.s!\t31, r7, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_233\n\tld.1\t64, r6\n\tst.1.inc\tr6, r7, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_375\n\tadd\tr4, r0, stack-[8]\n\tadd\tr7, r0, stack-[9]\n\tadd\tr6, r0, stack-[10]\n\tadd\tr5, r0, stack-[11]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tadd\tstack-[9], r0, r7\n\tsub!\tr7, r0, r2\n\tadd\tr0, r0, r2\n\tadd\tstack-[11], r0, r5\n\tadd\tstack-[10], r0, r6\n\tadd\tstack-[8], r0, r8\n\tjump.eq\t@.BB0_376\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_279:\n\tadd\tr8, r2, r3\n\tsload\tr1, r4\n\tst.1\tr3, r4\n\tadd\t1, r1, r1\n\tadd\t32, r2, r2\n\tsub!\tr2, r7, r3\n\tjump.lt\t@.BB0_279\n\tjump\t@.BB0_376\n.BB0_280:\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_572\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_572\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\t1, r0, r2\n\tsload\tr2, r2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r3\n\tadd\t@CPI0_82[0], r0, r1\n\tst.1\t128, r1\n\tadd\tr3, r0, stack-[12]\n\tst.1\t132, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr2, r0, stack-[11]\n\tjump.ne\t@.BB0_289\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_295\n.BB0_284:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_572\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_572\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r5\n\tadd\t192, r0, r1\n\tst.1\t64, r1\n\tst.1\t128, r5\n\tcontext.caller\tr4\n\tst.1\t160, r4\n\tadd\t6, r0, r2\n\tsload\tr2, r1\n\tsub.s!\t@CPI0_38[0], r1, r3\n\tjump.le\t@.BB0_309\n.BB0_287:\n\tadd\t@CPI0_93[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_66[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_288:\n\tadd\t@CPI0_43[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_80[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_81[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_289:\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\t128, r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_292\n\tptr.add\tr1, r0, r7\n.BB0_291:\n\tld.inc\tr7, r8, r7\n\tst.1.inc\tr9, r8, r9\n\tsub.s!\t160, r9, r8\n\tjump.ne\t@.BB0_291\n.BB0_292:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_294\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_294:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_332\n.BB0_295:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tor\t128, r2, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r3\n\tjump.lt\t@.BB0_572\n\tld.1\t128, r3\n\tsub.s!\t@CPI0_2[0], r3, r4\n\tjump.gt\t@.BB0_572\n\tcontext.caller\tr4\n\tsub!\tr3, r4, r3\n\tjump.ne\t@.BB0_337\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\t2, r1, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r1\n\tshr.s\t1, r2, r3\n\tand\t127, r3, r1\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr2, r3, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_233\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_373\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_385\n\tadd\t@CPI0_55[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_573\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_572\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tcontext.this\tr1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\t36, r3, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_57[0], r0, r1\n\tst.1\tr3, r1\n\tcontext.caller\tr1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, stack-[9]\n\tadd\t4, r3, r2\n\tadd\tr2, r0, stack-[8]\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[11], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_306\n\tadd\tstack-[9], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_58[0], r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_406\n.BB0_306:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t@CPI0_38[0], r1, r1\n\tjump.gt\t@.BB0_287\n\tadd\tstack-[9], r0, r3\n\tst.1\t64, r3\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_86[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[8], r0, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_422\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_423\n.BB0_309:\n\tadd\t1, r1, r3\n\tsstore\tr2, r3\n\tshl.s\t1, r1, r1\n\tadd\t@CPI0_47[0], r1, r2\n\tadd\tr5, r0, stack-[12]\n\tsstore\tr2, r5\n\tadd\t@CPI0_48[0], r1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tand\t@CPI0_2[0], r4, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tst.1\t0, r4\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_50[0], r0, r4\n.BB0_311:\n\tcontext.caller\tr5\n.BB0_312:\n\tjump\t@.BB0_341\n.BB0_313:\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_316\n\tadd\t128, r0, r7\n\tptr.add\tr1, r0, r8\n.BB0_315:\n\tld.inc\tr8, r9, r8\n\tst.1.inc\tr7, r9, r7\n\tsub.s!\t160, r7, r9\n\tjump.ne\t@.BB0_315\n.BB0_316:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_318\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_318:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_343\n.BB0_319:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tor\t128, r2, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r3\n\tjump.lt\t@.BB0_572\n\tld.1\t128, r3\n\tsub.s!\t@CPI0_2[0], r3, r4\n\tjump.gt\t@.BB0_572\n\tcontext.caller\tr4\n\tsub!\tr3, r4, r3\n\tjump.ne\t@.BB0_337\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\t2, r1, r1\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r1\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB0_233\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_373\n\tadd\t@CPI0_55[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_573\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_572\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tcontext.this\tr1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\t36, r3, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_57[0], r0, r1\n\tst.1\tr3, r1\n\tcontext.caller\tr1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, stack-[8]\n\tadd\t4, r3, r2\n\tadd\tr1, r0, stack-[6]\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[9], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_329\n\tadd\tstack-[8], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_58[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_411\n.BB0_329:\n\tadd\tstack-[8], r0, r1\n\tsub.s!\t@CPI0_92[0], r1, r1\n\tjump.ge\t@.BB0_287\n\tadd\tstack-[8], r0, r3\n\tst.1\t64, r3\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_86[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[7], r0, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_443\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_444\n.BB0_332:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_335\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_334:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_334\n.BB0_335:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_348\n\tjump\t@.BB0_347\n.BB0_337:\n\tadd\t@CPI0_84[0], r0, r3\n\tst.1\tr1, r3\n\tand\t@CPI0_2[0], r4, r3\n\tor\t132, r2, r4\n\tst.1\tr4, r3\n\tadd\t164, r2, r2\n\tadd\tstack-[12], r0, r3\n\tst.1\tr2, r3\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_70[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_338:\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_362\n.BB0_339:\n\tld.1\t64, r1\n\tadd\t@CPI0_65[0], r0, r2\n\tjump\t@.BB0_374\n.BB0_340:\n\tand\t@CPI0_3[0], r1, r1\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_5[0], r0, r4\n.BB0_341:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_572\n.BB0_342:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_343:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_346\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_345:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_345\n.BB0_346:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_348\n.BB0_347:\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_348:\n\tshl.s\t96, r3, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_349:\n\tadd\t160, r0, r7\n\tadd\t@CPI0_72[0], r0, r8\n\tsub.s\t32, r0, r9\n\tadd\tr0, r0, r10\n\tadd\tr6, r0, stack-[5]\n.BB0_350:\n\tsub.s!\t@CPI0_40[0], r5, r1\n\tjump.gt\t@.BB0_287\n\tadd\t128, r5, r1\n\tst.1\t64, r1\n\tsload\tr8, r1\n\tst.1.inc\tr5, r1, r1\n\tadd\t1, r8, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t2, r8, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r12\n\tadd.ne\tr4, r0, r12\n\tsub.s!\t31, r12, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_233\n\tld.1\t64, r11\n\tst.1.inc\tr11, r12, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_357\n\tadd\tr4, r0, stack-[6]\n\tadd\tr12, r0, stack-[9]\n\tadd\tr11, r0, stack-[7]\n\tadd\tr10, r0, stack-[10]\n\tadd\tr8, r0, stack-[8]\n\tadd\tr7, r0, stack-[11]\n\tadd\tr5, r0, stack-[12]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tadd\tstack-[9], r0, r12\n\tsub!\tr12, r0, r2\n\tadd\tstack-[5], r0, r6\n\tadd\tstack-[11], r0, r7\n\tsub.s\t32, r0, r9\n\tadd\tstack-[10], r0, r10\n\tjump.eq\t@.BB0_358\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[8], r0, r8\n\tadd\tstack-[7], r0, r11\n\tadd\tstack-[6], r0, r13\n.BB0_356:\n\tadd\tr13, r1, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r12, r3\n\tjump.lt\t@.BB0_356\n\tjump\t@.BB0_359\n.BB0_357:\n\tand\t@CPI0_98[0], r2, r1\n\tst.1\tr4, r1\n\tsub!\tr12, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_359\n.BB0_358:\n\tadd\tr0, r0, r1\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[8], r0, r8\n\tadd\tstack-[7], r0, r11\n.BB0_359:\n\tadd\t63, r1, r1\n\tand\tr1, r9, r2\n\tadd\tr2, r11, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_38[0], r1, r3\n\tjump.gt\t@.BB0_287\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_287\n\tst.1\t64, r1\n\tadd\t64, r5, r1\n\tst.1\tr1, r11\n\tadd\t3, r8, r1\n\tsload\tr1, r1\n\tadd\t96, r5, r2\n\tst.1\tr2, r1\n\tst.1.inc\tr7, r5, r7\n\tadd\t4, r8, r8\n\tld.1\t64, r5\n\tadd\t1, r10, r10\n\tsub!\tr10, r6, r1\n\tjump.lt\t@.BB0_350\n\tjump\t@.BB0_267\n.BB0_362:\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI0_67[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_68[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_573\n\tld\tr1, r1\n\tsub!\tstack-[10], r1, r1\n\tjump.ge\t@.BB0_384\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t@CPI0_40[0], r1, r1\n\tjump.gt\t@.BB0_287\n\tadd\tstack-[10], r0, r2\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[9], r0, r3\n\tsload\tr3, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\t1, r3, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr2, r1\n\tadd\t2, r3, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r5\n\tadd.ne\tr4, r0, r5\n\tadd\tr5, r0, stack-[8]\n\tsub.s!\t31, r5, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_233\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[7]\n\tadd\tstack-[8], r0, r5\n\tst.1.inc\tr4, r5, r4\n\tadd\tr4, r0, stack-[5]\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_401\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tadd\tstack-[8], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tr0, r0, r2\n\tadd\tstack-[5], r0, r6\n\tjump.eq\t@.BB0_402\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_372:\n\tadd\tr6, r2, r3\n\tsload\tr1, r4\n\tst.1\tr3, r4\n\tadd\t1, r1, r1\n\tadd\t32, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB0_372\n\tjump\t@.BB0_402\n.BB0_373:\n\tld.1\t64, r1\n\tadd\t@CPI0_85[0], r0, r2\n.BB0_374:\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[12], r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_66[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_375:\n\tand\t@CPI0_98[0], r2, r1\n\tst.1\tr4, r1\n\tsub!\tr7, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n.BB0_376:\n\tadd\t63, r2, r1\n\tand\t@CPI0_99[0], r1, r2\n\tadd\tr2, r6, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_38[0], r1, r3\n\tjump.gt\t@.BB0_287\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_287\n\tst.1\t64, r1\n\tadd\tstack-[4], r0, r2\n\tadd\t64, r2, r1\n\tst.1\tr1, r6\n\tadd\t96, r2, r1\n\tadd\tstack-[12], r0, r2\n\tadd\t3, r2, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tsload\tr5, r4\n\tsub.s!\t@CPI0_38[0], r4, r1\n\tjump.gt\t@.BB0_287\n\tshl.s\t5, r4, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_39[0], r1, r1\n\tld.1\t64, r2\n\tadd\tr2, r1, r1\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_38[0], r1, r3\n\tjump.gt\t@.BB0_287\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_287\n\tst.1\t64, r1\n\tadd\tstack-[3], r0, r1\n\tadd\tr4, r0, stack-[5]\n\tst.1\tr1, r4\n\tst.1\t0, r5\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tadd\tstack-[5], r0, r6\n\tsub!\tr6, r0, r2\n\tsub.s\t32, r0, r5\n\tjump.ne\t@.BB0_387\n.BB0_383:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\t64, r0, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t64, r2, r2\n\tadd\tstack-[4], r0, r1\n\tnear_call\tr0, @abi_encode_struct_NFTListInfo, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tsub.s\tstack-[12], r2, r1\n\tadd\tstack-[11], r0, r3\n\tst.1\tr3, r1\n\tadd\tstack-[3], r0, r1\n\tnear_call\tr0, @abi_encode_array_struct_NFTListInfo_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r3\n\tsub\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_384:\n\tld.1\t64, r1\n\tadd\t36, r1, r2\n\tadd\tstack-[10], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_69[0], r0, r2\n\tst.1\tr1, r2\n\tcontext.caller\tr2\n\tand\t@CPI0_2[0], r2, r2\n\tadd\t4, r1, r3\n\tst.1\tr3, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_70[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_385:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_80[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_43[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n.BB0_386:\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_58[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_387:\n\tld\tr1, r7\n\tadd\tr0, r0, r8\n\tadd\tstack-[3], r0, r9\n.BB0_388:\n\tld.1\t64, r10\n\tsub.s!\t@CPI0_40[0], r10, r1\n\tjump.gt\t@.BB0_287\n\tadd\t128, r10, r1\n\tst.1\t64, r1\n\tsload\tr7, r1\n\tst.1.inc\tr10, r1, r1\n\tadd\t1, r7, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t2, r7, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r12\n\tadd.ne\tr4, r0, r12\n\tsub.s!\t31, r12, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_233\n\tld.1\t64, r11\n\tst.1.inc\tr11, r12, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_395\n\tadd\tr4, r0, stack-[6]\n\tadd\tr12, r0, stack-[7]\n\tadd\tr11, r0, stack-[10]\n\tadd\tr10, r0, stack-[11]\n\tadd\tr9, r0, stack-[8]\n\tadd\tr8, r0, stack-[9]\n\tadd\tr7, r0, stack-[12]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tadd\tstack-[7], r0, r12\n\tsub!\tr12, r0, r2\n\tadd\tstack-[9], r0, r8\n\tadd\tstack-[8], r0, r9\n\tjump.eq\t@.BB0_396\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tsub.s\t32, r0, r5\n\tadd\tstack-[5], r0, r6\n\tadd\tstack-[12], r0, r7\n\tadd\tstack-[11], r0, r10\n\tadd\tstack-[10], r0, r11\n\tadd\tstack-[6], r0, r13\n.BB0_394:\n\tadd\tr13, r1, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r12, r3\n\tjump.lt\t@.BB0_394\n\tjump\t@.BB0_397\n.BB0_395:\n\tand\t@CPI0_98[0], r2, r1\n\tst.1\tr4, r1\n\tsub!\tr12, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_397\n.BB0_396:\n\tadd\tr0, r0, r1\n\tsub.s\t32, r0, r5\n\tadd\tstack-[5], r0, r6\n\tadd\tstack-[12], r0, r7\n\tadd\tstack-[11], r0, r10\n\tadd\tstack-[10], r0, r11\n.BB0_397:\n\tadd\t63, r1, r1\n\tand\tr1, r5, r2\n\tadd\tr2, r11, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_38[0], r1, r3\n\tjump.gt\t@.BB0_287\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_287\n\tadd\t32, r9, r9\n\tst.1\t64, r1\n\tadd\t64, r10, r1\n\tst.1\tr1, r11\n\tadd\t3, r7, r1\n\tsload\tr1, r1\n\tadd\t96, r10, r2\n\tst.1\tr2, r1\n\tst.1\tr9, r10\n\tadd\t4, r7, r7\n\tadd\t1, r8, r8\n\tsub!\tr8, r6, r1\n\tjump.lt\t@.BB0_388\n\tjump\t@.BB0_383\n.BB0_400:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_52[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_53[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t43, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_43[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_54[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_401:\n\tand\t@CPI0_98[0], r2, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\tr2, r1\n\tsub!\tstack-[8], r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n.BB0_402:\n\tadd\t63, r2, r1\n\tand\t@CPI0_99[0], r1, r2\n\tadd\tstack-[7], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_38[0], r1, r3\n\tjump.gt\t@.BB0_287\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_287\n\tst.1\t64, r1\n\tadd\tstack-[10], r0, r2\n\tadd\t64, r2, r1\n\tadd\tstack-[7], r0, r3\n\tst.1\tr1, r3\n\tadd\t96, r2, r2\n\tadd\tstack-[9], r0, r1\n\tadd\t3, r1, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r1\n\tadd\t@CPI0_71[0], r0, r1\n\tld.1\t64, r2\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\tr2, r0, stack-[9]\n\tadd\t4, r2, r1\n\tcontext.caller\tr2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[11], r0, r2\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_475\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_481\n.BB0_406:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_409\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_408:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_408\n.BB0_409:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_348\n\tjump\t@.BB0_347\n.BB0_411:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_414\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_413:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_413\n.BB0_414:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_348\n\tjump\t@.BB0_347\n.BB0_416:\n\tadd\tr0, r0, r2\n.BB0_417:\n\tadd\t6, r0, r1\n\tsload\tr1, r1\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_568\n\tadd\tr2, r0, stack-[11]\n\tshl.s\t1, r2, r1\n\tadd\t@CPI0_47[0], r1, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\t@CPI0_48[0], r1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[12], r0, r4\n\tsub!\tr2, r4, r3\n\tjump.lt\t@.BB0_503\n\tsub\tr2, r4, r2\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r2\n\tadd\t1, r2, r2\n\tsub.s!\tstack-[10], r2, r1\n\tjump.lt\t@.BB0_417\n\tld.1\t128, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_65\n\tjump\t@.BB0_342\n.BB0_422:\n\tadd\tstack-[9], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_66[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_486\n.BB0_423:\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_426\n\tshl.s\t5, r4, r5\n\tadd\tstack-[9], r0, r7\n\tadd\tr7, r5, r5\n\tptr.add\tr1, r0, r6\n.BB0_425:\n\tld.inc\tr6, r8, r6\n\tst.1.inc\tr7, r8, r7\n\tsub!\tr7, r5, r8\n\tjump.ne\t@.BB0_425\n.BB0_426:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_428\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tstack-[9], r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_428:\n\tadd\t31, r3, r1\n\tand\t@CPI0_99[0], r1, r4\n\tadd\tstack-[9], r4, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_38[0], r1, r5\n\tjump.gt\t@.BB0_287\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_287\n\tst.1\t64, r1\n\tsub.s!\t@CPI0_87[0], r3, r4\n\tjump.gt\t@.BB0_572\n\tsub.s!\t32, r3, r4\n\tjump.lt\t@.BB0_572\n\tadd\tstack-[9], r0, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_38[0], r4, r5\n\tjump.gt\t@.BB0_572\n\tadd\tstack-[9], r3, r5\n\tadd\tstack-[9], r4, r3\n\tadd\t31, r3, r4\n\tsub!\tr4, r5, r6\n\tadd\tr0, r0, r6\n\tadd.ge\t@CPI0_51[0], r0, r6\n\tand\t@CPI0_51[0], r4, r4\n\tand\t@CPI0_51[0], r5, r7\n\txor\tr4, r7, r8\n\tsub!\tr4, r7, r4\n\tadd\tr0, r0, r4\n\tadd.lt\t@CPI0_51[0], r0, r4\n\tsub.s!\t@CPI0_51[0], r8, r7\n\tadd.ne\tr6, r0, r4\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_572\n\tld.1.inc\tr3, r3, r4\n\tsub.s!\t@CPI0_38[0], r3, r6\n\tjump.gt\t@.BB0_287\n\tadd\t31, r3, r6\n\tand\t@CPI0_99[0], r6, r6\n\tadd\t63, r6, r6\n\tand\t@CPI0_99[0], r6, r2\n\tadd\tr2, r1, r2\n\tsub.s!\t@CPI0_38[0], r2, r6\n\tjump.gt\t@.BB0_287\n\tst.1\t64, r2\n\tst.1.inc\tr1, r3, r2\n\tadd\tr3, r4, r6\n\tsub!\tr6, r5, r5\n\tjump.gt\t@.BB0_572\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_440\n\tadd\tr0, r0, r5\n.BB0_439:\n\tadd\tr5, r2, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_439\n.BB0_440:\n\tadd\tr3, r2, r2\n\tst.1\tr2, r0\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_40[0], r2, r2\n\tjump.gt\t@.BB0_287\n\tadd\tstack-[11], r0, r3\n\tadd\t128, r3, r2\n\tst.1\t64, r2\n\tadd\t64, r3, r2\n\tst.1\tr2, r1\n\tadd\t32, r3, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tst.1\tr3, r1\n\tadd\t96, r3, r1\n\tst.1\tr1, r0\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_533\n\tadd\tstack-[11], r0, r1\n\tnear_call\tr0, @array_push_from_struct_NFTListInfo_to_array_struct_NFTListInfo_storage_dyn_ptr, @DEFAULT_UNWIND\n\tjump\t@.BB0_534\n.BB0_443:\n\tadd\tstack-[8], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_66[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_491\n.BB0_444:\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_447\n\tshl.s\t5, r4, r5\n\tadd\tstack-[8], r0, r7\n\tadd\tr7, r5, r5\n\tptr.add\tr1, r0, r6\n.BB0_446:\n\tld.inc\tr6, r8, r6\n\tst.1.inc\tr7, r8, r7\n\tsub!\tr7, r5, r8\n\tjump.ne\t@.BB0_446\n.BB0_447:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_449\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tstack-[8], r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_449:\n\tadd\t31, r3, r1\n\tand\t@CPI0_99[0], r1, r4\n\tadd\tstack-[8], r4, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_38[0], r1, r5\n\tjump.gt\t@.BB0_287\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_287\n\tst.1\t64, r1\n\tsub.s!\t@CPI0_87[0], r3, r4\n\tjump.gt\t@.BB0_572\n\tsub.s!\t32, r3, r4\n\tjump.lt\t@.BB0_572\n\tadd\tstack-[8], r0, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_38[0], r4, r5\n\tjump.gt\t@.BB0_572\n\tadd\tstack-[8], r3, r5\n\tadd\tstack-[8], r4, r3\n\tadd\t31, r3, r4\n\tsub!\tr4, r5, r6\n\tadd\tr0, r0, r6\n\tadd.ge\t@CPI0_51[0], r0, r6\n\tand\t@CPI0_51[0], r4, r4\n\tand\t@CPI0_51[0], r5, r7\n\txor\tr4, r7, r8\n\tsub!\tr4, r7, r4\n\tadd\tr0, r0, r4\n\tadd.lt\t@CPI0_51[0], r0, r4\n\tsub.s!\t@CPI0_51[0], r8, r7\n\tadd.ne\tr6, r0, r4\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_572\n\tld.1.inc\tr3, r3, r4\n\tsub.s!\t@CPI0_38[0], r3, r6\n\tjump.gt\t@.BB0_287\n\tadd\t31, r3, r6\n\tand\t@CPI0_99[0], r6, r6\n\tadd\t63, r6, r6\n\tand\t@CPI0_99[0], r6, r2\n\tadd\tr2, r1, r2\n\tsub.s!\t@CPI0_38[0], r2, r6\n\tjump.gt\t@.BB0_287\n\tst.1\t64, r2\n\tst.1.inc\tr1, r3, r2\n\tadd\tr3, r4, r6\n\tsub!\tr6, r5, r5\n\tjump.gt\t@.BB0_572\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_461\n\tadd\tr0, r0, r5\n.BB0_460:\n\tadd\tr5, r2, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_460\n.BB0_461:\n\tadd\tr3, r2, r2\n\tst.1\tr2, r0\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[5]\n\tsub.s!\t@CPI0_40[0], r2, r2\n\tjump.gt\t@.BB0_287\n\tadd\tstack-[5], r0, r3\n\tadd\t128, r3, r2\n\tst.1\t64, r2\n\tadd\t64, r3, r2\n\tst.1\tr2, r1\n\tadd\t32, r3, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tst.1\tr3, r1\n\tadd\t96, r3, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_67[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_68[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_573\n\tld\tr1, r1\n\tsub!\tstack-[12], r1, r1\n\tjump.ge\t@.BB0_541\n\tadd\tstack-[5], r0, r1\n\tnear_call\tr0, @array_push_from_struct_NFTListInfo_to_array_struct_NFTListInfo_storage_dyn_ptr, @DEFAULT_UNWIND\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r2\n\tsstore\tr2, r0\n\tadd\t1, r2, r1\n\tsstore\tr1, r0\n\tadd\tr2, r0, stack-[8]\n\tadd\t2, r2, r1\n\tadd\tr1, r0, stack-[7]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[9]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_233\n\tsub!\tstack-[9], r0, r1\n\tjump.eq\t@.BB0_474\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_473\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tadd\t1, r1, r3\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB0_472\n.BB0_471:\n\tsstore\tr3, r0\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_471\n.BB0_472:\n\tadd\tstack-[7], r0, r2\n\tsstore\tr2, r0\n\tadd\tr1, r0, stack-[7]\n.BB0_473:\n\tadd\tstack-[7], r0, r1\n\tsstore\tr1, r0\n.BB0_474:\n\tadd\tstack-[8], r0, r1\n\tadd\t3, r1, r1\n\tsstore\tr1, r0\n\tjump\t@.BB0_547\n.BB0_475:\n\tadd\tstack-[9], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_66[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[8], r0, r10\n\tjump.eq\t@.BB0_478\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[9], r0, r8\n.BB0_477:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB0_477\n.BB0_478:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_480\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[9], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_480:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_496\n.BB0_481:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[9], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_38[0], r1, r4\n\tjump.gt\t@.BB0_287\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_287\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_572\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r3\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tadd\tr3, r0, stack-[11]\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_501\n\tadd\t68, r1, r2\n\tadd\t@CPI0_78[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_43[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tjump\t@.BB0_386\n.BB0_486:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_489\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_488:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_488\n.BB0_489:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_348\n\tjump\t@.BB0_495\n.BB0_491:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_494\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_493:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_493\n.BB0_494:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_348\n.BB0_495:\n\tshl.s\t5, r5, r5\n\tjump\t@.BB0_347\n.BB0_496:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_499\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_498:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_498\n.BB0_499:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_348\n\tjump\t@.BB0_347\n.BB0_501:\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[11], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.eq\t@.BB0_504\n.BB0_503:\n\tadd\t@CPI0_93[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_66[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_504:\n\tsstore\tr1, r2\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_55[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr1, r0, stack-[11]\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_573\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_572\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tcontext.caller\tr1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\t36, r3, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_57[0], r0, r1\n\tst.1\tr3, r1\n\tcontext.this\tr1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, stack-[9]\n\tadd\t4, r3, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[11], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_508\n\tadd\tstack-[9], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_58[0], r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_536\n.BB0_508:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t@CPI0_38[0], r1, r1\n\tjump.gt\t@.BB0_287\n\tadd\tstack-[9], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_59[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_60[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_573\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr2, r1\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_38[0], r2, r2\n\tjump.gt\t@.BB0_287\n\tadd\tstack-[11], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tadd\tstack-[11], r0, r2\n\tshl.s\t2, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @copy_struct_to_storage_from_struct_NFTListInfo_to_struct_NFTListInfo, @DEFAULT_UNWIND\n\tadd\t3, r0, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_517\n\tadd\tr0, r0, r3\n.BB0_515:\n\tshl.s\t2, r3, r1\n\tadd\t@CPI0_72[0], r1, r1\n\tsload\tr1, r4\n\tsub.s!\tstack-[12], r4, r4\n\tjump.eq\t@.BB0_574\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r1\n\tjump.lt\t@.BB0_515\n.BB0_517:\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r2\n\tsstore\tr2, r0\n\tadd\t1, r2, r1\n\tsstore\tr1, r0\n\tadd\tr2, r0, stack-[10]\n\tadd\t2, r2, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[11]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_233\n\tsub!\tstack-[11], r0, r1\n\tjump.eq\t@.BB0_527\n\tadd\tstack-[11], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_526\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tadd\t1, r1, r3\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB0_525\n.BB0_524:\n\tsstore\tr3, r0\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_524\n.BB0_525:\n\tadd\tstack-[9], r0, r2\n\tsstore\tr2, r0\n\tadd\tr1, r0, stack-[9]\n.BB0_526:\n\tadd\tstack-[9], r0, r1\n\tsstore\tr1, r0\n.BB0_527:\n\tadd\tstack-[10], r0, r1\n\tadd\t3, r1, r1\n\tsstore\tr1, r0\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_77[0], r0, r4\n\tjump\t@.BB0_311\n.BB0_528:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_531\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_530:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_530\n.BB0_531:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_348\n\tjump\t@.BB0_495\n.BB0_533:\n\tadd\tstack-[11], r0, r1\n\tnear_call\tr0, @array_push_from_struct_NFTListInfo_to_array_struct_NFTListInfo_storage_dyn__ptr, @DEFAULT_UNWIND\n.BB0_534:\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @copy_struct_to_storage_from_struct_NFTListInfo_to_struct_NFTListInfo, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_88[0], r0, r4\n\tadd\tstack-[12], r0, r5\n\tjump\t@.BB0_312\n.BB0_536:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_539\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_538:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_538\n.BB0_539:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_348\n\tjump\t@.BB0_495\n.BB0_541:\n\tadd\tstack-[5], r0, r1\n\tnear_call\tr0, @array_push_from_struct_NFTListInfo_to_array_struct_NFTListInfo_storage_dyn__ptr, @DEFAULT_UNWIND\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r4\n\tsload\tr4, r1\n\tadd\tr1, r0, stack-[8]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_547\n\tadd\tr0, r0, stack-[9]\n\tadd\tr4, r0, stack-[7]\n.BB0_544:\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tadd\tstack-[7], r0, r4\n\tsload\tr4, r2\n\tadd\tstack-[9], r0, r5\n\tshl.s\t2, r5, r6\n\tld\tr1, r1\n\tadd\tr1, r6, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[12], r1, r1\n\tjump.eq\t@.BB0_552\n\tadd\t1, r5, stack-[9]\n\tsub!\tstack-[9], r2, r1\n\tadd\tr2, r0, stack-[8]\n\tjump.lt\t@.BB0_544\n.BB0_547:\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @copy_struct_to_storage_from_struct_NFTListInfo_to_struct_NFTListInfo, @DEFAULT_UNWIND\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tr3, r0, stack-[9]\n\tsub!\tstack-[11], r3, r2\n\tjump.ge\t@.BB0_569\n\tadd\tstack-[9], r0, r3\n\tsub.s\tstack-[11], r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[9]\n.BB0_551:\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[9], r0, r3\n\tst.1\tr3, r1\n\tadd\t32, r3, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_95[0], r0, r4\n\tjump\t@.BB0_311\n.BB0_552:\n\tadd\tr6, r0, stack-[4]\n\tadd\tstack-[8], r0, r1\n\tsub.s\t1, r1, stack-[8]\n\tsub.s!\tstack-[8], r2, r1\n\tjump.le\t@.BB0_568\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[9], r1, r1\n\tjump.le\t@.BB0_568\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tadd\tstack-[8], r0, r2\n\tshl.s\t2, r2, r2\n\tadd\tstack-[3], r2, r2\n\tld\tr1, r1\n\tadd\tstack-[4], r1, r1\n\tnear_call\tr0, @copy_struct_to_storage_from_struct_NFTListInfo__ptr_to_struct_NFTListInfo, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_575\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tadd\tstack-[9], r0, r2\n\tsub.s\t1, r2, r2\n\tadd\tr2, r0, stack-[8]\n\tshl.s\t2, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r2\n\tsstore\tr2, r0\n\tadd\t1, r2, r1\n\tsstore\tr1, r0\n\tadd\tr2, r0, stack-[4]\n\tadd\t2, r2, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[9]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_233\n\tsub!\tstack-[9], r0, r1\n\tjump.eq\t@.BB0_567\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_566\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tadd\t1, r1, r3\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB0_565\n.BB0_564:\n\tsstore\tr3, r0\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_564\n.BB0_565:\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r0\n\tadd\tr1, r0, stack-[3]\n.BB0_566:\n\tadd\tstack-[3], r0, r1\n\tsstore\tr1, r0\n.BB0_567:\n\tadd\tstack-[4], r0, r1\n\tadd\t3, r1, r1\n\tsstore\tr1, r0\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[8], r0, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_547\n.BB0_568:\n\tadd\t@CPI0_93[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_66[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_569:\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tsstore\tr1, r0\n\tadd\t@CPI0_55[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_573\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_586\n.BB0_572:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_573:\n\trevert\n.BB0_574:\n\tadd\t3, r0, r3\n\tst.1\t0, r3\n\tshl.s\t2, r2, r2\n\tadd\t@CPI0_73[0], r2, r2\n\tnear_call\tr0, @copy_struct_to_storage_from_struct_NFTListInfo__ptr_to_struct_NFTListInfo, @DEFAULT_UNWIND\n\tadd\t3, r0, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_576\n.BB0_575:\n\tadd\t@CPI0_93[0], r0, r1\n\tst.1\t0, r1\n\tadd\t49, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_66[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_576:\n\tsub.s\t1, r1, r1\n\tadd\tr1, r0, stack-[10]\n\tshl.s\t2, r1, r2\n\tadd\t@CPI0_72[0], r2, r1\n\tsstore\tr1, r0\n\tadd\t@CPI0_74[0], r2, r1\n\tsstore\tr1, r0\n\tadd\tr2, r0, stack-[9]\n\tadd\t@CPI0_75[0], r2, r1\n\tadd\tr1, r0, stack-[8]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[11]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_233\n\tsub!\tstack-[11], r0, r1\n\tjump.eq\t@.BB0_585\n\tadd\tstack-[11], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_584\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_572\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tadd\t1, r1, r3\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB0_583\n.BB0_582:\n\tsstore\tr3, r0\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_582\n.BB0_583:\n\tadd\tstack-[8], r0, r2\n\tsstore\tr2, r0\n\tadd\tr1, r0, stack-[8]\n.BB0_584:\n\tadd\tstack-[8], r0, r1\n\tsstore\tr1, r0\n.BB0_585:\n\tadd\tstack-[9], r0, r1\n\tadd\t@CPI0_76[0], r1, r1\n\tsstore\tr1, r0\n\tadd\t3, r0, r1\n\tadd\tstack-[10], r0, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_517\n.BB0_586:\n\tadd\tstack-[9], r0, r2\n\tsub\tstack-[11], r2, r1\n\tld.1\t64, r3\n\tadd\t36, r3, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_94[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[9]\n\tadd\t4, r3, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[10], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_588\n\tadd\tstack-[9], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_70[0], r1, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_590\n.BB0_588:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t@CPI0_38[0], r1, r1\n\tjump.gt\t@.BB0_287\n\tadd\tstack-[9], r0, r1\n\tst.1\t64, r1\n\tjump\t@.BB0_551\n.BB0_590:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_593\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_592:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_592\n.BB0_593:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_348\n\tjump\t@.BB0_347\n.func_end0:\n\nstorage_array_index_access_struct_ApplyStartUpNFTInfo__dyn:\n.func_begin1:\n\tadd\t6, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB1_1\n\tst.1\t0, r2\n\tshl.s\t1, r1, r1\n\tadd\t@CPI1_2[0], r1, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_struct_NFTListInfo:\n.func_begin2:\n\tld.1.inc\tr1, r3, r4\n\tst.1.inc\tr2, r3, r3\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tld.1\tr3, r3\n\tadd\t64, r2, r4\n\tadd\t128, r0, r5\n\tst.1\tr4, r5\n\tadd\t128, r2, r6\n\tld.1.inc\tr3, r4, r5\n\tst.1\tr6, r4\n\tadd\t160, r2, r3\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r6\n.BB2_2:\n\tadd\tr6, r3, r7\n\tadd\tr5, r6, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tadd\tr4, r3, r5\n\tst.1\tr5, r0\n\tadd\t96, r2, r2\n\tadd\t96, r1, r1\n\tld.1\tr1, r1\n\tst.1\tr2, r1\n\tadd\t31, r4, r1\n\tand\t@CPI2_0[0], r1, r1\n\tadd\tr1, r3, r1\n\tret\n.func_end2:\n\nabi_encode_array_struct_NFTListInfo_dyn:\n.func_begin3:\n\tld.1\tr1, r4\n\tst.1\tr2, r4\n\tshl.s\t5, r4, r3\n\tadd\tr2, r3, r3\n\tadd\t32, r3, r3\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB3_6\n\tadd\t128, r0, r5\n\tadd\tr0, r0, r7\n\tadd\tr2, r0, r8\n\tjump\t@.BB3_2\n.BB3_5:\n\tadd\tr10, r11, r12\n\tst.1\tr12, r0\n\tadd\t96, r3, r3\n\tadd\t96, r9, r9\n\tld.1\tr9, r9\n\tst.1\tr3, r9\n\tadd\t31, r10, r3\n\tand\t@CPI3_0[0], r3, r3\n\tadd\tr3, r11, r3\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r9\n\tjump.ge\t@.BB3_6\n.BB3_2:\n\tsub\tr3, r2, r9\n\tsub.s\t32, r9, r9\n\tadd\t32, r8, r8\n\tst.1\tr8, r9\n\tadd\t32, r1, r1\n\tld.1\tr1, r9\n\tld.1.inc\tr9, r10, r11\n\tst.1.inc\tr3, r10, r10\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t64, r9, r10\n\tld.1\tr10, r10\n\tadd\t64, r3, r11\n\tst.1\tr11, r5\n\tadd\t128, r3, r11\n\tld.1.inc\tr10, r10, r12\n\tst.1\tr11, r10\n\tadd\t160, r3, r11\n\tsub!\tr10, r0, r13\n\tjump.eq\t@.BB3_5\n\tadd\tr0, r0, r13\n.BB3_4:\n\tadd\tr13, r11, r14\n\tadd\tr12, r13, r15\n\tld.1\tr15, r15\n\tst.1\tr14, r15\n\tadd\t32, r13, r13\n\tsub!\tr13, r10, r14\n\tjump.lt\t@.BB3_4\n\tjump\t@.BB3_5\n.BB3_6:\n\tadd\tr3, r0, r1\n\tret\n.func_end3:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin4:\n\tnop\tstack+=[3 + r0]\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r6\n\tadd.ne\tr4, r0, r6\n\tsub.s!\t31, r6, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB4_1\n\tld.1\t64, r5\n\tst.1.inc\tr5, r6, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB4_8\n\tadd\tr4, r0, stack-[1]\n\tadd\tr6, r0, stack-[3]\n\tadd\tr5, r0, stack-[2]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tadd.ge\t@CPI4_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_10\n\tadd\tstack-[3], r0, r6\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB4_12\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[1], r0, r7\n.BB4_14:\n\tadd\tr7, r1, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r6, r3\n\tjump.lt\t@.BB4_14\n\tjump\t@.BB4_4\n.BB4_8:\n\tand\t@CPI4_5[0], r2, r1\n\tst.1\tr4, r1\n\tsub!\tr6, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB4_4\n.BB4_12:\n\tadd\tr0, r0, r1\n\tadd\tstack-[2], r0, r5\n.BB4_4:\n\tadd\t63, r1, r1\n\tand\t@CPI4_6[0], r1, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_2[0], r1, r3\n\tjump.gt\t@.BB4_6\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_6\n\tst.1\t64, r1\n\tadd\tr5, r0, r1\n\tret\n.BB4_1:\n\tadd\t@CPI4_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_6:\n\tadd\t@CPI4_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_10:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_encode_uint256_uint256_string_uint256:\n.func_begin5:\n\tadd\t64, r1, r6\n\tadd\t128, r0, r7\n\tst.1\tr6, r7\n\tadd\t32, r1, r6\n\tst.1\tr6, r3\n\tst.1\tr1, r2\n\tadd\t128, r1, r2\n\tld.1.inc\tr4, r3, r4\n\tst.1\tr2, r3\n\tadd\t160, r1, r2\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB5_3\n\tadd\tr0, r0, r6\n.BB5_2:\n\tadd\tr6, r2, r7\n\tadd\tr4, r6, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB5_2\n.BB5_3:\n\tadd\tr3, r2, r4\n\tst.1\tr4, r0\n\tadd\t96, r1, r1\n\tst.1\tr1, r5\n\tadd\t31, r3, r1\n\tand\t@CPI5_0[0], r1, r1\n\tadd\tr1, r2, r1\n\tret\n.func_end5:\n\nstorage_array_index_access_struct_NFTListInfo__dyn:\n.func_begin6:\n\tnop\tstack+=[1 + r0]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB6_1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI6_2[0], r1, r2\n\tadd.ge\t@CPI6_2[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_3\n\tadd\tstack-[1], r0, r2\n\tshl.s\t2, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tret\n.BB6_1:\n\tadd\t@CPI6_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\ncopy_struct_to_storage_from_struct_NFTListInfo_to_struct_NFTListInfo:\n.func_begin7:\n\tnop\tstack+=[7 + r0]\n\tadd\tr2, r0, r6\n\tadd\tr1, r0, r7\n\tld.1.inc\tr6, r1, r2\n\tsstore\tr7, r1\n\tld.1\tr2, r1\n\tadd\t1, r7, r2\n\tsstore\tr2, r1\n\tadd\t64, r6, r1\n\tld.1\tr1, r5\n\tld.1.inc\tr5, r4, r9\n\tsub.s!\t@CPI7_0[0], r4, r1\n\tjump.ge\t@.BB7_1\n\tadd\t2, r7, r8\n\tsload\tr8, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB7_4\n\tsub.s!\t32, r3, r1\n\tadd\tr6, r0, stack-[6]\n\tadd\tr7, r0, stack-[5]\n\tadd\tr8, r0, stack-[4]\n\tadd\tr4, r0, stack-[7]\n\tadd\tr5, r0, stack-[3]\n\tjump.lt\t@.BB7_11\n\tadd\tr3, r0, stack-[1]\n\tadd\tr9, r0, stack-[2]\n\tst.1\t0, r8\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_1[0], r1, r2\n\tadd.ge\t@CPI7_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_7\n\tadd\tstack-[7], r0, r4\n\tadd\t31, r4, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r4, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[4], r0, r8\n\tadd\tstack-[2], r0, r9\n\tjump.ge\t@.BB7_11\n.BB7_10:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB7_10\n.BB7_11:\n\tsub.s!\t31, r4, r1\n\tjump.le\t@.BB7_21\n\tst.1\t0, r8\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_1[0], r1, r2\n\tadd.ge\t@CPI7_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_7\n\tadd\tstack-[7], r0, r9\n\tand!\t@CPI7_5[0], r9, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r10\n\tjump.eq\t@.BB7_15\n\tsub.s\t1, r2, r3\n\tshr.s\t5, r3, r3\n\tadd\tr1, r3, r4\n\tadd\t32, r0, r3\n\tadd\t1, r4, r4\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[4], r0, r8\n.BB7_17:\n\tadd\tr3, r10, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r3, r3\n\tadd\t1, r1, r1\n\tsub!\tr1, r4, r5\n\tjump.ne\t@.BB7_17\n\tsub!\tr2, r9, r2\n\tjump.ge\t@.BB7_20\n.BB7_19:\n\tshl.s\t3, r9, r2\n\tand\t248, r2, r2\n\tshr\t@CPI7_6[0], r2, r2\n\txor\t@CPI7_6[0], r2, r2\n\tadd\tr3, r10, r3\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB7_20:\n\tshl.s\t1, r9, r1\n\tor\t1, r1, r1\n\tjump\t@.BB7_12\n.BB7_21:\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB7_22\n\tshl.s\t3, r4, r1\n\tshr\t@CPI7_6[0], r1, r1\n\txor\t@CPI7_6[0], r1, r1\n\tld.1\tr9, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB7_12\n.BB7_22:\n\tadd\tr0, r0, r1\n.BB7_12:\n\tsstore\tr8, r1\n\tadd\t3, r7, r1\n\tadd\t96, r6, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tret\n.BB7_15:\n\tadd\t32, r0, r3\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[4], r0, r8\n\tsub!\tr2, r9, r2\n\tjump.lt\t@.BB7_19\n\tjump\t@.BB7_20\n.BB7_1:\n\tadd\t@CPI7_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_4:\n\tadd\t@CPI7_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_7:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\narray_push_from_struct_NFTListInfo_to_array_struct_NFTListInfo_storage_dyn__ptr:\n.func_begin8:\n\tnop\tstack+=[7 + r0]\n\tadd\tr1, r0, r6\n\tadd\t3, r0, r2\n\tsload\tr2, r1\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tjump.ge\t@.BB8_1\n\tadd\t1, r1, r3\n\tsstore\tr2, r3\n\tst.1\t0, r2\n\tshl.s\t2, r1, r7\n\tadd\t@CPI8_1[0], r7, r1\n\tld.1.inc\tr6, r2, r3\n\tsstore\tr1, r2\n\tld.1\tr3, r1\n\tadd\t@CPI8_2[0], r7, r2\n\tsstore\tr2, r1\n\tadd\t@CPI8_3[0], r7, r8\n\tadd\t64, r6, r1\n\tld.1\tr1, r5\n\tld.1.inc\tr5, r4, r9\n\tsub.s!\t@CPI8_4[0], r4, r1\n\tjump.gt\t@.BB8_1\n\tsload\tr8, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB8_5\n\tsub.s!\t32, r3, r1\n\tadd\tr6, r0, stack-[6]\n\tadd\tr7, r0, stack-[5]\n\tadd\tr8, r0, stack-[4]\n\tadd\tr4, r0, stack-[7]\n\tadd\tr5, r0, stack-[3]\n\tjump.lt\t@.BB8_12\n\tadd\tr3, r0, stack-[1]\n\tadd\tr9, r0, stack-[2]\n\tst.1\t0, r8\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_5[0], r1, r2\n\tadd.ge\t@CPI8_5[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_8\n\tadd\tstack-[7], r0, r4\n\tadd\t31, r4, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r4, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[4], r0, r8\n\tadd\tstack-[2], r0, r9\n\tjump.ge\t@.BB8_12\n.BB8_11:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB8_11\n.BB8_12:\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB8_21\n\tst.1\t0, r8\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_5[0], r1, r2\n\tadd.ge\t@CPI8_5[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_8\n\tadd\tstack-[7], r0, r9\n\tand!\t@CPI8_10[0], r9, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r10\n\tjump.eq\t@.BB8_15\n\tsub.s\t1, r2, r3\n\tshr.s\t5, r3, r3\n\tadd\tr1, r3, r4\n\tadd\t32, r0, r3\n\tadd\t1, r4, r4\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[4], r0, r8\n.BB8_17:\n\tadd\tr3, r10, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r3, r3\n\tadd\t1, r1, r1\n\tsub!\tr1, r4, r5\n\tjump.ne\t@.BB8_17\n\tsub!\tr2, r9, r2\n\tjump.ge\t@.BB8_20\n.BB8_19:\n\tshl.s\t3, r9, r2\n\tand\t248, r2, r2\n\tshr\t@CPI8_11[0], r2, r2\n\txor\t@CPI8_11[0], r2, r2\n\tadd\tr3, r10, r3\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB8_20:\n\tshl.s\t1, r9, r1\n\tor\t1, r1, r1\n\tjump\t@.BB8_24\n.BB8_21:\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB8_22\n\tshl.s\t3, r4, r1\n\tshr\t@CPI8_11[0], r1, r1\n\txor\t@CPI8_11[0], r1, r1\n\tld.1\tr9, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB8_24\n.BB8_22:\n\tadd\tr0, r0, r1\n.BB8_24:\n\tsstore\tr8, r1\n\tadd\t@CPI8_7[0], r7, r1\n\tadd\t96, r6, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tret\n.BB8_15:\n\tadd\t32, r0, r3\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[4], r0, r8\n\tsub!\tr2, r9, r2\n\tjump.lt\t@.BB8_19\n\tjump\t@.BB8_20\n.BB8_1:\n\tadd\t@CPI8_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_5:\n\tadd\t@CPI8_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\narray_push_from_struct_NFTListInfo_to_array_struct_NFTListInfo_storage_dyn_ptr:\n.func_begin9:\n\tnop\tstack+=[7 + r0]\n\tadd\tr1, r0, r6\n\tadd\t2, r0, r2\n\tsload\tr2, r1\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tjump.ge\t@.BB9_1\n\tadd\t1, r1, r3\n\tsstore\tr2, r3\n\tst.1\t0, r2\n\tshl.s\t2, r1, r7\n\tadd\t@CPI9_1[0], r7, r1\n\tld.1.inc\tr6, r2, r3\n\tsstore\tr1, r2\n\tld.1\tr3, r1\n\tadd\t@CPI9_2[0], r7, r2\n\tsstore\tr2, r1\n\tadd\t@CPI9_3[0], r7, r8\n\tadd\t64, r6, r1\n\tld.1\tr1, r5\n\tld.1.inc\tr5, r4, r9\n\tsub.s!\t@CPI9_4[0], r4, r1\n\tjump.gt\t@.BB9_1\n\tsload\tr8, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB9_5\n\tsub.s!\t32, r3, r1\n\tadd\tr6, r0, stack-[6]\n\tadd\tr7, r0, stack-[5]\n\tadd\tr8, r0, stack-[4]\n\tadd\tr4, r0, stack-[7]\n\tadd\tr5, r0, stack-[3]\n\tjump.lt\t@.BB9_12\n\tadd\tr3, r0, stack-[1]\n\tadd\tr9, r0, stack-[2]\n\tst.1\t0, r8\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_5[0], r1, r2\n\tadd.ge\t@CPI9_5[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_8\n\tadd\tstack-[7], r0, r4\n\tadd\t31, r4, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r4, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[4], r0, r8\n\tadd\tstack-[2], r0, r9\n\tjump.ge\t@.BB9_12\n.BB9_11:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB9_11\n.BB9_12:\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB9_21\n\tst.1\t0, r8\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_5[0], r1, r2\n\tadd.ge\t@CPI9_5[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_8\n\tadd\tstack-[7], r0, r9\n\tand!\t@CPI9_10[0], r9, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r10\n\tjump.eq\t@.BB9_15\n\tsub.s\t1, r2, r3\n\tshr.s\t5, r3, r3\n\tadd\tr1, r3, r4\n\tadd\t32, r0, r3\n\tadd\t1, r4, r4\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[4], r0, r8\n.BB9_17:\n\tadd\tr3, r10, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r3, r3\n\tadd\t1, r1, r1\n\tsub!\tr1, r4, r5\n\tjump.ne\t@.BB9_17\n\tsub!\tr2, r9, r2\n\tjump.ge\t@.BB9_20\n.BB9_19:\n\tshl.s\t3, r9, r2\n\tand\t248, r2, r2\n\tshr\t@CPI9_11[0], r2, r2\n\txor\t@CPI9_11[0], r2, r2\n\tadd\tr3, r10, r3\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB9_20:\n\tshl.s\t1, r9, r1\n\tor\t1, r1, r1\n\tjump\t@.BB9_24\n.BB9_21:\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB9_22\n\tshl.s\t3, r4, r1\n\tshr\t@CPI9_11[0], r1, r1\n\txor\t@CPI9_11[0], r1, r1\n\tld.1\tr9, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB9_24\n.BB9_22:\n\tadd\tr0, r0, r1\n.BB9_24:\n\tsstore\tr8, r1\n\tadd\t@CPI9_7[0], r7, r1\n\tadd\t96, r6, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tret\n.BB9_15:\n\tadd\t32, r0, r3\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[4], r0, r8\n\tsub!\tr2, r9, r2\n\tjump.lt\t@.BB9_19\n\tjump\t@.BB9_20\n.BB9_1:\n\tadd\t@CPI9_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_5:\n\tadd\t@CPI9_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\ncopy_struct_to_storage_from_struct_NFTListInfo__ptr_to_struct_NFTListInfo:\n.func_begin10:\n\tnop\tstack+=[6 + r0]\n\tadd\tr2, r0, r5\n\tadd\tr1, r0, r6\n\tsub!\tr6, r5, r1\n\tjump.eq\t@.BB10_28\n\tsload\tr5, r1\n\tsstore\tr6, r1\n\tadd\t1, r5, r1\n\tsload\tr1, r1\n\tadd\t1, r6, r2\n\tsstore\tr2, r1\n\tadd\t2, r5, r7\n\tsload\tr7, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r4\n\tadd.ne\tr1, r0, r4\n\tsub.s!\t31, r4, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB10_2\n\tsub.s!\t@CPI10_0[0], r4, r1\n\tjump.ge\t@.BB10_5\n\tadd\t2, r6, r8\n\tsload\tr8, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB10_2\n\tsub.s!\t32, r3, r1\n\tadd\tr5, r0, stack-[4]\n\tadd\tr6, r0, stack-[3]\n\tadd\tr4, r0, stack-[6]\n\tadd\tr8, r0, stack-[5]\n\tjump.lt\t@.BB10_13\n\tadd\tr3, r0, stack-[1]\n\tadd\tr7, r0, stack-[2]\n\tst.1\t0, r8\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_1[0], r1, r2\n\tadd.ge\t@CPI10_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_9\n\tadd\tstack-[6], r0, r4\n\tadd\t31, r4, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r4, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[3], r0, r6\n\tadd\tstack-[5], r0, r8\n\tadd\tstack-[2], r0, r7\n\tjump.ge\t@.BB10_13\n.BB10_12:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB10_12\n.BB10_13:\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB10_23\n\tst.1\t0, r7\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_1[0], r1, r2\n\tadd.ge\t@CPI10_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand\t@CPI10_3[0], r3, stack-[2]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_9\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_1[0], r1, r2\n\tadd.ge\t@CPI10_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_9\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[6], r0, r7\n\tjump.eq\t@.BB10_17\n\tsub.s\t1, r10, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tadd\t1, r2, r3\n\tadd\tr0, r0, r2\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[3], r0, r6\n\tadd\tstack-[5], r0, r8\n\tadd\tstack-[1], r0, r9\n.BB10_19:\n\tadd\tr2, r9, r4\n\tsload\tr4, r4\n\tsstore\tr1, r4\n\tadd\t1, r2, r2\n\tadd\t1, r1, r1\n\tsub!\tr1, r3, r4\n\tjump.ne\t@.BB10_19\n\tsub!\tr10, r7, r3\n\tjump.ge\t@.BB10_22\n.BB10_21:\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tshr\t@CPI10_6[0], r3, r3\n\txor\t@CPI10_6[0], r3, r3\n\tadd\tr2, r9, r2\n\tsload\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB10_22:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tjump\t@.BB10_27\n.BB10_23:\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB10_24\n\tsload\tr7, r1\n\tjump\t@.BB10_26\n.BB10_24:\n\tadd\tr0, r0, r1\n.BB10_26:\n\tshl.s\t3, r4, r2\n\tshr\t@CPI10_6[0], r2, r2\n\txor\t@CPI10_6[0], r2, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB10_27:\n\tsstore\tr8, r1\n\tadd\t3, r6, r1\n\tadd\t3, r5, r2\n\tsload\tr2, r2\n\tsstore\tr1, r2\n.BB10_28:\n\tret\n.BB10_17:\n\tadd\tr0, r0, r2\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[3], r0, r6\n\tadd\tstack-[5], r0, r8\n\tadd\tstack-[1], r0, r9\n\tsub!\tr10, r7, r3\n\tjump.lt\t@.BB10_21\n\tjump\t@.BB10_22\n.BB10_2:\n\tadd\t@CPI10_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_9:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_5:\n\tadd\t@CPI10_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\n__cxa_throw:\n.func_begin11:\n\trevert\n.func_end11:\n\n__sha3:\n.func_begin12:\n\tsub.s!\t@CPI12_0[0], r1, r3\n\tadd.ge\t@CPI12_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI12_0[0], r2, r3\n\tadd.ge\t@CPI12_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_0[0], r2, r3\n\tadd.ge\t@CPI12_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_2\n\tld\tr1, r1\n\tret\n.BB12_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\n__system_request:\n.func_begin13:\n\tadd\tr1, r0, r5\n\tst.2\t0, r2\n\tsub.s!\t5, r3, r1\n\tjump.lt\t@.BB13_4\n\tadd\t4, r0, r1\n\tadd\tr0, r0, r2\n.BB13_3:\n\tshl.s\t5, r2, r6\n\tadd\tr4, r6, r6\n\tshr.s\t5, r6, r6\n\tadd\tstack[r6], r0, r6\n\tst.2.inc\tr1, r6, r1\n\tadd\t1, r2, r2\n\tsub!\tr1, r3, r6\n\tjump.lt\t@.BB13_3\n.BB13_4:\n\tsub.s!\t@CPI13_0[0], r3, r1\n\tadd.ge\t@CPI13_0[0], r0, r3\n\tshl.s\t96, r3, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_0[0], r2, r3\n\tadd.ge\t@CPI13_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_1[0], r1, r1\n\tadd\tr5, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tret\n.BB13_5:\n\trevert\n.func_end13:\n\n__farcall:\n.func_begin14:\n.tmp0:\n\tfar_call\tr1, r2, @.BB14_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB14_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end14:\n\n__staticcall:\n.func_begin15:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB15_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB15_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end15:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell\t0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n\t.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI4_0:\nCPI6_2:\nCPI7_1:\nCPI8_5:\nCPI9_5:\nCPI10_1:\nCPI12_0:\nCPI13_0:\n\t.cell\t4294967295\nCPI0_1:\n\t.cell\t8589934560\nCPI0_2:\n\t.cell\t1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell\t-1461501637330902918203684832716283019655932542976\nCPI0_4:\nCPI12_1:\n\t.cell\t904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_5:\n\t.cell\t-52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_6:\n\t.cell\t53919893334301279589334030174039261362486096052542264263037304176640\nCPI0_7:\n\t.cell\t2376452954\nCPI0_8:\n\t.cell\t3411770675\nCPI0_9:\n\t.cell\t3718135374\nCPI0_10:\n\t.cell\t3718135375\nCPI0_11:\n\t.cell\t4076725131\nCPI0_12:\n\t.cell\t4264795635\nCPI0_13:\n\t.cell\t3411770676\nCPI0_14:\n\t.cell\t3533637754\nCPI0_15:\n\t.cell\t3630846069\nCPI0_16:\n\t.cell\t3096592057\nCPI0_17:\n\t.cell\t3096592058\nCPI0_18:\n\t.cell\t3163803872\nCPI0_19:\n\t.cell\t3381567702\nCPI0_20:\n\t.cell\t2376452955\nCPI0_21:\n\t.cell\t2672121556\nCPI0_22:\n\t.cell\t2704926945\nCPI0_23:\n\t.cell\t1096134073\nCPI0_24:\n\t.cell\t1333774300\nCPI0_25:\n\t.cell\t1333774301\nCPI0_26:\n\t.cell\t1479142614\nCPI0_27:\n\t.cell\t1901074598\nCPI0_28:\n\t.cell\t1096134074\nCPI0_29:\n\t.cell\t1243554504\nCPI0_30:\n\t.cell\t1291734376\nCPI0_31:\n\t.cell\t318621673\nCPI0_32:\n\t.cell\t318621674\nCPI0_33:\n\t.cell\t353073666\nCPI0_34:\n\t.cell\t453173974\nCPI0_35:\n\t.cell\t68704117\nCPI0_36:\n\t.cell\t76612837\nCPI0_37:\n\t.cell\t170744991\nCPI0_38:\nCPI4_2:\nCPI8_4:\nCPI9_4:\n\t.cell\t18446744073709551615\nCPI0_39:\nCPI10_3:\n\t.cell\t57896044618658097711785492504343953926634992332820282019728792003956564819936\nCPI0_40:\n\t.cell\t18446744073709551487\nCPI0_41:\nCPI9_1:\n\t.cell\t29102676481673041902632991033461445430619272659676223336789171408008386403022\nCPI0_42:\nCPI4_1:\nCPI6_3:\nCPI7_2:\nCPI8_6:\nCPI9_6:\nCPI10_2:\n\t.cell\t904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_43:\n\t.cell\t3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_44:\n\t.cell\t35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_45:\n\t.cell\t45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_46:\n\t.cell\t10458117454244075803782624051200\nCPI0_47:\nCPI1_2:\n\t.cell\t-4378011421452794913566920378714311891690811000051339835953921858539404653249\nCPI0_48:\n\t.cell\t-4378011421452794913566920378714311891690811000051339835953921858539404653248\nCPI0_49:\n\t.cell\t904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_50:\n\t.cell\t-38537218755810271176041058140625685274374703755278629142790198697018276357012\nCPI0_51:\n\t.cell\t-57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_52:\n\t.cell\t14667408101671375176148387625579176856208754876411328355392944479655958675456\nCPI0_53:\n\t.cell\t38650479703966337256019331884382158831259299873212732663017348807909111523443\nCPI0_54:\n\t.cell\t10458117451882892562347801444352\nCPI0_55:\n\t.cell\t10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_56:\n\t.cell\t904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_57:\n\t.cell\t30086189676817534070187568966758292448956037977930781372244262607175567802368\nCPI0_58:\n\t.cell\t7922816251426433759354395033600\nCPI0_59:\n\t.cell\t54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_60:\n\t.cell\t904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_61:\nCPI9_2:\n\t.cell\t29102676481673041902632991033461445430619272659676223336789171408008386403023\nCPI0_62:\nCPI9_3:\n\t.cell\t29102676481673041902632991033461445430619272659676223336789171408008386403024\nCPI0_63:\nCPI9_7:\n\t.cell\t29102676481673041902632991033461445430619272659676223336789171408008386403025\nCPI0_64:\n\t.cell\t-15238920877263045554674247504489480736455153295909282067866844156542258619001\nCPI0_65:\n\t.cell\t-21048789856430765302412827717421088207184530436984749560938855825632529481728\nCPI0_66:\nCPI1_1:\nCPI4_4:\nCPI6_1:\nCPI7_4:\nCPI8_9:\nCPI9_9:\nCPI10_5:\n\t.cell\t2852213850513516153367582212096\nCPI0_67:\n\t.cell\t22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_68:\n\t.cell\t904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_69:\n\t.cell\t-52433098269276935963649633993917867171113129555146417244091009155946822762496\nCPI0_70:\n\t.cell\t5387515050969974956360988622848\nCPI0_71:\n\t.cell\t48914549725518785858057526822834631114597628310026018593196803620630998024192\nCPI0_72:\nCPI8_1:\n\t.cell\t-27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI0_73:\n\t.cell\t-27889059366240281169193357100633332908378892778709981755071813198463099602857\nCPI0_74:\nCPI8_2:\n\t.cell\t-27889059366240281169193357100633332908378892778709981755071813198463099602852\nCPI0_75:\nCPI8_3:\n\t.cell\t-27889059366240281169193357100633332908378892778709981755071813198463099602851\nCPI0_76:\nCPI8_7:\n\t.cell\t-27889059366240281169193357100633332908378892778709981755071813198463099602850\nCPI0_77:\n\t.cell\t42330468821477574847694446356286739234307695498260337192207780996134428933675\nCPI0_78:\n\t.cell\t33213987989631693067883787898814815401940191597450698095377559960427851415552\nCPI0_79:\n\t.cell\t2535301202817642044428229017600\nCPI0_80:\n\t.cell\t35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_81:\n\t.cell\t7922816253787617000789217640448\nCPI0_82:\n\t.cell\t44924082035483044067109101440843353935858456657669901928173454070473843277824\nCPI0_83:\n\t.cell\t2852213852874699394802404818944\nCPI0_84:\n\t.cell\t15327424923379791203967222949955724100198528358894683931790545126580402782208\nCPI0_85:\n\t.cell\t57777444820715221993607735096937479912122657760782495139380871819969525972992\nCPI0_86:\n\t.cell\t-25111597823361139047590293367644610809928738957112648217072126637990893060096\nCPI0_87:\n\t.cell\t57896044618658097711785492504343953926634992332820282019728792003956564819967\nCPI0_88:\n\t.cell\t-37987141408302768161877095211474996260415926225727998286043468540521308458020\nCPI0_89:\n\t.cell\t18446744073709551551\nCPI0_90:\n\t.cell\t9518847204935358166548570266051330015907116135037852959641967396525866745856\nCPI0_91:\n\t.cell\t5070602400912917605986812821504\nCPI0_92:\nCPI7_0:\nCPI8_0:\nCPI9_0:\nCPI10_0:\n\t.cell\t18446744073709551616\nCPI0_93:\nCPI1_0:\nCPI4_3:\nCPI6_0:\nCPI7_3:\nCPI8_8:\nCPI9_8:\nCPI10_4:\n\t.cell\t35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_94:\n\t.cell\t15030898913415054765868591376430200980110924406668677162267709501212125560832\nCPI0_95:\n\t.cell\t-11888527382438753278323013077590338095966602972649132715635437655139866793687\nCPI0_96:\n\t.cell\t5070602403274100847421635428352\nCPI0_97:\nCPI7_6:\nCPI8_11:\nCPI9_11:\nCPI10_6:\n\t.cell\t-1\nCPI0_98:\nCPI4_5:\n\t.cell\t-256\nCPI0_99:\nCPI2_0:\nCPI3_0:\nCPI4_6:\nCPI5_0:\nCPI7_5:\nCPI8_10:\nCPI9_10:\n\t.cell\t-32\nCPI13_1:\n\t.cell\t904625751086426111047927909714404454142933102474605751639407337269041823744\n","bytecode":{"object":""},"methodIdentifiers":{"COMMON_NFT_LIMIT_PER_USER()":"5829ecd6","START_UP_NFT_LIMIT()":"a139e8e1","applyStartUpNFT(uint256)":"dd9e3e4f","applyStartUpNFTInfos(uint256)":"0a2d5c9f","commonNFTs(uint256)":"4cfe4d68","distributeStartUpNFT(address[],uint256[])":"d86a5075","getAllCommonNFTs()":"12fdc7ea","getAllStartUpNFTs()":"fe339df3","getApplyStartUpNFTInfos()":"4a1f22c8","getTotalApplyInfo()":"04185775","getUserNFTHolding(address)":"b8923eba","infoByTokenId(uint256)":"cb5b7d34","initialNFTHangOut(uint256,uint256)":"4f7fc7dd","melonNFT()":"1b02e2d6","nftLock(address)":"9f4556d4","onERC721Received(address,address,uint256,bytes)":"150b7a02","owner()":"8da5cb5b","purchaseCommonNFT(uint256,address)":"bc93d0e0","redeem(uint256,uint256,address)":"049104e5","renounceOwnership()":"715018a6","startUpNFTs(uint256)":"c98ea0d6","transferOwnership(address)":"f2fde38b","userCommonNFTs(address,uint256)":"d29f087a","userStartUpNFTs(address)":"4155adba"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 20:\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\", 24:\"@openzeppelin/contracts/utils/Context.sol\", 36:\"contracts/JuryNFTSwap.sol\"\nobject \"JuryNFTSwap_6864\" {\n    code {\n        {\n            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n            let _1 := memoryguard(0xc0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"JuryNFTSwap_6864\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n            let value := mload(_1)\n            let _2 := sub(shl(160, 1), 1)\n            let _3 := and(value, _2)\n            if iszero(eq(value, _3))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n            let value_1 := mload(add(_1, 32))\n            let value_2 := mload(add(_1, 64))\n            let _4 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n            let _5 := not(sub(shl(160, 1), 1))\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ or(and(_4, _5), /** @src 24:734:744  \"msg.sender\" */ caller()))\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _6 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(64)\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ and(_4, _2), /** @src 24:734:744  \"msg.sender\" */ caller())\n            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n            sstore(1, or(and(sload(1), _5), _3))\n            /// @src 36:2408:2459  \"COMMON_NFT_LIMIT_PER_USER = _commonNFTsLimitPerUser\"\n            mstore(128, value_1)\n            /// @src 36:2470:2508  \"START_UP_NFT_LIMIT = _startUpNFTsLimit\"\n            mstore(160, value_2)\n            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n            let _7 := datasize(\"JuryNFTSwap_6864_deployed\")\n            codecopy(_6, dataoffset(\"JuryNFTSwap_6864_deployed\"), _7)\n            setimmutable(_6, \"6028\", mload(/** @src 36:2408:2459  \"COMMON_NFT_LIMIT_PER_USER = _commonNFTsLimitPerUser\" */ 128))\n            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n            setimmutable(_6, \"6030\", mload(/** @src 36:2470:2508  \"START_UP_NFT_LIMIT = _startUpNFTsLimit\" */ 160))\n            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n            return(_6, _7)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 24:\"@openzeppelin/contracts/utils/Context.sol\", 36:\"contracts/JuryNFTSwap.sol\"\n    object \"JuryNFTSwap_6864_deployed\" {\n        code {\n            {\n                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x04185775 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let var_totalPledgedAmount := _3\n                        /// @src 36:2625:2648  \"uint totalPledgedAmount\"\n                        var_totalPledgedAmount := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3\n                        /// @src 36:2666:2711  \"totalApplicants = applyStartUpNFTInfos.length\"\n                        let var_totalApplicants := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ sload(/** @src 36:2684:2704  \"applyStartUpNFTInfos\" */ 0x06)\n                        /// @src 36:2727:2737  \"uint i = 0\"\n                        let var_i := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3\n                        /// @src 36:2722:2850  \"for (uint i = 0; i < totalApplicants; i++) {...\"\n                        for { }\n                        /** @src 36:2739:2758  \"i < totalApplicants\" */ lt(var_i, var_totalApplicants)\n                        /// @src 36:2727:2737  \"uint i = 0\"\n                        {\n                            /// @src 36:2760:2763  \"i++\"\n                            var_i := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ add(/** @src 36:2760:2763  \"i++\" */ var_i, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 1)\n                        }\n                        /// @src 36:2760:2763  \"i++\"\n                        {\n                            /// @src 36:2802:2825  \"applyStartUpNFTInfos[i]\"\n                            let _4, _5 := storage_array_index_access_struct_ApplyStartUpNFTInfo__dyn(var_i)\n                            /// @src 36:2780:2838  \"totalPledgedAmount += applyStartUpNFTInfos[i].pledgeAmount\"\n                            var_totalPledgedAmount := checked_add_uint256(var_totalPledgedAmount, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ sload(/** @src 36:2802:2838  \"applyStartUpNFTInfos[i].pledgeAmount\" */ _4))\n                        }\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let memPos := mload(_1)\n                        mstore(memPos, var_totalApplicants)\n                        mstore(add(memPos, 32), var_totalPledgedAmount)\n                        return(memPos, _1)\n                    }\n                    case 0x049104e5 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        let value := calldataload(_2)\n                        let _6 := 36\n                        let value_1 := calldataload(_6)\n                        let value_2 := calldataload(68)\n                        let _7 := sub(shl(160, 1), 1)\n                        let _8 := and(value_2, _7)\n                        if iszero(eq(value_2, _8)) { revert(_3, _3) }\n                        let _9 := 1\n                        let cleaned := and(sload(1), _7)\n                        /// @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\"\n                        let _10 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                        /// @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\"\n                        mstore(_10, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ shl(225, 0x31a9108f))\n                        mstore(/** @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\" */ add(_10, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _2), value)\n                        let _11 := 32\n                        /// @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\"\n                        let _12 := staticcall(gas(), cleaned, _10, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _6, /** @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\" */ _10, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _11)\n                        /// @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\"\n                        if iszero(_12)\n                        {\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            let pos := mload(_1)\n                            returndatacopy(pos, _3, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\"\n                        let expr := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3\n                        /// @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\"\n                        if _12\n                        {\n                            let _13 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _11\n                            /// @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\"\n                            if gt(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _11, /** @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\" */ returndatasize()) { _13 := returndatasize() }\n                            finalize_allocation(_10, _13)\n                            expr := abi_decode_address_fromMemory(_10, add(_10, _13))\n                        }\n                        /// @src 36:2093:2192  \"if (melonNFT.ownerOf(tokenId) != user) {...\"\n                        if /** @src 36:2097:2130  \"melonNFT.ownerOf(tokenId) != user\" */ iszero(eq(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ and(/** @src 36:2097:2130  \"melonNFT.ownerOf(tokenId) != user\" */ expr, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _7), /** @src 36:6416:6426  \"msg.sender\" */ caller()))\n                        /// @src 36:2093:2192  \"if (melonNFT.ownerOf(tokenId) != user) {...\"\n                        {\n                            /// @src 36:2154:2180  \"NotNFTOwner(user, tokenId)\"\n                            let _14 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                            /// @src 36:2154:2180  \"NotNFTOwner(user, tokenId)\"\n                            mstore(_14, shl(226, 0x0878c0f7))\n                            revert(_14, sub(abi_encode_address_uint256(add(_14, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _2), /** @src 36:6416:6426  \"msg.sender\" */ caller(), /** @src 36:2154:2180  \"NotNFTOwner(user, tokenId)\" */ value), _14))\n                        }\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        mstore(_3, value)\n                        mstore(_11, /** @src 36:1914:1927  \"infoByTokenId\" */ 0x08)\n                        /// @src 36:1904:2010  \"if (bytes(infoByTokenId[tokenId].uri).length > 0) {...\"\n                        if /** @src 36:1908:1952  \"bytes(infoByTokenId[tokenId].uri).length > 0\" */ iszero(iszero(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ extract_byte_array_length(sload(/** @src 36:1914:1940  \"infoByTokenId[tokenId].uri\" */ add(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ keccak256(_3, _1), /** @src 36:1914:1940  \"infoByTokenId[tokenId].uri\" */ 2)))))\n                        /// @src 36:1904:2010  \"if (bytes(infoByTokenId[tokenId].uri).length > 0) {...\"\n                        {\n                            /// @src 36:1976:1998  \"AlreadyListed(tokenId)\"\n                            let _15 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                            /// @src 36:1976:1998  \"AlreadyListed(tokenId)\"\n                            mstore(_15, shl(224, 0x7fbcdff9))\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            mstore(/** @src 36:1976:1998  \"AlreadyListed(tokenId)\" */ add(_15, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _2), value)\n                            /// @src 36:1976:1998  \"AlreadyListed(tokenId)\"\n                            revert(_15, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _6)\n                        }\n                        /// @src 36:6526:6587  \"melonNFT.safeTransferFrom(msg.sender, address(this), tokenId)\"\n                        if iszero(extcodesize(cleaned))\n                        {\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            revert(_3, _3)\n                        }\n                        /// @src 36:6526:6587  \"melonNFT.safeTransferFrom(msg.sender, address(this), tokenId)\"\n                        let _16 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                        /// @src 36:6526:6587  \"melonNFT.safeTransferFrom(msg.sender, address(this), tokenId)\"\n                        mstore(_16, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ shl(225, 0x21421707))\n                        /// @src 36:6526:6587  \"melonNFT.safeTransferFrom(msg.sender, address(this), tokenId)\"\n                        let _17 := call(gas(), cleaned, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3, /** @src 36:6526:6587  \"melonNFT.safeTransferFrom(msg.sender, address(this), tokenId)\" */ _16, sub(abi_encode_address_address_uint256(add(_16, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _2), /** @src 36:6416:6426  \"msg.sender\" */ caller(), /** @src 36:6572:6576  \"this\" */ address(), /** @src 36:6526:6587  \"melonNFT.safeTransferFrom(msg.sender, address(this), tokenId)\" */ value), _16), _16, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3)\n                        /// @src 36:6526:6587  \"melonNFT.safeTransferFrom(msg.sender, address(this), tokenId)\"\n                        if iszero(_17)\n                        {\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            let pos_1 := mload(_1)\n                            returndatacopy(pos_1, _3, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 36:6526:6587  \"melonNFT.safeTransferFrom(msg.sender, address(this), tokenId)\"\n                        if _17\n                        {\n                            finalize_allocation_20201(_16)\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            _3 := _3\n                        }\n                        let cleaned_1 := and(sload(1), _7)\n                        /// @src 36:6620:6646  \"melonNFT.tokenURI(tokenId)\"\n                        let _18 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                        /// @src 36:6620:6646  \"melonNFT.tokenURI(tokenId)\"\n                        mstore(_18, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ shl(224, 0xc87b56dd))\n                        mstore(/** @src 36:6620:6646  \"melonNFT.tokenURI(tokenId)\" */ add(_18, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _2), value)\n                        /// @src 36:6620:6646  \"melonNFT.tokenURI(tokenId)\"\n                        let _19 := staticcall(gas(), cleaned_1, _18, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _6, /** @src 36:6620:6646  \"melonNFT.tokenURI(tokenId)\" */ _18, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3)\n                        /// @src 36:6620:6646  \"melonNFT.tokenURI(tokenId)\"\n                        if iszero(_19)\n                        {\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            let pos_2 := mload(_1)\n                            returndatacopy(pos_2, _3, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 36:6620:6646  \"melonNFT.tokenURI(tokenId)\"\n                        let expr_mpos := _3\n                        if _19\n                        {\n                            let _20 := returndatasize()\n                            returndatacopy(_18, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3, /** @src 36:6620:6646  \"melonNFT.tokenURI(tokenId)\" */ _20)\n                            finalize_allocation(_18, _20)\n                            expr_mpos := abi_decode_string_fromMemory(_18, add(_18, _20))\n                        }\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let memPtr := mload(_1)\n                        finalize_allocation_20202(memPtr)\n                        mstore(memPtr, value)\n                        mstore(/** @src 36:6691:6822  \"NFTListInfo({...\" */ add(memPtr, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _11), value_1)\n                        mstore(/** @src 36:6691:6822  \"NFTListInfo({...\" */ add(memPtr, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _1), expr_mpos)\n                        mstore(/** @src 36:6691:6822  \"NFTListInfo({...\" */ add(memPtr, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 96), _3)\n                        /// @src 36:6835:7078  \"if (isStartUp) {...\"\n                        switch /** @src 36:6485:6513  \"tokenId < START_UP_NFT_LIMIT\" */ lt(value, /** @src 36:6495:6513  \"START_UP_NFT_LIMIT\" */ loadimmutable(\"6030\"))\n                        case /** @src 36:6835:7078  \"if (isStartUp) {...\" */ 0 {\n                            /// @src 36:6975:7002  \"commonNFTs.push(newListing)\"\n                            array_push_from_struct_NFTListInfo_to_array_struct_NFTListInfo_storage_dyn__ptr(memPtr)\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            mstore(_3, /** @src 36:6416:6426  \"msg.sender\" */ caller())\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            mstore(_11, /** @src 36:7030:7044  \"userCommonNFTs\" */ 0x05)\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            let _21 := keccak256(_3, _1)\n                            /// @src 36:7813:7823  \"uint i = 0\"\n                            let var_i_1 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 0\n                            /// @src 36:7808:8066  \"for (uint i = 0; i < startUpNFTs.length; i++) {...\"\n                            for { }\n                            /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _9\n                            /// @src 36:7813:7823  \"uint i = 0\"\n                            {\n                                /// @src 36:7849:7852  \"i++\"\n                                var_i_1 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ add(/** @src 36:7849:7852  \"i++\" */ var_i_1, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _9)\n                            }\n                            /// @src 36:7849:7852  \"i++\"\n                            {\n                                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                                let _22 := sload(/** @src 36:7829:7847  \"startUpNFTs.length\" */ _21)\n                                /// @src 36:7825:7847  \"i < startUpNFTs.length\"\n                                if iszero(lt(var_i_1, _22)) { break }\n                                /// @src 36:7873:7887  \"startUpNFTs[i]\"\n                                let _23, _24 := storage_array_index_access_struct_NFTListInfo__dyn(_21, var_i_1)\n                                /// @src 36:7869:8055  \"if (startUpNFTs[i].tokenId == tokenId) {...\"\n                                if /** @src 36:7873:7906  \"startUpNFTs[i].tokenId == tokenId\" */ eq(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ sload(/** @src 36:7873:7895  \"startUpNFTs[i].tokenId\" */ _23), /** @src 36:7873:7906  \"startUpNFTs[i].tokenId == tokenId\" */ value)\n                                /// @src 36:7869:8055  \"if (startUpNFTs[i].tokenId == tokenId) {...\"\n                                {\n                                    /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                                    let _25 := not(0)\n                                    let diff := add(_22, _25)\n                                    if gt(diff, _22)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(_2, 0x11)\n                                        revert(0, _6)\n                                    }\n                                    /// @src 36:7944:7979  \"startUpNFTs[startUpNFTs.length - 1]\"\n                                    let _26, _27 := storage_array_index_access_struct_NFTListInfo__dyn(_21, /** @src 36:7956:7978  \"startUpNFTs.length - 1\" */ diff)\n                                    /// @src 36:7927:7941  \"startUpNFTs[i]\"\n                                    let _28, _29 := storage_array_index_access_struct_NFTListInfo__dyn(_21, var_i_1)\n                                    /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                                    if _29\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(_2, 0)\n                                        revert(0, _6)\n                                    }\n                                    copy_struct_to_storage_from_struct_NFTListInfo__ptr_to_struct_NFTListInfo(_28, _26)\n                                    let oldLen := sload(_21)\n                                    if iszero(oldLen)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(_2, 0x31)\n                                        revert(0, _6)\n                                    }\n                                    let newLen := add(oldLen, _25)\n                                    let slot, offset := storage_array_index_access_struct_NFTListInfo__dyn(_21, newLen)\n                                    storage_set_to_zero_struct_NFTListInfo(slot, offset)\n                                    sstore(_21, newLen)\n                                    /// @src 36:8034:8039  \"break\"\n                                    break\n                                }\n                            }\n                        }\n                        default /// @src 36:6835:7078  \"if (isStartUp) {...\"\n                        {\n                            /// @src 36:6865:6893  \"startUpNFTs.push(newListing)\"\n                            array_push_from_struct_NFTListInfo_to_array_struct_NFTListInfo_storage_dyn_ptr(memPtr)\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            mstore(_3, /** @src 36:6416:6426  \"msg.sender\" */ caller())\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            mstore(_11, _2)\n                            /// @src 36:6908:6942  \"delete userStartUpNFTs[msg.sender]\"\n                            storage_set_to_zero_struct_NFTListInfo_20205(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ keccak256(_3, _1))\n                        }\n                        mstore(_3, value)\n                        mstore(_11, /** @src 36:1914:1927  \"infoByTokenId\" */ 0x08)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        copy_struct_to_storage_from_struct_NFTListInfo_to_struct_NFTListInfo(keccak256(_3, _1), memPtr)\n                        mstore(_3, /** @src 36:6416:6426  \"msg.sender\" */ caller())\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        mstore(_11, /** @src 36:7153:7160  \"nftLock\" */ 0x07)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let dataSlot := keccak256(_3, _1)\n                        let _30 := sload(dataSlot)\n                        /// @src 36:7185:7382  \"if (price >= curLock) {...\"\n                        switch /** @src 36:7189:7205  \"price >= curLock\" */ iszero(lt(value_1, _30))\n                        case /** @src 36:7185:7382  \"if (price >= curLock) {...\" */ 0 {\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            sstore(dataSlot, /** @src 36:7342:7370  \"nftLock[msg.sender] -= price\" */ checked_sub_uint256(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _30, /** @src 36:7342:7370  \"nftLock[msg.sender] -= price\" */ value_1))\n                        }\n                        default /// @src 36:7185:7382  \"if (price >= curLock) {...\"\n                        {\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            mstore(_3, /** @src 36:6416:6426  \"msg.sender\" */ caller())\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            mstore(_11, /** @src 36:7153:7160  \"nftLock\" */ 0x07)\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            sstore(keccak256(_3, _1), _3)\n                            /// @src 36:7293:7308  \"price - curLock\"\n                            let expr_1 := checked_sub_uint256(value_1, _30)\n                            /// @src 36:7260:7309  \"proposal.addInterest(msg.sender, price - curLock)\"\n                            if iszero(extcodesize(_8))\n                            {\n                                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                                revert(_3, _3)\n                            }\n                            /// @src 36:7260:7309  \"proposal.addInterest(msg.sender, price - curLock)\"\n                            let _31 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                            /// @src 36:7260:7309  \"proposal.addInterest(msg.sender, price - curLock)\"\n                            mstore(_31, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ shl(224, 0x213b2ff3))\n                            /// @src 36:7260:7309  \"proposal.addInterest(msg.sender, price - curLock)\"\n                            let _32 := call(gas(), _8, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3, /** @src 36:7260:7309  \"proposal.addInterest(msg.sender, price - curLock)\" */ _31, sub(abi_encode_address_uint256(add(_31, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _2), /** @src 36:6416:6426  \"msg.sender\" */ caller(), /** @src 36:7260:7309  \"proposal.addInterest(msg.sender, price - curLock)\" */ expr_1), _31), _31, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3)\n                            /// @src 36:7260:7309  \"proposal.addInterest(msg.sender, price - curLock)\"\n                            if iszero(_32)\n                            {\n                                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                                let pos_3 := mload(_1)\n                                returndatacopy(pos_3, _3, returndatasize())\n                                revert(pos_3, returndatasize())\n                            }\n                            /// @src 36:7260:7309  \"proposal.addInterest(msg.sender, price - curLock)\"\n                            if _32\n                            {\n                                finalize_allocation_20201(_31)\n                                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                                if _3 { revert(_3, _3) }\n                            }\n                        }\n                        /// @src 36:7399:7433  \"Redeem(msg.sender, tokenId, price)\"\n                        let _33 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                        mstore(_33, value)\n                        mstore(add(_33, _11), value_1)\n                        /// @src 36:7399:7433  \"Redeem(msg.sender, tokenId, price)\"\n                        log2(_33, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _1, /** @src 36:7399:7433  \"Redeem(msg.sender, tokenId, price)\" */ 0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929, /** @src 36:6416:6426  \"msg.sender\" */ caller())\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        return(_3, _3)\n                    }\n                    case 0x0a2d5c9f {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_3 := calldataload(_2)\n                        /// @src 36:855:904  \"ApplyStartUpNFTInfo[] public applyStartUpNFTInfos\"\n                        if iszero(lt(value_3, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ sload(/** @src 36:855:904  \"ApplyStartUpNFTInfo[] public applyStartUpNFTInfos\" */ 6)))\n                        {\n                            revert(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3, _3)\n                        }\n                        /// @src 36:855:904  \"ApplyStartUpNFTInfo[] public applyStartUpNFTInfos\"\n                        let slot_1, offset_1 := storage_array_index_access_struct_ApplyStartUpNFTInfo__dyn(value_3)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _34 := sload(/** @src 36:855:904  \"ApplyStartUpNFTInfo[] public applyStartUpNFTInfos\" */ slot_1)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let cleaned_2 := and(sload(/** @src 36:855:904  \"ApplyStartUpNFTInfo[] public applyStartUpNFTInfos\" */ add(slot_1, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 1)), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, _34)\n                        mstore(add(memPos_1, 32), cleaned_2)\n                        return(memPos_1, _1)\n                    }\n                    case 0x12fdc7ea {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let length := sload(/** @src 36:3249:3259  \"commonNFTs\" */ 0x03)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _35 := array_allocation_size_array_address_dyn(length)\n                        let memPtr_1 := mload(_1)\n                        finalize_allocation(memPtr_1, _35)\n                        mstore(memPtr_1, length)\n                        let mpos := memPtr_1\n                        let _36 := 0x20\n                        mpos := add(memPtr_1, 0x20)\n                        mstore(0, /** @src 36:3249:3259  \"commonNFTs\" */ 0x03)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let spos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            mstore(mpos, read_from_storage_reference_type_struct_NFTListInfo(spos))\n                            mpos := add(mpos, _36)\n                            spos := add(spos, _2)\n                        }\n                        let memPos_2 := mload(_1)\n                        mstore(memPos_2, 0x20)\n                        return(memPos_2, sub(abi_encode_array_struct_NFTListInfo_dyn(memPtr_1, add(memPos_2, 0x20)), memPos_2))\n                    }\n                    case 0x150b7a02 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_3, _3) }\n                        pop(abi_decode_address())\n                        pop(abi_decode_contract_Proposal())\n                        let offset_2 := calldataload(100)\n                        let _37 := 0xffffffffffffffff\n                        if gt(offset_2, _37) { revert(_3, _3) }\n                        if iszero(slt(add(offset_2, 35), calldatasize())) { revert(_3, _3) }\n                        let length_1 := calldataload(add(_2, offset_2))\n                        if gt(length_1, _37) { revert(_3, _3) }\n                        if gt(add(add(offset_2, length_1), 36), calldatasize()) { revert(_3, _3) }\n                        let memPos_3 := mload(_1)\n                        mstore(memPos_3, shl(225, 0x0a85bd01))\n                        return(memPos_3, 32)\n                    }\n                    case 0x1b02e2d6 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_4 := and(sload(/** @src 36:620:644  \"MelonNFT public melonNFT\" */ 1), /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_4 := mload(_1)\n                        mstore(memPos_4, value_4)\n                        return(memPos_4, 32)\n                    }\n                    case 0x4155adba {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, _2)\n                        let dataSlot_1 := keccak256(_3, _1)\n                        let _38 := sload(/** @src 36:730:784  \"mapping(address => NFTListInfo) public userStartUpNFTs\" */ dataSlot_1)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _39 := sload(/** @src 36:730:784  \"mapping(address => NFTListInfo) public userStartUpNFTs\" */ add(dataSlot_1, 1))\n                        let ret_mpos := copy_array_from_storage_to_memory_string(add(dataSlot_1, 2))\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _40 := sload(/** @src 36:730:784  \"mapping(address => NFTListInfo) public userStartUpNFTs\" */ add(dataSlot_1, 3))\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_uint256_uint256_string_uint256(memPos_5, _38, _39, ret_mpos, _40), memPos_5))\n                    }\n                    case 0x4a1f22c8 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let length_2 := sload(/** @src 36:3003:3023  \"applyStartUpNFTInfos\" */ 0x06)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _41 := array_allocation_size_array_address_dyn(length_2)\n                        let memPtr_2 := mload(_1)\n                        finalize_allocation(memPtr_2, _41)\n                        mstore(memPtr_2, length_2)\n                        let mpos_1 := memPtr_2\n                        let _42 := 0x20\n                        mpos_1 := add(memPtr_2, _42)\n                        let mpos_2 := mpos_1\n                        mstore(_3, /** @src 36:3003:3023  \"applyStartUpNFTInfos\" */ 0x06)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let spos_1 := 111414077815863400510004064629973595961579173665589224203503662149373724986687\n                        let i_1 := _3\n                        for { } lt(i_1, length_2) { i_1 := add(i_1, 1) }\n                        {\n                            let memPtr_3 := mload(_1)\n                            finalize_allocation_20212(memPtr_3)\n                            mstore(memPtr_3, sload(spos_1))\n                            mstore(add(memPtr_3, _42), and(sload(add(spos_1, 1)), sub(shl(160, 1), 1)))\n                            mstore(mpos_1, memPtr_3)\n                            mpos_1 := add(mpos_1, _42)\n                            spos_1 := add(spos_1, 2)\n                        }\n                        let memPos_6 := mload(_1)\n                        let tail := add(memPos_6, _42)\n                        mstore(memPos_6, _42)\n                        let pos_4 := tail\n                        let length_3 := mload(memPtr_2)\n                        mstore(tail, length_3)\n                        pos_4 := add(memPos_6, _1)\n                        let srcPtr := mpos_2\n                        let i_2 := _3\n                        for { } lt(i_2, length_3) { i_2 := add(i_2, 1) }\n                        {\n                            let _43 := mload(srcPtr)\n                            mstore(pos_4, mload(_43))\n                            mstore(add(pos_4, _42), and(mload(add(_43, _42)), sub(shl(160, 1), 1)))\n                            pos_4 := add(pos_4, _1)\n                            srcPtr := add(srcPtr, _42)\n                        }\n                        return(memPos_6, sub(pos_4, memPos_6))\n                    }\n                    case 0x4cfe4d68 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_5 := calldataload(_2)\n                        /// @src 36:690:721  \"NFTListInfo[] public commonNFTs\"\n                        if iszero(lt(value_5, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ sload(/** @src 36:690:721  \"NFTListInfo[] public commonNFTs\" */ 3)))\n                        {\n                            revert(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3, _3)\n                        }\n                        mstore(0, /** @src 36:690:721  \"NFTListInfo[] public commonNFTs\" */ 3)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _44 := shl(2, value_5)\n                        let _45 := sload(add(87903029871075914254377627908054574944891091886930582284385770809450030037083, _44))\n                        let _46 := sload(/** @src 36:690:721  \"NFTListInfo[] public commonNFTs\" */ add(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _44, /** @src 36:690:721  \"NFTListInfo[] public commonNFTs\" */ 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c))\n                        let ret_mpos_1 := copy_array_from_storage_to_memory_string(add(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _44, /** @src 36:690:721  \"NFTListInfo[] public commonNFTs\" */ 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d))\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _47 := sload(/** @src 36:690:721  \"NFTListInfo[] public commonNFTs\" */ add(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _44, /** @src 36:690:721  \"NFTListInfo[] public commonNFTs\" */ 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e))\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_uint256_uint256_string_uint256(memPos_7, _45, _46, ret_mpos_1, _47), memPos_7))\n                    }\n                    case 0x4f7fc7dd {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value_6 := calldataload(_2)\n                        let value_7 := calldataload(36)\n                        let _48 := sub(shl(160, 1), 1)\n                        let cleaned_3 := and(sload(1), _48)\n                        /// @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\"\n                        let _49 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                        /// @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\"\n                        mstore(_49, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ shl(225, 0x31a9108f))\n                        mstore(/** @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\" */ add(_49, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _2), value_6)\n                        let _50 := 32\n                        /// @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\"\n                        let _51 := staticcall(gas(), cleaned_3, _49, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 36, /** @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\" */ _49, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _50)\n                        /// @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\"\n                        if iszero(_51)\n                        {\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            let pos_5 := mload(_1)\n                            returndatacopy(pos_5, _3, returndatasize())\n                            revert(pos_5, returndatasize())\n                        }\n                        /// @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\"\n                        let expr_2 := _3\n                        if _51\n                        {\n                            let _52 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _50\n                            /// @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\"\n                            if gt(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _50, /** @src 36:2097:2122  \"melonNFT.ownerOf(tokenId)\" */ returndatasize()) { _52 := returndatasize() }\n                            finalize_allocation(_49, _52)\n                            expr_2 := abi_decode_address_fromMemory(_49, add(_49, _52))\n                        }\n                        /// @src 36:2093:2192  \"if (melonNFT.ownerOf(tokenId) != user) {...\"\n                        if /** @src 36:2097:2130  \"melonNFT.ownerOf(tokenId) != user\" */ iszero(eq(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ and(/** @src 36:2097:2130  \"melonNFT.ownerOf(tokenId) != user\" */ expr_2, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _48), /** @src 36:4797:4807  \"msg.sender\" */ caller()))\n                        /// @src 36:2093:2192  \"if (melonNFT.ownerOf(tokenId) != user) {...\"\n                        {\n                            /// @src 36:2154:2180  \"NotNFTOwner(user, tokenId)\"\n                            let _53 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                            /// @src 36:2154:2180  \"NotNFTOwner(user, tokenId)\"\n                            mstore(_53, shl(226, 0x0878c0f7))\n                            revert(_53, sub(abi_encode_address_uint256(add(_53, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _2), /** @src 36:4797:4807  \"msg.sender\" */ caller(), /** @src 36:2154:2180  \"NotNFTOwner(user, tokenId)\" */ value_6), _53))\n                        }\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        mstore(_3, value_6)\n                        mstore(_50, /** @src 36:1914:1927  \"infoByTokenId\" */ 0x08)\n                        /// @src 36:1904:2010  \"if (bytes(infoByTokenId[tokenId].uri).length > 0) {...\"\n                        if /** @src 36:1908:1952  \"bytes(infoByTokenId[tokenId].uri).length > 0\" */ iszero(iszero(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ extract_byte_array_length(sload(/** @src 36:1914:1940  \"infoByTokenId[tokenId].uri\" */ add(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ keccak256(_3, _1), /** @src 36:1914:1940  \"infoByTokenId[tokenId].uri\" */ 2)))))\n                        /// @src 36:1904:2010  \"if (bytes(infoByTokenId[tokenId].uri).length > 0) {...\"\n                        {\n                            /// @src 36:1976:1998  \"AlreadyListed(tokenId)\"\n                            let _54 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                            /// @src 36:1976:1998  \"AlreadyListed(tokenId)\"\n                            mstore(_54, shl(224, 0x7fbcdff9))\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            mstore(/** @src 36:1976:1998  \"AlreadyListed(tokenId)\" */ add(_54, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _2), value_6)\n                            /// @src 36:1976:1998  \"AlreadyListed(tokenId)\"\n                            revert(_54, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 36)\n                        }\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 36:4897:4958  \"melonNFT.safeTransferFrom(msg.sender, address(this), tokenId)\"\n                        if iszero(extcodesize(cleaned_3))\n                        {\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            revert(_3, _3)\n                        }\n                        /// @src 36:4897:4958  \"melonNFT.safeTransferFrom(msg.sender, address(this), tokenId)\"\n                        let _55 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                        /// @src 36:4897:4958  \"melonNFT.safeTransferFrom(msg.sender, address(this), tokenId)\"\n                        mstore(_55, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ shl(225, 0x21421707))\n                        /// @src 36:4897:4958  \"melonNFT.safeTransferFrom(msg.sender, address(this), tokenId)\"\n                        let _56 := call(gas(), cleaned_3, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3, /** @src 36:4897:4958  \"melonNFT.safeTransferFrom(msg.sender, address(this), tokenId)\" */ _55, sub(abi_encode_address_address_uint256(add(_55, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _2), /** @src 36:4797:4807  \"msg.sender\" */ caller(), /** @src 36:4943:4947  \"this\" */ address(), /** @src 36:4897:4958  \"melonNFT.safeTransferFrom(msg.sender, address(this), tokenId)\" */ value_6), _55), _55, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3)\n                        /// @src 36:4897:4958  \"melonNFT.safeTransferFrom(msg.sender, address(this), tokenId)\"\n                        if iszero(_56)\n                        {\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            let pos_6 := mload(_1)\n                            returndatacopy(pos_6, _3, returndatasize())\n                            revert(pos_6, returndatasize())\n                        }\n                        /// @src 36:4897:4958  \"melonNFT.safeTransferFrom(msg.sender, address(this), tokenId)\"\n                        if _56\n                        {\n                            finalize_allocation_20201(_55)\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            if _3 { revert(_3, _3) }\n                        }\n                        let cleaned_4 := and(sload(1), _48)\n                        /// @src 36:4989:5015  \"melonNFT.tokenURI(tokenId)\"\n                        let _57 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                        /// @src 36:4989:5015  \"melonNFT.tokenURI(tokenId)\"\n                        mstore(_57, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ shl(224, 0xc87b56dd))\n                        mstore(/** @src 36:4989:5015  \"melonNFT.tokenURI(tokenId)\" */ add(_57, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _2), value_6)\n                        /// @src 36:4989:5015  \"melonNFT.tokenURI(tokenId)\"\n                        let _58 := staticcall(gas(), cleaned_4, _57, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 36, /** @src 36:4989:5015  \"melonNFT.tokenURI(tokenId)\" */ _57, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3)\n                        /// @src 36:4989:5015  \"melonNFT.tokenURI(tokenId)\"\n                        if iszero(_58)\n                        {\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            let pos_7 := mload(_1)\n                            returndatacopy(pos_7, _3, returndatasize())\n                            revert(pos_7, returndatasize())\n                        }\n                        /// @src 36:4989:5015  \"melonNFT.tokenURI(tokenId)\"\n                        let expr_mpos_1 := _3\n                        if _58\n                        {\n                            let _59 := returndatasize()\n                            returndatacopy(_57, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3, /** @src 36:4989:5015  \"melonNFT.tokenURI(tokenId)\" */ _59)\n                            finalize_allocation(_57, _59)\n                            expr_mpos_1 := abi_decode_string_fromMemory(_57, add(_57, _59))\n                        }\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let memPtr_4 := mload(_1)\n                        finalize_allocation_20202(memPtr_4)\n                        mstore(memPtr_4, value_6)\n                        mstore(/** @src 36:5058:5189  \"NFTListInfo({...\" */ add(memPtr_4, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _50), value_7)\n                        mstore(/** @src 36:5058:5189  \"NFTListInfo({...\" */ add(memPtr_4, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _1), expr_mpos_1)\n                        mstore(/** @src 36:5058:5189  \"NFTListInfo({...\" */ add(memPtr_4, 96), /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3)\n                        /// @src 36:5200:5330  \"if (isStartUp) {...\"\n                        switch /** @src 36:4876:4886  \"price == 0\" */ iszero(value_7)\n                        case /** @src 36:5200:5330  \"if (isStartUp) {...\" */ 0 {\n                            /// @src 36:5291:5318  \"commonNFTs.push(newListing)\"\n                            array_push_from_struct_NFTListInfo_to_array_struct_NFTListInfo_storage_dyn__ptr(memPtr_4)\n                        }\n                        default /// @src 36:5200:5330  \"if (isStartUp) {...\"\n                        {\n                            /// @src 36:5230:5258  \"startUpNFTs.push(newListing)\"\n                            array_push_from_struct_NFTListInfo_to_array_struct_NFTListInfo_storage_dyn_ptr(memPtr_4)\n                        }\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        mstore(_3, value_6)\n                        mstore(_50, /** @src 36:1914:1927  \"infoByTokenId\" */ 0x08)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        copy_struct_to_storage_from_struct_NFTListInfo_to_struct_NFTListInfo(keccak256(_3, _1), memPtr_4)\n                        /// @src 36:5391:5414  \"HangOut(tokenId, price)\"\n                        let _60 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                        mstore(_60, value_7)\n                        /// @src 36:5391:5414  \"HangOut(tokenId, price)\"\n                        log2(_60, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _50, /** @src 36:5391:5414  \"HangOut(tokenId, price)\" */ 0xac040a3669b42aba8178c26fbd2fd6a5148e4e5434c9ce01dcb0144e45fc73dc, value_6)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        return(_3, _3)\n                    }\n                    case 0x5829ecd6 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPos_8 := mload(_1)\n                        mstore(memPos_8, /** @src 36:509:556  \"uint public immutable COMMON_NFT_LIMIT_PER_USER\" */ loadimmutable(\"6028\"))\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        return(memPos_8, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _61 := sload(0)\n                        sstore(0, and(_61, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 0, 0, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ and(_61, sub(shl(160, 1), 1)), 0)\n                        return(_3, _3)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let cleaned_5 := and(sload(_3), sub(shl(160, 1), 1))\n                        let memPos_9 := mload(_1)\n                        mstore(memPos_9, cleaned_5)\n                        return(memPos_9, 32)\n                    }\n                    case 0x9f4556d4 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 36:913:952  \"mapping(address => uint) public nftLock\" */ 7)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _62 := sload(keccak256(_3, _1))\n                        let memPos_10 := mload(_1)\n                        mstore(memPos_10, _62)\n                        return(memPos_10, 32)\n                    }\n                    case 0xa139e8e1 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPos_11 := mload(_1)\n                        mstore(memPos_11, /** @src 36:563:603  \"uint public immutable START_UP_NFT_LIMIT\" */ loadimmutable(\"6030\"))\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        return(memPos_11, 32)\n                    }\n                    case 0xb8923eba {\n                        if callvalue() { revert(_3, _3) }\n                        let _63 := 32\n                        if slt(add(calldatasize(), not(3)), _63) { revert(_3, _3) }\n                        let value0 := abi_decode_address()\n                        let memPtr_5 := mload(_1)\n                        finalize_allocation_20202(memPtr_5)\n                        mstore(memPtr_5, _3)\n                        mstore(add(memPtr_5, _63), _3)\n                        mstore(add(memPtr_5, _1), 96)\n                        mstore(add(memPtr_5, 96), _3)\n                        mstore(_3, and(value0, sub(shl(160, 1), 1)))\n                        mstore(_63, _2)\n                        let dataSlot_2 := keccak256(_3, _1)\n                        mstore(_63, /** @src 36:3439:3453  \"userCommonNFTs\" */ 0x05)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let dataSlot_3 := keccak256(_3, _1)\n                        /// @src 36:3408:3460  \"return (userStartUpNFTs[user], userCommonNFTs[user])\"\n                        let var_mpos := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ read_from_storage_reference_type_struct_NFTListInfo(/** @src 36:3408:3460  \"return (userStartUpNFTs[user], userCommonNFTs[user])\" */ dataSlot_2)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let length_4 := sload(dataSlot_3)\n                        let _64 := array_allocation_size_array_address_dyn(length_4)\n                        let memPtr_6 := mload(_1)\n                        finalize_allocation(memPtr_6, _64)\n                        mstore(memPtr_6, length_4)\n                        let mpos_3 := memPtr_6\n                        mpos_3 := add(memPtr_6, _63)\n                        mstore(0, dataSlot_3)\n                        let spos_2 := keccak256(0, _63)\n                        let i_3 := 0\n                        for { } lt(i_3, length_4) { i_3 := add(i_3, 1) }\n                        {\n                            mstore(mpos_3, read_from_storage_reference_type_struct_NFTListInfo(spos_2))\n                            mpos_3 := add(mpos_3, _63)\n                            spos_2 := add(spos_2, _2)\n                        }\n                        let memPos_12 := mload(_1)\n                        mstore(memPos_12, _1)\n                        let tail_1 := abi_encode_struct_NFTListInfo(var_mpos, add(memPos_12, _1))\n                        mstore(add(memPos_12, _63), sub(tail_1, memPos_12))\n                        return(memPos_12, sub(abi_encode_array_struct_NFTListInfo_dyn(memPtr_6, tail_1), memPos_12))\n                    }\n                    case 0xbc93d0e0 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value_8 := calldataload(_2)\n                        let value1 := abi_decode_contract_Proposal()\n                        mstore(_3, value_8)\n                        let _65 := 32\n                        mstore(_65, /** @src 36:1739:1752  \"infoByTokenId\" */ 0x08)\n                        /// @src 36:1729:1832  \"if (bytes(infoByTokenId[tokenId].uri).length == 0) {...\"\n                        if /** @src 36:1733:1778  \"bytes(infoByTokenId[tokenId].uri).length == 0\" */ iszero(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ extract_byte_array_length(sload(/** @src 36:1739:1765  \"infoByTokenId[tokenId].uri\" */ add(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ keccak256(_3, _1), /** @src 36:1739:1765  \"infoByTokenId[tokenId].uri\" */ 2))))\n                        /// @src 36:1729:1832  \"if (bytes(infoByTokenId[tokenId].uri).length == 0) {...\"\n                        {\n                            /// @src 36:1802:1820  \"NotListed(tokenId)\"\n                            let _66 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                            /// @src 36:1802:1820  \"NotListed(tokenId)\"\n                            mstore(_66, shl(229, 0x068bb675))\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            mstore(/** @src 36:1802:1820  \"NotListed(tokenId)\" */ add(_66, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _2), value_8)\n                            /// @src 36:1802:1820  \"NotListed(tokenId)\"\n                            revert(_66, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 36)\n                        }\n                        mstore(_3, /** @src 36:5583:5593  \"msg.sender\" */ caller())\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        mstore(_65, /** @src 36:5568:5582  \"userCommonNFTs\" */ 0x05)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let length_5 := sload(keccak256(_3, _1))\n                        /// @src 36:5614:5734  \"if (balance >= COMMON_NFT_LIMIT_PER_USER) {...\"\n                        if /** @src 36:5618:5654  \"balance >= COMMON_NFT_LIMIT_PER_USER\" */ iszero(lt(length_5, /** @src 36:5629:5654  \"COMMON_NFT_LIMIT_PER_USER\" */ loadimmutable(\"6028\")))\n                        /// @src 36:5614:5734  \"if (balance >= COMMON_NFT_LIMIT_PER_USER) {...\"\n                        {\n                            /// @src 36:5678:5722  \"MaximumNumberOfHoldings(msg.sender, balance)\"\n                            let _67 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                            /// @src 36:5678:5722  \"MaximumNumberOfHoldings(msg.sender, balance)\"\n                            mstore(_67, shl(225, 0x4609f583))\n                            revert(_67, sub(abi_encode_address_uint256(add(_67, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _2), /** @src 36:5583:5593  \"msg.sender\" */ caller(), /** @src 36:5678:5722  \"MaximumNumberOfHoldings(msg.sender, balance)\" */ length_5), _67))\n                        }\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        mstore(_3, value_8)\n                        mstore(_65, /** @src 36:1739:1752  \"infoByTokenId\" */ 0x08)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let converted := read_from_storage_reference_type_struct_NFTListInfo(keccak256(_3, _1))\n                        let _68 := sub(shl(160, 1), 1)\n                        /// @src 36:5829:5869  \"proposal.getAvailableBalance(msg.sender)\"\n                        let _69 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                        /// @src 36:5829:5869  \"proposal.getAvailableBalance(msg.sender)\"\n                        mstore(_69, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ shl(224, 0x6c24a76f))\n                        mstore(/** @src 36:5829:5869  \"proposal.getAvailableBalance(msg.sender)\" */ add(_69, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _2), /** @src 36:5583:5593  \"msg.sender\" */ caller())\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _70 := 36\n                        /// @src 36:5829:5869  \"proposal.getAvailableBalance(msg.sender)\"\n                        let _71 := staticcall(gas(), /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ and(/** @src 36:5829:5857  \"proposal.getAvailableBalance\" */ value1, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _68), /** @src 36:5829:5869  \"proposal.getAvailableBalance(msg.sender)\" */ _69, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _70, /** @src 36:5829:5869  \"proposal.getAvailableBalance(msg.sender)\" */ _69, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _65)\n                        /// @src 36:5829:5869  \"proposal.getAvailableBalance(msg.sender)\"\n                        if iszero(_71)\n                        {\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            let pos_8 := mload(_1)\n                            returndatacopy(pos_8, _3, returndatasize())\n                            revert(pos_8, returndatasize())\n                        }\n                        /// @src 36:5829:5869  \"proposal.getAvailableBalance(msg.sender)\"\n                        let expr_3 := _3\n                        if _71\n                        {\n                            let _72 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _65\n                            /// @src 36:5829:5869  \"proposal.getAvailableBalance(msg.sender)\"\n                            if gt(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _65, /** @src 36:5829:5869  \"proposal.getAvailableBalance(msg.sender)\" */ returndatasize()) { _72 := returndatasize() }\n                            finalize_allocation(_69, _72)\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            if slt(sub(/** @src 36:5829:5869  \"proposal.getAvailableBalance(msg.sender)\" */ add(_69, _72), /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _69), _65) { revert(_3, _3) }\n                            /// @src 36:5829:5869  \"proposal.getAvailableBalance(msg.sender)\"\n                            expr_3 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_69)\n                        }\n                        /// @src 36:5873:5883  \"info.price\"\n                        let _73 := add(converted, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _65)\n                        if /** @src 36:5829:5883  \"proposal.getAvailableBalance(msg.sender) >= info.price\" */ lt(expr_3, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(/** @src 36:5873:5883  \"info.price\" */ _73))\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        {\n                            let memPtr_7 := mload(_1)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, _2), _65)\n                            mstore(add(memPtr_7, _70), 20)\n                            mstore(add(memPtr_7, 68), \"Insufficient balance\")\n                            revert(memPtr_7, 100)\n                        }\n                        let _74 := mload(/** @src 36:5967:5977  \"info.price\" */ _73)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        mstore(_3, /** @src 36:5583:5593  \"msg.sender\" */ caller())\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        mstore(_65, /** @src 36:5944:5951  \"nftLock\" */ 0x07)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let dataSlot_4 := keccak256(_3, _1)\n                        sstore(dataSlot_4, /** @src 36:5944:5977  \"nftLock[msg.sender] += info.price\" */ checked_add_uint256(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ sload(/** @src 36:5944:5977  \"nftLock[msg.sender] += info.price\" */ dataSlot_4), _74))\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _75 := 1\n                        let cleaned_6 := and(sload(1), _68)\n                        /// @src 36:5990:6051  \"melonNFT.safeTransferFrom(address(this), msg.sender, tokenId)\"\n                        if iszero(extcodesize(cleaned_6))\n                        {\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            revert(_3, _3)\n                        }\n                        /// @src 36:5990:6051  \"melonNFT.safeTransferFrom(address(this), msg.sender, tokenId)\"\n                        let _76 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                        /// @src 36:5990:6051  \"melonNFT.safeTransferFrom(address(this), msg.sender, tokenId)\"\n                        mstore(_76, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ shl(225, 0x21421707))\n                        /// @src 36:5990:6051  \"melonNFT.safeTransferFrom(address(this), msg.sender, tokenId)\"\n                        let _77 := call(gas(), cleaned_6, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3, /** @src 36:5990:6051  \"melonNFT.safeTransferFrom(address(this), msg.sender, tokenId)\" */ _76, sub(abi_encode_address_address_uint256(add(_76, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _2), /** @src 36:6024:6028  \"this\" */ address(), /** @src 36:5583:5593  \"msg.sender\" */ caller(), /** @src 36:5990:6051  \"melonNFT.safeTransferFrom(address(this), msg.sender, tokenId)\" */ value_8), _76), _76, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3)\n                        /// @src 36:5990:6051  \"melonNFT.safeTransferFrom(address(this), msg.sender, tokenId)\"\n                        if iszero(_77)\n                        {\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            let pos_9 := mload(_1)\n                            returndatacopy(pos_9, _3, returndatasize())\n                            revert(pos_9, returndatasize())\n                        }\n                        /// @src 36:5990:6051  \"melonNFT.safeTransferFrom(address(this), msg.sender, tokenId)\"\n                        if _77\n                        {\n                            finalize_allocation_20201(_76)\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            if _3 { revert(_3, _3) }\n                        }\n                        mstore(/** @src 36:6064:6077  \"info.gainTime\" */ add(converted, 96), /** @src 36:6080:6095  \"block.timestamp\" */ timestamp())\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        mstore(_3, /** @src 36:5583:5593  \"msg.sender\" */ caller())\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        mstore(_65, /** @src 36:5568:5582  \"userCommonNFTs\" */ 0x05)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _78 := keccak256(_3, _1)\n                        let oldLen_1 := sload(_78)\n                        if iszero(lt(oldLen_1, 18446744073709551616))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(0, _70)\n                        }\n                        sstore(_78, add(oldLen_1, 1))\n                        let slot_2, offset_3 := storage_array_index_access_struct_NFTListInfo__dyn(_78, oldLen_1)\n                        if offset_3\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_2, 0)\n                            revert(0, _70)\n                        }\n                        copy_struct_to_storage_from_struct_NFTListInfo_to_struct_NFTListInfo(slot_2, converted)\n                        /// @src 36:7813:7823  \"uint i = 0\"\n                        let var_i_2 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 0\n                        /// @src 36:7808:8066  \"for (uint i = 0; i < startUpNFTs.length; i++) {...\"\n                        for { }\n                        /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _75\n                        /// @src 36:7813:7823  \"uint i = 0\"\n                        {\n                            /// @src 36:7849:7852  \"i++\"\n                            var_i_2 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ add(/** @src 36:7849:7852  \"i++\" */ var_i_2, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _75)\n                        }\n                        /// @src 36:7849:7852  \"i++\"\n                        {\n                            /// @src 36:6171:6181  \"commonNFTs\"\n                            let _79 := 0x03\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            let _80 := sload(/** @src 36:6171:6181  \"commonNFTs\" */ _79)\n                            /// @src 36:7825:7847  \"i < startUpNFTs.length\"\n                            if iszero(lt(var_i_2, _80)) { break }\n                            /// @src 36:7873:7887  \"startUpNFTs[i]\"\n                            let _81, _82 := storage_array_index_access_struct_NFTListInfo__dyn_32592(var_i_2)\n                            /// @src 36:7869:8055  \"if (startUpNFTs[i].tokenId == tokenId) {...\"\n                            if /** @src 36:7873:7906  \"startUpNFTs[i].tokenId == tokenId\" */ eq(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ sload(/** @src 36:7873:7895  \"startUpNFTs[i].tokenId\" */ _81), /** @src 36:7873:7906  \"startUpNFTs[i].tokenId == tokenId\" */ value_8)\n                            /// @src 36:7869:8055  \"if (startUpNFTs[i].tokenId == tokenId) {...\"\n                            {\n                                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                                let _83 := not(0)\n                                let diff_1 := add(_80, _83)\n                                if gt(diff_1, _80)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(_2, 0x11)\n                                    revert(0, _70)\n                                }\n                                /// @src 36:7944:7979  \"startUpNFTs[startUpNFTs.length - 1]\"\n                                let _84, _85 := storage_array_index_access_struct_NFTListInfo__dyn_32592(/** @src 36:7956:7978  \"startUpNFTs.length - 1\" */ diff_1)\n                                /// @src 36:7927:7941  \"startUpNFTs[i]\"\n                                let _86, _87 := storage_array_index_access_struct_NFTListInfo__dyn_32592(var_i_2)\n                                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                                if _87\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(_2, 0)\n                                    revert(0, _70)\n                                }\n                                copy_struct_to_storage_from_struct_NFTListInfo__ptr_to_struct_NFTListInfo(_86, _84)\n                                let oldLen_2 := sload(/** @src 36:6171:6181  \"commonNFTs\" */ _79)\n                                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                                if iszero(oldLen_2)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(_2, 0x31)\n                                    revert(0, _70)\n                                }\n                                let newLen_1 := add(oldLen_2, _83)\n                                let slot_3, offset_4 := storage_array_index_access_struct_NFTListInfo__dyn_32592(newLen_1)\n                                storage_set_to_zero_struct_NFTListInfo(slot_3, offset_4)\n                                sstore(/** @src 36:6171:6181  \"commonNFTs\" */ _79, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ newLen_1)\n                                /// @src 36:8034:8039  \"break\"\n                                break\n                            }\n                        }\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        mstore(_3, value_8)\n                        mstore(_65, /** @src 36:1739:1752  \"infoByTokenId\" */ 0x08)\n                        /// @src 36:6202:6231  \"delete infoByTokenId[tokenId]\"\n                        storage_set_to_zero_struct_NFTListInfo_20205(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ keccak256(_3, _1))\n                        let _88 := mload(/** @src 36:6277:6287  \"info.price\" */ _73)\n                        /// @src 36:6249:6288  \"BuyNFT(msg.sender, tokenId, info.price)\"\n                        let _89 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                        mstore(_89, value_8)\n                        mstore(add(_89, _65), _88)\n                        /// @src 36:6249:6288  \"BuyNFT(msg.sender, tokenId, info.price)\"\n                        log2(_89, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _1, /** @src 36:6249:6288  \"BuyNFT(msg.sender, tokenId, info.price)\" */ 0x5d963241241cfe9e161d13500d628058954b3febfde03e4b1f4071370e72fe2b, /** @src 36:5583:5593  \"msg.sender\" */ caller())\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        return(_3, _3)\n                    }\n                    case 0xc98ea0d6 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_9 := calldataload(_2)\n                        /// @src 36:651:683  \"NFTListInfo[] public startUpNFTs\"\n                        if iszero(lt(value_9, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ sload(/** @src 36:651:683  \"NFTListInfo[] public startUpNFTs\" */ 2)))\n                        {\n                            revert(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3, _3)\n                        }\n                        mstore(0, /** @src 36:651:683  \"NFTListInfo[] public startUpNFTs\" */ 2)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _90 := shl(/** @src 36:651:683  \"NFTListInfo[] public startUpNFTs\" */ 2, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ value_9)\n                        let _91 := sload(add(29102676481673041902632991033461445430619272659676223336789171408008386403022, _90))\n                        let _92 := sload(/** @src 36:651:683  \"NFTListInfo[] public startUpNFTs\" */ add(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _90, /** @src 36:651:683  \"NFTListInfo[] public startUpNFTs\" */ 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf))\n                        let ret_mpos_2 := copy_array_from_storage_to_memory_string(add(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _90, /** @src 36:651:683  \"NFTListInfo[] public startUpNFTs\" */ 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0))\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _93 := sload(/** @src 36:651:683  \"NFTListInfo[] public startUpNFTs\" */ add(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _90, /** @src 36:651:683  \"NFTListInfo[] public startUpNFTs\" */ 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad1))\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let memPos_13 := mload(_1)\n                        return(memPos_13, sub(abi_encode_uint256_uint256_string_uint256(memPos_13, _91, _92, ret_mpos_2, _93), memPos_13))\n                    }\n                    case 0xcb5b7d34 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, calldataload(_2))\n                        mstore(32, /** @src 36:959:1008  \"mapping(uint => NFTListInfo) public infoByTokenId\" */ 8)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let dataSlot_5 := keccak256(_3, _1)\n                        let _94 := sload(/** @src 36:959:1008  \"mapping(uint => NFTListInfo) public infoByTokenId\" */ dataSlot_5)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _95 := sload(/** @src 36:959:1008  \"mapping(uint => NFTListInfo) public infoByTokenId\" */ add(dataSlot_5, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 1))\n                        /// @src 36:959:1008  \"mapping(uint => NFTListInfo) public infoByTokenId\"\n                        let ret_mpos_3 := copy_array_from_storage_to_memory_string(add(dataSlot_5, 2))\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _96 := sload(/** @src 36:959:1008  \"mapping(uint => NFTListInfo) public infoByTokenId\" */ add(dataSlot_5, 3))\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let memPos_14 := mload(_1)\n                        return(memPos_14, sub(abi_encode_uint256_uint256_string_uint256(memPos_14, _94, _95, ret_mpos_3, _96), memPos_14))\n                    }\n                    case 0xd29f087a {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_1 := abi_decode_address()\n                        let value_10 := calldataload(36)\n                        mstore(_3, and(value0_1, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 36:791:846  \"mapping(address => NFTListInfo[]) public userCommonNFTs\" */ 5)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let dataSlot_6 := keccak256(_3, _1)\n                        /// @src 36:791:846  \"mapping(address => NFTListInfo[]) public userCommonNFTs\"\n                        if iszero(lt(value_10, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ sload(/** @src 36:791:846  \"mapping(address => NFTListInfo[]) public userCommonNFTs\" */ dataSlot_6)))\n                        {\n                            revert(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3, _3)\n                        }\n                        /// @src 36:791:846  \"mapping(address => NFTListInfo[]) public userCommonNFTs\"\n                        let slot_4, offset_5 := storage_array_index_access_struct_NFTListInfo__dyn(dataSlot_6, value_10)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _97 := sload(/** @src 36:791:846  \"mapping(address => NFTListInfo[]) public userCommonNFTs\" */ slot_4)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _98 := sload(/** @src 36:791:846  \"mapping(address => NFTListInfo[]) public userCommonNFTs\" */ add(slot_4, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 1))\n                        /// @src 36:791:846  \"mapping(address => NFTListInfo[]) public userCommonNFTs\"\n                        let ret_mpos_4 := copy_array_from_storage_to_memory_string(add(slot_4, 2))\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _99 := sload(/** @src 36:791:846  \"mapping(address => NFTListInfo[]) public userCommonNFTs\" */ add(slot_4, 3))\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let memPos_15 := mload(_1)\n                        return(memPos_15, sub(abi_encode_uint256_uint256_string_uint256(memPos_15, _97, _98, ret_mpos_4, _99), memPos_15))\n                    }\n                    case 0xd86a5075 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let offset_6 := calldataload(_2)\n                        let _100 := 0xffffffffffffffff\n                        if gt(offset_6, _100) { revert(_3, _3) }\n                        if iszero(slt(add(offset_6, 35), calldatasize())) { revert(_3, _3) }\n                        let _101 := calldataload(add(_2, offset_6))\n                        let _102 := 36\n                        let _103 := array_allocation_size_array_address_dyn(_101)\n                        let memPtr_8 := mload(_1)\n                        finalize_allocation(memPtr_8, _103)\n                        let dst := memPtr_8\n                        mstore(memPtr_8, _101)\n                        let _104 := 0x20\n                        dst := add(memPtr_8, _104)\n                        let srcEnd := add(add(offset_6, shl(5, _101)), _102)\n                        if gt(srcEnd, calldatasize()) { revert(_3, _3) }\n                        let src := add(offset_6, _102)\n                        for { } lt(src, srcEnd) { src := add(src, _104) }\n                        {\n                            let value_11 := calldataload(src)\n                            if iszero(eq(value_11, and(value_11, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                            mstore(dst, value_11)\n                            dst := add(dst, _104)\n                        }\n                        let offset_7 := calldataload(_102)\n                        if gt(offset_7, _100) { revert(_3, _3) }\n                        if iszero(slt(add(offset_7, 35), calldatasize())) { revert(_3, _3) }\n                        let _105 := calldataload(add(_2, offset_7))\n                        let _106 := array_allocation_size_array_address_dyn(_105)\n                        let memPtr_9 := mload(_1)\n                        finalize_allocation(memPtr_9, _106)\n                        let dst_1 := memPtr_9\n                        mstore(memPtr_9, _105)\n                        dst_1 := add(memPtr_9, _104)\n                        let srcEnd_1 := add(add(offset_7, shl(5, _105)), _102)\n                        if gt(srcEnd_1, calldatasize()) { revert(_3, _3) }\n                        let src_1 := add(offset_7, _102)\n                        for { } lt(src_1, srcEnd_1) { src_1 := add(src_1, _104) }\n                        {\n                            mstore(dst_1, calldataload(src_1))\n                            dst_1 := add(dst_1, _104)\n                        }\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 36:3631:3643  \"users.length\"\n                        let expr_4 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(/** @src 36:3631:3643  \"users.length\" */ memPtr_8)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        if iszero(/** @src 36:3631:3662  \"users.length == tokenIds.length\" */ eq(expr_4, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(/** @src 36:3647:3662  \"tokenIds.length\" */ memPtr_9)))\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        {\n                            let memPtr_10 := mload(_1)\n                            mstore(memPtr_10, shl(229, 4594637))\n                            mstore(add(memPtr_10, _2), _104)\n                            mstore(add(memPtr_10, _102), 43)\n                            mstore(add(memPtr_10, 68), \"Users and tokenIds array lengths\")\n                            mstore(add(memPtr_10, 100), \" must match\")\n                            revert(memPtr_10, 132)\n                        }\n                        /// @src 36:8145:8172  \"applyStartUpNFTInfos.length\"\n                        let expr_5 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ sload(/** @src 36:8145:8165  \"applyStartUpNFTInfos\" */ 0x06)\n                        /// @src 36:8188:8198  \"uint i = 0\"\n                        let var_i_3 := _3\n                        /// @src 36:8183:8375  \"for (uint i = 0; i < applyCount; i++) {...\"\n                        for { }\n                        /** @src 36:8200:8214  \"i < applyCount\" */ lt(var_i_3, expr_5)\n                        /// @src 36:8188:8198  \"uint i = 0\"\n                        {\n                            /// @src 36:8216:8219  \"i++\"\n                            var_i_3 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ add(/** @src 36:8216:8219  \"i++\" */ var_i_3, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 1)\n                        }\n                        /// @src 36:8216:8219  \"i++\"\n                        {\n                            /// @src 36:8276:8299  \"applyStartUpNFTInfos[i]\"\n                            let _107, _108 := storage_array_index_access_struct_ApplyStartUpNFTInfo__dyn(var_i_3)\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            let _109 := sload(/** @src 36:8341:8363  \"applyInfo.pledgeAmount\" */ _107)\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            mstore(_3, and(sload(/** @src 36:8322:8336  \"applyInfo.user\" */ add(_107, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 1)), sub(shl(160, 1), 1)))\n                            mstore(_104, /** @src 36:8314:8321  \"nftLock\" */ 0x07)\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            let dataSlot_7 := keccak256(_3, _1)\n                            sstore(dataSlot_7, /** @src 36:8314:8363  \"nftLock[applyInfo.user] -= applyInfo.pledgeAmount\" */ checked_sub_uint256(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ sload(/** @src 36:8314:8363  \"nftLock[applyInfo.user] -= applyInfo.pledgeAmount\" */ dataSlot_7), _109))\n                        }\n                        /// @src 36:3776:3786  \"uint i = 0\"\n                        let var_i_4 := _3\n                        /// @src 36:3771:4389  \"for (uint i = 0; i < users.length; i++) {...\"\n                        for { }\n                        /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 1\n                        /// @src 36:3776:3786  \"uint i = 0\"\n                        {\n                            /// @src 36:3806:3809  \"i++\"\n                            var_i_4 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ add(/** @src 36:3806:3809  \"i++\" */ var_i_4, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 1)\n                        }\n                        /// @src 36:3806:3809  \"i++\"\n                        {\n                            /// @src 36:3788:3804  \"i < users.length\"\n                            if iszero(lt(var_i_4, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(/** @src 36:3792:3804  \"users.length\" */ memPtr_8)))\n                            /// @src 36:3788:3804  \"i < users.length\"\n                            { break }\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            let _110 := sub(shl(160, 1), 1)\n                            let cleaned_7 := and(mload(/** @src 36:3841:3849  \"users[i]\" */ memory_array_index_access_address_dyn(memPtr_8, var_i_4)), /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _110)\n                            let _111 := mload(/** @src 36:3879:3890  \"tokenIds[i]\" */ memory_array_index_access_address_dyn(memPtr_9, var_i_4))\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            mstore(_3, _111)\n                            /// @src 36:3932:3945  \"infoByTokenId\"\n                            let _112 := 0x08\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            mstore(_104, /** @src 36:3932:3945  \"infoByTokenId\" */ _112)\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            let dataSlot_8 := keccak256(_3, _1)\n                            /// @src 36:3979:3987  \"info.uri\"\n                            let _113 := 2\n                            /// @src 36:3969:4062  \"if (bytes(info.uri).length == 0) {...\"\n                            if /** @src 36:3973:4000  \"bytes(info.uri).length == 0\" */ iszero(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ extract_byte_array_length(sload(/** @src 36:3979:3987  \"info.uri\" */ add(dataSlot_8, _113))))\n                            /// @src 36:3969:4062  \"if (bytes(info.uri).length == 0) {...\"\n                            {\n                                /// @src 36:4028:4046  \"NotListed(tokenId)\"\n                                let _114 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                                /// @src 36:4028:4046  \"NotListed(tokenId)\"\n                                mstore(_114, /** @src 36:1802:1820  \"NotListed(tokenId)\" */ shl(229, 0x068bb675))\n                                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                                mstore(/** @src 36:4028:4046  \"NotListed(tokenId)\" */ add(_114, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _2), _111)\n                                /// @src 36:4028:4046  \"NotListed(tokenId)\"\n                                revert(_114, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _102)\n                            }\n                            let _115 := 1\n                            let cleaned_8 := and(sload(_115), _110)\n                            /// @src 36:4076:4131  \"melonNFT.safeTransferFrom(address(this), user, tokenId)\"\n                            if iszero(extcodesize(cleaned_8))\n                            {\n                                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                                revert(_3, _3)\n                            }\n                            /// @src 36:4076:4131  \"melonNFT.safeTransferFrom(address(this), user, tokenId)\"\n                            let _116 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                            /// @src 36:4076:4131  \"melonNFT.safeTransferFrom(address(this), user, tokenId)\"\n                            mstore(_116, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ shl(225, 0x21421707))\n                            /// @src 36:4076:4131  \"melonNFT.safeTransferFrom(address(this), user, tokenId)\"\n                            let _117 := call(gas(), cleaned_8, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3, /** @src 36:4076:4131  \"melonNFT.safeTransferFrom(address(this), user, tokenId)\" */ _116, sub(abi_encode_address_address_uint256(add(_116, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _2), /** @src 36:4110:4114  \"this\" */ address(), /** @src 36:4076:4131  \"melonNFT.safeTransferFrom(address(this), user, tokenId)\" */ cleaned_7, _111), _116), _116, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _3)\n                            /// @src 36:4076:4131  \"melonNFT.safeTransferFrom(address(this), user, tokenId)\"\n                            if iszero(_117)\n                            {\n                                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                                let pos_10 := mload(_1)\n                                returndatacopy(pos_10, _3, returndatasize())\n                                revert(pos_10, returndatasize())\n                            }\n                            /// @src 36:4076:4131  \"melonNFT.safeTransferFrom(address(this), user, tokenId)\"\n                            if _117\n                            {\n                                finalize_allocation_20201(_116)\n                                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                                if _3 { revert(_3, _3) }\n                            }\n                            sstore(/** @src 36:4146:4159  \"info.gainTime\" */ add(dataSlot_8, 3), /** @src 36:4162:4177  \"block.timestamp\" */ timestamp())\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            mstore(_3, cleaned_7)\n                            mstore(_104, _2)\n                            copy_struct_to_storage_from_struct_NFTListInfo__ptr_to_struct_NFTListInfo(keccak256(_3, _1), dataSlot_8)\n                            mstore(_3, _111)\n                            mstore(_104, /** @src 36:3932:3945  \"infoByTokenId\" */ _112)\n                            /// @src 36:4235:4264  \"delete infoByTokenId[tokenId]\"\n                            storage_set_to_zero_struct_NFTListInfo_20205(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ keccak256(_3, _1))\n                            /// @src 36:7813:7823  \"uint i = 0\"\n                            let var_i_5 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 0\n                            /// @src 36:7808:8066  \"for (uint i = 0; i < startUpNFTs.length; i++) {...\"\n                            for { }\n                            /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _115\n                            /// @src 36:7813:7823  \"uint i = 0\"\n                            {\n                                /// @src 36:7849:7852  \"i++\"\n                                var_i_5 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ add(/** @src 36:7849:7852  \"i++\" */ var_i_5, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _115)\n                            }\n                            /// @src 36:7849:7852  \"i++\"\n                            {\n                                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                                let _118 := sload(/** @src 36:3979:3987  \"info.uri\" */ _113)\n                                /// @src 36:7825:7847  \"i < startUpNFTs.length\"\n                                if iszero(lt(var_i_5, _118)) { break }\n                                /// @src 36:7873:7887  \"startUpNFTs[i]\"\n                                let _119, _120 := storage_array_index_access_struct_NFTListInfo__dyn_32596(var_i_5)\n                                /// @src 36:7869:8055  \"if (startUpNFTs[i].tokenId == tokenId) {...\"\n                                if /** @src 36:7873:7906  \"startUpNFTs[i].tokenId == tokenId\" */ eq(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ sload(/** @src 36:7873:7895  \"startUpNFTs[i].tokenId\" */ _119), /** @src 36:7873:7906  \"startUpNFTs[i].tokenId == tokenId\" */ _111)\n                                /// @src 36:7869:8055  \"if (startUpNFTs[i].tokenId == tokenId) {...\"\n                                {\n                                    /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                                    let _121 := not(0)\n                                    let diff_2 := add(_118, _121)\n                                    if gt(diff_2, _118)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(_2, 0x11)\n                                        revert(0, _102)\n                                    }\n                                    /// @src 36:7944:7979  \"startUpNFTs[startUpNFTs.length - 1]\"\n                                    let _122, _123 := storage_array_index_access_struct_NFTListInfo__dyn_32596(/** @src 36:7956:7978  \"startUpNFTs.length - 1\" */ diff_2)\n                                    /// @src 36:7927:7941  \"startUpNFTs[i]\"\n                                    let _124, _125 := storage_array_index_access_struct_NFTListInfo__dyn_32596(var_i_5)\n                                    /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                                    if _125\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(_2, 0)\n                                        revert(0, _102)\n                                    }\n                                    copy_struct_to_storage_from_struct_NFTListInfo__ptr_to_struct_NFTListInfo(_124, _122)\n                                    let oldLen_3 := sload(/** @src 36:3979:3987  \"info.uri\" */ _113)\n                                    /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                                    if iszero(oldLen_3)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(_2, 0x31)\n                                        revert(0, _102)\n                                    }\n                                    let newLen_2 := add(oldLen_3, _121)\n                                    let slot_5, offset_8 := storage_array_index_access_struct_NFTListInfo__dyn_32596(newLen_2)\n                                    storage_set_to_zero_struct_NFTListInfo(slot_5, offset_8)\n                                    sstore(/** @src 36:3979:3987  \"info.uri\" */ _113, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ newLen_2)\n                                    /// @src 36:8034:8039  \"break\"\n                                    break\n                                }\n                            }\n                            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                            let _126 := sload(/** @src 36:4366:4376  \"info.price\" */ add(dataSlot_8, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _115))\n                            /// @src 36:4333:4377  \"StartUpNFTSending(user, tokenId, info.price)\"\n                            let _127 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                            mstore(_127, _111)\n                            mstore(add(_127, _104), _126)\n                            /// @src 36:4333:4377  \"StartUpNFTSending(user, tokenId, info.price)\"\n                            log2(_127, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _1, /** @src 36:4333:4377  \"StartUpNFTSending(user, tokenId, info.price)\" */ 0xde4f139185ace785cbf7e66c8f61847efcaa12e5e37cf3372124403285b25d87, cleaned_7)\n                        }\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        return(_3, _3)\n                    }\n                    case 0xdd9e3e4f {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_12 := calldataload(_2)\n                        let memPtr_11 := mload(_1)\n                        finalize_allocation_20212(memPtr_11)\n                        mstore(memPtr_11, value_12)\n                        /// @src 36:4508:4575  \"ApplyStartUpNFTInfo({pledgeAmount: pledgeAmount, user: msg.sender})\"\n                        let _128 := add(memPtr_11, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 32)\n                        mstore(_128, /** @src 36:4563:4573  \"msg.sender\" */ caller())\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let oldLen_4 := sload(/** @src 36:4468:4488  \"applyStartUpNFTInfos\" */ 0x06)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        if iszero(lt(oldLen_4, 18446744073709551616))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, 0x24)\n                        }\n                        sstore(/** @src 36:4468:4488  \"applyStartUpNFTInfos\" */ 0x06, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ add(oldLen_4, 1))\n                        let slot_6, offset_9 := storage_array_index_access_struct_ApplyStartUpNFTInfo__dyn(oldLen_4)\n                        if offset_9\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, _3)\n                            revert(_3, 0x24)\n                        }\n                        sstore(slot_6, mload(memPtr_11))\n                        let memberSlot := add(slot_6, 1)\n                        sstore(memberSlot, or(and(sload(memberSlot), shl(160, 0xffffffffffffffffffffffff)), and(mload(_128), sub(shl(160, 1), 1))))\n                        mstore(_3, /** @src 36:4563:4573  \"msg.sender\" */ caller())\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        mstore(32, /** @src 36:4597:4604  \"nftLock\" */ 0x07)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        sstore(keccak256(_3, _1), value_12)\n                        /// @src 36:4647:4688  \"ApplyStartUpNFT(msg.sender, pledgeAmount)\"\n                        let _129 := /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ mload(_1)\n                        mstore(_129, value_12)\n                        /// @src 36:4647:4688  \"ApplyStartUpNFT(msg.sender, pledgeAmount)\"\n                        log2(_129, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 32, /** @src 36:4647:4688  \"ApplyStartUpNFT(msg.sender, pledgeAmount)\" */ 0xaaccb5079b09d65c6aa24582254eac44247c4e6602012d625bb3c944075d5c6c, /** @src 36:4563:4573  \"msg.sender\" */ caller())\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        return(_3, _3)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value0_2 := abi_decode_address()\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _130 := sub(shl(160, 1), 1)\n                        let _131 := and(/** @src 0:2162:2184  \"newOwner != address(0)\" */ value0_2, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _130)\n                        if /** @src 0:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _131)\n                        {\n                            let memPtr_12 := mload(_1)\n                            mstore(memPtr_12, shl(229, 4594637))\n                            mstore(add(memPtr_12, _2), 32)\n                            mstore(add(memPtr_12, 36), 38)\n                            mstore(add(memPtr_12, 68), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr_12, 100), \"ddress\")\n                            revert(memPtr_12, 132)\n                        }\n                        let _132 := sload(0)\n                        sstore(0, or(and(_132, shl(160, 0xffffffffffffffffffffffff)), _131))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 0, 0, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ and(_132, _130), /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ _131)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        return(_3, _3)\n                    }\n                    case 0xfe339df3 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let length_6 := sload(/** @src 36:3131:3142  \"startUpNFTs\" */ 0x02)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let _133 := array_allocation_size_array_address_dyn(length_6)\n                        let memPtr_13 := mload(_1)\n                        finalize_allocation(memPtr_13, _133)\n                        mstore(memPtr_13, length_6)\n                        let mpos_4 := memPtr_13\n                        let _134 := 0x20\n                        mpos_4 := add(memPtr_13, 0x20)\n                        mstore(0, /** @src 36:3131:3142  \"startUpNFTs\" */ 0x02)\n                        /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                        let spos_3 := 29102676481673041902632991033461445430619272659676223336789171408008386403022\n                        let i_4 := 0\n                        for { } lt(i_4, length_6) { i_4 := add(i_4, 1) }\n                        {\n                            mstore(mpos_4, read_from_storage_reference_type_struct_NFTListInfo(spos_3))\n                            mpos_4 := add(mpos_4, _134)\n                            spos_3 := add(spos_3, _2)\n                        }\n                        let memPos_16 := mload(_1)\n                        mstore(memPos_16, 0x20)\n                        return(memPos_16, sub(abi_encode_array_struct_NFTListInfo_dyn(memPtr_13, add(memPos_16, 0x20)), memPos_16))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_contract_Proposal() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function storage_array_index_access_struct_ApplyStartUpNFTInfo__dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 36:2684:2704  \"applyStartUpNFTInfos\" */ 0x06)))\n                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 36:2684:2704  \"applyStartUpNFTInfos\" */ 0x06)\n                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                slot := add(111414077815863400510004064629973595961579173665589224203503662149373724986687, shl(1, index))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_struct_NFTListInfo(value, pos) -> end\n            {\n                mstore(pos, mload(value))\n                mstore(add(pos, 0x20), mload(add(value, 0x20)))\n                let memberValue0 := mload(add(value, 0x40))\n                mstore(add(pos, 0x40), 0x80)\n                let tail := abi_encode_string(memberValue0, add(pos, 0x80))\n                mstore(add(pos, 0x60), mload(add(value, 0x60)))\n                end := tail\n            }\n            function abi_encode_array_struct_NFTListInfo_dyn(value, pos) -> end\n            {\n                let pos_1 := pos\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                let tail := add(add(pos_1, shl(5, length)), 0x20)\n                let srcPtr := add(value, 0x20)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail, pos_1), not(31)))\n                    tail := abi_encode_struct_NFTListInfo(mload(srcPtr), tail)\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                end := tail\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function finalize_allocation_20201(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_20202(memPtr)\n            {\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_20212(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ _1)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function abi_encode_uint256_uint256_string_uint256(headStart, value0, value1, value2, value3) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), 128)\n                tail := abi_encode_string(value2, add(headStart, 128))\n                mstore(add(headStart, 96), value3)\n            }\n            function storage_array_index_access_struct_NFTListInfo__dyn_32592(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 36:6171:6181  \"commonNFTs\" */ 0x03)))\n                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 36:6171:6181  \"commonNFTs\" */ 0x03)\n                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                slot := add(87903029871075914254377627908054574944891091886930582284385770809450030037083, shl(2, index))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n            function storage_array_index_access_struct_NFTListInfo__dyn_32596(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 36:3979:3987  \"info.uri\" */ 2)))\n                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 36:3979:3987  \"info.uri\" */ 2)\n                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                slot := add(29102676481673041902632991033461445430619272659676223336789171408008386403022, shl(/** @src 36:3979:3987  \"info.uri\" */ 2, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ index))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n            function storage_array_index_access_struct_NFTListInfo__dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ array)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 0x20)\n                slot := add(data, shl(2, index))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n            function array_allocation_size_array_address_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_decode_address_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                value0 := value\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            function abi_encode_address_address_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n            }\n            function abi_decode_string_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let offset := mload(headStart)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1) { revert(0, 0) }\n                let _2 := add(headStart, offset)\n                if iszero(slt(add(_2, 0x1f), dataEnd))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                let _3 := mload(_2)\n                if gt(_3, _1)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 0x24)\n                }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(_3, 0x1f), not(31)), 32))\n                mstore(memPtr, _3)\n                if gt(add(add(_2, _3), 32), dataEnd)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n                value0 := memPtr\n            }\n            function clear_storage_range_bytes1(start, end)\n            {\n                for { } lt(start, end) { start := add(start, 1) }\n                { sstore(start, 0) }\n            }\n            function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ array)\n                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 0x20)\n                    let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                    if lt(startIndex, 0x20) { deleteStart := data }\n                    clear_storage_range_bytes1(deleteStart, add(data, shr(5, add(len, 31))))\n                }\n            }\n            function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n            {\n                used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n            }\n            function copy_struct_to_storage_from_struct_NFTListInfo_to_struct_NFTListInfo(slot, value)\n            {\n                sstore(slot, mload(value))\n                let _1 := 1\n                let _2 := 32\n                sstore(add(slot, 1), mload(add(value, 32)))\n                let memberSlot := add(slot, 2)\n                let _3 := mload(add(value, 64))\n                let newLen := mload(_3)\n                if gt(newLen, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 0x24)\n                }\n                clean_up_bytearray_end_slots_string_storage(memberSlot, extract_byte_array_length(sload(memberSlot)), newLen)\n                let srcOffset := /** @src -1:-1:-1 */ 0\n                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                srcOffset := 32\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ memberSlot)\n                    let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ 32)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                    for { } lt(i, loopEnd) { i := add(i, _2) }\n                    {\n                        sstore(dstPtr, mload(add(_3, srcOffset)))\n                        dstPtr := add(dstPtr, _1)\n                        srcOffset := add(srcOffset, _2)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(_3, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(memberSlot, add(shl(1, newLen), 1))\n                }\n                default {\n                    let value_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                    if newLen\n                    {\n                        value_1 := mload(add(_3, srcOffset))\n                    }\n                    sstore(memberSlot, extract_used_part_and_set_length_of_short_byte_array(value_1, newLen))\n                }\n                sstore(add(slot, 3), mload(add(value, 96)))\n            }\n            function array_push_from_struct_NFTListInfo_to_array_struct_NFTListInfo_storage_dyn__ptr(value0)\n            {\n                let oldLen := sload(/** @src 36:6975:6985  \"commonNFTs\" */ 0x03)\n                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                sstore(/** @src 36:6975:6985  \"commonNFTs\" */ 0x03, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ add(oldLen, 1))\n                let slot, offset := storage_array_index_access_struct_NFTListInfo__dyn_32592(oldLen)\n                if offset\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0)\n                    revert(0, 0x24)\n                }\n                copy_struct_to_storage_from_struct_NFTListInfo_to_struct_NFTListInfo(slot, value0)\n            }\n            function array_push_from_struct_NFTListInfo_to_array_struct_NFTListInfo_storage_dyn_ptr(value0)\n            {\n                let oldLen := sload(/** @src 36:1914:1940  \"infoByTokenId[tokenId].uri\" */ 2)\n                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                sstore(/** @src 36:1914:1940  \"infoByTokenId[tokenId].uri\" */ 2, /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ add(oldLen, 1))\n                let slot, offset := storage_array_index_access_struct_NFTListInfo__dyn_32596(oldLen)\n                if offset\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0)\n                    revert(0, 0x24)\n                }\n                copy_struct_to_storage_from_struct_NFTListInfo_to_struct_NFTListInfo(slot, value0)\n            }\n            function storage_set_to_zero_struct_NFTListInfo_20205(slot)\n            {\n                let _1 := 0\n                sstore(slot, _1)\n                sstore(add(slot, 1), _1)\n                let _2 := add(slot, 2)\n                let oldLen := extract_byte_array_length(sload(_2))\n                if iszero(iszero(oldLen))\n                {\n                    switch gt(oldLen, 31)\n                    case 1 {\n                        mstore(_1, _2)\n                        let data := keccak256(_1, 32)\n                        clear_storage_range_bytes1(add(data, 1), add(data, shr(5, add(oldLen, 31))))\n                        sstore(_2, _1)\n                        sstore(data, _1)\n                    }\n                    default { sstore(_2, _1) }\n                }\n                sstore(add(slot, 3), _1)\n            }\n            function storage_set_to_zero_struct_NFTListInfo(slot, offset)\n            {\n                if iszero(iszero(offset))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0)\n                    revert(0, 0x24)\n                }\n                let _1 := 0\n                sstore(slot, _1)\n                sstore(add(slot, 1), _1)\n                let _2 := add(slot, 2)\n                let oldLen := extract_byte_array_length(sload(_2))\n                if iszero(iszero(oldLen))\n                {\n                    switch gt(oldLen, 31)\n                    case 1 {\n                        mstore(_1, _2)\n                        let data := keccak256(_1, 32)\n                        clear_storage_range_bytes1(add(data, 1), add(data, shr(5, add(oldLen, 31))))\n                        sstore(_2, _1)\n                        sstore(data, _1)\n                    }\n                    default { sstore(_2, _1) }\n                }\n                sstore(add(slot, 3), _1)\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function read_from_storage_reference_type_struct_NFTListInfo(slot) -> value\n            {\n                let memPtr := mload(64)\n                finalize_allocation_20202(memPtr)\n                value := memPtr\n                mstore(memPtr, sload(slot))\n                mstore(add(memPtr, 32), sload(add(slot, 1)))\n                mstore(add(memPtr, 64), copy_array_from_storage_to_memory_string(add(slot, 2)))\n                mstore(add(memPtr, 96), sload(add(slot, 3)))\n            }\n            function memory_array_index_access_address_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function copy_byte_array_to_storage_from_string__to_string(slot, src)\n            {\n                if eq(slot, src) { leave }\n                let newLen := extract_byte_array_length(sload(src))\n                if gt(newLen, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n                let srcOffset := 0\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    mstore(srcOffset, src)\n                    let _1 := 0x20\n                    let data := keccak256(srcOffset, 0x20)\n                    mstore(srcOffset, slot)\n                    let dstPtr := keccak256(srcOffset, 0x20)\n                    let i := srcOffset\n                    for { } lt(i, loopEnd) { i := add(i, _1) }\n                    {\n                        sstore(dstPtr, sload(add(data, srcOffset)))\n                        let _2 := 1\n                        dstPtr := add(dstPtr, _2)\n                        srcOffset := add(srcOffset, _2)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := sload(add(data, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(slot, add(shl(1, newLen), 1))\n                }\n                default {\n                    let value := 0\n                    if newLen\n                    {\n                        value := sload(add(src, srcOffset))\n                    }\n                    sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n                }\n            }\n            function copy_struct_to_storage_from_struct_NFTListInfo__ptr_to_struct_NFTListInfo(slot, value)\n            {\n                if iszero(eq(slot, value))\n                {\n                    sstore(slot, sload(value))\n                    sstore(add(slot, 1), sload(add(value, 1)))\n                    copy_byte_array_to_storage_from_string__to_string(add(slot, 2), add(value, 2))\n                    sstore(add(slot, 3), sload(add(value, 3)))\n                }\n            }\n            /// @ast-id 54 @src 0:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                let cleaned := and(sload(/** @src 0:1273:1279  \"_owner\" */ 0x00), /** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 0:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\" */ cleaned, /** @src 24:734:744  \"msg.sender\" */ caller()))\n                /// @src 36:235:8385  \"contract JuryNFTSwap is IERC721Receiver, Ownable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122027e7a5cb459d9550e19ee6952f4601a07e736712a20d2ab87d952143a1e21a0664736f6c63430008180033\"\n    }\n}\n","hash":"0100050d60bb8ad75ccb360ed254fdbfbe384a77a5145bb9ba91a8cf00c8cf6f","factoryDependencies":{}}},"contracts/MelonNFT.sol":{"MelonNFT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"MintNFT","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"uri","type":"string"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"MintNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MelonNFT.sol\":\"MelonNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/MelonNFT.sol\":{\"keccak256\":\"0xab0b61c4ab90e62fafb8e658d23f801ee5f60e939c96ccfac65eac03b13e5622\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://016a5b35b4dc4e928312d1a9e28a9f6adb42a3d0c0cd6111b721f380c05b731a\",\"dweb:/ipfs/QmfX54cjitDyt6zwAfPPpVhRdFPWiSMBtvWRZRuG2gYtaf\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.5.0"},"storageLayout":{"storage":[{"astId":1864,"contract":"contracts/MelonNFT.sol:MelonNFT","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1866,"contract":"contracts/MelonNFT.sol:MelonNFT","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1870,"contract":"contracts/MelonNFT.sol:MelonNFT","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1874,"contract":"contracts/MelonNFT.sol:MelonNFT","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1878,"contract":"contracts/MelonNFT.sol:MelonNFT","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1884,"contract":"contracts/MelonNFT.sol:MelonNFT","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2915,"contract":"contracts/MelonNFT.sol:MelonNFT","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":7,"contract":"contracts/MelonNFT.sol:MelonNFT","label":"_owner","offset":0,"slot":"7","type":"t_address"},{"astId":6874,"contract":"contracts/MelonNFT.sol:MelonNFT","label":"_nextTokenId","offset":0,"slot":"8","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"assembly":"\t.text\n\t.file\t\"MelonNFT.sol:MelonNFT\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[9 + r0]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_13\n\tadd\t128, r0, r9\n\tst.1\t64, r9\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_289\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.gt\t@.BB0_16\n\tsub.s!\t@CPI0_24[0], r2, r4\n\tjump.le\t@.BB0_34\n\tsub.s!\t@CPI0_25[0], r2, r4\n\tjump.le\t@.BB0_73\n\tsub.s!\t@CPI0_26[0], r2, r4\n\tjump.eq\t@.BB0_108\n\tsub.s!\t@CPI0_27[0], r2, r4\n\tjump.eq\t@.BB0_115\n\tsub.s!\t@CPI0_28[0], r2, r2\n\tjump.ne\t@.BB0_289\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_289\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_289\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.gt\t@.BB0_289\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_161\n\tadd\t@CPI0_36[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t41, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_68[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_69[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_13:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_289\n\tadd\t9, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_1[0], r0, r1\n\tst.1\t160, r1\n\tadd\t256, r0, r1\n\tst.1\t64, r1\n\tadd\t7, r0, r7\n\tst.1\t192, r7\n\tadd\t@CPI0_2[0], r0, r1\n\tst.1\t224, r1\n\tsload\tr0, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_27\n.BB0_15:\n\tadd\t@CPI0_62[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_63[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_16:\n\tsub.s!\t@CPI0_12[0], r2, r4\n\tjump.le\t@.BB0_42\n\tsub.s!\t@CPI0_13[0], r2, r4\n\tjump.le\t@.BB0_78\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.eq\t@.BB0_119\n\tsub.s!\t@CPI0_15[0], r2, r4\n\tjump.eq\t@.BB0_135\n\tsub.s!\t@CPI0_16[0], r2, r2\n\tjump.ne\t@.BB0_289\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_289\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_289\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_7[0], r6, r1\n\tjump.gt\t@.BB0_289\n\tadd\t7, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_7[0], r2, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_152\n\tsub!\tr6, r0, r3\n\tjump.ne\t@.BB0_190\n\tadd\t@CPI0_36[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t38, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_37[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_27:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_32\n\tadd\tr3, r0, stack-[7]\n\tst.1\t0, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tadd\t7, r0, r7\n\tjump.ge\t@.BB0_32\n.BB0_31:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_31\n.BB0_32:\n\tld.1\t160, r1\n\tand\t@CPI0_4[0], r1, r1\n\tor\t18, r1, r1\n\tsstore\tr0, r1\n\tld.1\t192, r4\n\tsub.s!\t@CPI0_5[0], r4, r1\n\tjump.lt\t@.BB0_47\n.BB0_33:\n\tadd\t@CPI0_62[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_63[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_34:\n\tsub.s!\t@CPI0_31[0], r2, r4\n\tjump.gt\t@.BB0_56\n\tsub.s!\t@CPI0_34[0], r2, r4\n\tjump.eq\t@.BB0_91\n\tsub.s!\t@CPI0_35[0], r2, r1\n\tjump.ne\t@.BB0_289\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_289\n\tsload\tr0, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r1\n\tadd.ne\tr4, r0, r1\n\tsub.s!\t31, r1, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_15\n\tst.1\t128, r1\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_167\n\tst.1\t0, r0\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_41\n\tadd\t@CPI0_79[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_195:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_195\n\tjump\t@.BB0_202\n.BB0_42:\n\tsub.s!\t@CPI0_19[0], r2, r4\n\tjump.gt\t@.BB0_65\n\tsub.s!\t@CPI0_22[0], r2, r1\n\tjump.eq\t@.BB0_97\n\tsub.s!\t@CPI0_23[0], r2, r1\n\tjump.ne\t@.BB0_289\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_289\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_7[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_40[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_47:\n\tadd\t1, r0, r8\n\tsload\tr8, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_15\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_52\n\tadd\tr3, r0, stack-[6]\n\tadd\tr4, r0, stack-[7]\n\tst.1\t0, r8\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tadd\tstack-[7], r0, r4\n\tadd\t31, r4, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r4, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[6], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\t7, r0, r7\n\tadd\t1, r0, r8\n\tjump.ge\t@.BB0_52\n.BB0_51:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_51\n.BB0_52:\n\tsub.s!\t31, r4, r1\n\tjump.le\t@.BB0_149\n\tadd\tr4, r0, stack-[7]\n\tst.1\t0, r8\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tadd\tstack-[7], r0, r9\n\tand!\t@CPI0_85[0], r9, r2\n\tld\tr1, r1\n\tjump.ne\t@.BB0_153\n\tadd\t224, r0, r3\n\tadd\t7, r0, r7\n\tadd\t1, r0, r8\n\tjump\t@.BB0_156\n.BB0_56:\n\tsub.s!\t@CPI0_32[0], r2, r4\n\tjump.eq\t@.BB0_100\n\tsub.s!\t@CPI0_33[0], r2, r2\n\tjump.ne\t@.BB0_289\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_289\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_289\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_7[0], r2, r2\n\tjump.gt\t@.BB0_289\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_7[0], r1, r1\n\tjump.eq\t@.BB0_112\n\tsub!\tstack-[7], r1, r2\n\tjump.ne\t@.BB0_207\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_76[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_77[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t33, r0, r3\n\tjump\t@.BB0_206\n.BB0_65:\n\tsub.s!\t@CPI0_20[0], r2, r4\n\tjump.eq\t@.BB0_103\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.ne\t@.BB0_289\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_289\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_289\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_7[0], r2, r2\n\tjump.gt\t@.BB0_289\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[6]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_289\n\tcontext.caller\tr2\n\tsub.s!\tstack-[7], r2, r1\n\tjump.ne\t@.BB0_197\n\tadd\t@CPI0_36[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t25, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_65[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_66[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_73:\n\tsub.s!\t@CPI0_29[0], r2, r1\n\tjump.eq\t@.BB0_140\n\tsub.s!\t@CPI0_30[0], r2, r1\n\tjump.ne\t@.BB0_289\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_289\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr3, r0, stack-[7]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[4]\n\tnear_call\tr0, @finalize_allocation_20795, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r1\n\tst.1\tr1, r0\n\tcontext.caller\tr1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @fun_isApprovedOrOwner, @DEFAULT_UNWIND\n\tnear_call\tr0, @require_helper_stringliteral_12a8, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[7], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[7], r0, r3\n.BB0_77:\n\tadd\tstack-[4], r0, r4\n\tnear_call\tr0, @fun_checkOnERC721Received, @DEFAULT_UNWIND\n\tnear_call\tr0, @require_helper_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_78:\n\tsub.s!\t@CPI0_17[0], r2, r4\n\tjump.eq\t@.BB0_142\n\tsub.s!\t@CPI0_18[0], r2, r2\n\tjump.ne\t@.BB0_289\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_289\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_289\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_7[0], r1, r1\n\tjump.eq\t@.BB0_112\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r6\n\tadd.ne\tr4, r0, r6\n\tsub.s!\t31, r6, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_15\n\tld.1\t64, r5\n\tst.1.inc\tr5, r6, r4\n\tsub!\tr3, r0, r3\n\tadd\tr5, r0, stack-[7]\n\tjump.eq\t@.BB0_212\n\tadd\tr4, r0, stack-[5]\n\tadd\tr6, r0, stack-[6]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tadd\tstack-[6], r0, r6\n\tsub!\tr6, r0, r2\n\tadd\tr0, r0, r2\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[5], r0, r7\n\tjump.eq\t@.BB0_213\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_90:\n\tadd\tr7, r2, r3\n\tsload\tr1, r4\n\tst.1\tr3, r4\n\tadd\t1, r1, r1\n\tadd\t32, r2, r2\n\tsub!\tr2, r6, r3\n\tjump.lt\t@.BB0_90\n\tjump\t@.BB0_213\n.BB0_91:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_289\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_289\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r2\n\tand!\t@CPI0_54[0], r2, r1\n\tjump.ne\t@.BB0_289\n\tadd\t1, r0, r1\n\tsub.s!\t@CPI0_80[0], r2, r3\n\tjump.gt\t@.BB0_162\n\tsub.s!\t@CPI0_83[0], r2, r3\n\tjump.eq\t@.BB0_165\n\tsub.s!\t@CPI0_84[0], r2, r2\n\tjump.eq\t@.BB0_165\n\tjump\t@.BB0_164\n.BB0_97:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_289\n\tadd\t7, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_7[0], r2, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_152\n\tand\t@CPI0_6[0], r2, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_9[0], r0, r4\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_191\n.BB0_100:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_289\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_289\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getApproved, @DEFAULT_UNWIND\n\tjump\t@.BB0_118\n.BB0_103:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_289\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_15\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_166\n\tst.1\t0, r3\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_200\n.BB0_41:\n\tadd\t160, r0, r1\n\tjump\t@.BB0_203\n.BB0_108:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_289\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_289\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_7[0], r1, r1\n\tjump.ne\t@.BB0_168\n.BB0_112:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_78[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n.BB0_113:\n\tst.1\tr2, r3\n\tadd\t@CPI0_36[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n.BB0_114:\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_44[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_115:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_289\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_289\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_ownerOf, @DEFAULT_UNWIND\n.BB0_118:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_70[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_119:\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_289\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_289\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_7[0], r2, r2\n\tjump.gt\t@.BB0_289\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_41[0], r4, r2\n\tjump.gt\t@.BB0_289\n\tadd\t35, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_289\n\tadd\t4, r4, r5\n\tptr.add\tr1, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_41[0], r2, r6\n\tjump.gt\t@.BB0_33\n\tadd\t31, r2, r6\n\tand\t@CPI0_85[0], r6, r6\n\tadd\t63, r6, r6\n\tand\t@CPI0_85[0], r6, r6\n\tsub.s!\t@CPI0_42[0], r6, r7\n\tjump.gt\t@.BB0_33\n\tadd\t36, r4, r4\n\tadd\t128, r6, r6\n\tst.1\t64, r6\n\tst.1\t128, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_289\n\tadd\t32, r5, r3\n\tptr.add\tr1, r3, r1\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r4\n\tshl.s\t5, r4, r4\n\tjump.eq\t@.BB0_130\n\tadd\t160, r0, r5\n\tadd\t160, r4, r6\n\tptr.add\tr1, r0, r7\n.BB0_129:\n\tld.inc\tr7, r8, r7\n\tst.1.inc\tr5, r8, r5\n\tsub!\tr5, r6, r8\n\tjump.ne\t@.BB0_129\n.BB0_130:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_132\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r3, r3\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_132:\n\tadd\t160, r2, r1\n\tst.1\tr1, r0\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_7[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_218\n\tadd\t8, r0, r1\n\tsload\tr1, r3\n\tsub.s!\t@CPI0_86[0], r3, r2\n\tjump.ne\t@.BB0_220\n\tadd\t@CPI0_62[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_63[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_135:\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_289\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_289\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_7[0], r2, r3\n\tjump.gt\t@.BB0_289\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tsub.s!\t@CPI0_7[0], r1, r1\n\tjump.gt\t@.BB0_289\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\t64, r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_40[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_140:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_289\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[7]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr3, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_isApprovedOrOwner, @DEFAULT_UNWIND\n\tnear_call\tr0, @require_helper_stringliteral_12a8, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[5], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_142:\n\tsub.s!\t132, r3, r2\n\tjump.lt\t@.BB0_289\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_289\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_7[0], r2, r2\n\tjump.gt\t@.BB0_289\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\t@CPI0_7[0], r2, r2\n\tjump.gt\t@.BB0_289\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_41[0], r4, r2\n\tjump.gt\t@.BB0_289\n\tadd\t35, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_289\n\tadd\t4, r4, r2\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\t36, r4, r1\n\tnear_call\tr0, @abi_decode_available_length_bytes, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[4]\n\tcontext.caller\tr1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @fun_isApprovedOrOwner, @DEFAULT_UNWIND\n\tnear_call\tr0, @require_helper_stringliteral_12a8, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[5], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[5], r0, r3\n\tjump\t@.BB0_77\n.BB0_149:\n\tsub!\tr4, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_151\n\tld.1\t224, r1\n.BB0_151:\n\tshl.s\t3, r4, r2\n\tshr\t@CPI0_86[0], r2, r2\n\txor\t@CPI0_86[0], r2, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_159\n.BB0_152:\n\tadd\t@CPI0_36[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_43[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_66[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_153:\n\tsub.s\t1, r2, r3\n\tshr.s\t5, r3, r3\n\tadd\tr1, r3, r3\n\tadd\t32, r0, r4\n\tadd\t1, r3, r3\n\tadd\t7, r0, r7\n\tadd\t1, r0, r8\n.BB0_154:\n\tadd\tr4, r0, r5\n\tadd\t192, r5, r4\n\tld.1\tr4, r4\n\tsstore\tr1, r4\n\tadd\t32, r5, r4\n\tadd\t1, r1, r1\n\tsub!\tr1, r3, r6\n\tjump.ne\t@.BB0_154\n\tadd\t224, r5, r3\n.BB0_156:\n\tsub!\tr2, r9, r2\n\tjump.ge\t@.BB0_158\n\tshl.s\t3, r9, r2\n\tand\t248, r2, r2\n\tshr\t@CPI0_86[0], r2, r2\n\txor\t@CPI0_86[0], r2, r2\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB0_158:\n\tshl.s\t1, r9, r1\n\tor\t1, r1, r1\n.BB0_159:\n\tsstore\tr8, r1\n\tsload\tr7, r1\n\tand\t@CPI0_6[0], r1, r2\n\tcontext.caller\tr6\n\tor\tr2, r6, r2\n\tsstore\tr7, r2\n\tcontext.gas_left\tr2\n\tand\t@CPI0_7[0], r1, r5\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_9[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_289\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_10[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_161:\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_40[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_162:\n\tsub.s!\t@CPI0_81[0], r2, r3\n\tjump.eq\t@.BB0_165\n\tsub.s!\t@CPI0_82[0], r2, r2\n\tjump.eq\t@.BB0_165\n.BB0_164:\n\tadd\tr0, r0, r1\n.BB0_165:\n\tst.1\t128, r1\n\tadd\t@CPI0_40[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_166:\n.BB0_167:\n\tand\t@CPI0_87[0], r2, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_203\n.BB0_168:\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_205\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_7[0], r1, r1\n\tjump.eq\t@.BB0_112\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_7[0], r1, stack-[6]\n\tjump.eq\t@.BB0_112\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_6[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_6[0], r2, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_48[0], r0, r4\n\tadd\tstack-[6], r0, r5\n\tadd\tr0, r0, r6\n\tadd\tstack-[7], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_289\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r1\n\tshr.s\t1, r2, r3\n\tand\t127, r3, r1\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr2, r3, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_15\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_193\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[7]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_15\n\tsub!\tstack-[7], r0, r1\n\tjump.eq\t@.BB0_193\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_189\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tadd\t1, r1, r3\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB0_188\n.BB0_187:\n\tsstore\tr3, r0\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_187\n.BB0_188:\n\tadd\tstack-[6], r0, r2\n\tsstore\tr2, r0\n\tadd\tr1, r0, stack-[6]\n.BB0_189:\n\tadd\tstack-[6], r0, r1\n\tsstore\tr1, r0\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_190:\n\tand\t@CPI0_6[0], r2, r2\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_9[0], r0, r4\n.BB0_191:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_289\n.BB0_193:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_197:\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_87[0], r2, r2\n\tadd\tstack-[6], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_64[0], r0, r4\n\tcontext.caller\tr5\n\tadd\tstack-[7], r0, r6\n\tjump\t@.BB0_191\n.BB0_200:\n\tadd\t@CPI0_67[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_201:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_201\n.BB0_202:\n\tadd\t192, r3, r1\n.BB0_203:\n\tsub.s\t128, r1, r2\n\tadd\t128, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[7]\n\tst.1.inc\tr2, r1, r2\n\tadd\t128, r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n.BB0_204:\n\tsub\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_205:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_71[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_72[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n.BB0_206:\n\tst.1\tr2, r3\n\tadd\t@CPI0_36[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_207:\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_214\n.BB0_208:\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_6[0], r2, r2\n\tor\tstack-[7], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_7[0], r1, r5\n\tjump.eq\t@.BB0_112\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_75[0], r0, r4\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[6], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_289\n\tjump\t@.BB0_193\n.BB0_212:\n\tand\t@CPI0_87[0], r2, r1\n\tst.1\tr4, r1\n\tsub!\tr6, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n.BB0_213:\n\tadd\t32, r2, r2\n\tadd\tr5, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tnear_call\tr0, @finalize_allocation_20795, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r1\n\tst.1\tr1, r0\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[6]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[7], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tjump\t@.BB0_204\n.BB0_214:\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_208\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_73[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_74[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t61, r0, r3\n\tjump\t@.BB0_206\n.BB0_218:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_43[0], r0, r3\n.BB0_219:\n\tst.1\tr2, r3\n\tadd\t@CPI0_36[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tjump\t@.BB0_114\n.BB0_220:\n\tadd\tr3, r0, stack-[5]\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_45[0], r1, r1\n\tjump.gt\t@.BB0_33\n\tadd\tr9, r0, stack-[3]\n\tadd\tstack-[6], r0, r2\n\tadd\t32, r2, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t64, r1\n\tst.1\tr2, r0\n\tsub!\tstack-[7], r0, r1\n\tjump.ne\t@.BB0_223\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_61[0], r0, r3\n\tjump\t@.BB0_219\n.BB0_223:\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_7[0], r1, r1\n\tjump.ne\t@.BB0_236\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_7[0], r1, r1\n\tjump.ne\t@.BB0_236\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_6[0], r2, r2\n\tadd\tstack-[7], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_48[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[5], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_289\n\tcontext.sp\tr1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI0_49[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_50[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_237\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_238\n\tcontext.sp\tr1\n\tsub\tstack-[2], r1, r1\n\tnop\tstack+=[0 + r1]\n.BB0_233:\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_7[0], r1, r1\n\tjump.ne\t@.BB0_255\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_58[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_59[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tjump\t@.BB0_206\n.BB0_236:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_47[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t28, r0, r3\n\tjump\t@.BB0_113\n.BB0_237:\n\trevert\n.BB0_238:\n\tld.1\t64, r3\n\tadd\t100, r3, r1\n\tadd\t128, r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_51[0], r0, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t4, r3, r1\n\tcontext.caller\tr2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tst.1\tr1, r0\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tadd\t132, r3, r2\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[6]\n\tadd\t164, r3, r2\n\tsub!\tr1, r0, r3\n\tadd\tstack-[4], r0, r6\n\tjump.eq\t@.BB0_241\n\tadd\tr0, r0, r3\n.BB0_240:\n\tadd\tr3, r2, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_240\n.BB0_241:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr2\n\tadd\tstack-[7], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_243\n\tcontext.sp\tr5\n\tsub.s\t9, r5, r5\n\tshl.s\t5, r5, r5\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_250\n.BB0_243:\n\tadd\t31, r1, r1\n\tand\t@CPI0_85[0], r1, r1\n\tadd\t164, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tadd\tstack-[6], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tor\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[1], r0, r10\n\tjump.eq\t@.BB0_246\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[6], r0, r8\n.BB0_245:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB0_245\n.BB0_246:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_248\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[6], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_248:\n\tadd\tr3, r0, stack[@returndatasize]\n\tcontext.sp\tr5\n\tsub.s\t8, r5, r5\n\tshl.s\t5, r5, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_266\n.BB0_250:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[6], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_41[0], r1, r4\n\tjump.gt\t@.BB0_33\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_33\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_289\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tand!\t@CPI0_54[0], r1, r2\n\tjump.ne\t@.BB0_289\n\tshr.s\t5, r5, r2\n\tadd\tr1, r0, stack[r2]\n\tcontext.sp\tr2\n\tsub\tstack-[2], r2, r2\n\tnop\tstack+=[0 + r2]\n\tand\t@CPI0_55[0], r1, r1\n\tsub.s!\t@CPI0_51[0], r1, r1\n\tjump.eq\t@.BB0_233\n\tjump\t@.BB0_269\n.BB0_255:\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tld.1\t128, r1\n\tadd\tr1, r0, stack-[4]\n\tsub.s!\t@CPI0_41[0], r1, r1\n\tjump.gt\t@.BB0_33\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[3]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_15\n\tadd\tstack-[3], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_262\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tadd\tstack-[4], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[3], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_262\n.BB0_261:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_261\n.BB0_262:\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_278\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_289\n\tsub.s\t32, r0, r2\n\tand!\tstack-[4], r2, r2\n\tld\tr1, r1\n\tjump.ne\t@.BB0_281\n\tadd\t160, r0, r3\n\tjump\t@.BB0_284\n.BB0_266:\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_270\n\tadd\t96, r0, r2\n.BB0_268:\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_277\n.BB0_269:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\t@CPI0_36[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tsub\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_270:\n\tadd\t31, r3, r2\n\tand\t@CPI0_52[0], r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_53[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_41[0], r4, r6\n\tjump.gt\t@.BB0_33\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_33\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr2, r3, r5\n\tadd\tr5, r0, stack-[3]\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_275\n\tshl.s\t5, r3, r5\n\tadd\tstack-[3], r0, r7\n\tadd\tr7, r5, r5\n\tptr.add\tr1, r0, r6\n.BB0_274:\n\tld.inc\tr6, r8, r6\n\tst.1.inc\tr7, r8, r7\n\tsub!\tr7, r5, r8\n\tjump.ne\t@.BB0_274\n.BB0_275:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_268\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tstack-[3], r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n\tjump\t@.BB0_268\n.BB0_277:\n\tadd\tstack-[3], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_278:\n\tsub!\tstack-[4], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_280\n\tld.1\t160, r1\n.BB0_280:\n\tadd\tstack-[4], r0, r4\n\tshl.s\t3, r4, r2\n\tshr\t@CPI0_86[0], r2, r2\n\txor\t@CPI0_86[0], r2, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_287\n.BB0_281:\n\tsub.s\t1, r2, r3\n\tshr.s\t5, r3, r3\n\tadd\tr1, r3, r3\n\tadd\t32, r0, r4\n\tadd\t1, r3, r3\n.BB0_282:\n\tadd\tr4, r0, r5\n\tadd\t128, r5, r4\n\tld.1\tr4, r4\n\tsstore\tr1, r4\n\tadd\t32, r5, r4\n\tadd\t1, r1, r1\n\tsub!\tr1, r3, r6\n\tjump.ne\t@.BB0_282\n\tadd\t160, r5, r3\n.BB0_284:\n\tsub.s!\tstack-[4], r2, r2\n\tjump.ge\t@.BB0_286\n\tadd\tstack-[4], r0, r2\n\tshl.s\t3, r2, r2\n\tand\t248, r2, r2\n\tshr\t@CPI0_86[0], r2, r2\n\txor\t@CPI0_86[0], r2, r2\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB0_286:\n\tadd\tstack-[4], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n.BB0_287:\n\tadd\tstack-[6], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_56[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_289\n\tld.1\t64, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_57[0], r0, r4\n\tadd\tstack-[7], r0, r5\n\tjump\t@.BB0_191\n.BB0_289:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tld.1.inc\tr1, r3, r4\n\tst.1.inc\tr2, r3, r1\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r2\n.BB1_2:\n\tadd\tr1, r2, r5\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r2, r2\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tand\t@CPI1_0[0], r2, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin2:\n\tsub.s!\t@CPI2_0[0], r1, r2\n\tjump.gt\t@.BB2_2\n\tsub.s!\t99, r1, r1\n\tjump.le\t@.BB2_2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tjump.gt\t@.BB2_2\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_1[0], r2, r4\n\tjump.gt\t@.BB2_2\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB2_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfinalize_allocation_20795:\n.func_begin3:\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tjump.ge\t@.BB3_1\n\tadd\t32, r1, r1\n\tst.1\t64, r1\n\tret\n.BB3_1:\n\tadd\t@CPI3_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfinalize_allocation:\n.func_begin4:\n\tadd\t31, r2, r2\n\tand\t@CPI4_3[0], r2, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tjump.gt\t@.BB4_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_2\n\tst.1\t64, r1\n\tret\n.BB4_2:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_decode_available_length_bytes:\n.func_begin5:\n\tadd\tr1, r0, r4\n\tsub.s!\t@CPI5_0[0], r2, r1\n\tjump.ge\t@.BB5_1\n\tadd\t31, r2, r1\n\tand\t@CPI5_4[0], r1, r1\n\tadd\t63, r1, r1\n\tand\t@CPI5_4[0], r1, r5\n\tld.1\t64, r1\n\tadd\tr1, r5, r5\n\tsub!\tr5, r1, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI5_1[0], r5, r7\n\tjump.gt\t@.BB5_1\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB5_1\n\tst.1\t64, r5\n\tst.1.inc\tr1, r2, r5\n\tadd\tr2, r4, r6\n\tsub!\tr6, r3, r3\n\tjump.gt\t@.BB5_5\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r2, r6\n\tshl.s\t5, r6, r6\n\tjump.eq\t@.BB5_9\n\tadd\tr5, r6, r7\n\tptr.add\tr4, r0, r8\n\tadd\tr5, r0, r9\n.BB5_8:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB5_8\n.BB5_9:\n\tsub!\tr3, r0, r7\n\tjump.eq\t@.BB5_11\n\tptr.add\tr4, r6, r4\n\tadd\tr5, r6, r6\n\tshl.s\t3, r3, r3\n\tld.1\tr6, r7\n\tshl\tr7, r3, r7\n\tshr\tr7, r3, r7\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r7, r3\n\tst.1\tr6, r3\n.BB5_11:\n\tadd\tr5, r2, r2\n\tst.1\tr2, r0\n\tret\n.BB5_1:\n\tadd\t@CPI5_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nfun_getApproved:\n.func_begin6:\n\tnop\tstack+=[1 + r0]\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI6_0[0], r1, r2\n\tadd.ge\t@CPI6_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI6_2[0], r1, r1\n\tjump.eq\t@.BB6_3\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI6_0[0], r1, r2\n\tadd.ge\t@CPI6_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI6_2[0], r1, r1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI6_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI6_0[0], r1, r2\n\tadd.ge\t@CPI6_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nrequire_helper_stringliteral_12a8:\n.func_begin7:\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB7_1\n\tret\n.BB7_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI7_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI7_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI7_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI7_3[0], r1, r2\n\tadd.ge\t@CPI7_3[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI7_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfun_ownerOf:\n.func_begin8:\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI8_2[0], r1, r1\n\tjump.eq\t@.BB8_3\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI8_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nfun_isApprovedOrOwner:\n.func_begin9:\n\tnop\tstack+=[2 + r0]\n\tadd\tr1, r0, stack-[2]\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI9_2[0], r1, r1\n\tjump.eq\t@.BB9_3\n\tadd\tstack-[2], r0, r2\n\tand\t@CPI9_2[0], r2, r3\n\tsub!\tr3, r1, r2\n\tjump.ne\t@.BB9_6\n\tadd\t1, r0, r1\n\tret\n.BB9_6:\n\tadd\tr3, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB9_9\n\tret\n.BB9_9:\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI9_2[0], r1, r1\n\tjump.eq\t@.BB9_3\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI9_2[0], r1, r1\n\tsub.s!\tstack-[2], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI9_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI9_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nfun_transfer:\n.func_begin10:\n\tnop\tstack+=[3 + r0]\n\tadd\tr2, r0, stack-[1]\n\tadd\tr1, r0, stack-[2]\n\tadd\tr3, r0, stack-[3]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI10_2[0], r1, r2\n\tjump.eq\t@.BB10_3\n\tadd\tstack-[2], r0, r1\n\tand\t@CPI10_2[0], r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB10_5\n\tadd\tr2, r0, stack-[2]\n\tadd\tstack-[1], r0, r1\n\tand!\t@CPI10_2[0], r1, stack-[1]\n\tjump.eq\t@.BB10_8\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI10_2[0], r1, r1\n\tadd\tstack-[2], r0, r2\n\tjump.eq\t@.BB10_3\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB10_5\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI10_7[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI10_7[0], r2, r2\n\tadd\tstack-[1], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI10_9[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB10_1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI10_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_13[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_5:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI10_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI10_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB10_6\n.BB10_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI10_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI10_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n.BB10_6:\n\tst.1\tr2, r3\n\tadd\t@CPI10_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nabi_encode_stringliteral_1e76:\n.func_begin11:\n\tadd\t96, r1, r2\n\tadd\t@CPI11_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI11_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t50, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end11:\n\nrequire_helper_stringliteral_1e76:\n.func_begin12:\n\tnop\tstack+=[1 + r0]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB12_1\n\tret\n.BB12_1:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[1]\n\tadd\t@CPI12_0[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r3\n\tsub\tr1, r3, r1\n\tsub.s!\t@CPI12_1[0], r1, r2\n\tadd.ge\t@CPI12_1[0], r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI12_1[0], r3, r2\n\tadd.ge\t@CPI12_1[0], r0, r3\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_checkOnERC721Received:\n.func_begin13:\n\tnop\tstack+=[6 + r0]\n\tadd\tr4, r0, stack-[3]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI13_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr2, r0, stack-[4]\n\tst.2\t4, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI13_1[0], r1, r2\n\tadd.ge\t@CPI13_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB13_3\n\tld.1\t64, r10\n\tadd\t100, r10, r1\n\tadd\t128, r0, r7\n\tst.1\tr1, r7\n\tadd\t68, r10, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[1], r0, r1\n\tand\t@CPI13_3[0], r1, r1\n\tadd\t36, r10, r2\n\tst.1\tr2, r1\n\tadd\t@CPI13_4[0], r0, r1\n\tst.1.inc\tr10, r1, r8\n\tadd\t4, r10, r1\n\tcontext.caller\tr2\n\tst.1\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tld.1.inc\tr1, r3, r2\n\tadd\t132, r10, r1\n\tst.1\tr1, r3\n\tadd\t164, r10, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB13_7\n\tadd\tr0, r0, r4\n.BB13_6:\n\tadd\tr4, r1, r5\n\tadd\tr2, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB13_6\n.BB13_7:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr4\n\tadd\tstack-[4], r0, r2\n\tand\t@CPI13_3[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB13_9\n\tcontext.sp\tr5\n\tsub.s\t6, r5, r5\n\tshl.s\t5, r5, r5\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB13_16\n.BB13_3:\n\tadd\t1, r0, r1\n\tret\n.BB13_9:\n\tadd\tr7, r0, stack-[2]\n\tadd\t31, r3, r3\n\tand\t@CPI13_13[0], r3, r3\n\tsub\tr3, r10, r3\n\tadd\tr3, r1, r1\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\t@CPI13_1[0], r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI13_1[0], r10, r3\n\tadd\t@CPI13_1[0], r0, r3\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tor\tr1, r3, r1\n\tsub.s!\t@CPI13_1[0], r4, r3\n\tadd.ge\t@CPI13_1[0], r0, r4\n\tshl.s\t192, r4, r3\n\tor\tr1, r3, r1\n\tadd\tr10, r0, stack-[4]\n\tadd\tr8, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r11\n\tadd\tstack-[4], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI13_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB13_12\n\tptr.add\tr1, r0, r7\n\tadd\tr10, r0, r8\n.BB13_11:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r11, r9\n\tjump.ne\t@.BB13_11\n.BB13_12:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB13_14\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB13_14:\n\tadd\tr3, r0, stack[@returndatasize]\n\tcontext.sp\tr5\n\tsub.s\t5, r5, r5\n\tshl.s\t5, r5, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_23\n.BB13_16:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI13_7[0], r1, r4\n\tjump.gt\t@.BB13_18\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB13_18\n\tst.1\t64, r1\n\tsub.s!\t31, r3, r1\n\tjump.le\t@.BB13_20\n\tld.1\tr10, r1\n\tand!\t@CPI13_9[0], r1, r2\n\tjump.ne\t@.BB13_20\n\tshr.s\t5, r5, r2\n\tadd\tr1, r0, stack[r2]\n\tand\t@CPI13_10[0], r1, r1\n\tsub.s!\t@CPI13_4[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tret\n.BB13_20:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_1:\n\trevert\n.BB13_23:\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB13_26\n\tadd\t96, r0, r2\n\tjump\t@.BB13_25\n.BB13_26:\n\tadd\t31, r3, r2\n\tand\t@CPI13_5[0], r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI13_6[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI13_7[0], r4, r6\n\tjump.gt\t@.BB13_18\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB13_18\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr2, r3, r5\n\tadd\tr5, r0, stack-[2]\n\tshr.s!\t5, r3, r3\n\tshl.s\t5, r3, r3\n\tjump.eq\t@.BB13_31\n\tadd\tstack-[2], r0, r7\n\tadd\tr7, r3, r5\n\tptr.add\tr1, r0, r6\n.BB13_30:\n\tld.inc\tr6, r8, r6\n\tst.1.inc\tr7, r8, r7\n\tsub!\tr7, r5, r8\n\tjump.ne\t@.BB13_30\n.BB13_31:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB13_25\n\tptr.add\tr1, r3, r1\n\tadd\tstack-[2], r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB13_25:\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB13_33\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[4]\n\tadd\t@CPI13_8[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r3\n\tsub\tr1, r3, r1\n\tsub.s!\t@CPI13_1[0], r1, r2\n\tadd.ge\t@CPI13_1[0], r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI13_1[0], r3, r2\n\tadd.ge\t@CPI13_1[0], r0, r3\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_18:\n\tadd\t@CPI13_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_33:\n\tadd\tstack-[2], r0, r3\n\tsub.s!\t@CPI13_1[0], r3, r2\n\tadd.ge\t@CPI13_1[0], r0, r3\n\tshl.s\t64, r3, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\t@CPI13_1[0], r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\n__cxa_throw:\n.func_begin14:\n\trevert\n.func_end14:\n\n__sha3:\n.func_begin15:\n\tsub.s!\t@CPI15_0[0], r1, r3\n\tadd.ge\t@CPI15_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.ge\t@CPI15_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.ge\t@CPI15_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_2\n\tld\tr1, r1\n\tret\n.BB15_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\n__farcall:\n.func_begin16:\n.tmp0:\n\tfar_call\tr1, r2, @.BB16_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB16_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end16:\n\n__staticcall:\n.func_begin17:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB17_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB17_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end17:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell\t0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n\t.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI6_0:\nCPI7_3:\nCPI8_0:\nCPI9_0:\nCPI10_0:\nCPI12_1:\nCPI13_1:\nCPI15_0:\n\t.cell\t4294967295\nCPI0_1:\n\t.cell\t35007289287237220756045850409396309062489373211570125593666067931594651336704\nCPI0_2:\n\t.cell\t34962910623487942219776790772383026110881260545772924558758927972953812369408\nCPI0_3:\n\t.cell\t904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell\t-24519928653854221733733552434404946937899825954937634816\nCPI0_5:\nCPI5_0:\n\t.cell\t18446744073709551616\nCPI0_6:\nCPI10_7:\n\t.cell\t-1461501637330902918203684832716283019655932542976\nCPI0_7:\nCPI2_1:\nCPI6_2:\nCPI8_2:\nCPI9_2:\nCPI10_2:\nCPI13_3:\n\t.cell\t1461501637330902918203684832716283019655932542975\nCPI0_8:\nCPI10_8:\nCPI15_1:\n\t.cell\t904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_9:\n\t.cell\t-52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_10:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_11:\n\t.cell\t1901074597\nCPI0_12:\n\t.cell\t3096268765\nCPI0_13:\n\t.cell\t3504272672\nCPI0_14:\n\t.cell\t3504272673\nCPI0_15:\n\t.cell\t3917867461\nCPI0_16:\n\t.cell\t4076725131\nCPI0_17:\n\t.cell\t3096268766\nCPI0_18:\n\t.cell\t3363526365\nCPI0_19:\n\t.cell\t2514000704\nCPI0_20:\n\t.cell\t2514000705\nCPI0_21:\n\t.cell\t2720838757\nCPI0_22:\n\t.cell\t1901074598\nCPI0_23:\n\t.cell\t2376452955\nCPI0_24:\n\t.cell\t599290588\nCPI0_25:\n\t.cell\t1117154407\nCPI0_26:\n\t.cell\t1117154408\nCPI0_27:\n\t.cell\t1666326814\nCPI0_28:\n\t.cell\t1889567281\nCPI0_29:\n\t.cell\t599290589\nCPI0_30:\n\t.cell\t1115958798\nCPI0_31:\n\t.cell\t135795451\nCPI0_32:\n\t.cell\t135795452\nCPI0_33:\n\t.cell\t157198259\nCPI0_34:\n\t.cell\t33540519\nCPI0_35:\n\t.cell\t117300739\nCPI0_36:\nCPI6_4:\nCPI7_2:\nCPI8_4:\nCPI9_4:\nCPI10_5:\nCPI12_0:\nCPI13_8:\n\t.cell\t3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_37:\n\t.cell\t35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_38:\n\t.cell\t45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_39:\n\t.cell\t10458117454244075803782624051200\nCPI0_40:\n\t.cell\t2535301202817642044428229017600\nCPI0_41:\nCPI4_0:\nCPI5_1:\nCPI13_7:\n\t.cell\t18446744073709551615\nCPI0_42:\n\t.cell\t18446744073709551487\nCPI0_43:\n\t.cell\t35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_44:\nCPI6_5:\nCPI8_5:\nCPI9_5:\nCPI10_13:\n\t.cell\t7922816251426433759354395033600\nCPI0_45:\n\t.cell\t18446744073709551583\nCPI0_46:\nCPI6_1:\nCPI8_1:\nCPI9_1:\nCPI10_1:\n\t.cell\t904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_47:\n\t.cell\t31354931916645375394227994539589573020889145011472493424756597455838364303360\nCPI0_48:\nCPI10_9:\n\t.cell\t-15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_49:\nCPI13_0:\n\t.cell\t10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_50:\nCPI13_2:\n\t.cell\t904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_51:\nCPI13_4:\n\t.cell\t9518847204935358166548570266051330015907116135037852959641967396525866745856\nCPI0_52:\nCPI13_5:\n\t.cell\t8589934560\nCPI0_53:\nCPI13_6:\n\t.cell\t17179869152\nCPI0_54:\nCPI13_9:\n\t.cell\t26959946667150639794667015087019630673637144422540572481103610249215\nCPI0_55:\nCPI13_10:\n\t.cell\t-26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_56:\n\t.cell\t-3219848571885157104380232460838738915370247480356827046648284229139720925977\nCPI0_57:\n\t.cell\t14265421606416254825393192120076781587981774864297943620573741177918980432835\nCPI0_58:\n\t.cell\t45896347150701543392526446815263383394883384187216389466996649829047327522816\nCPI0_59:\n\t.cell\t31354931916645419094353240884287878821049935834234830894855383924223471677294\nCPI0_60:\nCPI7_4:\nCPI10_6:\n\t.cell\t10458117451882892562347801444352\nCPI0_61:\n\t.cell\t31354931916645375394055781497097123966713745074512196778955490624888853853043\nCPI0_62:\nCPI3_1:\nCPI4_1:\nCPI5_2:\nCPI13_11:\n\t.cell\t35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_63:\nCPI3_2:\nCPI4_2:\nCPI5_3:\nCPI13_12:\n\t.cell\t2852213850513516153367582212096\nCPI0_64:\n\t.cell\t10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI0_65:\n\t.cell\t31354931916645375393762213565866891172307618523953520621822726397682830540800\nCPI0_66:\n\t.cell\t7922816253787617000789217640448\nCPI0_67:\n\t.cell\t-35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI0_68:\n\t.cell\t31354931916645375393761059704421056284766179208589378268252292504104988604001\nCPI0_69:\n\t.cell\t49035997637886268239882041675796387503892600671578232905754119059317383495680\nCPI0_70:\n\t.cell\t2535301200456458802993406410752\nCPI0_71:\n\t.cell\t48576685544050267335250216011069909228444784398788330758158387169802613424128\nCPI0_72:\n\t.cell\t40452771925404328746644494035504535188453662587760199378496726600528622023791\nCPI0_73:\n\t.cell\t48576686418507356219831365361070156960199332940003936683527688631380237877248\nCPI0_74:\n\t.cell\t31354931916645375393762213565866891172284950498046585739320112041512459596911\nCPI0_75:\n\t.cell\t-52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI0_76:\n\t.cell\t51563664738492368274558954261681333965909290046418063673820955378523815542784\nCPI0_77:\n\t.cell\t31354931916645375393762213565866890849608307089744918678309194418033790512741\nCPI0_78:\nCPI6_3:\nCPI8_3:\nCPI9_3:\nCPI10_12:\n\t.cell\t31354931916645375393958183653158686846599388074356949121886454872141515980800\nCPI0_79:\n\t.cell\t18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI0_80:\n\t.cell\t41326688264978518566617017154793646184809722027297161851759941631668658372607\nCPI0_81:\n\t.cell\t-57591534043048631271602713168962198724648561309353517944097662808962438791168\nCPI0_82:\n\t.cell\t41326688264978518566617017154793646184809722027297161851759941631668658372608\nCPI0_83:\n\t.cell\t904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI0_84:\n\t.cell\t33029943018210112371290484984068155479854796940970655776587268077854232936448\nCPI0_85:\nCPI1_0:\nCPI4_3:\nCPI5_4:\nCPI13_13:\n\t.cell\t-32\nCPI0_86:\n\t.cell\t-1\nCPI0_87:\n\t.cell\t-256\nCPI2_0:\n\t.cell\t57896044618658097711785492504343953926634992332820282019728792003956564819967\nCPI3_0:\n\t.cell\t18446744073709551584\nCPI7_0:\n\t.cell\t51620973015253767882670130074298444487415533390198982457255807955294746574848\nCPI7_1:\n\t.cell\t31354931916645375393809815203201166297542482068262457279726729202739757674085\nCPI10_3:\n\t.cell\t50417742920509558439106150551775209266858149941038353264781520106005609840640\nCPI10_4:\n\t.cell\t31354931916645375394228278154242914900316605976059021079503402663591234728992\nCPI10_10:\n\t.cell\t51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI10_11:\n\t.cell\t31354931916645375394228278154242914900316678601111040334909412358260906878052\nCPI11_0:\n\t.cell\t44958151438609599421424650306347963631972141104775375727422033337783813144576\nCPI11_1:\n\t.cell\t31354931916645375394228278154242914900316678601109191929828695483653754540645\n","bytecode":{"object":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mint(address,string)":"d0def521","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 3:\"@openzeppelin/contracts/interfaces/IERC4906.sol\", 18:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 19:\"@openzeppelin/contracts/token/ERC721/IERC721.sol\", 21:\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\", 22:\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\", 24:\"@openzeppelin/contracts/utils/Context.sol\", 31:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 32:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 37:\"contracts/MelonNFT.sol\"\nobject \"MelonNFT_6942\" {\n    code {\n        {\n            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let _2 := 64\n            let newFreePtr := add(_1, _2)\n            let _3 := sub(shl(64, 1), 1)\n            if or(gt(newFreePtr, _3), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 0x24)\n            }\n            mstore(_2, newFreePtr)\n            mstore(_1, 9)\n            let _4 := 32\n            mstore(add(_1, _4), \"Melon_NFT\")\n            let memPtr := mload(_2)\n            let newFreePtr_1 := add(memPtr, _2)\n            if or(gt(newFreePtr_1, _3), lt(newFreePtr_1, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 0x24)\n            }\n            mstore(_2, newFreePtr_1)\n            mstore(memPtr, 7)\n            mstore(add(memPtr, _4), \"MLN_NFT\")\n            let newLen := mload(_1)\n            if gt(newLen, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 0x24)\n            }\n            /// @src -1:-1:-1\n            let _5 := 0\n            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n            let _6 := sload(/** @src -1:-1:-1 */ _5)\n            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n            let length := /** @src -1:-1:-1 */ _5\n            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n            let _7 := 1\n            length := shr(_7, _6)\n            let outOfPlaceEncoding := and(_6, _7)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _4))\n            {\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _5, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 0x24)\n            }\n            let _8 := 31\n            if gt(length, _8)\n            {\n                mstore(/** @src -1:-1:-1 */ _5, _5)\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _5, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _4)\n                let deleteStart := add(data, shr(5, add(newLen, _8)))\n                if lt(newLen, _4) { deleteStart := data }\n                let _9 := add(data, shr(5, add(length, _8)))\n                let start := deleteStart\n                for { } lt(start, _9) { start := add(start, _7) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _5)\n                }\n            }\n            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n            let srcOffset := /** @src -1:-1:-1 */ _5\n            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n            srcOffset := _4\n            switch gt(newLen, _8)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ _5, _5)\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ _5, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _4)\n                let i := /** @src -1:-1:-1 */ _5\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                for { } lt(i, loopEnd) { i := add(i, _4) }\n                {\n                    sstore(dstPtr, mload(add(_1, srcOffset)))\n                    dstPtr := add(dstPtr, _7)\n                    srcOffset := add(srcOffset, _4)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(_1, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src -1:-1:-1 */ _5, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ add(shl(_7, newLen), _7))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ _5\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                if newLen\n                {\n                    value := mload(add(_1, srcOffset))\n                }\n                sstore(/** @src -1:-1:-1 */ _5, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_7, newLen)))\n            }\n            let newLen_1 := mload(memPtr)\n            if gt(newLen_1, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ _5, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 0x24)\n            }\n            let _10 := sload(_7)\n            let length_1 := /** @src -1:-1:-1 */ _5\n            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n            length_1 := shr(_7, _10)\n            let outOfPlaceEncoding_1 := and(_10, _7)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _4))\n            {\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _5, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 0x24)\n            }\n            if gt(length_1, _8)\n            {\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _7)\n                let data_1 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _4)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _8)))\n                if lt(newLen_1, _4) { deleteStart_1 := data_1 }\n                let _11 := add(data_1, shr(5, add(length_1, _8)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _11) { start_1 := add(start_1, _7) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ _5)\n                }\n            }\n            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ _5\n            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n            srcOffset_1 := _4\n            switch gt(newLen_1, _8)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _7)\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _4)\n                let i_1 := /** @src -1:-1:-1 */ _5\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _4) }\n                {\n                    sstore(dstPtr_1, mload(add(memPtr, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _7)\n                    srcOffset_1 := add(srcOffset_1, _4)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(memPtr, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                }\n                sstore(_7, add(shl(_7, newLen_1), _7))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ _5\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(memPtr, srcOffset_1))\n                }\n                sstore(_7, or(and(value_1, not(shr(shl(3, newLen_1), not(0)))), shl(_7, newLen_1)))\n            }\n            let _12 := sload(7)\n            sstore(7, or(and(_12, not(sub(shl(160, 1), 1))), /** @src 24:734:744  \"msg.sender\" */ caller()))\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _13 := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ mload(_2)\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ _5, _5, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(_12, sub(shl(160, 1), 1)), /** @src 24:734:744  \"msg.sender\" */ caller())\n            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n            let _14 := datasize(\"MelonNFT_6942_deployed\")\n            codecopy(_13, dataoffset(\"MelonNFT_6942_deployed\"), _14)\n            return(_13, _14)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 18:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 21:\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\", 23:\"@openzeppelin/contracts/utils/Address.sol\", 24:\"@openzeppelin/contracts/utils/Context.sol\", 28:\"@openzeppelin/contracts/utils/Strings.sol\", 31:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 33:\"@openzeppelin/contracts/utils/math/Math.sol\", 37:\"contracts/MelonNFT.sol\"\n    object \"MelonNFT_6942_deployed\" {\n        code {\n            {\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value := calldataload(_3)\n                        let _5 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _5)) { revert(_4, _4) }\n                        /// @src 21:660:733  \"interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId)\"\n                        let expr := /** @src 21:660:693  \"interfaceId == bytes4(0x49064906)\" */ eq(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _5, shl(225, 0x24832483))\n                        /// @src 21:660:733  \"interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId)\"\n                        if iszero(expr)\n                        {\n                            /// @src 18:1707:1811  \"interfaceId == type(IERC721).interfaceId ||...\"\n                            let expr_1 := /** @src 18:1707:1747  \"interfaceId == type(IERC721).interfaceId\" */ eq(_5, /** @src 18:1722:1747  \"type(IERC721).interfaceId\" */ shl(224, 0x80ac58cd))\n                            /// @src 18:1707:1811  \"interfaceId == type(IERC721).interfaceId ||...\"\n                            if iszero(expr_1)\n                            {\n                                expr_1 := /** @src 18:1763:1811  \"interfaceId == type(IERC721Metadata).interfaceId\" */ eq(_5, /** @src 18:1778:1811  \"type(IERC721Metadata).interfaceId\" */ shl(224, 0x5b5e139f))\n                            }\n                            /// @src 18:1707:1863  \"interfaceId == type(IERC721).interfaceId ||...\"\n                            let expr_2 := expr_1\n                            if iszero(expr_1)\n                            {\n                                expr_2 := /** @src 31:937:977  \"interfaceId == type(IERC165).interfaceId\" */ eq(_5, /** @src 31:952:977  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                            }\n                            /// @src 21:660:733  \"interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId)\"\n                            expr := expr_2\n                        }\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        mstore(_1, iszero(iszero(expr)))\n                        return(_1, 32)\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr := mload(_2)\n                        let ret := _4\n                        let slotValue := sload(_4)\n                        let length := extract_byte_array_length(slotValue)\n                        mstore(memPtr, length)\n                        let _6 := 0x20\n                        let _7 := 1\n                        switch and(slotValue, 1)\n                        case 0 {\n                            mstore(add(memPtr, _6), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _6)\n                        }\n                        case 1 {\n                            mstore(_4, _4)\n                            let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _6) }\n                            {\n                                mstore(add(add(memPtr, i), _6), sload(dataPos))\n                                dataPos := add(dataPos, _7)\n                            }\n                            ret := add(add(memPtr, i), _6)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                        let memPos := mload(_2)\n                        mstore(memPos, _6)\n                        return(memPos, sub(abi_encode_string(memPtr, add(memPos, _6)), memPos))\n                    }\n                    case 0x081812fc {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let ret_1 := fun_getApproved(calldataload(_3))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, and(ret_1, sub(shl(160, 1), 1)))\n                        return(memPos_1, 32)\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address_15341()\n                        let value_1 := calldataload(36)\n                        let _8 := sub(shl(160, 1), 1)\n                        /// @src 18:3605:3616  \"to != owner\"\n                        let _9 := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(/** @src 18:3564:3587  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(value_1), /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _8)\n                        let _10 := and(/** @src 18:3605:3616  \"to != owner\" */ value0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _8)\n                        if /** @src 18:3605:3616  \"to != owner\" */ eq(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _10, /** @src 18:3605:3616  \"to != owner\" */ _9)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        {\n                            let memPtr_1 := mload(_2)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _3), 32)\n                            mstore(add(memPtr_1, 36), 33)\n                            mstore(add(memPtr_1, 68), \"ERC721: approval to current owne\")\n                            mstore(add(memPtr_1, 100), \"r\")\n                            revert(memPtr_1, 132)\n                        }\n                        /// @src 18:3686:3748  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                        let expr_3 := /** @src 18:3686:3707  \"_msgSender() == owner\" */ eq(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 18:3686:3707  \"_msgSender() == owner\" */ _9)\n                        /// @src 18:3686:3748  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                        if iszero(expr_3)\n                        {\n                            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                            mstore(_4, _9)\n                            mstore(32, /** @src 18:4508:4526  \"_operatorApprovals\" */ 0x05)\n                            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                            let _11 := keccak256(_4, _2)\n                            mstore(_4, /** @src 24:734:744  \"msg.sender\" */ caller())\n                            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                            mstore(32, _11)\n                            /// @src 18:3686:3748  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                            expr_3 := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(sload(keccak256(_4, _2)), 0xff)\n                        }\n                        if iszero(expr_3)\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), 32)\n                            mstore(add(memPtr_2, 36), 61)\n                            mstore(add(memPtr_2, 68), \"ERC721: approve caller is not to\")\n                            mstore(add(memPtr_2, 100), \"ken owner or approved for all\")\n                            revert(memPtr_2, 132)\n                        }\n                        mstore(_4, value_1)\n                        mstore(32, _3)\n                        let _12 := keccak256(_4, _2)\n                        sstore(_12, or(and(sload(_12), shl(160, 0xffffffffffffffffffffffff)), _10))\n                        /// @src 18:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\"\n                        log4(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _4, _4, /** @src 18:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(/** @src 18:12699:12722  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(value_1), /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _8), /** @src 18:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ _10, value_1)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        return(_4, _4)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        /// @src 18:4763:4862  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\")\"\n                        require_helper_stringliteral_12a8(/** @src 18:4771:4812  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 18:4771:4812  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ param_2))\n                        /// @src 18:4893:4900  \"tokenId\"\n                        fun_transfer(param, param_1, param_2)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        return(_4, _4)\n                    }\n                    case 0x42842e0e {\n                        if callvalue() { revert(_4, _4) }\n                        let param_3, param_4, param_5 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let memPtr_3 := mload(_2)\n                        finalize_allocation_20795(memPtr_3)\n                        mstore(memPtr_3, _4)\n                        /// @src 18:5311:5410  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\")\"\n                        require_helper_stringliteral_12a8(/** @src 18:5319:5360  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 18:5319:5360  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ param_5))\n                        /// @src 18:6458:6465  \"tokenId\"\n                        fun_transfer(param_3, param_4, param_5)\n                        /// @src 18:6476:6586  \"require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                        require_helper_stringliteral_1e76(/** @src 18:6484:6531  \"_checkOnERC721Received(from, to, tokenId, data)\" */ fun_checkOnERC721Received(param_3, param_4, param_5, memPtr_3))\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        return(_4, _4)\n                    }\n                    case 0x42966c68 {\n                        if callvalue() { revert(_4, _4) }\n                        let _13 := 32\n                        if slt(add(calldatasize(), not(3)), _13) { revert(_4, _4) }\n                        let value_2 := calldataload(_3)\n                        /// @src 37:699:715  \"ownerOf(tokenId)\"\n                        let expr_4 := fun_ownerOf(value_2)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        let _14 := sub(shl(160, 1), 1)\n                        if iszero(/** @src 37:699:729  \"ownerOf(tokenId) == msg.sender\" */ eq(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(/** @src 37:699:729  \"ownerOf(tokenId) == msg.sender\" */ expr_4, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _14), /** @src 37:719:729  \"msg.sender\" */ caller()))\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        {\n                            let memPtr_4 := mload(_2)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, _3), _13)\n                            mstore(add(memPtr_4, 36), 35)\n                            mstore(add(memPtr_4, 68), \"You are not the owner of this to\")\n                            mstore(add(memPtr_4, 100), \"ken\")\n                            revert(memPtr_4, 132)\n                        }\n                        /// @src 18:10246:10269  \"ERC721.ownerOf(tokenId)\"\n                        pop(fun_ownerOf(value_2))\n                        /// @src 18:10441:10464  \"ERC721.ownerOf(tokenId)\"\n                        let expr_5 := fun_ownerOf(value_2)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        mstore(_4, value_2)\n                        mstore(_13, _3)\n                        let dataSlot := keccak256(_4, _2)\n                        let _15 := shl(160, 0xffffffffffffffffffffffff)\n                        sstore(dataSlot, and(sload(dataSlot), _15))\n                        let _16 := and(expr_5, _14)\n                        mstore(_4, _16)\n                        mstore(_13, 3)\n                        let dataSlot_1 := keccak256(_4, _2)\n                        sstore(dataSlot_1, add(sload(/** @src 18:10749:10770  \"_balances[owner] -= 1\" */ dataSlot_1), /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ not(0)))\n                        mstore(_4, value_2)\n                        mstore(_13, /** @src 18:10797:10804  \"_owners\" */ 0x02)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        let dataSlot_2 := keccak256(_4, _2)\n                        sstore(dataSlot_2, and(sload(dataSlot_2), _15))\n                        /// @src 18:10829:10865  \"Transfer(owner, address(0), tokenId)\"\n                        log4(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _4, _4, /** @src 18:10829:10865  \"Transfer(owner, address(0), tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _16, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _4, /** @src 18:10829:10865  \"Transfer(owner, address(0), tokenId)\" */ value_2)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        mstore(_13, /** @src 21:2179:2189  \"_tokenURIs\" */ 0x06)\n                        /// @src 21:2169:2264  \"if (bytes(_tokenURIs[tokenId]).length != 0) {...\"\n                        if /** @src 21:2173:2211  \"bytes(_tokenURIs[tokenId]).length != 0\" */ iszero(iszero(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ extract_byte_array_length(sload(keccak256(_4, _2)))))\n                        /// @src 21:2169:2264  \"if (bytes(_tokenURIs[tokenId]).length != 0) {...\"\n                        {\n                            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                            mstore(_4, value_2)\n                            mstore(_13, /** @src 21:2179:2189  \"_tokenURIs\" */ 0x06)\n                            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                            let dataSlot_3 := keccak256(_4, _2)\n                            let oldLen := extract_byte_array_length(sload(dataSlot_3))\n                            if iszero(iszero(oldLen))\n                            {\n                                switch gt(oldLen, 31)\n                                case 1 {\n                                    mstore(_4, dataSlot_3)\n                                    let data := keccak256(_4, _13)\n                                    clear_storage_range_bytes1(add(data, 1), add(data, shr(5, add(oldLen, 31))))\n                                    sstore(dataSlot_3, _4)\n                                    sstore(data, _4)\n                                }\n                                default { sstore(dataSlot_3, _4) }\n                            }\n                        }\n                        return(_4, _4)\n                    }\n                    case 0x6352211e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let ret_2 := fun_ownerOf(calldataload(_3))\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, and(ret_2, sub(shl(160, 1), 1)))\n                        return(memPos_2, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let _17 := and(abi_decode_address_15341(), sub(shl(160, 1), 1))\n                        if /** @src 18:2028:2047  \"owner != address(0)\" */ iszero(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _17)\n                        {\n                            let memPtr_5 := mload(_2)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, _3), 32)\n                            mstore(add(memPtr_5, 36), 41)\n                            mstore(add(memPtr_5, 68), \"ERC721: address zero is not a va\")\n                            mstore(add(memPtr_5, 100), \"lid owner\")\n                            revert(memPtr_5, 132)\n                        }\n                        mstore(_4, _17)\n                        mstore(32, /** @src 18:2110:2119  \"_balances\" */ 0x03)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        let _18 := sload(keccak256(_4, _2))\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, _18)\n                        return(memPos_3, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        let _19 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x07)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        sstore(/** @src 0:2518:2524  \"_owner\" */ 0x07, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(_19, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _4, _4, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(_19, sub(shl(160, 1), 1)), _4)\n                        return(_4, _4)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let cleaned := and(sload(/** @src 0:1273:1279  \"_owner\" */ 0x07), /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ sub(shl(160, 1), 1))\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, cleaned)\n                        return(memPos_4, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_6 := mload(_2)\n                        let ret_3 := _4\n                        /// @src 18:2721:2728  \"_symbol\"\n                        let _20 := 0x01\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        let slotValue_1 := sload(/** @src 18:2721:2728  \"_symbol\" */ 0x01)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        let length_1 := extract_byte_array_length(slotValue_1)\n                        mstore(memPtr_6, length_1)\n                        let _21 := 0x20\n                        switch and(slotValue_1, /** @src 18:2721:2728  \"_symbol\" */ 0x01)\n                        case /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 0 {\n                            mstore(add(memPtr_6, _21), and(slotValue_1, not(255)))\n                            ret_3 := add(add(memPtr_6, shl(5, iszero(iszero(length_1)))), _21)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 18:2721:2728  \"_symbol\" */ 0x01)\n                            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                            let dataPos_1 := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                            let i_1 := _4\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, _21) }\n                            {\n                                mstore(add(add(memPtr_6, i_1), _21), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, /** @src 18:2721:2728  \"_symbol\" */ _20)\n                            }\n                            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                            ret_3 := add(add(memPtr_6, i_1), _21)\n                        }\n                        finalize_allocation(memPtr_6, sub(ret_3, memPtr_6))\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, _21)\n                        return(memPos_5, sub(abi_encode_string(memPtr_6, add(memPos_5, _21)), memPos_5))\n                    }\n                    case 0xa22cb465 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address_15341()\n                        let value_3 := calldataload(36)\n                        let _22 := iszero(iszero(value_3))\n                        if iszero(eq(value_3, _22)) { revert(_4, _4) }\n                        let _23 := and(/** @src 18:12990:13007  \"owner != operator\" */ value0_1, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 18:12990:13007  \"owner != operator\" */ eq(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _23)\n                        {\n                            let memPtr_7 := mload(_2)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, _3), 32)\n                            mstore(add(memPtr_7, 36), 25)\n                            mstore(add(memPtr_7, 68), \"ERC721: approve to caller\")\n                            revert(memPtr_7, 100)\n                        }\n                        mstore(_4, /** @src 24:734:744  \"msg.sender\" */ caller())\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        mstore(32, /** @src 18:13047:13065  \"_operatorApprovals\" */ 0x05)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        let _24 := keccak256(_4, _2)\n                        mstore(_4, _23)\n                        mstore(32, _24)\n                        let dataSlot_4 := keccak256(_4, _2)\n                        let value_4 := and(sload(dataSlot_4), not(255))\n                        sstore(dataSlot_4, or(value_4, and(_22, 255)))\n                        /// @src 18:13108:13149  \"ApprovalForAll(owner, operator, approved)\"\n                        let _25 := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ mload(_2)\n                        mstore(_25, _22)\n                        /// @src 18:13108:13149  \"ApprovalForAll(owner, operator, approved)\"\n                        log3(_25, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 32, /** @src 18:13108:13149  \"ApprovalForAll(owner, operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 18:13108:13149  \"ApprovalForAll(owner, operator, approved)\" */ _23)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        return(_4, _4)\n                    }\n                    case 0xb88d4fde {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address_15341()\n                        let value1 := abi_decode_address()\n                        let value_5 := calldataload(68)\n                        let offset := calldataload(100)\n                        if gt(offset, 0xffffffffffffffff) { revert(_4, _4) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                        let array := abi_decode_available_length_bytes(add(offset, 36), calldataload(add(_3, offset)), calldatasize())\n                        /// @src 18:5311:5410  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\")\"\n                        require_helper_stringliteral_12a8(/** @src 18:5319:5360  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 18:5319:5360  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ value_5))\n                        /// @src 18:6458:6465  \"tokenId\"\n                        fun_transfer(value0_2, value1, value_5)\n                        /// @src 18:6476:6586  \"require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                        require_helper_stringliteral_1e76(/** @src 18:6484:6531  \"_checkOnERC721Received(from, to, tokenId, data)\" */ fun_checkOnERC721Received(value0_2, value1, value_5, array))\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        return(_4, _4)\n                    }\n                    case 0xc87b56dd {\n                        if callvalue() { revert(_4, _4) }\n                        let _26 := 32\n                        if slt(add(calldatasize(), not(3)), _26) { revert(_4, _4) }\n                        let _27 := calldataload(_3)\n                        /// @src 18:13313:13366  \"require(_exists(tokenId), \\\"ERC721: invalid token ID\\\")\"\n                        require_helper_stringliteral_b08d(/** @src 18:13321:13337  \"_exists(tokenId)\" */ fun_exists(_27))\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        mstore(_4, _27)\n                        mstore(_26, /** @src 21:964:974  \"_tokenURIs\" */ 0x06)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        let dataSlot_5 := keccak256(_4, _2)\n                        let memPtr_8 := mload(_2)\n                        let ret_4 := _4\n                        let slotValue_2 := sload(dataSlot_5)\n                        let length_2 := extract_byte_array_length(slotValue_2)\n                        mstore(memPtr_8, length_2)\n                        let _28 := 1\n                        switch and(slotValue_2, 1)\n                        case 0 {\n                            mstore(add(memPtr_8, _26), and(slotValue_2, not(255)))\n                            ret_4 := add(add(memPtr_8, shl(5, iszero(iszero(length_2)))), _26)\n                        }\n                        case 1 {\n                            mstore(_4, dataSlot_5)\n                            let dataPos_2 := keccak256(_4, _26)\n                            let i_2 := _4\n                            for { } lt(i_2, length_2) { i_2 := add(i_2, _26) }\n                            {\n                                mstore(add(add(memPtr_8, i_2), _26), sload(dataPos_2))\n                                dataPos_2 := add(dataPos_2, _28)\n                            }\n                            ret_4 := add(add(memPtr_8, i_2), _26)\n                        }\n                        finalize_allocation(memPtr_8, sub(ret_4, memPtr_8))\n                        let memPtr_9 := mload(_2)\n                        finalize_allocation_20795(memPtr_9)\n                        mstore(memPtr_9, _4)\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, _26)\n                        return(memPos_6, sub(abi_encode_string(memPtr_8, add(memPos_6, _26)), memPos_6))\n                    }\n                    case 0xd0def521 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address_15341()\n                        let _29 := 36\n                        let offset_1 := calldataload(_29)\n                        let _30 := 0xffffffffffffffff\n                        if gt(offset_1, _30) { revert(_4, _4) }\n                        if iszero(slt(add(offset_1, 35), calldatasize())) { revert(_4, _4) }\n                        let array_1 := abi_decode_available_length_bytes(add(offset_1, _29), calldataload(add(_3, offset_1)), calldatasize())\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        let _31 := sload(/** @src 37:507:521  \"_nextTokenId++\" */ 0x08)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        let _32 := not(0)\n                        if eq(_31, _32)\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x11)\n                            revert(_4, _29)\n                        }\n                        let _33 := 1\n                        sstore(/** @src 37:507:521  \"_nextTokenId++\" */ 0x08, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ add(_31, _33))\n                        let memPtr_10 := mload(_2)\n                        finalize_allocation_20795(memPtr_10)\n                        mstore(memPtr_10, _4)\n                        let _34 := and(/** @src 18:9004:9020  \"to != address(0)\" */ value0_3, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 18:9004:9020  \"to != address(0)\" */ iszero(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _34)\n                        {\n                            let memPtr_11 := mload(_2)\n                            mstore(memPtr_11, shl(229, 4594637))\n                            mstore(add(memPtr_11, _3), 0x20)\n                            mstore(add(memPtr_11, _29), 0x20)\n                            mstore(add(memPtr_11, 68), \"ERC721: mint to the zero address\")\n                            revert(memPtr_11, 100)\n                        }\n                        /// @src 18:9067:9125  \"require(!_exists(tokenId), \\\"ERC721: token already minted\\\")\"\n                        require_helper_stringliteral_2a63(/** @src 18:9075:9092  \"!_exists(tokenId)\" */ iszero(/** @src 18:9076:9092  \"_exists(tokenId)\" */ fun_exists(_31)))\n                        /// @src 18:9271:9329  \"require(!_exists(tokenId), \\\"ERC721: token already minted\\\")\"\n                        require_helper_stringliteral_2a63(/** @src 18:9279:9296  \"!_exists(tokenId)\" */ iszero(/** @src 18:9280:9296  \"_exists(tokenId)\" */ fun_exists(_31)))\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        mstore(_4, _34)\n                        let _35 := 0x20\n                        mstore(_35, /** @src 18:9671:9680  \"_balances\" */ 0x03)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        let dataSlot_6 := keccak256(_4, _2)\n                        sstore(dataSlot_6, add(sload(/** @src 18:9671:9689  \"_balances[to] += 1\" */ dataSlot_6), /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _33))\n                        mstore(_4, _31)\n                        mstore(_35, /** @src 18:9710:9717  \"_owners\" */ 0x02)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        let _36 := keccak256(_4, _2)\n                        sstore(_36, or(and(sload(_36), shl(160, 0xffffffffffffffffffffffff)), _34))\n                        /// @src 18:9747:9780  \"Transfer(address(0), to, tokenId)\"\n                        log4(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _4, _4, /** @src 18:9747:9780  \"Transfer(address(0), to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _4, /** @src 18:9747:9780  \"Transfer(address(0), to, tokenId)\" */ _34, _31)\n                        /// @src 18:8446:8596  \"require(...\"\n                        require_helper_stringliteral_1e76(/** @src 18:8467:8520  \"_checkOnERC721Received(address(0), to, tokenId, data)\" */ fun_checkOnERC721Received_15355(value0_3, _31, memPtr_10))\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        if iszero(/** @src 21:1698:1714  \"_exists(tokenId)\" */ fun_exists(_31))\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        {\n                            let memPtr_12 := mload(_2)\n                            mstore(memPtr_12, shl(229, 4594637))\n                            mstore(add(memPtr_12, _3), _35)\n                            mstore(add(memPtr_12, _29), 46)\n                            mstore(add(memPtr_12, 68), \"ERC721URIStorage: URI set of non\")\n                            mstore(add(memPtr_12, 100), \"existent token\")\n                            revert(memPtr_12, 132)\n                        }\n                        mstore(_4, _31)\n                        mstore(_35, /** @src 21:1775:1785  \"_tokenURIs\" */ 0x06)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        let dataSlot_7 := keccak256(_4, _2)\n                        let newLen := mload(array_1)\n                        if gt(newLen, _30)\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, _29)\n                        }\n                        let _37 := extract_byte_array_length(sload(dataSlot_7))\n                        if gt(_37, 0x1f)\n                        {\n                            mstore(_4, dataSlot_7)\n                            let data_1 := keccak256(_4, _35)\n                            let deleteStart := add(data_1, shr(5, add(newLen, 0x1f)))\n                            if lt(newLen, _35) { deleteStart := data_1 }\n                            clear_storage_range_bytes1(deleteStart, add(data_1, shr(5, add(_37, 0x1f))))\n                        }\n                        let srcOffset := _4\n                        srcOffset := _35\n                        switch gt(newLen, 0x1f)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(_4, dataSlot_7)\n                            let dstPtr := keccak256(_4, _35)\n                            let i_3 := _4\n                            for { } lt(i_3, loopEnd) { i_3 := add(i_3, _35) }\n                            {\n                                sstore(dstPtr, mload(add(array_1, srcOffset)))\n                                dstPtr := add(dstPtr, _33)\n                                srcOffset := add(srcOffset, _35)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(array_1, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 18:9671:9680  \"_balances\" */ 0x03, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ newLen), 248), _32))))\n                            }\n                            sstore(dataSlot_7, add(shl(_33, newLen), _33))\n                        }\n                        default {\n                            let value_6 := _4\n                            if newLen\n                            {\n                                value_6 := mload(add(array_1, srcOffset))\n                            }\n                            sstore(dataSlot_7, or(and(value_6, not(shr(shl(/** @src 18:9671:9680  \"_balances\" */ 0x03, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ newLen), _32))), shl(_33, newLen)))\n                        }\n                        /// @src 21:1822:1845  \"MetadataUpdate(tokenId)\"\n                        let _38 := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ mload(_2)\n                        mstore(_38, _31)\n                        /// @src 21:1822:1845  \"MetadataUpdate(tokenId)\"\n                        log1(_38, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _35, /** @src 21:1822:1845  \"MetadataUpdate(tokenId)\" */ 0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7)\n                        /// @src 37:607:627  \"MintNFT(to, tokenId)\"\n                        let _39 := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ mload(_2)\n                        mstore(_39, _31)\n                        /// @src 37:607:627  \"MintNFT(to, tokenId)\"\n                        log2(_39, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _35, /** @src 37:607:627  \"MintNFT(to, tokenId)\" */ 0x1f89f147a58d1673945cf416187db98efc8208408c011b91887acd59fd8523c3, _34)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        return(_4, _4)\n                    }\n                    case 0xe985e9c5 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_4 := abi_decode_address_15341()\n                        let value1_1 := abi_decode_address()\n                        let _40 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_4, _40))\n                        mstore(32, /** @src 18:4508:4526  \"_operatorApprovals\" */ 0x05)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        let _41 := keccak256(_4, _2)\n                        mstore(_4, and(value1_1, _40))\n                        mstore(32, _41)\n                        let value_7 := and(sload(keccak256(_4, _2)), 0xff)\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, iszero(iszero(value_7)))\n                        return(memPos_7, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value0_5 := abi_decode_address_15341()\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        let _42 := sub(shl(160, 1), 1)\n                        let _43 := and(/** @src 0:2162:2184  \"newOwner != address(0)\" */ value0_5, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _42)\n                        if /** @src 0:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _43)\n                        {\n                            let memPtr_13 := mload(_2)\n                            mstore(memPtr_13, shl(229, 4594637))\n                            mstore(add(memPtr_13, _3), 32)\n                            mstore(add(memPtr_13, 36), 38)\n                            mstore(add(memPtr_13, 68), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr_13, 100), \"ddress\")\n                            revert(memPtr_13, 132)\n                        }\n                        let _44 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x07)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        sstore(/** @src 0:2518:2524  \"_owner\" */ 0x07, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ or(and(_44, shl(160, 0xffffffffffffffffffffffff)), _43))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _4, _4, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(_44, _42), /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ _43)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        return(_4, _4)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_address_15341() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function finalize_allocation_20795(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x20)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_decode_available_length_bytes(src, length, end) -> array\n            {\n                let _1 := array_allocation_size_bytes(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                array := memPtr\n                mstore(memPtr, length)\n                if gt(add(src, length), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                calldatacopy(add(memPtr, 0x20), src, length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 2113 @src 18:3935:4102  \"function getApproved(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_getApproved(var_tokenId) -> var\n            {\n                /// @src 18:13313:13366  \"require(_exists(tokenId), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 18:13321:13337  \"_exists(tokenId)\" */ fun_exists(var_tokenId))\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ var_tokenId)\n                mstore(0x20, /** @src 18:4071:4086  \"_tokenApprovals\" */ 0x04)\n                /// @src 18:4064:4095  \"return _tokenApprovals[tokenId]\"\n                var := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 0x40)), sub(shl(160, 1), 1))\n            }\n            function require_helper_stringliteral_12a8(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 45)\n                    mstore(add(memPtr, 68), \"ERC721: caller is not token owne\")\n                    mstore(add(memPtr, 100), \"r or approved\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_b08d(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"ERC721: invalid token ID\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 1984 @src 18:2190:2409  \"function ownerOf(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_ownerOf(var_tokenId) -> var\n            {\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ var_tokenId)\n                mstore(0x20, /** @src 18:6794:6801  \"_owners\" */ 0x02)\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 0x40)), sub(shl(160, 1), 1))\n                /// @src 18:2324:2380  \"require(owner != address(0), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 18:2332:2351  \"owner != address(0)\" */ iszero(iszero(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ cleaned)))\n                /// @src 18:2390:2402  \"return owner\"\n                var := cleaned\n            }\n            /// @ast-id 2318 @src 18:7404:7665  \"function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_isApprovedOrOwner(var_spender, var_tokenId) -> var\n            {\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 18:7570:7586  \"spender == owner\"\n                let _2 := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(/** @src 18:7529:7552  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _1)\n                /// @src 18:7570:7586  \"spender == owner\"\n                let _3 := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(/** @src 18:7570:7586  \"spender == owner\" */ var_spender, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _1)\n                /// @src 18:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                let expr := /** @src 18:7570:7586  \"spender == owner\" */ eq(_3, _2)\n                /// @src 18:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                if iszero(expr)\n                {\n                    /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _2)\n                    mstore(0x20, /** @src 18:4508:4526  \"_operatorApprovals\" */ 0x05)\n                    /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                    let _4 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 0x40)\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _3)\n                    mstore(0x20, _4)\n                    /// @src 18:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                    expr := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 0x40)), 0xff)\n                }\n                /// @src 18:7570:7657  \"spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 18:7626:7657  \"getApproved(tokenId) == spender\" */ eq(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(/** @src 18:7626:7646  \"getApproved(tokenId)\" */ fun_getApproved(var_tokenId), /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _1), /** @src 18:7626:7657  \"getApproved(tokenId) == spender\" */ _3)\n                }\n                /// @src 18:7562:7658  \"return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender)\"\n                var := expr_1\n            }\n            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n            function require_helper_stringliteral_277f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC721: transfer from incorrect \")\n                    mstore(add(memPtr, 100), \"owner\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 2591 @src 18:11257:12460  \"function _transfer(address from, address to, uint256 tokenId) internal virtual {...\"\n            function fun_transfer(var_from, var_to, var_tokenId)\n            {\n                /// @src 18:11354:11377  \"ERC721.ownerOf(tokenId)\"\n                let expr := fun_ownerOf(var_tokenId)\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 18:11354:11385  \"ERC721.ownerOf(tokenId) == from\"\n                let _2 := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(/** @src 18:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ var_from, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _1)\n                /// @src 18:11346:11427  \"require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\")\"\n                require_helper_stringliteral_277f(/** @src 18:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ eq(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(/** @src 18:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ expr, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _1), /** @src 18:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ _2))\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                let _3 := and(/** @src 18:11445:11461  \"to != address(0)\" */ var_to, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _1)\n                if /** @src 18:11445:11461  \"to != address(0)\" */ iszero(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _3)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC721: transfer to the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 18:11647:11728  \"require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\")\"\n                require_helper_stringliteral_277f(/** @src 18:11655:11686  \"ERC721.ownerOf(tokenId) == from\" */ eq(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(/** @src 18:11655:11678  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _1), /** @src 18:11655:11686  \"ERC721.ownerOf(tokenId) == from\" */ _2))\n                /// @src 18:11459:11460  \"0\"\n                let _4 := 0x00\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                mstore(/** @src 18:11459:11460  \"0\" */ _4, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ var_tokenId)\n                mstore(0x20, /** @src 18:11797:11812  \"_tokenApprovals\" */ 0x04)\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                let dataSlot := keccak256(/** @src 18:11459:11460  \"0\" */ _4, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 0x40)\n                let _5 := shl(160, 0xffffffffffffffffffffffff)\n                sstore(dataSlot, and(sload(dataSlot), _5))\n                mstore(/** @src 18:11459:11460  \"0\" */ _4, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _2)\n                mstore(0x20, 3)\n                let dataSlot_1 := keccak256(/** @src 18:11459:11460  \"0\" */ _4, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 0x40)\n                sstore(dataSlot_1, add(sload(/** @src 18:12265:12285  \"_balances[from] -= 1\" */ dataSlot_1), /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ not(0)))\n                mstore(/** @src 18:11459:11460  \"0\" */ _4, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _3)\n                let dataSlot_2 := keccak256(/** @src 18:11459:11460  \"0\" */ _4, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 0x40)\n                sstore(dataSlot_2, add(sload(/** @src 18:12299:12317  \"_balances[to] += 1\" */ dataSlot_2), /** @src 18:12284:12285  \"1\" */ 0x01))\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                mstore(/** @src 18:11459:11460  \"0\" */ _4, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ var_tokenId)\n                mstore(0x20, /** @src 18:12337:12344  \"_owners\" */ 0x02)\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                let _6 := keccak256(/** @src 18:11459:11460  \"0\" */ _4, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 0x40)\n                sstore(_6, or(and(sload(_6), _5), _3))\n                /// @src 18:12374:12401  \"Transfer(from, to, tokenId)\"\n                log4(/** @src 18:11459:11460  \"0\" */ _4, _4, /** @src 18:12374:12401  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3, var_tokenId)\n            }\n            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n            function clear_storage_range_bytes1(start, end)\n            {\n                for { } lt(start, end) { start := add(start, 1) }\n                { sstore(start, 0) }\n            }\n            /// @ast-id 54 @src 0:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                let cleaned := and(sload(/** @src 0:1273:1279  \"_owner\" */ 0x07), /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 0:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ cleaned, /** @src 24:734:744  \"msg.sender\" */ caller()))\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_stringliteral_1e76(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 50)\n                mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n                mstore(add(headStart, 96), \"ceiver implementer\")\n                tail := add(headStart, 128)\n            }\n            function require_helper_stringliteral_1e76(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    revert(memPtr, sub(abi_encode_stringliteral_1e76(add(memPtr, 4)), memPtr))\n                }\n            }\n            /// @ast-id 2284 @src 18:7120:7246  \"function _exists(uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_exists(var_tokenId) -> var\n            {\n                /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ var_tokenId)\n                mstore(0x20, /** @src 18:6794:6801  \"_owners\" */ 0x02)\n                /// @src 18:7201:7239  \"return _ownerOf(tokenId) != address(0)\"\n                var := /** @src 18:7208:7239  \"_ownerOf(tokenId) != address(0)\" */ iszero(iszero(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 0x40)), sub(shl(160, 1), 1))))\n            }\n            /// @ast-id 2723 @src 18:13925:14756  \"function _checkOnERC721Received(...\"\n            function fun_checkOnERC721Received_15355(var_to, var_tokenId, var_data_mpos) -> var\n            {\n                /// @src 18:14090:14750  \"if (to.isContract()) {...\"\n                switch /** @src 23:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 23:1702:1721  \"account.code.length\" */ extcodesize(var_to)))\n                case /** @src 18:14090:14750  \"if (to.isContract()) {...\" */ 0 {\n                    /// @src 18:14728:14739  \"return true\"\n                    var := /** @src 18:14735:14739  \"true\" */ 0x01\n                    /// @src 18:14728:14739  \"return true\"\n                    leave\n                }\n                default /// @src 18:14090:14750  \"if (to.isContract()) {...\"\n                {\n                    /// @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let _1 := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ mload(64)\n                    let _2 := shl(225, 0x0a85bd01)\n                    /// @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    mstore(_1, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _2)\n                    mstore(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ add(_1, 4), /** @src 24:734:744  \"msg.sender\" */ caller())\n                    /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                    let _3 := 0\n                    mstore(add(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _1, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 36), _3)\n                    mstore(add(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _1, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 68), var_tokenId)\n                    mstore(add(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _1, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 100), 128)\n                    /// @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let _4 := 32\n                    let trySuccessCondition := call(gas(), /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(/** @src 18:14129:14148  \"IERC721Receiver(to)\" */ var_to, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ sub(shl(160, 1), 1)), _3, /** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _1, sub(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ abi_encode_string(var_data_mpos, add(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _1, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 132)), /** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _1), _1, _4)\n                    let expr := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _3\n                    /// @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    if trySuccessCondition\n                    {\n                        let _5 := _4\n                        if gt(_4, returndatasize()) { _5 := returndatasize() }\n                        finalize_allocation(_1, _5)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        if slt(sub(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ add(_1, _5), /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _1), /** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        { revert(_3, _3) }\n                        let value := mload(_1)\n                        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(_3, _3) }\n                        /// @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                        expr := value\n                    }\n                    /// @src 18:14125:14698  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    switch iszero(trySuccessCondition)\n                    case 0 {\n                        /// @src 18:14243:14301  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        var := /** @src 18:14250:14301  \"retval == IERC721Receiver.onERC721Received.selector\" */ eq(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(/** @src 18:14250:14301  \"retval == IERC721Receiver.onERC721Received.selector\" */ expr, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ shl(224, 0xffffffff)), _2)\n                        /// @src 18:14243:14301  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        leave\n                    }\n                    default /// @src 18:14125:14698  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    {\n                        /// @src 18:14317:14698  \"catch (bytes memory reason) {...\"\n                        let data := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _3\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _6 := returndatasize()\n                            let _7 := array_allocation_size_bytes(_6)\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, _7)\n                            mstore(memPtr, _6)\n                            data := memPtr\n                            returndatacopy(add(memPtr, /** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4), /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _3, returndatasize())\n                        }\n                        /// @src 18:14367:14380  \"reason.length\"\n                        let expr_1 := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ mload(/** @src 18:14367:14380  \"reason.length\" */ data)\n                        /// @src 18:14363:14684  \"if (reason.length == 0) {...\"\n                        switch /** @src 18:14367:14385  \"reason.length == 0\" */ iszero(expr_1)\n                        case /** @src 18:14363:14684  \"if (reason.length == 0) {...\" */ 0 {\n                            /// @src 18:14571:14666  \"assembly {...\"\n                            revert(add(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4, /** @src 18:14571:14666  \"assembly {...\" */ data), expr_1)\n                        }\n                        default /// @src 18:14363:14684  \"if (reason.length == 0) {...\"\n                        {\n                            /// @src 18:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            let _8 := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ mload(64)\n                            /// @src 18:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            mstore(_8, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ shl(229, 4594637))\n                            /// @src 18:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            revert(_8, sub(abi_encode_stringliteral_1e76(add(_8, /** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 4)), /** @src 18:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\" */ _8))\n                        }\n                    }\n                }\n            }\n            /// @ast-id 2723 @src 18:13925:14756  \"function _checkOnERC721Received(...\"\n            function fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_mpos) -> var\n            {\n                /// @src 18:14090:14750  \"if (to.isContract()) {...\"\n                switch /** @src 23:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 23:1702:1721  \"account.code.length\" */ extcodesize(var_to)))\n                case /** @src 18:14090:14750  \"if (to.isContract()) {...\" */ 0 {\n                    /// @src 18:14728:14739  \"return true\"\n                    var := /** @src 18:14735:14739  \"true\" */ 0x01\n                    /// @src 18:14728:14739  \"return true\"\n                    leave\n                }\n                default /// @src 18:14090:14750  \"if (to.isContract()) {...\"\n                {\n                    /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                    let _1 := sub(shl(160, 1), 1)\n                    /// @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let _2 := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ mload(64)\n                    let _3 := shl(225, 0x0a85bd01)\n                    /// @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    mstore(_2, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _3)\n                    mstore(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ add(_2, 4), /** @src 24:734:744  \"msg.sender\" */ caller())\n                    /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                    mstore(add(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 36), and(var_from, _1))\n                    mstore(add(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 68), var_tokenId)\n                    mstore(add(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 100), 128)\n                    /// @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let _4 := 32\n                    let _5 := sub(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ abi_encode_string(var_data_mpos, add(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ 132)), /** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2)\n                    /// @src -1:-1:-1\n                    let _6 := 0\n                    /// @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let trySuccessCondition := call(gas(), /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(/** @src 18:14129:14148  \"IERC721Receiver(to)\" */ var_to, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _1), /** @src -1:-1:-1 */ _6, /** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, _5, _2, _4)\n                    let expr := /** @src -1:-1:-1 */ _6\n                    /// @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    if trySuccessCondition\n                    {\n                        let _7 := _4\n                        if gt(_4, returndatasize()) { _7 := returndatasize() }\n                        finalize_allocation(_2, _7)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        if slt(sub(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ add(_2, _7), /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ _2), /** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4)\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        {\n                            revert(/** @src -1:-1:-1 */ _6, _6)\n                        }\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        let value := mload(_2)\n                        if iszero(eq(value, and(value, shl(224, 0xffffffff))))\n                        {\n                            revert(/** @src -1:-1:-1 */ _6, _6)\n                        }\n                        /// @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                        expr := value\n                    }\n                    /// @src 18:14125:14698  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    switch iszero(trySuccessCondition)\n                    case 0 {\n                        /// @src 18:14243:14301  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        var := /** @src 18:14250:14301  \"retval == IERC721Receiver.onERC721Received.selector\" */ eq(/** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ and(/** @src 18:14250:14301  \"retval == IERC721Receiver.onERC721Received.selector\" */ expr, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ shl(224, 0xffffffff)), _3)\n                        /// @src 18:14243:14301  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        leave\n                    }\n                    default /// @src 18:14125:14698  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    {\n                        /// @src 18:14317:14698  \"catch (bytes memory reason) {...\"\n                        let data := /** @src -1:-1:-1 */ _6\n                        /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _8 := returndatasize()\n                            let _9 := array_allocation_size_bytes(_8)\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, _9)\n                            mstore(memPtr, _8)\n                            data := memPtr\n                            returndatacopy(add(memPtr, /** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4), /** @src -1:-1:-1 */ _6, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ returndatasize())\n                        }\n                        /// @src 18:14367:14380  \"reason.length\"\n                        let expr_1 := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ mload(/** @src 18:14367:14380  \"reason.length\" */ data)\n                        /// @src 18:14363:14684  \"if (reason.length == 0) {...\"\n                        switch /** @src 18:14367:14385  \"reason.length == 0\" */ iszero(expr_1)\n                        case /** @src 18:14363:14684  \"if (reason.length == 0) {...\" */ 0 {\n                            /// @src 18:14571:14666  \"assembly {...\"\n                            revert(add(/** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4, /** @src 18:14571:14666  \"assembly {...\" */ data), expr_1)\n                        }\n                        default /// @src 18:14363:14684  \"if (reason.length == 0) {...\"\n                        {\n                            /// @src 18:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            let _10 := /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ mload(64)\n                            /// @src 18:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            mstore(_10, /** @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\" */ shl(229, 4594637))\n                            /// @src 18:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            revert(_10, sub(abi_encode_stringliteral_1e76(add(_10, /** @src 18:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 4)), /** @src 18:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\" */ _10))\n                        }\n                    }\n                }\n            }\n            /// @src 37:199:824  \"contract MelonNFT is ERC721URIStorage, Ownable  {...\"\n            function require_helper_stringliteral_2a63(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 28)\n                    mstore(add(memPtr, 68), \"ERC721: token already minted\")\n                    revert(memPtr, 100)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e5452b0cf2c725343a2562b7bf79b9a35a25db24c9b279a1feea4411484d246464736f6c63430008180033\"\n    }\n}\n","hash":"010002f7e4471f4730c2d9497ca47d6a9cc739c0c25d8a4b17292d1d541cca16","factoryDependencies":{}}},"contracts/MelonToken.sol":{"MelonToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MelonToken.sol\":\"MelonToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca\",\"dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/MelonToken.sol\":{\"keccak256\":\"0x0ea0df6c42e73bc65fd935a40ed9f23fed8d45aaaee85e37f205bfde2e921483\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4ab1aa07c0665f5e86d6218675001cb634f3ae692ad771a54ecfee04291fcd4\",\"dweb:/ipfs/QmYeZkZXgwSPWhEzx9S8rGCoGupQ2M4hAvxQc6sEUxPTqy\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.5.0"},"storageLayout":{"storage":[{"astId":919,"contract":"contracts/MelonToken.sol:MelonToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":925,"contract":"contracts/MelonToken.sol:MelonToken","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":927,"contract":"contracts/MelonToken.sol:MelonToken","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":929,"contract":"contracts/MelonToken.sol:MelonToken","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":931,"contract":"contracts/MelonToken.sol:MelonToken","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":4470,"contract":"contracts/MelonToken.sol:MelonToken","label":"_nameFallback","offset":0,"slot":"5","type":"t_string_storage"},{"astId":4472,"contract":"contracts/MelonToken.sol:MelonToken","label":"_versionFallback","offset":0,"slot":"6","type":"t_string_storage"},{"astId":1628,"contract":"contracts/MelonToken.sol:MelonToken","label":"_nonces","offset":0,"slot":"7","type":"t_mapping(t_address,t_struct(Counter)3448_storage)"},{"astId":1636,"contract":"contracts/MelonToken.sol:MelonToken","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"8","type":"t_bytes32"},{"astId":7,"contract":"contracts/MelonToken.sol:MelonToken","label":"_owner","offset":0,"slot":"9","type":"t_address"},{"astId":813,"contract":"contracts/MelonToken.sol:MelonToken","label":"_paused","offset":20,"slot":"9","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)3448_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Counters.Counter)","numberOfBytes":"32","value":"t_struct(Counter)3448_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)3448_storage":{"encoding":"inplace","label":"struct Counters.Counter","members":[{"astId":3447,"contract":"contracts/MelonToken.sol:MelonToken","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"assembly":"\t.text\n\t.file\t\"MelonToken.sol:MelonToken\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6 + r0]\n\tptr.add\tr1, r0, r4\n\tptr.add\tr4, r0, stack[@ptr_calldata]\n\tadd\tr4, r0, r1\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, r1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_10\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r1, r2\n\tjump.lt\t@.BB0_244\n\tld\tr4, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.gt\t@.BB0_13\n\tsub.s!\t@CPI0_36[0], r2, r3\n\tjump.gt\t@.BB0_30\n\tsub.s!\t@CPI0_43[0], r2, r3\n\tjump.le\t@.BB0_57\n\tsub.s!\t@CPI0_44[0], r2, r3\n\tjump.eq\t@.BB0_85\n\tsub.s!\t@CPI0_45[0], r2, r3\n\tjump.eq\t@.BB0_88\n\tsub.s!\t@CPI0_46[0], r2, r1\n\tjump.ne\t@.BB0_244\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tadd\t18, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_54[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_10:\n\tadd\t352, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tadd\t3, r0, r4\n\tst.1\t352, r4\n\tadd\t@CPI0_1[0], r0, r1\n\tst.1\t384, r1\n\tadd\t5, r0, r6\n\tst.1\t416, r6\n\tadd\t@CPI0_2[0], r0, r2\n\tst.1\t448, r2\n\tst.1\t480, r4\n\tst.1\t512, r1\n\tadd\t608, r0, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r1\n\tst.1\t544, r1\n\tadd\t@CPI0_3[0], r0, r1\n\tst.1\t576, r1\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_23\n.BB0_12:\n\tadd\t@CPI0_82[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_83[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_13:\n\tsub.s!\t@CPI0_23[0], r2, r3\n\tjump.gt\t@.BB0_38\n\tsub.s!\t@CPI0_30[0], r2, r3\n\tjump.le\t@.BB0_63\n\tsub.s!\t@CPI0_31[0], r2, r1\n\tjump.eq\t@.BB0_97\n\tsub.s!\t@CPI0_32[0], r2, r1\n\tjump.eq\t@.BB0_105\n\tsub.s!\t@CPI0_33[0], r2, r1\n\tjump.ne\t@.BB0_244\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tadd\t4, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_12\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_184\n\tst.1\t0, r3\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_191\n\tjump\t@.BB0_135\n.BB0_23:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_28\n\tadd\tr3, r0, stack-[6]\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tadd\t5, r0, r6\n\tadd\t3, r0, r4\n\tjump.ge\t@.BB0_28\n.BB0_27:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_27\n.BB0_28:\n\tld.1\t448, r1\n\tand\t@CPI0_5[0], r1, r1\n\tor\t10, r1, r1\n\tsstore\tr4, r1\n\tld.1\t480, r4\n\tsub.s!\t@CPI0_6[0], r4, r1\n\tjump.lt\t@.BB0_48\n.BB0_29:\n\tadd\t@CPI0_82[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_83[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_30:\n\tsub.s!\t@CPI0_37[0], r2, r3\n\tjump.le\t@.BB0_70\n\tsub.s!\t@CPI0_38[0], r2, r3\n\tjump.eq\t@.BB0_107\n\tsub.s!\t@CPI0_39[0], r2, r3\n\tjump.eq\t@.BB0_113\n\tsub.s!\t@CPI0_40[0], r2, r2\n\tjump.ne\t@.BB0_244\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_244\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.gt\t@.BB0_244\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tjump\t@.BB0_69\n.BB0_38:\n\tsub.s!\t@CPI0_24[0], r2, r3\n\tjump.le\t@.BB0_78\n\tsub.s!\t@CPI0_25[0], r2, r3\n\tjump.eq\t@.BB0_115\n\tsub.s!\t@CPI0_26[0], r2, r3\n\tjump.eq\t@.BB0_125\n\tsub.s!\t@CPI0_27[0], r2, r2\n\tjump.ne\t@.BB0_244\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_244\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_17[0], r6, r1\n\tjump.gt\t@.BB0_244\n\tadd\t9, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_17[0], r2, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_154\n\tsub!\tr6, r0, r3\n\tjump.ne\t@.BB0_196\n\tadd\t@CPI0_50[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t38, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_51[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_52[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_53[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_48:\n\tadd\t4, r0, r7\n\tsload\tr7, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_12\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_53\n\tadd\tr3, r0, stack-[5]\n\tadd\tr4, r0, stack-[6]\n\tst.1\t0, r7\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tadd\tstack-[6], r0, r4\n\tadd\t31, r4, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r4, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[5], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\t5, r0, r6\n\tadd\t4, r0, r7\n\tjump.ge\t@.BB0_53\n.BB0_52:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_52\n.BB0_53:\n\tsub.s!\t31, r4, r1\n\tjump.le\t@.BB0_151\n\tadd\tr4, r0, stack-[6]\n\tst.1\t0, r7\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tadd\tstack-[6], r0, r8\n\tand!\t@CPI0_93[0], r8, r2\n\tld\tr1, r1\n\tjump.ne\t@.BB0_155\n\tadd\t32, r0, r3\n\tadd\t5, r0, r6\n\tadd\t4, r0, r7\n\tjump\t@.BB0_157\n.BB0_57:\n\tsub.s!\t@CPI0_47[0], r2, r3\n\tjump.eq\t@.BB0_131\n\tsub.s!\t@CPI0_48[0], r2, r2\n\tjump.ne\t@.BB0_244\n\tsub.s!\t68, r1, r1\n\tjump.lt\t@.BB0_244\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_17[0], r2, r1\n\tjump.gt\t@.BB0_244\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tjump\t@.BB0_84\n.BB0_63:\n\tsub.s!\t@CPI0_34[0], r2, r3\n\tjump.eq\t@.BB0_136\n\tsub.s!\t@CPI0_35[0], r2, r2\n\tjump.ne\t@.BB0_244\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_244\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.gt\t@.BB0_244\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n.BB0_69:\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tjump\t@.BB0_130\n.BB0_70:\n\tsub.s!\t@CPI0_41[0], r2, r3\n\tjump.eq\t@.BB0_141\n\tsub.s!\t@CPI0_42[0], r2, r2\n\tjump.ne\t@.BB0_244\n\tsub.s!\t68, r1, r1\n\tjump.lt\t@.BB0_244\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.gt\t@.BB0_244\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32784, r0, r2\n\tptr.add\tr4, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tptr.add\tstack-[5], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tptr.add.s\t36, r3, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[5], r1, r3\n\tsub!\tr3, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t1, r1, r1\n\tjump.eq\t@.BB0_199\n\tjump\t@.BB0_226\n.BB0_78:\n\tsub.s!\t@CPI0_28[0], r2, r3\n\tjump.eq\t@.BB0_144\n\tsub.s!\t@CPI0_29[0], r2, r2\n\tjump.ne\t@.BB0_244\n\tsub.s!\t68, r1, r1\n\tjump.lt\t@.BB0_244\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_17[0], r2, r1\n\tjump.gt\t@.BB0_244\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n.BB0_84:\n\tadd\t1, r0, r1\n\tjump\t@.BB0_143\n.BB0_85:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tadd\t2, r0, r1\n\tjump\t@.BB0_87\n.BB0_88:\n\tsub.s!\t100, r1, r1\n\tjump.lt\t@.BB0_244\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.gt\t@.BB0_244\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.gt\t@.BB0_244\n\tptr.add.s\t68, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\t@CPI0_94[0], r1, r2\n\tjump.eq\t@.BB0_246\n\tadd\tstack-[4], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_245\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_91[0], r0, r3\n\tjump\t@.BB0_123\n.BB0_97:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tadd\t@CPI0_74[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t160, r0, r1\n\tst.2\t36, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_265\n\tld.1\t64, r7\n\tld\tr1, r1\n\tsub.s!\t255, r1, r2\n\tjump.ne\t@.BB0_182\n\tadd\t5, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r5\n\tshr.s\t1, r3, r2\n\tand\t127, r2, r1\n\tadd.ne\tr2, r0, r1\n\tsub.s!\t31, r1, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr3, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_12\n\tst.1.inc\tr7, r1, r2\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB0_213\n\tst.1\t0, r4\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_214\n\tadd\t@CPI0_79[0], r0, r4\n\tadd\tr0, r0, r3\n.BB0_104:\n\tadd\tr2, r3, r5\n\tsload\tr4, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r5\n\tjump.lt\t@.BB0_104\n\tjump\t@.BB0_214\n.BB0_105:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tadd\t9, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_17[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_54[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_107:\n\tsub.s!\t68, r1, r1\n\tjump.lt\t@.BB0_244\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.gt\t@.BB0_244\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r4\n\tadd\t9, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_17[0], r1, r2\n\tcontext.caller\tr3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB0_154\n\tsub!\tstack-[6], r0, r2\n\tjump.ne\t@.BB0_197\n\tadd\t@CPI0_50[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t31, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_86[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_113:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tadd\t9, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_84[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_54[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_115:\n\tsub.s!\t228, r1, r1\n\tjump.lt\t@.BB0_244\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.gt\t@.BB0_244\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.gt\t@.BB0_244\n\tptr.add.s\t100, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tptr.add.s\t68, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tptr.add.s\t132, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t255, r1, r1\n\tjump.gt\t@.BB0_244\n\tadd\t@CPI0_55[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_265\n\tld\tr1, r1\n\tsub.s!\tstack-[4], r1, r1\n\tjump.le\t@.BB0_236\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_69[0], r0, r3\n.BB0_123:\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n.BB0_124:\n\tst.1\tr2, r3\n\tadd\t@CPI0_50[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_64[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_125:\n\tsub.s!\t68, r1, r1\n\tjump.lt\t@.BB0_244\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.gt\t@.BB0_244\n\tptr.add.s\t36, r4, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\t@CPI0_17[0], r2, r2\n\tjump.gt\t@.BB0_244\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\t64, r0, r2\n.BB0_130:\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n.BB0_87:\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_54[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_131:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tadd\t3, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_12\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_185\n\tst.1\t0, r3\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_186\n.BB0_135:\n\tadd\t160, r0, r1\n\tjump\t@.BB0_194\n.BB0_136:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tadd\t9, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_17[0], r2, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_154\n\tand\t@CPI0_49[0], r2, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_18[0], r0, r4\n\tadd\tr0, r0, r6\n.BB0_139:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_244\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_141:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tnear_call\tr0, @fun_domainSeparatorV4, @DEFAULT_UNWIND\n.BB0_143:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_70[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_144:\n\tsub.s!\t68, r1, r1\n\tjump.lt\t@.BB0_244\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_244\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.gt\t@.BB0_244\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[5], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_225\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_71[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_72[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_50[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_68[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_151:\n\tsub!\tr4, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_153\n\tld.1\t512, r1\n.BB0_153:\n\tshl.s\t3, r4, r2\n\tshr\t@CPI0_94[0], r2, r2\n\txor\t@CPI0_94[0], r2, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_160\n.BB0_154:\n\tadd\t@CPI0_50[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_85[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_86[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_155:\n\tsub.s\t1, r2, r3\n\tshr.s\t5, r3, r3\n\tadd\tr1, r3, r4\n\tadd\t32, r0, r3\n\tadd\t1, r4, r4\n\tadd\t5, r0, r6\n\tadd\t4, r0, r7\n.BB0_156:\n\tadd\t480, r3, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r3, r3\n\tadd\t1, r1, r1\n\tsub!\tr1, r4, r5\n\tjump.ne\t@.BB0_156\n.BB0_157:\n\tsub!\tr2, r8, r2\n\tjump.ge\t@.BB0_159\n\tshl.s\t3, r8, r2\n\tand\t248, r2, r2\n\tshr\t@CPI0_94[0], r2, r2\n\txor\t@CPI0_94[0], r2, r2\n\tadd\t480, r3, r3\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB0_159:\n\tshl.s\t1, r8, r1\n\tor\t1, r1, r1\n.BB0_160:\n\tsstore\tr7, r1\n\tld.1\t352, r3\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_171\n\tsub.s!\t@CPI0_7[0], r3, r1\n\tjump.gt\t@.BB0_29\n\tsload\tr6, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r4\n\tadd.ne\tr2, r0, r4\n\tsub.s!\t31, r4, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_12\n\tadd\tr3, r0, stack-[6]\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB0_168\n\tadd\tr4, r0, stack-[5]\n\tst.1\t0, r6\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tld\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr2, r1, r1\n\tadd\tstack-[5], r0, r3\n\tadd\t31, r3, r3\n\tshr.s\t5, r3, r3\n\tadd\tr2, r3, r2\n\tsub!\tr1, r2, r3\n\tadd\t5, r0, r6\n\tjump.ge\t@.BB0_168\n.BB0_167:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_167\n.BB0_168:\n\tst.1\t0, r6\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tadd\tstack-[6], r0, r8\n\tand!\t@CPI0_93[0], r8, r2\n\tld\tr1, r1\n\tjump.ne\t@.BB0_228\n\tadd\t384, r0, r3\n\tadd\t5, r0, r7\n\tjump\t@.BB0_231\n.BB0_171:\n\tshl.s\t3, r3, r1\n\tsub\t256, r1, r1\n\tshl\t@CPI0_94[0], r1, r1\n\tsub!\tr3, r0, r2\n\tadd.eq\tr0, r0, r1\n\tld.1\t384, r2\n\tand\tr2, r1, r1\n\tor\tr1, r3, r1\n.BB0_172:\n\tst.1\t288, r1\n\tld.1\t544, r1\n\tsub.s!\t32, r1, r2\n\tjump.lt\t@.BB0_181\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.gt\t@.BB0_29\n\tadd\t6, r0, r2\n\tsload\tr2, r4\n\tand!\t1, r4, r3\n\tshr.s\t1, r4, r5\n\tand\t127, r5, r3\n\tadd.ne\tr5, r0, r3\n\tsub.s!\t31, r3, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr4, r5, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_12\n\tsub.s!\t32, r3, r4\n\tjump.lt\t@.BB0_179\n\tadd\t31, r3, r3\n\tshr.s\t5, r3, r5\n\tadd\t@CPI0_8[0], r5, r3\n\tadd\t31, r1, r4\n\tshr.s\t5, r4, r4\n\tsub!\tr4, r5, r5\n\tjump.ge\t@.BB0_179\n\tadd\t@CPI0_8[0], r4, r4\n.BB0_178:\n\tsstore\tr4, r0\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_178\n.BB0_179:\n\tst.1\t0, r2\n\tand!\t@CPI0_93[0], r1, r4\n\tjump.ne\t@.BB0_200\n\tadd\t576, r0, r5\n\tadd\t@CPI0_8[0], r0, r3\n\tjump\t@.BB0_203\n.BB0_181:\n\tshl.s\t3, r1, r2\n\tsub\t256, r2, r2\n\tshl\t@CPI0_94[0], r2, r2\n\tsub!\tr1, r0, r3\n\tadd.eq\tr0, r0, r2\n\tld.1\t576, r3\n\tand\tr3, r2, r2\n\tor\tr2, r1, r1\n\tjump\t@.BB0_206\n.BB0_182:\n\tand\t255, r1, r2\n\tsub.s!\t32, r2, r3\n\tjump.lt\t@.BB0_189\n\tadd\t@CPI0_77[0], r0, r1\n\tst.1\tr7, r1\n\tsub.s!\t@CPI0_0[0], r7, r1\n\tadd.ge\t@CPI0_0[0], r0, r7\n\tshl.s\t64, r7, r1\n\tor\t@CPI0_78[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_184:\n.BB0_185:\n\tand\t@CPI0_95[0], r2, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_194\n.BB0_186:\n\tadd\t@CPI0_92[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_187:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_187\n\tjump\t@.BB0_193\n.BB0_189:\n\tsub.s!\t@CPI0_76[0], r7, r3\n\tjump.gt\t@.BB0_29\n\tadd\t64, r7, r3\n\tst.1\t64, r3\n\tadd\t32, r7, r3\n\tst.1\tr3, r1\n\tadd\tr7, r0, stack-[6]\n\tst.1\tr7, r2\n\tjump\t@.BB0_217\n.BB0_191:\n\tadd\t@CPI0_73[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_192:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_192\n.BB0_193:\n\tadd\t192, r3, r1\n.BB0_194:\n\tsub.s\t128, r1, r2\n\tadd\t128, r0, r1\n\tnear_call\tr0, @finalize_allocation.1, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[6]\n\tst.1.inc\tr2, r1, r2\n\tadd\t128, r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n.BB0_195:\n\tadd\tstack-[6], r0, r3\n\tsub\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_196:\n\tand\t@CPI0_49[0], r2, r2\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_18[0], r0, r4\n\tjump\t@.BB0_139\n.BB0_197:\n\tand!\t@CPI0_84[0], r1, r1\n\tjump.ne\t@.BB0_227\n\tadd\t2, r0, r1\n\tsload\tr1, r3\n\tadd\tr3, r4, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.eq\t@.BB0_242\n.BB0_199:\n\tadd\t@CPI0_82[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_83[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_200:\n\tadd\t@CPI0_8[0], r0, r3\n\tadd\t32, r0, r6\n\tsub.s\t1, r4, r5\n\tshr.s\t5, r5, r5\n\tadd\t@CPI0_9[0], r5, r5\n.BB0_201:\n\tadd\tr6, r0, r7\n\tadd\t544, r7, r6\n\tld.1\tr6, r6\n\tsstore\tr3, r6\n\tadd\t32, r7, r6\n\tadd\t1, r3, r3\n\tsub!\tr3, r5, r8\n\tjump.ne\t@.BB0_201\n\tadd\t576, r7, r5\n.BB0_203:\n\tsub!\tr4, r1, r4\n\tjump.ge\t@.BB0_205\n\tshl.s\t3, r1, r4\n\tand\t248, r4, r4\n\tshr\t@CPI0_94[0], r4, r4\n\txor\t@CPI0_94[0], r4, r4\n\tld.1\tr5, r5\n\tand\tr5, r4, r4\n\tsstore\tr3, r4\n.BB0_205:\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tsstore\tr2, r1\n\tadd\t255, r0, r1\n.BB0_206:\n\tst.1\t320, r1\n\tld.1\t352, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t224, r1\n\tld.1\t544, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t256, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_265\n\tld\tr1, r2\n\tst.1\t160, r2\n\tld.1\t64, r1\n\tadd\t128, r1, r3\n\tst.1\tr3, r2\n\tadd\t96, r1, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\tstack-[6], r0, r3\n\tst.1\tr2, r3\n\tadd\t160, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\t160, r1, r3\n\tcontext.this\tr4\n\tst.1\tr3, r4\n\tadd\t@CPI0_14[0], r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_15[0], r1, r3\n\tjump.gt\t@.BB0_29\n\tadd\t192, r1, r3\n\tst.1\t64, r3\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tld\tr1, r1\n\tst.1\t128, r1\n\tcontext.this\tr1\n\tst.1\t192, r1\n\tadd\t9, r0, r1\n\tsload\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\tr3, r0, stack-[6]\n\tand\t@CPI0_17[0], r3, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tcontext.caller\tr6\n\tadd\t@CPI0_18[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_244\n\tadd\tstack-[6], r0, r1\n\tand\t@CPI0_19[0], r1, r1\n\tcontext.caller\tr2\n\tand\t@CPI0_20[0], r2, r2\n\tor\tr2, r1, r1\n\tadd\t9, r0, r2\n\tsstore\tr2, r1\n\tld.1\t128, r1\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tld.1\t160, r2\n\tst.2\t384, r1\n\tst.2\t416, r2\n\tadd\t64, r0, r2\n\tld.1\t192, r3\n\tst.2\t448, r2\n\tst.2\t480, r3\n\tadd\t96, r0, r2\n\tld.1\t224, r3\n\tst.2\t512, r2\n\tst.2\t544, r3\n\tadd\t128, r0, r2\n\tld.1\t256, r3\n\tst.2\t576, r2\n\tst.2\t608, r3\n\tld.1\t288, r2\n\tadd\t160, r0, r3\n\tst.2\t640, r3\n\tst.2\t672, r2\n\tadd\t192, r0, r2\n\tld.1\t320, r3\n\tst.2\t704, r2\n\tst.2\t736, r3\n\tst.2\t256, r1\n\tadd\t7, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_21[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_213:\n\tand\t@CPI0_95[0], r3, r3\n\tst.1\tr2, r3\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r3\n\tadd.eq\t0, r0, r3\n.BB0_214:\n\tadd\t63, r3, r1\n\tand\t@CPI0_93[0], r1, r2\n\tadd\tr2, r7, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_7[0], r1, r3\n\tjump.gt\t@.BB0_29\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_29\n\tadd\tr7, r0, stack-[6]\n\tst.1\t64, r1\n.BB0_217:\n\tcontext.code_source\tr2\n\tadd\t@CPI0_74[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r2\n\tadd\t192, r0, r1\n\tst.2\t36, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_265\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsub.s!\t255, r1, r3\n\tjump.ne\t@.BB0_234\n\tadd\t6, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r3\n\tand\t127, r3, r1\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr4, r3, r3\n\tand!\t1, r3, r3\n\tadd\tstack-[6], r0, r8\n\tjump.ne\t@.BB0_12\n\tst.1.inc\tr2, r1, r3\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB0_250\n\tst.1\t0, r5\n\tsub!\tr1, r0, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB0_251\n\tadd\t@CPI0_8[0], r0, r5\n\tadd\tr0, r0, r4\n.BB0_224:\n\tadd\tr3, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r6\n\tjump.lt\t@.BB0_224\n\tjump\t@.BB0_251\n.BB0_225:\n\tsub\tr1, r3, r3\n.BB0_226:\n\tcontext.caller\tr1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tjump\t@.BB0_247\n.BB0_227:\n\tadd\t@CPI0_50[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t42, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_87[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_88[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_53[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_228:\n\tsub.s\t1, r2, r3\n\tshr.s\t5, r3, r3\n\tadd\tr1, r3, r3\n\tadd\t32, r0, r4\n\tadd\t1, r3, r3\n\tadd\t5, r0, r7\n.BB0_229:\n\tadd\tr4, r0, r5\n\tadd\t352, r5, r4\n\tld.1\tr4, r4\n\tsstore\tr1, r4\n\tadd\t32, r5, r4\n\tadd\t1, r1, r1\n\tsub!\tr1, r3, r6\n\tjump.ne\t@.BB0_229\n\tadd\t384, r5, r3\n.BB0_231:\n\tsub!\tr2, r8, r2\n\tjump.ge\t@.BB0_233\n\tshl.s\t3, r8, r2\n\tand\t248, r2, r2\n\tshr\t@CPI0_94[0], r2, r2\n\txor\t@CPI0_94[0], r2, r2\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB0_233:\n\tshl.s\t1, r8, r1\n\tor\t1, r1, r1\n\tsstore\tr7, r1\n\tadd\t255, r0, r1\n\tjump\t@.BB0_172\n.BB0_234:\n\tand\t255, r1, r3\n\tsub.s!\t32, r3, r4\n\tjump.lt\t@.BB0_248\n\tadd\t@CPI0_77[0], r0, r1\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_78[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_236:\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r3\n\tsstore\tr1, r3\n\tld.1\t64, r1\n\tadd\t192, r1, r3\n\tadd\tstack-[4], r0, r4\n\tst.1\tr3, r4\n\tadd\t160, r1, r3\n\tst.1\tr3, r2\n\tadd\t128, r1, r2\n\tadd\tstack-[3], r0, r3\n\tst.1\tr2, r3\n\tadd\t96, r1, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\tstack-[6], r0, r3\n\tst.1\tr2, r3\n\tadd\t192, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\t@CPI0_57[0], r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_58[0], r1, r3\n\tjump.gt\t@.BB0_29\n\tadd\t224, r1, r3\n\tst.1\t64, r3\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tnear_call\tr0, @fun_domainSeparatorV4, @DEFAULT_UNWIND\n\tadd\t@CPI0_59[0], r0, r2\n\tld.1\t64, r3\n\tst.1\tr3, r2\n\tadd\t2, r3, r2\n\tst.1\tr2, r1\n\tadd\t34, r3, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t196, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[4]\n\tptr.add.s\t164, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_60[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tld.1\t64, r2\n\tadd\tstack-[4], r0, r3\n\tsub.s!\t@CPI0_61[0], r3, r3\n\tjump.le\t@.BB0_266\n\tadd\t100, r2, r1\n\tadd\t@CPI0_66[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t68, r2, r1\n\tadd\t@CPI0_67[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r1\n\tadd\t34, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_50[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_68[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_242:\n\tadd\tr4, r0, stack-[5]\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_89[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[6], r0, r6\n\tjump\t@.BB0_139\n.BB0_244:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_245:\n\tsub\tr1, r3, r3\n\tadd\tstack-[6], r0, r1\n\tcontext.caller\tr2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n.BB0_246:\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[4], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n.BB0_247:\n\tld.1\t64, r1\n\tadd\t1, r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_70[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_248:\n\tsub.s!\t@CPI0_76[0], r2, r4\n\tadd\tstack-[6], r0, r8\n\tjump.gt\t@.BB0_29\n\tadd\t64, r2, r4\n\tst.1\t64, r4\n\tadd\t32, r2, r4\n\tst.1\tr4, r1\n\tst.1\tr2, r3\n\tld.1\t64, r4\n\tjump\t@.BB0_254\n.BB0_250:\n\tand\t@CPI0_95[0], r4, r4\n\tst.1\tr3, r4\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n.BB0_251:\n\tadd\t63, r4, r1\n\tand\t@CPI0_93[0], r1, r1\n\tadd\tr1, r2, r4\n\tsub!\tr4, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_7[0], r4, r3\n\tjump.gt\t@.BB0_29\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_29\n\tst.1\t64, r4\n.BB0_254:\n\tsub.s!\t@CPI0_80[0], r4, r1\n\tjump.gt\t@.BB0_29\n\tadd\t32, r4, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t64, r1\n\tadd\tr4, r0, stack-[5]\n\tst.1\tr4, r0\n\tld.1\t64, r5\n\tadd\t32, r5, r1\n\tadd\t224, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_81[0], r0, r1\n\tst.1\tr5, r1\n\tld.1.inc\tr8, r1, r4\n\tadd\t224, r5, r3\n\tst.1\tr3, r1\n\tadd\tr5, r0, stack-[6]\n\tadd\t256, r5, r3\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_258\n\tadd\tr0, r0, r5\n.BB0_257:\n\tadd\tr5, r3, r6\n\tadd\tr4, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_257\n.BB0_258:\n\tadd\tr3, r1, r4\n\tst.1\tr4, r0\n\tadd\t31, r1, r1\n\tand\t@CPI0_93[0], r1, r1\n\tadd\tr3, r1, r3\n\tadd\tstack-[6], r0, r4\n\tsub\tr3, r4, r1\n\tadd\t64, r4, r4\n\tst.1\tr4, r1\n\tld.1.inc\tr2, r6, r1\n\tst.1.inc\tr3, r6, r5\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB0_261\n\tadd\tr0, r0, r2\n.BB0_260:\n\tadd\tr2, r5, r3\n\tadd\tr1, r2, r4\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd\t32, r2, r2\n\tsub!\tr2, r6, r3\n\tjump.lt\t@.BB0_260\n.BB0_261:\n\tadd\tr5, r0, stack-[4]\n\tadd\tr6, r0, stack-[3]\n\tadd\tr5, r6, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_12[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_265\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r4\n\tadd\t128, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t96, r4, r2\n\tst.1\tr2, r1\n\tadd\tstack-[3], r0, r1\n\tadd\t31, r1, r1\n\tand\t@CPI0_93[0], r1, r1\n\tadd\tstack-[4], r1, r1\n\tsub\tr1, r4, r2\n\tadd\t192, r4, r3\n\tst.1\tr3, r2\n\tadd\t160, r4, r2\n\tst.1\tr2, r0\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r2\n\tst.1.inc\tr1, r2, r1\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_195\n\tadd\tr0, r0, r3\n\tadd\tstack-[2], r0, r5\n.BB0_264:\n\tld.1.inc\tr5, r4, r5\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_264\n\tjump\t@.BB0_195\n.BB0_265:\n\trevert\n.BB0_266:\n\tld\tr1, r1\n\tadd\t96, r2, r3\n\tadd\tstack-[4], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r2, r3\n\tadd\tstack-[1], r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r2, r3\n\tadd\tstack-[2], r0, r4\n\tst.1\tr3, r4\n\tst.1\tr2, r1\n\tst.1\t0, r0\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_269\n\tptr.add\tr1, r0, r6\n\tadd\tr0, r0, r7\n.BB0_268:\n\tld.inc\tr6, r8, r6\n\tsub!\tr7, r0, r9\n\tst.1.inc\tr7, r8, r7\n\tjump.ne\t@.BB0_268\n.BB0_269:\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_271\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB0_271:\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_274\n\tld.1\t0, r1\n\tand!\t@CPI0_17[0], r1, r1\n\tjump.ne\t@.BB0_280\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_65[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tjump\t@.BB0_124\n.BB0_274:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_277\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_276:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_276\n.BB0_277:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_279\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_279:\n\tshl.s\t96, r3, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_280:\n\tsub.s!\tstack-[6], r1, r1\n\tjump.ne\t@.BB0_282\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[3], r0, r3\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_282:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_63[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t30, r0, r3\n\tjump\t@.BB0_124\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tld.1.inc\tr1, r3, r4\n\tst.1.inc\tr2, r3, r1\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r2\n.BB1_2:\n\tadd\tr1, r2, r5\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r2, r2\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tand\t@CPI1_0[0], r2, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\nfinalize_allocation.1:\n.func_begin2:\n\tadd\t31, r2, r2\n\tand\t@CPI2_3[0], r2, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r3\n\tjump.gt\t@.BB2_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_2\n\tst.1\t64, r1\n\tret\n.BB2_2:\n\tadd\t@CPI2_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_approve:\n.func_begin3:\n\tnop\tstack+=[3 + r0]\n\tand!\t@CPI3_0[0], r1, r1\n\tjump.eq\t@.BB3_1\n\tadd\tr3, r0, stack-[2]\n\tand!\t@CPI3_0[0], r2, stack-[3]\n\tjump.eq\t@.BB3_4\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\t@CPI3_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\t@CPI3_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\t@CPI3_1[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_1[0], r2, r3\n\tadd.ge\t@CPI3_1[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI3_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_6\n\tret\n.BB3_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tjump\t@.BB3_2\n.BB3_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n.BB3_2:\n\tst.1\tr2, r3\n\tadd\t@CPI3_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\t@CPI3_1[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfun_transfer:\n.func_begin4:\n\tnop\tstack+=[4 + r0]\n\tadd\tr3, r0, stack-[4]\n\tand!\t@CPI4_0[0], r1, r3\n\tjump.eq\t@.BB4_1\n\tand!\t@CPI4_0[0], r2, stack-[3]\n\tjump.eq\t@.BB4_4\n\tadd\t9, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI4_1[0], r1, r1\n\tjump.ne\t@.BB4_6\n\tadd\tr3, r0, stack-[2]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_5[0], r1, r2\n\tadd.ge\t@CPI4_5[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_8\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[1]\n\tsub.s!\tstack-[4], r2, r1\n\tjump.lt\t@.BB4_10\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_5[0], r1, r2\n\tadd.ge\t@CPI4_5[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_8\n\tadd\tstack-[1], r0, r3\n\tsub.s\tstack-[4], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_5[0], r1, r2\n\tadd.ge\t@CPI4_5[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_8\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[4], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tsub.s!\t@CPI4_5[0], r1, r2\n\tadd.ge\t@CPI4_5[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_5[0], r2, r3\n\tadd.ge\t@CPI4_5[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI4_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI4_9[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB4_8\n\tret\n.BB4_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI4_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI4_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB4_2\n.BB4_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI4_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI4_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tjump\t@.BB4_2\n.BB4_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI4_2[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI4_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tjump\t@.BB4_2\n.BB4_10:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI4_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI4_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n.BB4_2:\n\tst.1\tr2, r3\n\tadd\t@CPI4_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI4_5[0], r1, r2\n\tadd.ge\t@CPI4_5[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI4_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfun_domainSeparatorV4:\n.func_begin5:\n\tnop\tstack+=[2 + r0]\n\tadd\t@CPI5_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t64, r0, r1\n\tst.2\t36, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tadd.ge\t@CPI5_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tand\t@CPI5_3[0], r1, r1\n\tcontext.this\tr2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB5_6\n\tadd\t@CPI5_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tadd.ge\t@CPI5_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI5_4[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tadd.ge\t@CPI5_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsub.s!\tstack-[2], r1, r1\n\tjump.ne\t@.BB5_6\n\tadd\t@CPI5_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tadd.ge\t@CPI5_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tret\n.BB5_6:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t32, r1, r2\n\tadd\t@CPI5_6[0], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tadd\t@CPI5_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t96, r0, r1\n\tst.2\t36, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tadd.ge\t@CPI5_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tadd\t64, r2, r2\n\tst.1\tr2, r1\n\tadd\t@CPI5_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t128, r0, r1\n\tst.2\t36, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tadd.ge\t@CPI5_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tadd\t96, r2, r2\n\tst.1\tr2, r1\n\tadd\t@CPI5_4[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tadd.ge\t@CPI5_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r4\n\tadd\t160, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t128, r4, r2\n\tst.1\tr2, r1\n\tadd\t160, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI5_7[0], r4, r1\n\tjump.ge\t@.BB5_10\n\tadd\tstack-[2], r0, r2\n\tadd\t192, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[1], r0, r3\n\tsub.s!\t@CPI5_1[0], r3, r1\n\tadd.ge\t@CPI5_1[0], r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.ge\t@CPI5_1[0], r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.ge\t@CPI5_1[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI5_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_13\n\tld\tr1, r1\n\tret\n.BB5_1:\n\trevert\n.BB5_10:\n\tadd\t@CPI5_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_13:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\n__cxa_throw:\n.func_begin6:\n\trevert\n.func_end6:\n\n__sha3:\n.func_begin7:\n\tsub.s!\t@CPI7_0[0], r1, r3\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\t@CPI7_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\t@CPI7_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_2\n\tld\tr1, r1\n\tret\n.BB7_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\n__farcall:\n.func_begin8:\n.tmp0:\n\tfar_call\tr1, r2, @.BB8_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB8_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end8:\n\n__staticcall:\n.func_begin9:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB9_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end9:\n\n\t.data\n\t.p2align\t5, 0x0\nptr_calldata:\n\t.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI3_1:\nCPI4_5:\nCPI5_1:\nCPI7_0:\n\t.cell\t4294967295\nCPI0_1:\n\t.cell\t34962908054049718777769710855658129199179542537874577233461646188067816472576\nCPI0_2:\n\t.cell\t35007289287198014240185224080662228177221555497367124215075288859301791137792\nCPI0_3:\n\t.cell\t22163329580580053030292883849319169862539958002407764210677428189014622470144\nCPI0_4:\nCPI3_3:\nCPI4_8:\n\t.cell\t904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_5:\n\t.cell\t-105312291668557186697918027683670432318895095400549111254310977536\nCPI0_6:\n\t.cell\t18446744073709551616\nCPI0_7:\nCPI2_0:\n\t.cell\t18446744073709551615\nCPI0_8:\n\t.cell\t-4378011421452794913566920378714311891690811000051339835953921858539404653249\nCPI0_9:\n\t.cell\t-4378011421452794913566920378714311891690811000051339835953921858539404653248\nCPI0_10:\n\t.cell\t904625697166532776746648320380374280103671755200316913641812099366289145856\nCPI0_11:\n\t.cell\t904625697166532776746648320380374280103671755200316917183586961518523056128\nCPI0_12:\nCPI5_4:\n\t.cell\t-45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI0_13:\nCPI5_5:\n\t.cell\t904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_14:\nCPI5_6:\n\t.cell\t-52716064676786082020591434766380454285206545917311776621925683646084292198385\nCPI0_15:\n\t.cell\t18446744073709551423\nCPI0_16:\nCPI5_8:\nCPI7_1:\n\t.cell\t904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_17:\nCPI3_0:\nCPI4_0:\nCPI5_3:\n\t.cell\t1461501637330902918203684832716283019655932542975\nCPI0_18:\n\t.cell\t-52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_19:\n\t.cell\t-374144419156711147060143317175368453031918731001856\nCPI0_20:\n\t.cell\t-372682917519380244141939632342652170012262798458881\nCPI0_21:\n\t.cell\t53919893334301279589334030174039261387839108057106852292971368284160\nCPI0_22:\n\t.cell\t1901074597\nCPI0_23:\n\t.cell\t2757214934\nCPI0_24:\n\t.cell\t3573918926\nCPI0_25:\n\t.cell\t3573918927\nCPI0_26:\n\t.cell\t3714247998\nCPI0_27:\n\t.cell\t4076725131\nCPI0_28:\n\t.cell\t2757214935\nCPI0_29:\n\t.cell\t2835717307\nCPI0_30:\n\t.cell\t2226133357\nCPI0_31:\n\t.cell\t2226133358\nCPI0_32:\n\t.cell\t2376452955\nCPI0_33:\n\t.cell\t2514000705\nCPI0_34:\n\t.cell\t1901074598\nCPI0_35:\n\t.cell\t2127478272\nCPI0_36:\n\t.cell\t910484756\nCPI0_37:\n\t.cell\t1086394136\nCPI0_38:\n\t.cell\t1086394137\nCPI0_39:\n\t.cell\t1553423035\nCPI0_40:\n\t.cell\t1889567281\nCPI0_41:\n\t.cell\t910484757\nCPI0_42:\n\t.cell\t961581905\nCPI0_43:\n\t.cell\t404098524\nCPI0_44:\n\t.cell\t404098525\nCPI0_45:\n\t.cell\t599290589\nCPI0_46:\n\t.cell\t826074471\nCPI0_47:\n\t.cell\t117300739\nCPI0_48:\n\t.cell\t157198259\nCPI0_49:\n\t.cell\t-1461501637330902918203684832716283019655932542976\nCPI0_50:\nCPI3_7:\nCPI4_4:\n\t.cell\t3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_51:\n\t.cell\t35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_52:\n\t.cell\t45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_53:\n\t.cell\t10458117454244075803782624051200\nCPI0_54:\n\t.cell\t2535301202817642044428229017600\nCPI0_55:\n\t.cell\t54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_56:\nCPI3_2:\nCPI4_7:\n\t.cell\t904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_57:\n\t.cell\t49955707469362902507454157297736832118868343942642399513960811609542965143241\nCPI0_58:\n\t.cell\t18446744073709551391\nCPI0_59:\n\t.cell\t11309588061646438093662687302255421419811724423900836950936401294474059186176\nCPI0_60:\n\t.cell\t904625697166532776746648320380374280103671760429375632499708656235722047488\nCPI0_61:\n\t.cell\t57896044618658097711785492504343953926418782139537452191302581570759080747168\nCPI0_62:\n\t.cell\t10141204801825835211973625643008\nCPI0_63:\n\t.cell\t31354931781647839748342955095581759035321866096511779761259990203233892368384\nCPI0_64:\n\t.cell\t7922816251426433759354395033600\nCPI0_65:\n\t.cell\t31328436868881898538041100389690153948709681386377410647824661301558666854400\nCPI0_66:\n\t.cell\t53099054837784784256966839789826930156163373552802976548428631167447102128128\nCPI0_67:\n\t.cell\t31328436868881898538041100389690153948709681386377410647826978248703857811820\nCPI0_68:\nCPI3_8:\nCPI4_6:\n\t.cell\t10458117451882892562347801444352\nCPI0_69:\n\t.cell\t31354931781647839748342955095581670701432901986713823272299808826996081819648\nCPI0_70:\n\t.cell\t2535301200456458802993406410752\nCPI0_71:\n\t.cell\t14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI0_72:\n\t.cell\t31354931781638678506476475496475743842680577777870365728514456330491174612855\nCPI0_73:\n\t.cell\t-53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI0_74:\nCPI5_0:\n\t.cell\t22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_75:\nCPI5_2:\n\t.cell\t904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_76:\n\t.cell\t18446744073709551551\nCPI0_77:\n\t.cell\t-34684677630052190773999176006577974427879312898233739369776509575790472462336\nCPI0_78:\n\t.cell\t316912650057057350374175801344\nCPI0_79:\n\t.cell\t1546678032441257452667456735582814959992782782816731922691272282333561699760\nCPI0_80:\n\t.cell\t18446744073709551583\nCPI0_81:\n\t.cell\t6784692728748995825599862402852807100777538164002376799186967812963659939840\nCPI0_82:\nCPI2_1:\nCPI5_9:\n\t.cell\t35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_83:\nCPI2_2:\nCPI5_10:\n\t.cell\t2852213850513516153367582212096\nCPI0_84:\nCPI4_1:\n\t.cell\t372682917519380244141939632342652170012262798458880\nCPI0_85:\n\t.cell\t35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_86:\n\t.cell\t7922816253787617000789217640448\nCPI0_87:\nCPI4_3:\n\t.cell\t31354931781647833339568429928801794023440836466231850061436432167717780354920\nCPI0_88:\nCPI4_2:\n\t.cell\t47684366535173424371054450208925749223751534746436819224376061984004435345408\nCPI0_89:\nCPI4_9:\n\t.cell\t-15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_90:\n\t.cell\t31354931781638678563069525067809233856775101976563302031013534919694566519552\nCPI0_91:\n\t.cell\t31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI0_92:\n\t.cell\t-27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI0_93:\nCPI1_0:\nCPI2_3:\n\t.cell\t-32\nCPI0_94:\n\t.cell\t-1\nCPI0_95:\n\t.cell\t-256\nCPI3_4:\n\t.cell\t-52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI3_5:\n\t.cell\t52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI3_6:\n\t.cell\t31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI3_9:\n\t.cell\t51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI3_10:\n\t.cell\t31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI4_10:\n\t.cell\t44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI4_11:\n\t.cell\t31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI4_12:\n\t.cell\t45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI4_13:\n\t.cell\t31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI4_14:\n\t.cell\t45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI4_15:\n\t.cell\t31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI5_7:\n\t.cell\t18446744073709551424\n","bytecode":{"object":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","eip712Domain()":"84b0196e","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 4:\"@openzeppelin/contracts/interfaces/IERC5267.sol\", 11:\"@openzeppelin/contracts/security/Pausable.sol\", 12:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 13:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 14:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\", 15:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\", 16:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 17:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\", 24:\"@openzeppelin/contracts/utils/Context.sol\", 26:\"@openzeppelin/contracts/utils/ShortStrings.sol\", 27:\"@openzeppelin/contracts/utils/StorageSlot.sol\", 30:\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\", 38:\"contracts/MelonToken.sol\"\nobject \"MelonToken_7003\" {\n    code {\n        {\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            let _1 := memoryguard(0x0160)\n            let _2 := 64\n            mstore(_2, _1)\n            if callvalue() { revert(0, 0) }\n            finalize_allocation(_1)\n            let _3 := 3\n            mstore(_1, _3)\n            let _4 := 32\n            let _5 := add(_1, _4)\n            let _6 := \"MLN\"\n            mstore(_5, _6)\n            let memPtr := mload(_2)\n            finalize_allocation(memPtr)\n            mstore(memPtr, 5)\n            mstore(add(memPtr, _4), \"Melon\")\n            let memPtr_1 := mload(_2)\n            finalize_allocation(memPtr_1)\n            mstore(memPtr_1, _3)\n            mstore(add(memPtr_1, _4), _6)\n            let memPtr_2 := mload(_2)\n            finalize_allocation(memPtr_2)\n            let _7 := 1\n            mstore(memPtr_2, _7)\n            let _8 := add(memPtr_2, _4)\n            mstore(_8, \"1\")\n            let newLen := mload(memPtr)\n            let _9 := sub(shl(64, 1), 1)\n            if gt(newLen, _9)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x24)\n            }\n            let _10 := sload(_3)\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            length := shr(_7, _10)\n            let outOfPlaceEncoding := and(_10, _7)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _4))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x24)\n            }\n            let _11 := 31\n            if gt(length, _11)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _3)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _4)\n                let deleteStart := add(data, shr(5, add(newLen, _11)))\n                if lt(newLen, _4) { deleteStart := data }\n                let _12 := add(data, shr(5, add(length, _11)))\n                let start := deleteStart\n                for { } lt(start, _12) { start := add(start, _7) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            srcOffset := _4\n            switch gt(newLen, _11)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _3)\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _4)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                for { } lt(i, loopEnd) { i := add(i, _4) }\n                {\n                    sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                    dstPtr := add(dstPtr, _7)\n                    srcOffset := add(srcOffset, _4)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(memPtr, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(_3, newLen), 248), not(0)))))\n                }\n                sstore(_3, add(shl(_7, newLen), _7))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                if newLen\n                {\n                    value := mload(add(memPtr, srcOffset))\n                }\n                sstore(_3, or(and(value, not(shr(shl(_3, newLen), not(0)))), shl(_7, newLen)))\n            }\n            let newLen_1 := mload(memPtr_1)\n            if gt(newLen_1, _9)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 12:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x24)\n            }\n            /// @src 12:2069:2086  \"_symbol = symbol_\"\n            let _13 := 0x04\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            let _14 := sload(/** @src 12:2069:2086  \"_symbol = symbol_\" */ _13)\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            length_1 := shr(_7, _14)\n            let outOfPlaceEncoding_1 := and(_14, _7)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _4))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 12:2069:2086  \"_symbol = symbol_\" */ _13, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x24)\n            }\n            if gt(length_1, _11)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:2069:2086  \"_symbol = symbol_\" */ _13)\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _4)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _11)))\n                if lt(newLen_1, _4) { deleteStart_1 := data_1 }\n                let _15 := add(data_1, shr(5, add(length_1, _11)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _15) { start_1 := add(start_1, _7) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            srcOffset_1 := _4\n            switch gt(newLen_1, _11)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:2069:2086  \"_symbol = symbol_\" */ _13)\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _4)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _4) }\n                {\n                    sstore(dstPtr_1, mload(add(memPtr_1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _7)\n                    srcOffset_1 := add(srcOffset_1, _4)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(memPtr_1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(_3, newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 12:2069:2086  \"_symbol = symbol_\" */ _13, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ add(shl(_7, newLen_1), _7))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(memPtr_1, srcOffset_1))\n                }\n                sstore(/** @src 12:2069:2086  \"_symbol = symbol_\" */ _13, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ or(and(value_1, not(shr(shl(_3, newLen_1), not(0)))), shl(_7, newLen_1)))\n            }\n            /// @src 30:3251:3296  \"name.toShortStringWithFallback(_nameFallback)\"\n            let _16 := fun_toShortStringWithFallback(_1)\n            /// @src 30:3243:3296  \"_name = name.toShortStringWithFallback(_nameFallback)\"\n            let _17 := 288\n            mstore(_17, /** @src 30:3251:3296  \"name.toShortStringWithFallback(_nameFallback)\" */ _16)\n            /// @src 30:3317:3368  \"version.toShortStringWithFallback(_versionFallback)\"\n            let _18 := fun_toShortStringWithFallback_7934(memPtr_2)\n            /// @src 30:3306:3368  \"_version = version.toShortStringWithFallback(_versionFallback)\"\n            let _19 := 320\n            mstore(_19, /** @src 30:3317:3368  \"version.toShortStringWithFallback(_versionFallback)\" */ _18)\n            /// @src 30:3392:3414  \"keccak256(bytes(name))\"\n            let _20 := keccak256(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _5, mload(/** @src 30:3392:3414  \"keccak256(bytes(name))\" */ _1))\n            /// @src 30:3378:3414  \"_hashedName = keccak256(bytes(name))\"\n            mstore(224, /** @src 30:3392:3414  \"keccak256(bytes(name))\" */ _20)\n            /// @src 30:3441:3466  \"keccak256(bytes(version))\"\n            let _21 := keccak256(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _8, mload(/** @src 30:3441:3466  \"keccak256(bytes(version))\" */ memPtr_2))\n            /// @src 30:3424:3466  \"_hashedVersion = keccak256(bytes(version))\"\n            let _22 := 256\n            mstore(_22, /** @src 30:3441:3466  \"keccak256(bytes(version))\" */ _21)\n            /// @src 30:3477:3507  \"_cachedChainId = block.chainid\"\n            mstore(160, /** @src 30:3494:3507  \"block.chainid\" */ chainid())\n            /// @src 30:4054:4135  \"abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n            let expr_mpos := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(_2)\n            /// @src 30:4054:4135  \"abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n            let _23 := add(expr_mpos, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _4)\n            /// @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n            mstore(_23, 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n            mstore(add(/** @src 30:4054:4135  \"abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _2), /** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ _20)\n            mstore(add(/** @src 30:4054:4135  \"abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), _21)\n            mstore(add(/** @src 30:4054:4135  \"abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 30:3494:3507  \"block.chainid\" */ chainid())\n            /// @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n            mstore(add(/** @src 30:4054:4135  \"abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 30:3477:3507  \"_cachedChainId = block.chainid\" */ 160), /** @src 30:4129:4133  \"this\" */ address())\n            /// @src 30:4054:4135  \"abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n            mstore(expr_mpos, /** @src 30:3477:3507  \"_cachedChainId = block.chainid\" */ 160)\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            let newFreePtr := add(expr_mpos, /** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            if or(gt(newFreePtr, _9), lt(newFreePtr, expr_mpos))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 12:2069:2086  \"_symbol = symbol_\" */ _13, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x24)\n            }\n            mstore(_2, newFreePtr)\n            /// @src 30:3517:3565  \"_cachedDomainSeparator = _buildDomainSeparator()\"\n            mstore(/** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128, /** @src 30:4044:4136  \"keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _23, mload(/** @src 30:4044:4136  \"keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos)))\n            /// @src 30:3575:3602  \"_cachedThis = address(this)\"\n            mstore(/** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192, /** @src 30:4129:4133  \"this\" */ address())\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            let _24 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x09)\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ and(_24, sub(shl(160, 1), 1)), /** @src 24:734:744  \"msg.sender\" */ caller())\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            sstore(/** @src 0:2518:2524  \"_owner\" */ 0x09, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ or(and(_24, not(sub(shl(168, 1), 1))), and(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ not(shl(160, 255)))))\n            let _25 := datasize(\"MelonToken_7003_deployed\")\n            codecopy(newFreePtr, dataoffset(\"MelonToken_7003_deployed\"), _25)\n            setimmutable(newFreePtr, \"4454\", mload(/** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128))\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            setimmutable(newFreePtr, \"4456\", mload(/** @src 30:3477:3507  \"_cachedChainId = block.chainid\" */ 160))\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            setimmutable(newFreePtr, \"4458\", mload(/** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192))\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            setimmutable(newFreePtr, \"4460\", mload(/** @src 30:3378:3414  \"_hashedName = keccak256(bytes(name))\" */ 224))\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            setimmutable(newFreePtr, \"4462\", mload(/** @src 30:3424:3466  \"_hashedVersion = keccak256(bytes(version))\" */ _22))\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            setimmutable(newFreePtr, \"4465\", mload(/** @src 30:3243:3296  \"_name = name.toShortStringWithFallback(_nameFallback)\" */ _17))\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            setimmutable(newFreePtr, \"4468\", mload(/** @src 30:3306:3368  \"_version = version.toShortStringWithFallback(_versionFallback)\" */ _19))\n            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n            return(newFreePtr, _25)\n        }\n        function finalize_allocation(memPtr)\n        {\n            let newFreePtr := add(memPtr, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        /// @ast-id 3673 @src 26:2895:3236  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n        function fun_toShortStringWithFallback(var_value_mpos) -> var\n        {\n            /// @src 26:3018:3037  \"bytes(value).length\"\n            let expr := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(/** @src 26:3018:3030  \"bytes(value)\" */ var_value_mpos)\n            /// @src 26:3040:3042  \"32\"\n            let _1 := 0x20\n            /// @src 26:3014:3230  \"if (bytes(value).length < 32) {...\"\n            switch /** @src 26:3018:3042  \"bytes(value).length < 32\" */ lt(expr, /** @src 26:3040:3042  \"32\" */ _1)\n            case /** @src 26:3014:3230  \"if (bytes(value).length < 32) {...\" */ 0 {\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                if gt(expr, sub(shl(64, 1), 1))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let _2 := 5\n                let _3 := sload(_2)\n                let length := /** @src -1:-1:-1 */ 0\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                let _4 := 1\n                length := shr(_4, _3)\n                let outOfPlaceEncoding := and(_3, _4)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, /** @src 26:3040:3042  \"32\" */ _1))\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x24)\n                }\n                if gt(length, 31)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _2)\n                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 26:3040:3042  \"32\" */ _1)\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    let _5 := add(data, shr(_2, add(length, 31)))\n                    let start := add(data, shr(_2, add(expr, 31)))\n                    for { } lt(start, _5) { start := add(start, _4) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ 0)\n                    }\n                }\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                let srcOffset := /** @src -1:-1:-1 */ 0\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                srcOffset := /** @src 26:3040:3042  \"32\" */ _1\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                switch gt(expr, 31)\n                case 1 {\n                    let loopEnd := and(expr, not(31))\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _2)\n                    let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 26:3040:3042  \"32\" */ _1)\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    for { }\n                    lt(i, loopEnd)\n                    {\n                        i := add(i, /** @src 26:3040:3042  \"32\" */ _1)\n                    }\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    {\n                        sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                        dstPtr := add(dstPtr, _4)\n                        srcOffset := add(srcOffset, /** @src 26:3040:3042  \"32\" */ _1)\n                    }\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    if lt(loopEnd, expr)\n                    {\n                        let lastValue := mload(add(var_value_mpos, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                    }\n                    sstore(_2, add(shl(_4, expr), _4))\n                }\n                default {\n                    let value := /** @src -1:-1:-1 */ 0\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    if expr\n                    {\n                        value := mload(add(var_value_mpos, srcOffset))\n                    }\n                    sstore(_2, or(and(value, not(shr(shl(3, expr), not(0)))), shl(_4, expr)))\n                }\n                /// @src 26:3176:3219  \"return ShortString.wrap(_FALLBACK_SENTINEL)\"\n                var := /** @src 26:1371:1437  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                /// @src 26:3176:3219  \"return ShortString.wrap(_FALLBACK_SENTINEL)\"\n                leave\n            }\n            default /// @src 26:3014:3230  \"if (bytes(value).length < 32) {...\"\n            {\n                /// @src 26:1817:1889  \"if (bstr.length > 31) {...\"\n                if /** @src 26:1821:1837  \"bstr.length > 31\" */ gt(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(/** @src 26:1821:1832  \"bstr.length\" */ var_value_mpos), /** @src 26:1835:1837  \"31\" */ 0x1f)\n                /// @src 26:1817:1889  \"if (bstr.length > 31) {...\"\n                {\n                    /// @src 26:1860:1878  \"StringTooLong(str)\"\n                    let _6 := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(64)\n                    /// @src 26:1860:1878  \"StringTooLong(str)\"\n                    mstore(_6, shl(224, 0x305a27a9))\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    mstore(/** @src 26:1860:1878  \"StringTooLong(str)\" */ add(_6, 4), /** @src 26:3040:3042  \"32\" */ _1)\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    let length_1 := mload(var_value_mpos)\n                    mstore(add(/** @src 26:1860:1878  \"StringTooLong(str)\" */ _6, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 36), length_1)\n                    let i_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    for { }\n                    lt(i_1, length_1)\n                    {\n                        i_1 := add(i_1, /** @src 26:3040:3042  \"32\" */ _1)\n                    }\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    {\n                        mstore(add(add(/** @src 26:1860:1878  \"StringTooLong(str)\" */ _6, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 26:3040:3042  \"32\" */ _1)))\n                    }\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    mstore(add(add(/** @src 26:1860:1878  \"StringTooLong(str)\" */ _6, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ length_1), 68), /** @src -1:-1:-1 */ 0)\n                    /// @src 26:1860:1878  \"StringTooLong(str)\"\n                    revert(_6, add(sub(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ add(/** @src 26:1860:1878  \"StringTooLong(str)\" */ _6, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ and(add(length_1, /** @src 26:1835:1837  \"31\" */ 0x1f), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ not(31))), /** @src 26:1860:1878  \"StringTooLong(str)\" */ _6), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 68))\n                }\n                /// @src 26:1938:1951  \"bytes32(bstr)\"\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                let length_2 := mload(var_value_mpos)\n                value_1 := /** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ mload(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ add(var_value_mpos, /** @src 26:3040:3042  \"32\" */ _1))\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                if lt(length_2, /** @src 26:3040:3042  \"32\" */ _1)\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                {\n                    value_1 := and(value_1, shl(shl(3, sub(/** @src 26:3040:3042  \"32\" */ _1, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ length_2)), not(0)))\n                }\n                /// @src 26:3058:3085  \"return toShortString(value)\"\n                var := /** @src 26:1930:1966  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ length_2)\n                /// @src 26:3058:3085  \"return toShortString(value)\"\n                leave\n            }\n        }\n        /// @ast-id 3673 @src 26:2895:3236  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n        function fun_toShortStringWithFallback_7934(var_value_mpos) -> var\n        {\n            /// @src 26:3018:3037  \"bytes(value).length\"\n            let expr := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(/** @src 26:3018:3030  \"bytes(value)\" */ var_value_mpos)\n            /// @src 26:3040:3042  \"32\"\n            let _1 := 0x20\n            /// @src 26:3014:3230  \"if (bytes(value).length < 32) {...\"\n            switch /** @src 26:3018:3042  \"bytes(value).length < 32\" */ lt(expr, /** @src 26:3040:3042  \"32\" */ _1)\n            case /** @src 26:3014:3230  \"if (bytes(value).length < 32) {...\" */ 0 {\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                if gt(expr, sub(shl(64, 1), 1))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let _2 := sload(/** @src 30:3351:3367  \"_versionFallback\" */ 0x06)\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                let length := /** @src -1:-1:-1 */ 0\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                let _3 := 1\n                length := shr(_3, _2)\n                let outOfPlaceEncoding := and(_2, _3)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, /** @src 26:3040:3042  \"32\" */ _1))\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x24)\n                }\n                if gt(length, 31)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 30:3351:3367  \"_versionFallback\" */ 0x06)\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 26:3040:3042  \"32\" */ _1)\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    let _4 := add(data, shr(5, add(length, 31)))\n                    let start := add(data, shr(5, add(expr, 31)))\n                    for { } lt(start, _4) { start := add(start, _3) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ 0)\n                    }\n                }\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                let srcOffset := /** @src -1:-1:-1 */ 0\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                srcOffset := /** @src 26:3040:3042  \"32\" */ _1\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                switch gt(expr, 31)\n                case 1 {\n                    let loopEnd := and(expr, not(31))\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 30:3351:3367  \"_versionFallback\" */ 0x06)\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 26:3040:3042  \"32\" */ _1)\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    for { }\n                    lt(i, loopEnd)\n                    {\n                        i := add(i, /** @src 26:3040:3042  \"32\" */ _1)\n                    }\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    {\n                        sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                        dstPtr := add(dstPtr, _3)\n                        srcOffset := add(srcOffset, /** @src 26:3040:3042  \"32\" */ _1)\n                    }\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    if lt(loopEnd, expr)\n                    {\n                        let lastValue := mload(add(var_value_mpos, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                    }\n                    sstore(/** @src 30:3351:3367  \"_versionFallback\" */ 0x06, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ add(shl(_3, expr), _3))\n                }\n                default {\n                    let value := /** @src -1:-1:-1 */ 0\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    if expr\n                    {\n                        value := mload(add(var_value_mpos, srcOffset))\n                    }\n                    sstore(/** @src 30:3351:3367  \"_versionFallback\" */ 0x06, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(_3, expr)))\n                }\n                /// @src 26:3176:3219  \"return ShortString.wrap(_FALLBACK_SENTINEL)\"\n                var := /** @src 26:1371:1437  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                /// @src 26:3176:3219  \"return ShortString.wrap(_FALLBACK_SENTINEL)\"\n                leave\n            }\n            default /// @src 26:3014:3230  \"if (bytes(value).length < 32) {...\"\n            {\n                /// @src 26:1817:1889  \"if (bstr.length > 31) {...\"\n                if /** @src 26:1821:1837  \"bstr.length > 31\" */ gt(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(/** @src 26:1821:1832  \"bstr.length\" */ var_value_mpos), /** @src 26:1835:1837  \"31\" */ 0x1f)\n                /// @src 26:1817:1889  \"if (bstr.length > 31) {...\"\n                {\n                    /// @src 26:1860:1878  \"StringTooLong(str)\"\n                    let _5 := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(64)\n                    /// @src 26:1860:1878  \"StringTooLong(str)\"\n                    mstore(_5, shl(224, 0x305a27a9))\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    mstore(/** @src 26:1860:1878  \"StringTooLong(str)\" */ add(_5, 4), /** @src 26:3040:3042  \"32\" */ _1)\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    let length_1 := mload(var_value_mpos)\n                    mstore(add(/** @src 26:1860:1878  \"StringTooLong(str)\" */ _5, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 36), length_1)\n                    let i_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    for { }\n                    lt(i_1, length_1)\n                    {\n                        i_1 := add(i_1, /** @src 26:3040:3042  \"32\" */ _1)\n                    }\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    {\n                        mstore(add(add(/** @src 26:1860:1878  \"StringTooLong(str)\" */ _5, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 26:3040:3042  \"32\" */ _1)))\n                    }\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    mstore(add(add(/** @src 26:1860:1878  \"StringTooLong(str)\" */ _5, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ length_1), 68), /** @src -1:-1:-1 */ 0)\n                    /// @src 26:1860:1878  \"StringTooLong(str)\"\n                    revert(_5, add(sub(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ add(/** @src 26:1860:1878  \"StringTooLong(str)\" */ _5, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ and(add(length_1, /** @src 26:1835:1837  \"31\" */ 0x1f), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ not(31))), /** @src 26:1860:1878  \"StringTooLong(str)\" */ _5), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 68))\n                }\n                /// @src 26:1938:1951  \"bytes32(bstr)\"\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                let length_2 := mload(var_value_mpos)\n                value_1 := /** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ mload(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ add(var_value_mpos, /** @src 26:3040:3042  \"32\" */ _1))\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                if lt(length_2, /** @src 26:3040:3042  \"32\" */ _1)\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                {\n                    value_1 := and(value_1, shl(shl(3, sub(/** @src 26:3040:3042  \"32\" */ _1, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ length_2)), not(0)))\n                }\n                /// @src 26:3058:3085  \"return toShortString(value)\"\n                var := /** @src 26:1930:1966  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ length_2)\n                /// @src 26:3058:3085  \"return toShortString(value)\"\n                leave\n            }\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 11:\"@openzeppelin/contracts/security/Pausable.sol\", 12:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 14:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\", 15:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\", 24:\"@openzeppelin/contracts/utils/Context.sol\", 25:\"@openzeppelin/contracts/utils/Counters.sol\", 26:\"@openzeppelin/contracts/utils/ShortStrings.sol\", 29:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\", 30:\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\", 38:\"contracts/MelonToken.sol\"\n    object \"MelonToken_7003_deployed\" {\n        code {\n            {\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret := _4\n                        let slotValue := sload(/** @src 12:2244:2249  \"_name\" */ 0x03)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        let length := extract_byte_array_length(slotValue)\n                        mstore(_1, length)\n                        let _5 := 0x20\n                        let _6 := 1\n                        switch and(slotValue, 1)\n                        case 0 {\n                            mstore(add(_1, _5), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _5)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 12:2244:2249  \"_name\" */ 0x03)\n                            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _5) }\n                            {\n                                mstore(add(add(_1, i), _5), sload(dataPos))\n                                dataPos := add(dataPos, _6)\n                            }\n                            ret := add(add(_1, i), _5)\n                        }\n                        finalize_allocation(_1, sub(ret, _1))\n                        let memPos := mload(_2)\n                        mstore(memPos, _5)\n                        return(memPos, sub(abi_encode_string(_1, add(memPos, _5)), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address_10764()\n                        /// @src 12:4606:4612  \"amount\"\n                        fun_approve(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 12:4606:4612  \"amount\" */ value0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ calldataload(36))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, 1)\n                        return(memPos_1, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _7 := sload(/** @src 12:3342:3354  \"_totalSupply\" */ 0x02)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, _7)\n                        return(memPos_2, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address_10764()\n                        let value1 := abi_decode_address()\n                        let value := calldataload(68)\n                        mstore(_4, and(value0_1, sub(shl(160, 1), 1)))\n                        mstore(32, 1)\n                        let _8 := keccak256(_4, _2)\n                        mstore(_4, /** @src 24:734:744  \"msg.sender\" */ caller())\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        mstore(32, _8)\n                        let _9 := sload(keccak256(_4, _2))\n                        /// @src 12:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                        if /** @src 12:11244:11281  \"currentAllowance != type(uint256).max\" */ iszero(eq(_9, /** @src 12:11264:11281  \"type(uint256).max\" */ not(0)))\n                        /// @src 12:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                        {\n                            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                            if /** @src 12:11305:11331  \"currentAllowance >= amount\" */ lt(_9, value)\n                            /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                            {\n                                let memPtr := mload(_2)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, _3), 32)\n                                mstore(add(memPtr, 36), 29)\n                                mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                                revert(memPtr, 100)\n                            }\n                            /// @src 12:11432:11457  \"currentAllowance - amount\"\n                            fun_approve(value0_1, /** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ sub(/** @src 12:11432:11457  \"currentAllowance - amount\" */ _9, value))\n                        }\n                        /// @src 12:5424:5430  \"amount\"\n                        fun_transfer(value0_1, value1, value)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, 1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, /** @src 12:3186:3188  \"18\" */ 0x12)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        return(memPos_4, 32)\n                    }\n                    case 0x3644e515 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret_1 := /** @src 15:2922:2942  \"_domainSeparatorV4()\" */ fun_domainSeparatorV4()\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, ret_1)\n                        return(memPos_5, 32)\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address_10764()\n                        mstore(_4, /** @src 24:734:744  \"msg.sender\" */ caller())\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        mstore(32, 1)\n                        let _10 := keccak256(_4, _2)\n                        mstore(_4, and(value0_2, sub(shl(160, 1), 1)))\n                        mstore(32, _10)\n                        /// @src 12:6021:6059  \"allowance(owner, spender) + addedValue\"\n                        fun_approve(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 12:6021:6059  \"allowance(owner, spender) + addedValue\" */ value0_2, checked_add_uint256(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ sload(keccak256(_4, _2)), calldataload(36)))\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, 1)\n                        return(memPos_6, 32)\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address_10764()\n                        let value_1 := calldataload(36)\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        let _11 := and(/** @src 12:8603:8624  \"account != address(0)\" */ value0_3, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 12:8603:8624  \"account != address(0)\" */ iszero(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _11)\n                        {\n                            let memPtr_1 := mload(_2)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _3), 32)\n                            mstore(add(memPtr_1, 36), 31)\n                            mstore(add(memPtr_1, 68), \"ERC20: mint to the zero address\")\n                            revert(memPtr_1, 100)\n                        }\n                        if iszero(/** @src 14:1217:1226  \"!paused()\" */ iszero(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ and(shr(160, sload(/** @src 11:1685:1692  \"_paused\" */ 0x09)), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0xff)))\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), 32)\n                            mstore(add(memPtr_2, 36), 42)\n                            mstore(add(memPtr_2, 68), \"ERC20Pausable: token transfer wh\")\n                            mstore(add(memPtr_2, 100), \"ile paused\")\n                            revert(memPtr_2, 132)\n                        }\n                        sstore(/** @src 12:8731:8753  \"_totalSupply += amount\" */ 0x02, checked_add_uint256(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ sload(/** @src 12:8731:8753  \"_totalSupply += amount\" */ 0x02), value_1))\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        mstore(_4, _11)\n                        mstore(32, _4)\n                        let dataSlot := keccak256(_4, _2)\n                        sstore(dataSlot, add(sload(/** @src 12:8899:8927  \"_balances[account] += amount\" */ dataSlot), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ value_1))\n                        /// @src 12:8952:8989  \"Transfer(address(0), account, amount)\"\n                        let _12 := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(_2)\n                        mstore(_12, value_1)\n                        /// @src 12:8952:8989  \"Transfer(address(0), account, amount)\"\n                        log3(_12, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 32, /** @src 12:8952:8989  \"Transfer(address(0), account, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _4, /** @src 12:8952:8989  \"Transfer(address(0), account, amount)\" */ _11)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        return(_4, _4)\n                    }\n                    case 0x5c975abb {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_2 := and(shr(160, sload(/** @src 11:1685:1692  \"_paused\" */ 0x09)), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0xff)\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, iszero(iszero(value_2)))\n                        return(memPos_7, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address_10764(), sub(shl(160, 1), 1)))\n                        mstore(32, _4)\n                        let _13 := sload(keccak256(_4, _2))\n                        let memPos_8 := mload(_2)\n                        mstore(memPos_8, _13)\n                        return(memPos_8, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        let _14 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x09)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        sstore(/** @src 0:2518:2524  \"_owner\" */ 0x09, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ and(_14, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _4, _4, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ and(_14, sub(shl(160, 1), 1)), _4)\n                        return(_4, _4)\n                    }\n                    case 0x7ecebe00 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address_10764(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 15:2698:2705  \"_nonces\" */ 0x07)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        let _15 := sload(keccak256(_4, _2))\n                        let memPos_9 := mload(_2)\n                        mstore(memPos_9, _15)\n                        return(memPos_9, 32)\n                    }\n                    case 0x84b0196e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 30:5427:5468  \"_name.toStringWithFallback(_nameFallback)\"\n                        let expr_mpos := fun_toStringWithFallback_10772(/** @src 30:5427:5432  \"_name\" */ loadimmutable(\"4465\"))\n                        /// @src 30:5482:5529  \"_version.toStringWithFallback(_versionFallback)\"\n                        let expr_mpos_1 := fun_toStringWithFallback(/** @src 30:5482:5490  \"_version\" */ loadimmutable(\"4468\"))\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        let memPtr_3 := mload(_2)\n                        let _16 := 0x20\n                        let newFreePtr := add(memPtr_3, 0x20)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_3))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        mstore(memPtr_3, _4)\n                        let memPos_10 := mload(_2)\n                        mstore(memPos_10, shl(248, 15))\n                        mstore(add(memPos_10, 0x20), 224)\n                        let tail := abi_encode_string(expr_mpos, add(memPos_10, 224))\n                        mstore(add(memPos_10, _2), sub(tail, memPos_10))\n                        let tail_1 := abi_encode_string(expr_mpos_1, tail)\n                        mstore(add(memPos_10, 96), /** @src 30:5543:5556  \"block.chainid\" */ chainid())\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        mstore(add(memPos_10, 128), /** @src 30:5578:5582  \"this\" */ address())\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        mstore(add(memPos_10, 160), _4)\n                        mstore(add(memPos_10, 192), sub(tail_1, memPos_10))\n                        let pos := tail_1\n                        let length_1 := mload(memPtr_3)\n                        mstore(tail_1, length_1)\n                        pos := add(tail_1, 0x20)\n                        let srcPtr := newFreePtr\n                        let i_1 := _4\n                        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n                        {\n                            mstore(pos, mload(srcPtr))\n                            pos := add(pos, _16)\n                            srcPtr := add(srcPtr, _16)\n                        }\n                        return(memPos_10, sub(pos, memPos_10))\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_3 := and(sload(/** @src 0:1273:1279  \"_owner\" */ 0x09), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_11 := mload(_2)\n                        mstore(memPos_11, value_3)\n                        return(memPos_11, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_4 := mload(_2)\n                        let ret_2 := _4\n                        let slotValue_1 := sload(_3)\n                        let length_2 := extract_byte_array_length(slotValue_1)\n                        mstore(memPtr_4, length_2)\n                        let _17 := 0x20\n                        let _18 := 1\n                        switch and(slotValue_1, 1)\n                        case 0 {\n                            mstore(add(memPtr_4, _17), and(slotValue_1, not(255)))\n                            ret_2 := add(add(memPtr_4, shl(5, iszero(iszero(length_2)))), _17)\n                        }\n                        case 1 {\n                            mstore(_4, _3)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_2 := _4\n                            for { } lt(i_2, length_2) { i_2 := add(i_2, _17) }\n                            {\n                                mstore(add(add(memPtr_4, i_2), _17), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _18)\n                            }\n                            ret_2 := add(add(memPtr_4, i_2), _17)\n                        }\n                        finalize_allocation(memPtr_4, sub(ret_2, memPtr_4))\n                        let memPos_12 := mload(_2)\n                        mstore(memPos_12, _17)\n                        return(memPos_12, sub(abi_encode_string(memPtr_4, add(memPos_12, _17)), memPos_12))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_4 := abi_decode_address_10764()\n                        let value_4 := calldataload(36)\n                        mstore(_4, /** @src 24:734:744  \"msg.sender\" */ caller())\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        mstore(32, 1)\n                        let _19 := keccak256(_4, _2)\n                        mstore(_4, and(value0_4, sub(shl(160, 1), 1)))\n                        mstore(32, _19)\n                        let _20 := sload(keccak256(_4, _2))\n                        if /** @src 12:6792:6827  \"currentAllowance >= subtractedValue\" */ lt(_20, value_4)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        {\n                            let memPtr_5 := mload(_2)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, _3), 32)\n                            mstore(add(memPtr_5, 36), 37)\n                            mstore(add(memPtr_5, 68), \"ERC20: decreased allowance below\")\n                            mstore(add(memPtr_5, 100), \" zero\")\n                            revert(memPtr_5, 132)\n                        }\n                        /// @src 12:6928:6962  \"currentAllowance - subtractedValue\"\n                        fun_approve(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 12:6928:6962  \"currentAllowance - subtractedValue\" */ value0_4, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ sub(/** @src 12:6928:6962  \"currentAllowance - subtractedValue\" */ _20, value_4))\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        let memPos_13 := mload(_2)\n                        mstore(memPos_13, 1)\n                        return(memPos_13, 32)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_5 := abi_decode_address_10764()\n                        /// @src 12:3894:3900  \"amount\"\n                        fun_transfer(/** @src 24:734:744  \"msg.sender\" */ caller(), /** @src 12:3894:3900  \"amount\" */ value0_5, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ calldataload(36))\n                        let memPos_14 := mload(_2)\n                        mstore(memPos_14, 1)\n                        return(memPos_14, 32)\n                    }\n                    case 0xd505accf {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 224) { revert(_4, _4) }\n                        let value0_6 := abi_decode_address_10764()\n                        let value1_1 := abi_decode_address()\n                        let value_5 := calldataload(68)\n                        let value_6 := calldataload(100)\n                        let value_7 := calldataload(132)\n                        if iszero(eq(value_7, and(value_7, 0xff))) { revert(_4, _4) }\n                        if /** @src 15:2139:2166  \"block.timestamp <= deadline\" */ gt(/** @src 15:2139:2154  \"block.timestamp\" */ timestamp(), /** @src 15:2139:2166  \"block.timestamp <= deadline\" */ value_6)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        {\n                            let memPtr_6 := mload(_2)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, _3), 32)\n                            mstore(add(memPtr_6, 36), 29)\n                            mstore(add(memPtr_6, 68), \"ERC20Permit: expired deadline\")\n                            revert(memPtr_6, 100)\n                        }\n                        let _21 := sub(shl(160, 1), 1)\n                        let _22 := and(value0_6, _21)\n                        mstore(_4, _22)\n                        mstore(32, /** @src 15:3200:3207  \"_nonces\" */ 0x07)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        let dataSlot_1 := keccak256(_4, _2)\n                        let _23 := sload(/** @src 15:3234:3249  \"nonce.current()\" */ dataSlot_1)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        sstore(dataSlot_1, add(_23, 1))\n                        /// @src 15:2242:2321  \"abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                        let expr_mpos_2 := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(_2)\n                        /// @src 15:2242:2321  \"abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                        let _24 := add(expr_mpos_2, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 32)\n                        mstore(_24, /** @src 15:1125:1220  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        mstore(/** @src 15:1125:1220  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 15:2242:2321  \"abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos_2, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _2), _22)\n                        mstore(/** @src 15:1125:1220  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 15:2242:2321  \"abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos_2, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 96), and(value1_1, _21))\n                        mstore(/** @src 15:1125:1220  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 15:2242:2321  \"abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos_2, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 128), value_5)\n                        mstore(/** @src 15:1125:1220  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 15:2242:2321  \"abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos_2, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 160), _23)\n                        mstore(/** @src 15:1125:1220  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 15:2242:2321  \"abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos_2, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 192), value_6)\n                        /// @src 15:2242:2321  \"abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                        mstore(expr_mpos_2, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 192)\n                        let newFreePtr_1 := add(expr_mpos_2, 224)\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, expr_mpos_2))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        /// @src 15:2232:2322  \"keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\"\n                        let _25 := keccak256(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _24, mload(/** @src 15:2232:2322  \"keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\" */ expr_mpos_2))\n                        /// @src 30:4893:4913  \"_domainSeparatorV4()\"\n                        let _26 := fun_domainSeparatorV4()\n                        /// @src 29:8496:8727  \"assembly {...\"\n                        let usr$ptr := mload(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _2)\n                        /// @src 29:8496:8727  \"assembly {...\"\n                        mstore(usr$ptr, \"\\x19\\x01\")\n                        mstore(add(usr$ptr, 0x02), _26)\n                        mstore(add(usr$ptr, 0x22), _25)\n                        /// @src 29:6744:6769  \"tryRecover(hash, v, r, s)\"\n                        let expr_component, expr_component_1 := fun_tryRecover(/** @src 29:8496:8727  \"assembly {...\" */ keccak256(usr$ptr, 0x42), /** @src 29:6744:6769  \"tryRecover(hash, v, r, s)\" */ value_7, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ calldataload(164), calldataload(196))\n                        /// @src 29:6791:6796  \"error\"\n                        fun_throwError(expr_component_1)\n                        /// @src 15:1125:1220  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                        if iszero(/** @src 15:2450:2465  \"signer == owner\" */ eq(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ and(/** @src 15:2450:2465  \"signer == owner\" */ expr_component, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _21), _22))\n                        /// @src 15:1125:1220  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                        {\n                            let memPtr_7 := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(_2)\n                            /// @src 15:1125:1220  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(memPtr_7, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ shl(229, 4594637))\n                            /// @src 15:1125:1220  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(add(memPtr_7, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _3), 32)\n                            mstore(/** @src 15:1125:1220  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(memPtr_7, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 36), /** @src 15:1125:1220  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 30)\n                            mstore(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ add(/** @src 15:1125:1220  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ memPtr_7, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 68), /** @src 15:1125:1220  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ \"ERC20Permit: invalid signature\")\n                            revert(memPtr_7, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 100)\n                        }\n                        /// @src 15:2536:2541  \"value\"\n                        fun_approve(value0_6, value1_1, value_5)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        return(_4, _4)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_7 := abi_decode_address_10764()\n                        let value1_2 := abi_decode_address()\n                        let _27 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_7, _27))\n                        mstore(32, /** @src 12:4102:4113  \"_allowances\" */ 0x01)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        let _28 := keccak256(_4, _2)\n                        mstore(_4, and(value1_2, _27))\n                        mstore(32, _28)\n                        let _29 := sload(keccak256(_4, _2))\n                        let memPos_15 := mload(_2)\n                        mstore(memPos_15, _29)\n                        return(memPos_15, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value0_8 := abi_decode_address_10764()\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        let _30 := sub(shl(160, 1), 1)\n                        let _31 := and(/** @src 0:2162:2184  \"newOwner != address(0)\" */ value0_8, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _30)\n                        if /** @src 0:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _31)\n                        {\n                            let memPtr_8 := mload(_2)\n                            mstore(memPtr_8, shl(229, 4594637))\n                            mstore(add(memPtr_8, _3), 32)\n                            mstore(add(memPtr_8, 36), 38)\n                            mstore(add(memPtr_8, 68), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr_8, 100), \"ddress\")\n                            revert(memPtr_8, 132)\n                        }\n                        let _32 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x09)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        sstore(/** @src 0:2518:2524  \"_owner\" */ 0x09, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ or(and(_32, shl(160, 0xffffffffffffffffffffffff)), _31))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _4, _4, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ and(_32, _30), /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ _31)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        return(_4, _4)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_address_10764() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function finalize_allocation_14477(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 1424 @src 12:10457:10797  \"function _approve(address owner, address spender, uint256 amount) internal virtual {...\"\n            function fun_approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 12:10558:10577  \"owner != address(0)\" */ var_owner, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _1)\n                if /** @src 12:10558:10577  \"owner != address(0)\" */ iszero(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 12:10636:10657  \"spender != address(0)\" */ var_spender, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _1)\n                if /** @src 12:10636:10657  \"spender != address(0)\" */ iszero(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                mstore(/** @src 12:10575:10576  \"0\" */ 0x00, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _2)\n                mstore(0x20, /** @src 12:10707:10718  \"_allowances\" */ 0x01)\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                let _4 := keccak256(/** @src 12:10575:10576  \"0\" */ 0x00, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x40)\n                mstore(/** @src 12:10575:10576  \"0\" */ 0x00, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _3)\n                mstore(0x20, _4)\n                sstore(keccak256(/** @src 12:10575:10576  \"0\" */ 0x00, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x40), var_amount)\n                /// @src 12:10758:10790  \"Approval(owner, spender, amount)\"\n                let _5 := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(0x40)\n                mstore(_5, var_amount)\n                /// @src 12:10758:10790  \"Approval(owner, spender, amount)\"\n                log3(_5, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x20, /** @src 12:10758:10790  \"Approval(owner, spender, amount)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _3)\n            }\n            /// @ast-id 1250 @src 12:7456:8244  \"function _transfer(address from, address to, uint256 amount) internal virtual {...\"\n            function fun_transfer(var_from, var_to, var_amount)\n            {\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 12:7552:7570  \"from != address(0)\" */ var_from, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _1)\n                if /** @src 12:7552:7570  \"from != address(0)\" */ iszero(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 12:7630:7646  \"to != address(0)\" */ var_to, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _1)\n                if /** @src 12:7630:7646  \"to != address(0)\" */ iszero(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 35)\n                    mstore(add(memPtr_1, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr_1, 100), \"ess\")\n                    revert(memPtr_1, 132)\n                }\n                if iszero(/** @src 14:1217:1226  \"!paused()\" */ iszero(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ and(shr(160, sload(/** @src 11:1685:1692  \"_paused\" */ 0x09)), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0xff)))\n                {\n                    let memPtr_2 := mload(64)\n                    mstore(memPtr_2, shl(229, 4594637))\n                    mstore(add(memPtr_2, 4), 32)\n                    mstore(add(memPtr_2, 36), 42)\n                    mstore(add(memPtr_2, 68), \"ERC20Pausable: token transfer wh\")\n                    mstore(add(memPtr_2, 100), \"ile paused\")\n                    revert(memPtr_2, 132)\n                }\n                /// @src 12:7568:7569  \"0\"\n                let _4 := 0x00\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                mstore(/** @src 12:7568:7569  \"0\" */ _4, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _2)\n                mstore(0x20, /** @src 12:7568:7569  \"0\" */ _4)\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                let _5 := sload(keccak256(/** @src 12:7568:7569  \"0\" */ _4, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x40))\n                if /** @src 12:7801:7822  \"fromBalance >= amount\" */ lt(_5, var_amount)\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                {\n                    let memPtr_3 := mload(0x40)\n                    mstore(memPtr_3, shl(229, 4594637))\n                    mstore(add(memPtr_3, 4), 0x20)\n                    mstore(add(memPtr_3, 36), 38)\n                    mstore(add(memPtr_3, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr_3, 100), \"alance\")\n                    revert(memPtr_3, 132)\n                }\n                mstore(/** @src 12:7568:7569  \"0\" */ _4, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _2)\n                mstore(0x20, /** @src 12:7568:7569  \"0\" */ _4)\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                sstore(keccak256(/** @src 12:7568:7569  \"0\" */ _4, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x40), sub(/** @src 12:7917:7937  \"fromBalance - amount\" */ _5, var_amount))\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                mstore(/** @src 12:7568:7569  \"0\" */ _4, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _3)\n                let dataSlot := keccak256(/** @src 12:7568:7569  \"0\" */ _4, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 12:8114:8137  \"_balances[to] += amount\" */ dataSlot), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ var_amount))\n                /// @src 12:8163:8189  \"Transfer(from, to, amount)\"\n                let _6 := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(0x40)\n                mstore(_6, var_amount)\n                /// @src 12:8163:8189  \"Transfer(from, to, amount)\"\n                log3(_6, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x20, /** @src 12:8163:8189  \"Transfer(from, to, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3)\n            }\n            /// @ast-id 4556 @src 30:3695:3957  \"function _domainSeparatorV4() internal view returns (bytes32) {...\"\n            function fun_domainSeparatorV4() -> var\n            {\n                /// @src 30:3771:3834  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                let expr := /** @src 30:3771:3799  \"address(this) == _cachedThis\" */ eq(/** @src 30:3779:3783  \"this\" */ address(), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ and(/** @src 30:3788:3799  \"_cachedThis\" */ loadimmutable(\"4458\"), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ sub(shl(160, 1), 1)))\n                /// @src 30:3771:3834  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                if expr\n                {\n                    expr := /** @src 30:3803:3834  \"block.chainid == _cachedChainId\" */ eq(/** @src 30:3803:3816  \"block.chainid\" */ chainid(), /** @src 30:3820:3834  \"_cachedChainId\" */ loadimmutable(\"4456\"))\n                }\n                /// @src 30:3767:3951  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                switch expr\n                case 0 {\n                    /// @src 30:4054:4135  \"abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let expr_mpos := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(64)\n                    /// @src 30:4054:4135  \"abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let _1 := add(expr_mpos, 0x20)\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    mstore(_1, /** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    mstore(/** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 30:4054:4135  \"abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 64), /** @src 30:4077:4088  \"_hashedName\" */ loadimmutable(\"4460\"))\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    mstore(/** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 30:4054:4135  \"abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), /** @src 30:4090:4104  \"_hashedVersion\" */ loadimmutable(\"4462\"))\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    mstore(/** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 30:4054:4135  \"abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 30:4106:4119  \"block.chainid\" */ chainid())\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    mstore(/** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 30:4054:4135  \"abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160), /** @src 30:3779:3783  \"this\" */ address())\n                    /// @src 30:4054:4135  \"abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    mstore(expr_mpos, /** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160)\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    let newFreePtr := add(expr_mpos, /** @src 30:1929:2024  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                    /// @src 30:3910:3940  \"return _buildDomainSeparator()\"\n                    var := /** @src 30:4044:4136  \"keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ _1, mload(/** @src 30:4044:4136  \"keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos))\n                    /// @src 30:3910:3940  \"return _buildDomainSeparator()\"\n                    leave\n                }\n                default /// @src 30:3767:3951  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                {\n                    /// @src 30:3850:3879  \"return _cachedDomainSeparator\"\n                    var := /** @src 30:3857:3879  \"_cachedDomainSeparator\" */ loadimmutable(\"4454\")\n                    /// @src 30:3850:3879  \"return _cachedDomainSeparator\"\n                    leave\n                }\n            }\n            /// @ast-id 54 @src 0:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                let value := and(sload(/** @src 0:1273:1279  \"_owner\" */ 0x09), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 0:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ value, /** @src 24:734:744  \"msg.sender\" */ caller()))\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 3700 @src 26:3367:3635  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n            function fun_toStringWithFallback_10772(var_value) -> var_mpos\n            {\n                /// @src 26:3486:3629  \"if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {...\"\n                switch /** @src 26:3490:3537  \"ShortString.unwrap(value) != _FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 26:1371:1437  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                case /** @src 26:3486:3629  \"if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {...\" */ 0 {\n                    /// @src 26:1371:1437  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let memPtr := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(64)\n                    /// @src 26:1371:1437  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let ret := /** @src -1:-1:-1 */ 0\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    let slotValue := sload(/** @src 30:5454:5467  \"_nameFallback\" */ 0x05)\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    let length := extract_byte_array_length(slotValue)\n                    mstore(memPtr, length)\n                    let _1 := 0x20\n                    let _2 := 1\n                    switch and(slotValue, 1)\n                    case 0 {\n                        mstore(add(memPtr, 0x20), and(slotValue, not(255)))\n                        ret := add(add(memPtr, shl(/** @src 30:5454:5467  \"_nameFallback\" */ 0x05, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ iszero(iszero(length)))), 0x20)\n                    }\n                    case 1 {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 30:5454:5467  \"_nameFallback\" */ 0x05)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        let dataPos := 1546678032441257452667456735582814959992782782816731922691272282333561699760\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(memPtr, i), _1), sload(dataPos))\n                            dataPos := add(dataPos, _2)\n                        }\n                        ret := add(add(memPtr, i), 0x20)\n                    }\n                    /// @src 26:1371:1437  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    finalize_allocation(memPtr, sub(ret, memPtr))\n                    /// @src 26:3606:3618  \"return store\"\n                    var_mpos := memPtr\n                    leave\n                }\n                default /// @src 26:3486:3629  \"if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {...\"\n                {\n                    /// @src 26:2633:2673  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                    let expr := and(var_value, /** @src 26:1371:1437  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                    /// @src 26:2683:2752  \"if (result > 31) {...\"\n                    if /** @src 26:2687:2698  \"result > 31\" */ gt(expr, /** @src 26:2696:2698  \"31\" */ 0x1f)\n                    /// @src 26:2683:2752  \"if (result > 31) {...\"\n                    {\n                        /// @src 26:2721:2741  \"InvalidShortString()\"\n                        let _3 := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(64)\n                        /// @src 26:2721:2741  \"InvalidShortString()\"\n                        mstore(_3, shl(226, 0x2cd44ac3))\n                        revert(_3, 4)\n                    }\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    let memPtr_1 := mload(64)\n                    finalize_allocation_14477(memPtr_1)\n                    /// @src 26:2348:2438  \"assembly {...\"\n                    mstore(memPtr_1, expr)\n                    mstore(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ add(memPtr_1, /** @src 26:2292:2294  \"32\" */ 0x20), /** @src 26:2348:2438  \"assembly {...\" */ var_value)\n                    /// @src 26:3553:3575  \"return toString(value)\"\n                    var_mpos := memPtr_1\n                    leave\n                }\n            }\n            /// @ast-id 3700 @src 26:3367:3635  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n            function fun_toStringWithFallback(var_value) -> var_mpos\n            {\n                /// @src 26:3486:3629  \"if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {...\"\n                switch /** @src 26:3490:3537  \"ShortString.unwrap(value) != _FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 26:1371:1437  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                case /** @src 26:3486:3629  \"if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {...\" */ 0 {\n                    /// @src 26:1371:1437  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let memPtr := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(64)\n                    /// @src 26:1371:1437  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let ret := /** @src -1:-1:-1 */ 0\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    let slotValue := sload(/** @src 30:5512:5528  \"_versionFallback\" */ 0x06)\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    let length := extract_byte_array_length(slotValue)\n                    mstore(memPtr, length)\n                    let _1 := 0x20\n                    let _2 := 1\n                    switch and(slotValue, 1)\n                    case 0 {\n                        mstore(add(memPtr, 0x20), and(slotValue, not(255)))\n                        ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 0x20)\n                    }\n                    case 1 {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 30:5512:5528  \"_versionFallback\" */ 0x06)\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        let dataPos := 111414077815863400510004064629973595961579173665589224203503662149373724986687\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(memPtr, i), _1), sload(dataPos))\n                            dataPos := add(dataPos, _2)\n                        }\n                        ret := add(add(memPtr, i), 0x20)\n                    }\n                    /// @src 26:1371:1437  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    finalize_allocation(memPtr, sub(ret, memPtr))\n                    /// @src 26:3606:3618  \"return store\"\n                    var_mpos := memPtr\n                    leave\n                }\n                default /// @src 26:3486:3629  \"if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {...\"\n                {\n                    /// @src 26:2633:2673  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                    let expr := and(var_value, /** @src 26:1371:1437  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                    /// @src 26:2683:2752  \"if (result > 31) {...\"\n                    if /** @src 26:2687:2698  \"result > 31\" */ gt(expr, /** @src 26:2696:2698  \"31\" */ 0x1f)\n                    /// @src 26:2683:2752  \"if (result > 31) {...\"\n                    {\n                        /// @src 26:2721:2741  \"InvalidShortString()\"\n                        let _3 := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(64)\n                        /// @src 26:2721:2741  \"InvalidShortString()\"\n                        mstore(_3, shl(226, 0x2cd44ac3))\n                        revert(_3, 4)\n                    }\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    let memPtr_1 := mload(64)\n                    finalize_allocation_14477(memPtr_1)\n                    /// @src 26:2348:2438  \"assembly {...\"\n                    mstore(memPtr_1, expr)\n                    mstore(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ add(memPtr_1, /** @src 26:2292:2294  \"32\" */ 0x20), /** @src 26:2348:2438  \"assembly {...\" */ var_value)\n                    /// @src 26:3553:3575  \"return toString(value)\"\n                    var_mpos := memPtr_1\n                    leave\n                }\n            }\n            /// @ast-id 4339 @src 29:5009:6465  \"function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {...\"\n            function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1\n            {\n                /// @src 29:6004:6165  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                if /** @src 29:6008:6087  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 29:6021:6087  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                /// @src 29:6004:6165  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                {\n                    /// @src 29:6103:6154  \"return (address(0), RecoverError.InvalidSignatureS)\"\n                    var := /** @src 29:6119:6120  \"0\" */ 0x00\n                    /// @src 29:6103:6154  \"return (address(0), RecoverError.InvalidSignatureS)\"\n                    var_1 := /** @src 29:6123:6153  \"RecoverError.InvalidSignatureS\" */ 3\n                    /// @src 29:6103:6154  \"return (address(0), RecoverError.InvalidSignatureS)\"\n                    leave\n                }\n                /// @src 29:6276:6300  \"ecrecover(hash, v, r, s)\"\n                let _1 := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(64)\n                mstore(_1, var_hash)\n                mstore(add(_1, 32), and(var_v, 0xff))\n                mstore(add(_1, 64), var_r)\n                mstore(add(_1, 96), var_s)\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 29:6276:6300  \"ecrecover(hash, v, r, s)\"\n                mstore(/** @src -1:-1:-1 */ _2, _2)\n                /// @src 29:6276:6300  \"ecrecover(hash, v, r, s)\"\n                if iszero(staticcall(gas(), 1, _1, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 128, /** @src -1:-1:-1 */ _2, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 32))\n                /// @src 29:6276:6300  \"ecrecover(hash, v, r, s)\"\n                {\n                    /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                    let pos := mload(64)\n                    returndatacopy(pos, /** @src -1:-1:-1 */ _2, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 29:6276:6300  \"ecrecover(hash, v, r, s)\"\n                let _3 := mload(/** @src -1:-1:-1 */ _2)\n                /// @src 29:6310:6411  \"if (signer == address(0)) {...\"\n                if /** @src 29:6314:6334  \"signer == address(0)\" */ iszero(/** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ and(/** @src 29:6314:6334  \"signer == address(0)\" */ _3, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ sub(shl(160, 1), 1)))\n                /// @src 29:6310:6411  \"if (signer == address(0)) {...\"\n                {\n                    /// @src 29:6350:6400  \"return (address(0), RecoverError.InvalidSignature)\"\n                    var := /** @src -1:-1:-1 */ _2\n                    /// @src 29:6350:6400  \"return (address(0), RecoverError.InvalidSignature)\"\n                    var_1 := /** @src 29:6276:6300  \"ecrecover(hash, v, r, s)\" */ 1\n                    /// @src 29:6350:6400  \"return (address(0), RecoverError.InvalidSignature)\"\n                    leave\n                }\n                /// @src 29:6421:6458  \"return (signer, RecoverError.NoError)\"\n                var := _3\n                var_1 := /** @src -1:-1:-1 */ _2\n            }\n            /// @ast-id 4125 @src 29:570:1081  \"function _throwError(RecoverError error) private pure {...\"\n            function fun_throwError(var_error)\n            {\n                /// @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\"\n                if iszero(lt(var_error, 5))\n                {\n                    mstore(/** @src 29:647:667  \"RecoverError.NoError\" */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(/** @src 29:647:667  \"RecoverError.NoError\" */ 0, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 0x24)\n                }\n                /// @src 29:634:1075  \"if (error == RecoverError.NoError) {...\"\n                switch /** @src 29:638:667  \"error == RecoverError.NoError\" */ iszero(var_error)\n                case /** @src 29:634:1075  \"if (error == RecoverError.NoError) {...\" */ 0 {\n                    /// @src 29:730:1075  \"if (error == RecoverError.InvalidSignature) {...\"\n                    switch /** @src 29:734:772  \"error == RecoverError.InvalidSignature\" */ eq(var_error, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 1)\n                    case /** @src 29:730:1075  \"if (error == RecoverError.InvalidSignature) {...\" */ 0 {\n                        /// @src 29:839:1075  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                        switch /** @src 29:843:887  \"error == RecoverError.InvalidSignatureLength\" */ eq(var_error, /** @src 29:852:887  \"RecoverError.InvalidSignatureLength\" */ 2)\n                        case /** @src 29:839:1075  \"if (error == RecoverError.InvalidSignatureLength) {...\" */ 0 {\n                            /// @src 29:961:1075  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                            if /** @src 29:965:1004  \"error == RecoverError.InvalidSignatureS\" */ eq(var_error, /** @src 29:974:1004  \"RecoverError.InvalidSignatureS\" */ 3)\n                            /// @src 29:961:1075  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                            {\n                                /// @src 29:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\"\n                                let _1 := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(64)\n                                /// @src 29:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\"\n                                mstore(_1, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ shl(229, 4594637))\n                                mstore(/** @src 29:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\" */ add(_1, 4), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 32)\n                                mstore(add(/** @src 29:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\" */ _1, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 36), 34)\n                                mstore(add(/** @src 29:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\" */ _1, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 68), \"ECDSA: invalid signature 's' val\")\n                                mstore(add(/** @src 29:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\" */ _1, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 100), \"ue\")\n                                /// @src 29:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\"\n                                revert(_1, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 132)\n                            }\n                        }\n                        default /// @src 29:839:1075  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                        {\n                            /// @src 29:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\"\n                            let _2 := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(64)\n                            /// @src 29:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\"\n                            mstore(_2, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ shl(229, 4594637))\n                            mstore(/** @src 29:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\" */ add(_2, 4), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 32)\n                            mstore(add(/** @src 29:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\" */ _2, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 36), 31)\n                            mstore(add(/** @src 29:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\" */ _2, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 68), \"ECDSA: invalid signature length\")\n                            /// @src 29:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\"\n                            revert(_2, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 100)\n                        }\n                    }\n                    default /// @src 29:730:1075  \"if (error == RecoverError.InvalidSignature) {...\"\n                    {\n                        /// @src 29:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\"\n                        let _3 := /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ mload(64)\n                        /// @src 29:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\"\n                        mstore(_3, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ shl(229, 4594637))\n                        mstore(/** @src 29:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\" */ add(_3, 4), /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 32)\n                        mstore(add(/** @src 29:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\" */ _3, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 36), 24)\n                        mstore(add(/** @src 29:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\" */ _3, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 68), \"ECDSA: invalid signature\")\n                        /// @src 29:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\"\n                        revert(_3, /** @src 38:267:723  \"contract MelonToken is ERC20Permit, Ownable, ERC20Pausable {...\" */ 100)\n                    }\n                }\n                default /// @src 29:634:1075  \"if (error == RecoverError.NoError) {...\"\n                {\n                    /// @src 29:683:690  \"return;\"\n                    leave\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212207bb842dfaaca90fd92be17459c3d63ed3c072d0e2757fb9cb9f6c56138aeb7a564736f6c63430008180033\"\n    }\n}\n","hash":"010002899d6478fedc8b80f6f414448e4e3896ff59ce6b15a7c66a34ed8ff6b4","factoryDependencies":{}}},"contracts/Pledge.sol":{"Pledge":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"deadline","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"margins","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"NewPledge","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"principal","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"interest","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalAmount","type":"uint256"}],"name":"PledgeCleared","type":"event"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"contract Proposal","name":"proposal","type":"address"}],"name":"clearPledge","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"margins","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"createPledge","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getPledgeStats","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPledges","outputs":[{"components":[{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"margins","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Pledge.PledgeInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"pledgeInfos","outputs":[{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"margins","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"pledgeLock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalPledgedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalPledgers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margins\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NewPledge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"PledgeCleared\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract Proposal\",\"name\":\"proposal\",\"type\":\"address\"}],\"name\":\"clearPledge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"margins\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"createPledge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPledgeStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPledges\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"margins\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Pledge.PledgeInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pledgeInfos\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"margins\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pledgeLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPledgedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPledgers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pledge.sol\":\"Pledge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca\",\"dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/JuryNFTSwap.sol\":{\"keccak256\":\"0x30f17ce2fd1bf215d752c2da3b56ecb5558c26b60370c435688c34ae5ad1cf9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b90a2ac87d41e18ad2d462e56bd7ce6c95eeb9066501fd3e9be0c50526c86241\",\"dweb:/ipfs/QmQb2pBACQGLi7R5sUnefPRBhNCsYMYqQqJjXgyfjj8rsy\"]},\"contracts/MelonNFT.sol\":{\"keccak256\":\"0xab0b61c4ab90e62fafb8e658d23f801ee5f60e939c96ccfac65eac03b13e5622\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://016a5b35b4dc4e928312d1a9e28a9f6adb42a3d0c0cd6111b721f380c05b731a\",\"dweb:/ipfs/QmfX54cjitDyt6zwAfPPpVhRdFPWiSMBtvWRZRuG2gYtaf\"]},\"contracts/MelonToken.sol\":{\"keccak256\":\"0x0ea0df6c42e73bc65fd935a40ed9f23fed8d45aaaee85e37f205bfde2e921483\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4ab1aa07c0665f5e86d6218675001cb634f3ae692ad771a54ecfee04291fcd4\",\"dweb:/ipfs/QmYeZkZXgwSPWhEzx9S8rGCoGupQ2M4hAvxQc6sEUxPTqy\"]},\"contracts/Pledge.sol\":{\"keccak256\":\"0xcff21b4a553e8efb54746a7856f74e1a1fb95ba88750755064026579e4b9a225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e279646fd2aeb61d64fa967c5d1dc6d3c0dfa00a881ad89cfbff235e8a67550\",\"dweb:/ipfs/Qmeu81CZrHfZsydC96i98zSU2U8356gBMGeDeuhofiJDRH\"]},\"contracts/Proposal.sol\":{\"keccak256\":\"0xa3cdd02b298ba5f3bb6698fcaf01314309a5f2b65f30e82ed922bb4b459d6d71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef309cc333fb21ca6e6bdc6176dfacd520cc8ecdca45f0f4a6df286071b0a9e7\",\"dweb:/ipfs/QmcvdFBzabE9J13mMkmLtM3U7MuUNoN3MbJTJcDy7zeoGr\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.5.0"},"storageLayout":{"storage":[{"astId":7037,"contract":"contracts/Pledge.sol:Pledge","label":"pledgeLock","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":7043,"contract":"contracts/Pledge.sol:Pledge","label":"pledgeInfos","offset":0,"slot":"1","type":"t_mapping(t_address,t_array(t_struct(PledgeInfo)7013_storage)dyn_storage)"},{"astId":7045,"contract":"contracts/Pledge.sol:Pledge","label":"totalPledgedAmount","offset":0,"slot":"2","type":"t_uint256"},{"astId":7047,"contract":"contracts/Pledge.sol:Pledge","label":"totalPledgers","offset":0,"slot":"3","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(PledgeInfo)7013_storage)dyn_storage":{"base":"t_struct(PledgeInfo)7013_storage","encoding":"dynamic_array","label":"struct Pledge.PledgeInfo[]","numberOfBytes":"32"},"t_mapping(t_address,t_array(t_struct(PledgeInfo)7013_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Pledge.PledgeInfo[])","numberOfBytes":"32","value":"t_array(t_struct(PledgeInfo)7013_storage)dyn_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(PledgeInfo)7013_storage":{"encoding":"inplace","label":"struct Pledge.PledgeInfo","members":[{"astId":7008,"contract":"contracts/Pledge.sol:Pledge","label":"deadline","offset":0,"slot":"0","type":"t_uint256"},{"astId":7010,"contract":"contracts/Pledge.sol:Pledge","label":"margins","offset":0,"slot":"1","type":"t_uint256"},{"astId":7012,"contract":"contracts/Pledge.sol:Pledge","label":"amount","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"assembly":"\t.text\n\t.file\t\"Pledge.sol:Pledge\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[10 + r0]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_2[0], r2, r4\n\tjump.gt\t@.BB0_11\n\tsub.s!\t@CPI0_8[0], r2, r4\n\tjump.gt\t@.BB0_9\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.eq\t@.BB0_16\n\tsub.s!\t@CPI0_12[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_27[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tst.1\t0, r2\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[10], r2, r2\n\tjump.ge\t@.BB0_2\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_PledgeInfo__dyn, @DEFAULT_UNWIND\n\tadd\t1, r1, r2\n\tsload\tr2, r2\n\tsload\tr1, r3\n\tadd\t2, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\t64, r4, r5\n\tst.1\tr5, r1\n\tadd\t32, r4, r1\n\tst.1\tr1, r2\n\tst.1\tr4, r3\n\tsub.s!\t@CPI0_0[0], r4, r1\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_29[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_11:\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.gt\t@.BB0_14\n\tsub.s!\t@CPI0_6[0], r2, r1\n\tjump.eq\t@.BB0_86\n\tsub.s!\t@CPI0_7[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r1\n\tjump\t@.BB0_88\n.BB0_9:\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.eq\t@.BB0_80\n\tsub.s!\t@CPI0_10[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_27[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_88\n.BB0_14:\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.eq\t@.BB0_91\n\tsub.s!\t@CPI0_5[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI0_14[0], r5, r2\n\tjump.gt\t@.BB0_28\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_15[0], r2, r2\n\tld.1\t64, r6\n\tadd\tr6, r2, r2\n\tsub!\tr2, r6, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.gt\t@.BB0_28\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_28\n\tst.1\t64, r2\n\tadd\tr6, r0, stack-[9]\n\tst.1.inc\tr6, r5, r2\n\tadd\tr2, r0, stack-[10]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r7\n\tsub!\tr7, r0, r2\n\tadd\tstack-[10], r0, r8\n\tadd\tstack-[9], r0, r9\n\tjump.eq\t@.BB0_119\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n\tadd\tr8, r0, r3\n.BB0_117:\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_17[0], r4, r5\n\tjump.gt\t@.BB0_28\n\tadd\t96, r4, r5\n\tst.1\t64, r5\n\tsload\tr1, r5\n\tst.1.inc\tr4, r5, r5\n\tadd\t1, r1, r6\n\tsload\tr6, r6\n\tst.1\tr5, r6\n\tadd\t2, r1, r5\n\tsload\tr5, r5\n\tadd\t64, r4, r6\n\tst.1\tr6, r5\n\tst.1.inc\tr3, r4, r3\n\tadd\t3, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r7, r4\n\tjump.lt\t@.BB0_117\n.BB0_119:\n\tld.1\t64, r1\n\tadd\t32, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\tr9, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_122\n\tadd\tr0, r0, r4\n.BB0_121:\n\tld.1.inc\tr8, r5, r8\n\tld.1.inc\tr5, r6, r7\n\tst.1.inc\tr2, r6, r6\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t64, r5, r5\n\tld.1\tr5, r5\n\tadd\t64, r2, r6\n\tst.1\tr6, r5\n\tadd\t96, r2, r2\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_121\n.BB0_122:\n\tsub\tr2, r1, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_16:\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_27[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_27[0], r1, stack-[1]\n\tsub.s!\t@CPI0_27[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr0, r0, stack-[2]\n\tadd\tr0, r0, stack-[3]\n\tadd\tr0, r0, stack-[4]\n\tadd\tr0, r0, stack-[10]\n\tjump\t@.BB0_21\n.BB0_33:\n\tadd\tstack-[10], r0, r1\n\tadd\t1, r1, stack-[10]\n.BB0_21:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[10], r2, r2\n\tjump.ge\t@.BB0_23\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_35[0], r4, r2\n\tjump.ge\t@.BB0_28\n\tadd\tstack-[10], r0, r2\n\tmul\t3, r2, stack-[5], r2\n\tld\tr1, r1\n\tadd\t96, r4, r2\n\tst.1\t64, r2\n\tadd\tstack-[5], r1, r1\n\tsload\tr1, r2\n\tst.1.inc\tr4, r2, r3\n\tadd\t1, r1, r2\n\tsload\tr2, r2\n\tadd\tr3, r0, stack-[6]\n\tst.1\tr3, r2\n\tadd\t2, r1, r1\n\tsload\tr1, r1\n\tadd\tr4, r0, stack-[9]\n\tadd\t64, r4, r2\n\tadd\tr2, r0, stack-[8]\n\tst.1\tr2, r1\n\tadd\t@CPI0_18[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_19[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_24\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB0_33\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r2\n\tsub.s!\t@CPI0_40[0], r2, r1\n\tjump.gt\t@.BB0_34\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tadd\t100, r2, r3\n\tmul\tr3, r1, r2, r4\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_37\n\tdiv\tr2, r1, r4, r5\n\tsub!\tr3, r4, r3\n\tjump.ne\t@.BB0_34\n.BB0_37:\n\tadd\tstack-[4], r1, stack-[4]\n\tsub!\tstack-[4], r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_34\n\tdiv.s\t100, r2, r2, r3\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_34\n\tsub\tr2, r1, r1\n\tadd\tstack-[3], r1, stack-[3]\n\tsub!\tstack-[3], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_34\n\tadd\tstack-[2], r2, stack-[2]\n\tsub!\tstack-[2], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_34\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tstack-[10], r1, r1\n\tjump.ge\t@.BB0_43\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_34\n\tsub.s\t1, r1, r2\n\tsub!\tstack-[10], r2, r1\n\tjump.eq\t@.BB0_54\n\tadd\tr2, r0, stack-[9]\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[9], r2, r2\n\tjump.le\t@.BB0_49\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[10], r2, r2\n\tjump.le\t@.BB0_49\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tmul\t3, r2, r2, r3\n\tadd\tstack-[6], r2, r2\n\tld\tr1, r1\n\tadd\tstack-[5], r1, r1\n\tsub!\tr1, r2, r3\n\tjump.eq\t@.BB0_54\n\tsload\tr2, r3\n\tsstore\tr1, r3\n\tadd\t1, r2, r3\n\tsload\tr3, r3\n\tadd\t1, r1, r4\n\tsstore\tr4, r3\n\tadd\t2, r1, r1\n\tadd\t2, r2, r2\n\tsload\tr2, r2\n\tsstore\tr1, r2\n.BB0_54:\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tsload\tr2, r3\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB0_58\n\tadd\tr3, r0, stack-[6]\n\tadd\tr2, r0, stack-[9]\n\tst.1\t0, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tsub.s\t1, r2, r2\n\tmul\t3, r2, r3, r4\n\tadd\tr1, r3, r1\n\tsstore\tr1, r0\n\tadd\t1, r1, r3\n\tsstore\tr3, r0\n\tadd\t2, r1, r1\n\tsstore\tr1, r0\n\tadd\tstack-[9], r0, r1\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[9], r0, r4\n\tsub!\tr2, r4, r3\n\tjump.lt\t@.BB0_34\n\tsub\tr2, r4, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_33\n.BB0_86:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n.BB0_88:\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_26[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_80:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tst.1\t128, r2\n\tst.1\t160, r1\n\tadd\t@CPI0_28[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_91:\n\tsub.s!\t100, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[9]\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI0_18[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_19[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_24\n\tld.1\t64, r3\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tsub!\tr2, r1, r1\n\tjump.le\t@.BB0_95\n\tsub.s!\t@CPI0_17[0], r3, r1\n\tjump.le\t@.BB0_97\n.BB0_28:\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_95:\n\tadd\t100, r3, r1\n\tadd\t@CPI0_20[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tadd\t@CPI0_21[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\t42, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_22[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_23[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_97:\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tadd\t64, r3, r4\n\tadd\tstack-[9], r0, r1\n\tadd\tr4, r0, stack-[6]\n\tst.1\tr4, r1\n\tadd\tr3, r0, stack-[7]\n\tst.1.inc\tr3, r2, r2\n\tadd\tstack-[8], r0, r1\n\tadd\tr2, r0, stack-[5]\n\tst.1\tr2, r1\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_100\n\tadd\t3, r0, r1\n\tsload\tr1, r2\n\tsub.s!\t@CPI0_41[0], r2, r3\n\tjump.ne\t@.BB0_102\n.BB0_34:\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_23:\n\tadd\t@CPI0_30[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_24\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r3\n\tadd\t36, r3, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_32[0], r0, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tr3, r0, stack-[10]\n\tadd\t4, r3, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[1], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_71\n\tadd\tstack-[10], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_33[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_65\n.BB0_71:\n\tadd\tstack-[10], r0, r1\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.gt\t@.BB0_28\n\tadd\tstack-[10], r0, r3\n\tst.1\t64, r3\n\tadd\t64, r3, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\tr3, r1\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_34[0], r0, r4\n\tadd\tstack-[7], r0, r5\n\tjump\t@.BB0_108\n.BB0_24:\n\trevert\n.BB0_102:\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n.BB0_100:\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub.s!\t@CPI0_14[0], r3, r2\n\tjump.gt\t@.BB0_28\n\tadd\tr3, r0, stack-[4]\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[4], r0, r2\n\tmul\t3, r2, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r2\n\tadd\t1, r1, r3\n\tsstore\tr3, r2\n\tadd\t2, r1, r1\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[9], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_34\n\tsstore\tr1, r2\n\tadd\t2, r0, r3\n\tsload\tr3, r2\n\tadd\tstack-[9], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_34\n\tsstore\tr3, r1\n\tld.1\t64, r1\n\tadd\t64, r1, r2\n\tadd\tstack-[9], r0, r4\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tadd\tstack-[8], r0, r4\n\tst.1\tr2, r4\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_25[0], r0, r4\n\tcontext.caller\tr5\n.BB0_108:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_43:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_36[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t19, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_22[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_37[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_49:\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_58:\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t0, r1\n\tadd\t49, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_65:\n\tld.1\t64, r2\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_68\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_67:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_67\n.BB0_68:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_70\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_70:\n\tshl.s\t96, r3, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nstorage_array_index_access_struct_PledgeInfo__dyn:\n.func_begin1:\n\tnop\tstack+=[1 + r0]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB1_1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI1_2[0], r1, r2\n\tadd.ge\t@CPI1_2[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_3\n\tadd\tstack-[1], r0, r2\n\tmul\t3, r2, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__cxa_throw:\n.func_begin2:\n\trevert\n.func_end2:\n\n__sha3:\n.func_begin3:\n\tsub.s!\t@CPI3_0[0], r1, r3\n\tadd.ge\t@CPI3_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI3_0[0], r2, r3\n\tadd.ge\t@CPI3_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_0[0], r2, r3\n\tadd.ge\t@CPI3_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_2\n\tld\tr1, r1\n\tret\n.BB3_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\n__farcall:\n.func_begin4:\n.tmp0:\n\tfar_call\tr1, r2, @.BB4_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n__staticcall:\n.func_begin5:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB5_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_2:\nCPI3_0:\n\t.cell\t4294967295\nCPI0_1:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell\t2621628261\nCPI0_3:\n\t.cell\t3754140670\nCPI0_4:\n\t.cell\t3754140671\nCPI0_5:\n\t.cell\t3756991733\nCPI0_6:\n\t.cell\t2621628262\nCPI0_7:\n\t.cell\t2709788215\nCPI0_8:\n\t.cell\t2262540371\nCPI0_9:\n\t.cell\t2262540372\nCPI0_10:\n\t.cell\t2355094643\nCPI0_11:\n\t.cell\t77170765\nCPI0_12:\n\t.cell\t1099293238\nCPI0_13:\n\t.cell\t904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_14:\n\t.cell\t18446744073709551615\nCPI0_15:\n\t.cell\t57896044618658097711785492504343953926634992332820282019728792003956564819936\nCPI0_16:\nCPI1_3:\n\t.cell\t904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_17:\n\t.cell\t18446744073709551519\nCPI0_18:\n\t.cell\t54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_19:\n\t.cell\t904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_20:\n\t.cell\t51765785358081840258246724165620776355965869118411544686187903158711272603648\nCPI0_21:\n\t.cell\t30936397434012136019226439949922870277441409790891269169085544379759254856565\nCPI0_22:\n\t.cell\t3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_23:\n\t.cell\t10458117451882892562347801444352\nCPI0_24:\n\t.cell\t904625697166532776746648320380374280103671762806220507927638784042040557568\nCPI0_25:\n\t.cell\t32731475474010438798990012277858379938453161887372646940223365456041811168793\nCPI0_26:\n\t.cell\t2535301202817642044428229017600\nCPI0_27:\n\t.cell\t1461501637330902918203684832716283019655932542975\nCPI0_28:\n\t.cell\t5070602403274100847421635428352\nCPI0_29:\n\t.cell\t7605903601369376408980219232256\nCPI0_30:\n\t.cell\t10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_31:\n\t.cell\t904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_32:\n\t.cell\t15030898913415054765868591376430200980110924406668677162267709501212125560832\nCPI0_33:\n\t.cell\t5387515050969974956360988622848\nCPI0_34:\n\t.cell\t-43111424614981151916045722314114136681546879631808246166534050599125472122382\nCPI0_35:\n\t.cell\t18446744073709551520\nCPI0_36:\n\t.cell\t33213884033944179210176855390387169142772069480178954493317220282132550647808\nCPI0_37:\n\t.cell\t7922816251426433759354395033600\nCPI0_38:\nCPI1_0:\n\t.cell\t35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_39:\nCPI1_1:\n\t.cell\t2852213850513516153367582212096\nCPI0_40:\n\t.cell\t-101\nCPI0_41:\n\t.cell\t-1\nCPI3_1:\n\t.cell\t904625697166532776746648320380374280103671755200316906558262375061821325312\n","bytecode":{"object":""},"methodIdentifiers":{"clearPledge(address,address)":"0499884d","createPledge(uint256,uint256,uint256)":"dfc3a3ff","getPledgeStats()":"86dba054","getPledges()":"dfef24f5","pledgeInfos(address,uint256)":"4185e236","pledgeLock(address)":"8c5fe473","totalPledgedAmount()":"9c42df66","totalPledgers()":"a1841637"}},"irOptimized":"/// @use-src 39:\"contracts/Pledge.sol\"\nobject \"Pledge_7298\" {\n    code {\n        {\n            /// @src 39:89:2941  \"contract Pledge {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Pledge_7298_deployed\")\n            codecopy(_1, dataoffset(\"Pledge_7298_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 39:\"contracts/Pledge.sol\"\n    object \"Pledge_7298_deployed\" {\n        code {\n            {\n                /// @src 39:89:2941  \"contract Pledge {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x0499884d {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0 := abi_decode_address()\n                        let _4 := 36\n                        let value := calldataload(_4)\n                        let _5 := sub(shl(160, 1), 1)\n                        let _6 := and(value, _5)\n                        if iszero(eq(value, _6)) { revert(_3, _3) }\n                        /// @src 39:1620:1643  \"uint256 totalAmount = 0\"\n                        let var_totalAmount := /** @src 39:89:2941  \"contract Pledge {...\" */ _3\n                        /// @src 39:1654:1681  \"uint256 principalAmount = 0\"\n                        let var_principalAmount := /** @src 39:89:2941  \"contract Pledge {...\" */ _3\n                        /// @src 39:1692:1718  \"uint256 interestAmount = 0\"\n                        let var_interestAmount := /** @src 39:89:2941  \"contract Pledge {...\" */ _3\n                        /// @src 39:1736:1749  \"uint256 i = 0\"\n                        let var_i := /** @src 39:89:2941  \"contract Pledge {...\" */ _3\n                        let _7 := and(value0, _5)\n                        /// @src 39:1731:2292  \"for (uint256 i = 0; i < pledgeInfos[user].length; i++) {...\"\n                        for { }\n                        /** @src 39:89:2941  \"contract Pledge {...\" */ 1\n                        /// @src 39:1736:1749  \"uint256 i = 0\"\n                        {\n                            /// @src 39:1781:1784  \"i++\"\n                            var_i := /** @src 39:89:2941  \"contract Pledge {...\" */ add(/** @src 39:1781:1784  \"i++\" */ var_i, /** @src 39:89:2941  \"contract Pledge {...\" */ 1)\n                        }\n                        /// @src 39:1781:1784  \"i++\"\n                        {\n                            /// @src 39:89:2941  \"contract Pledge {...\"\n                            mstore(_3, _7)\n                            let _8 := 1\n                            let _9 := 32\n                            mstore(_9, _8)\n                            let dataSlot := keccak256(_3, _1)\n                            /// @src 39:1751:1779  \"i < pledgeInfos[user].length\"\n                            if iszero(lt(var_i, /** @src 39:89:2941  \"contract Pledge {...\" */ sload(dataSlot)))\n                            /// @src 39:1751:1779  \"i < pledgeInfos[user].length\"\n                            { break }\n                            /// @src 39:1826:1846  \"pledgeInfos[user][i]\"\n                            let _10, _11 := storage_array_index_access_struct_PledgeInfo__dyn(/** @src 39:1826:1843  \"pledgeInfos[user]\" */ dataSlot, /** @src 39:1826:1846  \"pledgeInfos[user][i]\" */ var_i)\n                            /// @src 39:1801:1846  \"PledgeInfo memory info = pledgeInfos[user][i]\"\n                            let var_info_mpos := /** @src 39:89:2941  \"contract Pledge {...\" */ read_from_storage_reference_type_struct_PledgeInfo(/** @src 39:1801:1846  \"PledgeInfo memory info = pledgeInfos[user][i]\" */ _10)\n                            /// @src 39:1863:2281  \"if (info.deadline < block.timestamp) {...\"\n                            if /** @src 39:1867:1898  \"info.deadline < block.timestamp\" */ lt(/** @src 39:89:2941  \"contract Pledge {...\" */ mload(/** @src 39:1867:1880  \"info.deadline\" */ var_info_mpos), /** @src 39:1883:1898  \"block.timestamp\" */ timestamp())\n                            /// @src 39:1863:2281  \"if (info.deadline < block.timestamp) {...\"\n                            {\n                                /// @src 39:1949:1960  \"info.amount\"\n                                let _12 := add(var_info_mpos, /** @src 39:89:2941  \"contract Pledge {...\" */ _1)\n                                let _13 := mload(/** @src 39:1949:1960  \"info.amount\" */ _12)\n                                /// @src 39:89:2941  \"contract Pledge {...\"\n                                let _14 := mload(/** @src 39:1991:2003  \"info.margins\" */ add(var_info_mpos, /** @src 39:89:2941  \"contract Pledge {...\" */ _9))\n                                /// @src 39:1985:1988  \"100\"\n                                let _15 := 0x64\n                                /// @src 39:89:2941  \"contract Pledge {...\"\n                                let sum := add(/** @src 39:1985:1988  \"100\" */ _15, /** @src 39:89:2941  \"contract Pledge {...\" */ _14)\n                                if gt(/** @src 39:1985:1988  \"100\" */ _15, /** @src 39:89:2941  \"contract Pledge {...\" */ sum)\n                                {\n                                    mstore(_3, shl(224, 0x4e487b71))\n                                    mstore(_2, 0x11)\n                                    revert(_3, _4)\n                                }\n                                let product := mul(_13, sum)\n                                if iszero(or(iszero(_13), eq(sum, div(product, _13))))\n                                {\n                                    mstore(_3, shl(224, 0x4e487b71))\n                                    mstore(_2, 0x11)\n                                    revert(_3, _4)\n                                }\n                                let r := div(product, /** @src 39:1985:1988  \"100\" */ _15)\n                                /// @src 39:2030:2060  \"principalAmount += info.amount\"\n                                var_principalAmount := checked_add_uint256(var_principalAmount, /** @src 39:89:2941  \"contract Pledge {...\" */ mload(/** @src 39:2049:2060  \"info.amount\" */ _12))\n                                /// @src 39:2079:2129  \"interestAmount += amountWithInterest - info.amount\"\n                                var_interestAmount := checked_add_uint256(var_interestAmount, /** @src 39:2097:2129  \"amountWithInterest - info.amount\" */ checked_sub_uint256(r, /** @src 39:89:2941  \"contract Pledge {...\" */ mload(/** @src 39:2118:2129  \"info.amount\" */ _12)))\n                                /// @src 39:2148:2181  \"totalAmount += amountWithInterest\"\n                                var_totalAmount := checked_add_uint256(var_totalAmount, r)\n                                /// @src 39:89:2941  \"contract Pledge {...\"\n                                mstore(_3, /** @src 39:2649:2659  \"msg.sender\" */ caller())\n                                /// @src 39:89:2941  \"contract Pledge {...\"\n                                mstore(_9, _8)\n                                if iszero(/** @src 39:2629:2667  \"index < pledgeInfos[msg.sender].length\" */ lt(var_i, /** @src 39:89:2941  \"contract Pledge {...\" */ sload(keccak256(_3, _1))))\n                                {\n                                    let memPtr := mload(_1)\n                                    mstore(memPtr, shl(229, 4594637))\n                                    mstore(add(memPtr, _2), _9)\n                                    mstore(add(memPtr, _4), 19)\n                                    mstore(add(memPtr, 68), \"Index out of bounds\")\n                                    revert(memPtr, /** @src 39:1985:1988  \"100\" */ _15)\n                                }\n                                /// @src 39:89:2941  \"contract Pledge {...\"\n                                mstore(_3, /** @src 39:2649:2659  \"msg.sender\" */ caller())\n                                /// @src 39:89:2941  \"contract Pledge {...\"\n                                mstore(_9, _8)\n                                let length := sload(keccak256(_3, _1))\n                                let _16 := not(0)\n                                let diff := add(length, _16)\n                                if gt(diff, length)\n                                {\n                                    mstore(_3, shl(224, 0x4e487b71))\n                                    mstore(_2, 0x11)\n                                    revert(_3, _4)\n                                }\n                                /// @src 39:2771:2889  \"if (index != lastIndex) {...\"\n                                if /** @src 39:2775:2793  \"index != lastIndex\" */ iszero(eq(var_i, diff))\n                                /// @src 39:2771:2889  \"if (index != lastIndex) {...\"\n                                {\n                                    /// @src 39:89:2941  \"contract Pledge {...\"\n                                    mstore(_3, /** @src 39:2649:2659  \"msg.sender\" */ caller())\n                                    /// @src 39:89:2941  \"contract Pledge {...\"\n                                    mstore(_9, _8)\n                                    /// @src 39:2843:2877  \"pledgeInfos[msg.sender][lastIndex]\"\n                                    let _17, _18 := storage_array_index_access_struct_PledgeInfo__dyn(/** @src 39:89:2941  \"contract Pledge {...\" */ keccak256(_3, _1), /** @src 39:2843:2877  \"pledgeInfos[msg.sender][lastIndex]\" */ diff)\n                                    /// @src 39:89:2941  \"contract Pledge {...\"\n                                    mstore(_3, /** @src 39:2649:2659  \"msg.sender\" */ caller())\n                                    /// @src 39:89:2941  \"contract Pledge {...\"\n                                    mstore(_9, _8)\n                                    /// @src 39:2810:2840  \"pledgeInfos[msg.sender][index]\"\n                                    let _19, _20 := storage_array_index_access_struct_PledgeInfo__dyn(/** @src 39:89:2941  \"contract Pledge {...\" */ keccak256(_3, _1), /** @src 39:2810:2840  \"pledgeInfos[msg.sender][index]\" */ var_i)\n                                    /// @src 39:89:2941  \"contract Pledge {...\"\n                                    if _20\n                                    {\n                                        mstore(_3, shl(224, 0x4e487b71))\n                                        mstore(_2, _3)\n                                        revert(_3, _4)\n                                    }\n                                    if iszero(eq(_19, _17))\n                                    {\n                                        sstore(_19, sload(_17))\n                                        sstore(add(_19, _8), sload(add(_17, _8)))\n                                        let _21 := 2\n                                        sstore(add(_19, _21), sload(add(_17, _21)))\n                                    }\n                                }\n                                mstore(_3, /** @src 39:2649:2659  \"msg.sender\" */ caller())\n                                /// @src 39:89:2941  \"contract Pledge {...\"\n                                mstore(_9, _8)\n                                let dataSlot_1 := keccak256(_3, _1)\n                                let oldLen := sload(dataSlot_1)\n                                if iszero(oldLen)\n                                {\n                                    mstore(_3, shl(224, 0x4e487b71))\n                                    mstore(_2, 0x31)\n                                    revert(_3, _4)\n                                }\n                                let newLen := add(oldLen, _16)\n                                let slot, offset := storage_array_index_access_struct_PledgeInfo__dyn(dataSlot_1, newLen)\n                                if iszero(iszero(offset))\n                                {\n                                    mstore(_3, shl(224, 0x4e487b71))\n                                    mstore(_2, _3)\n                                    revert(_3, _4)\n                                }\n                                sstore(slot, _3)\n                                sstore(add(slot, _8), _3)\n                                sstore(add(slot, 2), _3)\n                                sstore(dataSlot_1, newLen)\n                                let _22 := mload(/** @src 39:2254:2265  \"info.amount\" */ _12)\n                                /// @src 39:89:2941  \"contract Pledge {...\"\n                                mstore(_3, _7)\n                                mstore(_9, _3)\n                                let dataSlot_2 := keccak256(_3, _1)\n                                sstore(dataSlot_2, /** @src 39:2234:2265  \"pledgeLock[user] -= info.amount\" */ checked_sub_uint256(/** @src 39:89:2941  \"contract Pledge {...\" */ sload(/** @src 39:2234:2265  \"pledgeLock[user] -= info.amount\" */ dataSlot_2), _22))\n                            }\n                        }\n                        /// @src 39:2302:2344  \"proposal.addInterest(user, interestAmount)\"\n                        if iszero(extcodesize(_6))\n                        {\n                            /// @src 39:89:2941  \"contract Pledge {...\"\n                            revert(_3, _3)\n                        }\n                        /// @src 39:2302:2344  \"proposal.addInterest(user, interestAmount)\"\n                        let _23 := /** @src 39:89:2941  \"contract Pledge {...\" */ mload(_1)\n                        /// @src 39:2302:2344  \"proposal.addInterest(user, interestAmount)\"\n                        mstore(_23, /** @src 39:89:2941  \"contract Pledge {...\" */ shl(224, 0x213b2ff3))\n                        mstore(/** @src 39:2302:2344  \"proposal.addInterest(user, interestAmount)\" */ add(_23, /** @src 39:89:2941  \"contract Pledge {...\" */ _2), _7)\n                        mstore(add(/** @src 39:2302:2344  \"proposal.addInterest(user, interestAmount)\" */ _23, /** @src 39:89:2941  \"contract Pledge {...\" */ _4), var_interestAmount)\n                        /// @src 39:2302:2344  \"proposal.addInterest(user, interestAmount)\"\n                        let _24 := call(gas(), _6, /** @src 39:89:2941  \"contract Pledge {...\" */ _3, /** @src 39:2302:2344  \"proposal.addInterest(user, interestAmount)\" */ _23, /** @src 39:89:2941  \"contract Pledge {...\" */ 68, /** @src 39:2302:2344  \"proposal.addInterest(user, interestAmount)\" */ _23, /** @src 39:89:2941  \"contract Pledge {...\" */ _3)\n                        /// @src 39:2302:2344  \"proposal.addInterest(user, interestAmount)\"\n                        if iszero(_24)\n                        {\n                            /// @src 39:89:2941  \"contract Pledge {...\"\n                            let pos := mload(_1)\n                            returndatacopy(pos, _3, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 39:2302:2344  \"proposal.addInterest(user, interestAmount)\"\n                        if _24\n                        {\n                            /// @src 39:89:2941  \"contract Pledge {...\"\n                            if gt(_23, 0xffffffffffffffff)\n                            {\n                                mstore(_3, shl(224, 0x4e487b71))\n                                mstore(_2, 0x41)\n                                revert(_3, _4)\n                            }\n                            mstore(_1, _23)\n                            _3 := _3\n                        }\n                        /// @src 39:2360:2425  \"PledgeCleared(user, principalAmount, interestAmount, totalAmount)\"\n                        let _25 := /** @src 39:89:2941  \"contract Pledge {...\" */ mload(_1)\n                        /// @src 39:2360:2425  \"PledgeCleared(user, principalAmount, interestAmount, totalAmount)\"\n                        log2(_25, sub(abi_encode_uint256_uint256_uint256(_25, var_principalAmount, var_interestAmount, var_totalAmount), _25), 0xa0afcc62883adc46e3210ec3af69c0d44d5bc91010a2475f068a0860cff1e9f2, _7)\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        return(_3, _3)\n                    }\n                    case 0x4185e236 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_1 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        mstore(_3, and(value0_1, sub(shl(160, 1), 1)))\n                        mstore(32, 1)\n                        let dataSlot_3 := keccak256(_3, _1)\n                        /// @src 39:594:645  \"mapping(address => PledgeInfo[]) public pledgeInfos\"\n                        if iszero(lt(value_1, /** @src 39:89:2941  \"contract Pledge {...\" */ sload(/** @src 39:594:645  \"mapping(address => PledgeInfo[]) public pledgeInfos\" */ dataSlot_3)))\n                        {\n                            revert(/** @src 39:89:2941  \"contract Pledge {...\" */ _3, _3)\n                        }\n                        /// @src 39:594:645  \"mapping(address => PledgeInfo[]) public pledgeInfos\"\n                        let slot_1, offset_1 := storage_array_index_access_struct_PledgeInfo__dyn(dataSlot_3, value_1)\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        let _26 := sload(/** @src 39:594:645  \"mapping(address => PledgeInfo[]) public pledgeInfos\" */ slot_1)\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        let _27 := sload(/** @src 39:594:645  \"mapping(address => PledgeInfo[]) public pledgeInfos\" */ add(slot_1, /** @src 39:89:2941  \"contract Pledge {...\" */ 1))\n                        let _28 := sload(/** @src 39:594:645  \"mapping(address => PledgeInfo[]) public pledgeInfos\" */ add(slot_1, 2))\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_uint256_uint256_uint256(memPos, _26, _27, _28), memPos))\n                    }\n                    case 0x86dba054 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let _29 := sload(/** @src 39:1496:1509  \"totalPledgers\" */ 0x03)\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        let _30 := sload(/** @src 39:1511:1529  \"totalPledgedAmount\" */ 0x02)\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, _29)\n                        mstore(add(memPos_1, 32), _30)\n                        return(memPos_1, _1)\n                    }\n                    case 0x8c5fe473 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, _3)\n                        let _31 := sload(keccak256(_3, _1))\n                        let memPos_2 := mload(_1)\n                        mstore(memPos_2, _31)\n                        return(memPos_2, 32)\n                    }\n                    case 0x9c42df66 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let _32 := sload(/** @src 39:654:687  \"uint256 public totalPledgedAmount\" */ 2)\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        let memPos_3 := mload(_1)\n                        mstore(memPos_3, _32)\n                        return(memPos_3, 32)\n                    }\n                    case 0xa1841637 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let _33 := sload(/** @src 39:696:724  \"uint256 public totalPledgers\" */ 3)\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        let memPos_4 := mload(_1)\n                        mstore(memPos_4, _33)\n                        return(memPos_4, 32)\n                    }\n                    case 0xdfc3a3ff {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        let value_2 := calldataload(_2)\n                        let value_3 := calldataload(36)\n                        let value_4 := calldataload(68)\n                        if iszero(/** @src 39:839:865  \"deadline > block.timestamp\" */ gt(value_2, /** @src 39:850:865  \"block.timestamp\" */ timestamp()))\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        {\n                            let memPtr_1 := mload(_1)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _2), 32)\n                            mstore(add(memPtr_1, 36), 42)\n                            mstore(add(memPtr_1, 68), \"Deadline must be greater than cu\")\n                            mstore(add(memPtr_1, 100), \"rrent time\")\n                            revert(memPtr_1, 132)\n                        }\n                        let memPtr_2 := mload(_1)\n                        finalize_allocation(memPtr_2)\n                        mstore(memPtr_2, value_2)\n                        /// @src 39:979:1016  \"PledgeInfo(deadline, margins, amount)\"\n                        let _34 := add(memPtr_2, /** @src 39:89:2941  \"contract Pledge {...\" */ 32)\n                        mstore(_34, value_3)\n                        /// @src 39:979:1016  \"PledgeInfo(deadline, margins, amount)\"\n                        let _35 := add(memPtr_2, /** @src 39:89:2941  \"contract Pledge {...\" */ _1)\n                        mstore(_35, value_4)\n                        mstore(_3, /** @src 39:1134:1144  \"msg.sender\" */ caller())\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        mstore(32, _3)\n                        /// @src 39:1119:1194  \"if (pledgeLock[msg.sender] == 0) {...\"\n                        if /** @src 39:1123:1150  \"pledgeLock[msg.sender] == 0\" */ iszero(/** @src 39:89:2941  \"contract Pledge {...\" */ sload(keccak256(_3, _1)))\n                        /// @src 39:1119:1194  \"if (pledgeLock[msg.sender] == 0) {...\"\n                        {\n                            /// @src 39:89:2941  \"contract Pledge {...\"\n                            let _36 := sload(/** @src 39:1167:1182  \"totalPledgers++\" */ 0x03)\n                            /// @src 39:89:2941  \"contract Pledge {...\"\n                            if eq(_36, not(0))\n                            {\n                                mstore(_3, shl(224, 0x4e487b71))\n                                mstore(_2, 0x11)\n                                revert(_3, 36)\n                            }\n                            sstore(/** @src 39:1167:1182  \"totalPledgers++\" */ 0x03, /** @src 39:89:2941  \"contract Pledge {...\" */ add(_36, 1))\n                        }\n                        mstore(_3, /** @src 39:1134:1144  \"msg.sender\" */ caller())\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        mstore(32, 1)\n                        let dataSlot_4 := keccak256(_3, _1)\n                        let oldLen_1 := sload(dataSlot_4)\n                        if iszero(lt(oldLen_1, 18446744073709551616))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, 36)\n                        }\n                        sstore(dataSlot_4, add(oldLen_1, 1))\n                        let slot_2, offset_2 := storage_array_index_access_struct_PledgeInfo__dyn(dataSlot_4, oldLen_1)\n                        if offset_2\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, _3)\n                            revert(_3, 36)\n                        }\n                        sstore(slot_2, mload(memPtr_2))\n                        sstore(add(slot_2, 1), mload(_34))\n                        sstore(add(slot_2, 2), mload(_35))\n                        mstore(_3, /** @src 39:1134:1144  \"msg.sender\" */ caller())\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        mstore(32, _3)\n                        let dataSlot_5 := keccak256(_3, _1)\n                        sstore(dataSlot_5, /** @src 39:1257:1289  \"pledgeLock[msg.sender] += amount\" */ checked_add_uint256(/** @src 39:89:2941  \"contract Pledge {...\" */ sload(/** @src 39:1257:1289  \"pledgeLock[msg.sender] += amount\" */ dataSlot_5), value_4))\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        sstore(2, /** @src 39:1300:1328  \"totalPledgedAmount += amount\" */ checked_add_uint256(/** @src 39:89:2941  \"contract Pledge {...\" */ sload(2), /** @src 39:1300:1328  \"totalPledgedAmount += amount\" */ value_4))\n                        /// @src 39:1346:1394  \"NewPledge(msg.sender, deadline, margins, amount)\"\n                        let _37 := /** @src 39:89:2941  \"contract Pledge {...\" */ mload(_1)\n                        /// @src 39:1346:1394  \"NewPledge(msg.sender, deadline, margins, amount)\"\n                        log2(_37, sub(abi_encode_uint256_uint256_uint256(_37, value_2, value_3, value_4), _37), 0x485d5bcd7e243593ba58d30097c3ba28f0103e1f8a670262df62d9c4dac8ce19, /** @src 39:1134:1144  \"msg.sender\" */ caller())\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        return(_3, _3)\n                    }\n                    case 0xdfef24f5 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        mstore(_3, /** @src 39:2537:2547  \"msg.sender\" */ caller())\n                        /// @src 39:2525:2536  \"pledgeInfos\"\n                        let _38 := 0x01\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        let _39 := 0x20\n                        mstore(_39, /** @src 39:2525:2536  \"pledgeInfos\" */ 0x01)\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        let dataSlot_6 := keccak256(_3, _1)\n                        let length_1 := sload(dataSlot_6)\n                        let _40 := 0xffffffffffffffff\n                        if gt(length_1, _40)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, 0x24)\n                        }\n                        let memPtr_3 := mload(_1)\n                        let newFreePtr := add(memPtr_3, and(add(shl(5, length_1), 63), not(31)))\n                        if or(gt(newFreePtr, _40), lt(newFreePtr, memPtr_3))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(_1, newFreePtr)\n                        mstore(memPtr_3, length_1)\n                        let mpos := memPtr_3\n                        mpos := add(memPtr_3, _39)\n                        let mpos_1 := mpos\n                        mstore(_3, dataSlot_6)\n                        let spos := keccak256(_3, _39)\n                        let i := _3\n                        for { }\n                        lt(i, length_1)\n                        {\n                            i := add(i, /** @src 39:2525:2536  \"pledgeInfos\" */ _38)\n                        }\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        {\n                            mstore(mpos, read_from_storage_reference_type_struct_PledgeInfo(spos))\n                            mpos := add(mpos, _39)\n                            spos := add(spos, 3)\n                        }\n                        let memPos_5 := mload(_1)\n                        let tail := add(memPos_5, _39)\n                        mstore(memPos_5, _39)\n                        let pos_1 := tail\n                        let length_2 := mload(memPtr_3)\n                        mstore(tail, length_2)\n                        pos_1 := add(memPos_5, _1)\n                        let srcPtr := mpos_1\n                        let i_1 := _3\n                        for { }\n                        lt(i_1, length_2)\n                        {\n                            i_1 := add(i_1, /** @src 39:2525:2536  \"pledgeInfos\" */ _38)\n                        }\n                        /// @src 39:89:2941  \"contract Pledge {...\"\n                        {\n                            let _41 := mload(srcPtr)\n                            mstore(pos_1, mload(_41))\n                            mstore(add(pos_1, _39), mload(add(_41, _39)))\n                            mstore(add(pos_1, _1), mload(add(_41, _1)))\n                            pos_1 := add(pos_1, 0x60)\n                            srcPtr := add(srcPtr, _39)\n                        }\n                        return(memPos_5, sub(pos_1, memPos_5))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function storage_array_index_access_struct_PledgeInfo__dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 39:89:2941  \"contract Pledge {...\" */ array)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 39:89:2941  \"contract Pledge {...\" */ 0x20)\n                slot := add(data, mul(index, 3))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 39:89:2941  \"contract Pledge {...\"\n            function abi_encode_uint256_uint256_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n            }\n            function finalize_allocation(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function read_from_storage_reference_type_struct_PledgeInfo(slot) -> value\n            {\n                let memPtr := mload(64)\n                finalize_allocation(memPtr)\n                value := memPtr\n                mstore(memPtr, sload(slot))\n                mstore(add(memPtr, 32), sload(add(slot, 1)))\n                mstore(add(memPtr, 64), sload(add(slot, 2)))\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220fbf08c1f9f32b631b50219930eed0999ddad4d70880c6aec96ca29b014c8e31b64736f6c63430008180033\"\n    }\n}\n","hash":"01000115e6dd3ba88f497fe459decab030f4c12c7ea0f9d5e8d04e0768a13fdc","factoryDependencies":{}}},"contracts/Proposal.sol":{"Proposal":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"availableBalance","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"founder","type":"address"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"string[]","name":"options","type":"string[]"}],"name":"Create","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"points","type":"uint256"}],"name":"ExchangePoints","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"address[]","name":"jurors","type":"address[]"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rewardPerJuror","type":"uint256"}],"name":"JurorsDistributeRewards","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"winOptionId","type":"uint256"}],"name":"Refunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"winningOptionId","type":"uint256"},{"indexed":false,"internalType":"address[]","name":"jurors","type":"address[]"}],"name":"Settle","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_address","type":"address"},{"indexed":true,"internalType":"uint256","name":"_proposalId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"_optionId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"Voted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"interestAmount","type":"uint256"}],"name":"addInterest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string[]","name":"optionDescs","type":"string[]"}],"name":"create","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"points","type":"uint256"}],"name":"exchangePoints","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getAvailableBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getDetails","outputs":[{"internalType":"address","name":"founder","type":"address"},{"internalType":"string[]","name":"optionDescription","type":"string[]"},{"internalType":"uint256[]","name":"counts","type":"uint256[]"},{"internalType":"uint256[]","name":"voters","type":"uint256[]"},{"internalType":"uint256","name":"allVotesCast","type":"uint256"},{"internalType":"uint256","name":"allVoters","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"optionId","type":"uint256"}],"name":"getVoting","outputs":[{"components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Proposal.VoteInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddr","type":"address"},{"internalType":"address","name":"_juryNFTSwapAddr","type":"address"},{"internalType":"address","name":"_pledgeAddr","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"juryNFTSwap","outputs":[{"internalType":"contract JuryNFTSwap","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"logicAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mlnToken","outputs":[{"internalType":"contract MelonToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pledge","outputs":[{"internalType":"contract Pledge","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposalInfos","outputs":[{"internalType":"address","name":"founder","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_juryNFTSwapAddr","type":"address"}],"name":"setNewJuryNFTSwap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_pledgeAddr","type":"address"}],"name":"setNewPledge","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddr","type":"address"}],"name":"setNewToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"winOptionId","type":"uint256"},{"internalType":"address[]","name":"jurors","type":"address[]"}],"name":"settle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"userProposalResults","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"optionId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"voting","outputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"votingLock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"winningOption","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"availableBalance\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"founder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"options\",\"type\":\"string[]\"}],\"name\":\"Create\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"}],\"name\":\"ExchangePoints\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"jurors\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardPerJuror\",\"type\":\"uint256\"}],\"name\":\"JurorsDistributeRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winOptionId\",\"type\":\"uint256\"}],\"name\":\"Refunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winningOptionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"jurors\",\"type\":\"address[]\"}],\"name\":\"Settle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestAmount\",\"type\":\"uint256\"}],\"name\":\"addInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"optionDescs\",\"type\":\"string[]\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"}],\"name\":\"exchangePoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAvailableBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"founder\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"optionDescription\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"counts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"voters\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"allVotesCast\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allVoters\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"}],\"name\":\"getVoting\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Proposal.VoteInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_juryNFTSwapAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pledgeAddr\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"juryNFTSwap\",\"outputs\":[{\"internalType\":\"contract JuryNFTSwap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"logicAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mlnToken\",\"outputs\":[{\"internalType\":\"contract MelonToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pledge\",\"outputs\":[{\"internalType\":\"contract Pledge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalInfos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"founder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_juryNFTSwapAddr\",\"type\":\"address\"}],\"name\":\"setNewJuryNFTSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pledgeAddr\",\"type\":\"address\"}],\"name\":\"setNewPledge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"}],\"name\":\"setNewToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winOptionId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"jurors\",\"type\":\"address[]\"}],\"name\":\"settle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userProposalResults\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voting\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votingLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winningOption\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Proposal.sol\":\"Proposal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca\",\"dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/JuryNFTSwap.sol\":{\"keccak256\":\"0x30f17ce2fd1bf215d752c2da3b56ecb5558c26b60370c435688c34ae5ad1cf9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b90a2ac87d41e18ad2d462e56bd7ce6c95eeb9066501fd3e9be0c50526c86241\",\"dweb:/ipfs/QmQb2pBACQGLi7R5sUnefPRBhNCsYMYqQqJjXgyfjj8rsy\"]},\"contracts/MelonNFT.sol\":{\"keccak256\":\"0xab0b61c4ab90e62fafb8e658d23f801ee5f60e939c96ccfac65eac03b13e5622\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://016a5b35b4dc4e928312d1a9e28a9f6adb42a3d0c0cd6111b721f380c05b731a\",\"dweb:/ipfs/QmfX54cjitDyt6zwAfPPpVhRdFPWiSMBtvWRZRuG2gYtaf\"]},\"contracts/MelonToken.sol\":{\"keccak256\":\"0x0ea0df6c42e73bc65fd935a40ed9f23fed8d45aaaee85e37f205bfde2e921483\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4ab1aa07c0665f5e86d6218675001cb634f3ae692ad771a54ecfee04291fcd4\",\"dweb:/ipfs/QmYeZkZXgwSPWhEzx9S8rGCoGupQ2M4hAvxQc6sEUxPTqy\"]},\"contracts/Pledge.sol\":{\"keccak256\":\"0xcff21b4a553e8efb54746a7856f74e1a1fb95ba88750755064026579e4b9a225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e279646fd2aeb61d64fa967c5d1dc6d3c0dfa00a881ad89cfbff235e8a67550\",\"dweb:/ipfs/Qmeu81CZrHfZsydC96i98zSU2U8356gBMGeDeuhofiJDRH\"]},\"contracts/Proposal.sol\":{\"keccak256\":\"0xa3cdd02b298ba5f3bb6698fcaf01314309a5f2b65f30e82ed922bb4b459d6d71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef309cc333fb21ca6e6bdc6176dfacd520cc8ecdca45f0f4a6df286071b0a9e7\",\"dweb:/ipfs/QmcvdFBzabE9J13mMkmLtM3U7MuUNoN3MbJTJcDy7zeoGr\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.5.0"},"storageLayout":{"storage":[{"astId":517,"contract":"contracts/Proposal.sol:Proposal","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":520,"contract":"contracts/Proposal.sol:Proposal","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":7406,"contract":"contracts/Proposal.sol:Proposal","label":"owner","offset":2,"slot":"0","type":"t_address"},{"astId":7408,"contract":"contracts/Proposal.sol:Proposal","label":"logicAddress","offset":0,"slot":"1","type":"t_address"},{"astId":7411,"contract":"contracts/Proposal.sol:Proposal","label":"mlnToken","offset":0,"slot":"2","type":"t_contract(MelonToken)7003"},{"astId":7414,"contract":"contracts/Proposal.sol:Proposal","label":"juryNFTSwap","offset":0,"slot":"3","type":"t_contract(JuryNFTSwap)6864"},{"astId":7417,"contract":"contracts/Proposal.sol:Proposal","label":"pledge","offset":0,"slot":"4","type":"t_contract(Pledge)7298"},{"astId":7421,"contract":"contracts/Proposal.sol:Proposal","label":"proposalInfos","offset":0,"slot":"5","type":"t_array(t_struct(ProposalInfo)7324_storage)dyn_storage"},{"astId":7425,"contract":"contracts/Proposal.sol:Proposal","label":"balances","offset":0,"slot":"6","type":"t_mapping(t_address,t_uint256)"},{"astId":7429,"contract":"contracts/Proposal.sol:Proposal","label":"votingLock","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"},{"astId":7437,"contract":"contracts/Proposal.sol:Proposal","label":"voting","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(VoteInfo)7329_storage)dyn_storage))"},{"astId":7441,"contract":"contracts/Proposal.sol:Proposal","label":"winningOption","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_uint256)"},{"astId":7447,"contract":"contracts/Proposal.sol:Proposal","label":"userProposalResults","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_mapping(t_address,t_int256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Option)7317_storage)dyn_storage":{"base":"t_struct(Option)7317_storage","encoding":"dynamic_array","label":"struct Proposal.Option[]","numberOfBytes":"32"},"t_array(t_struct(ProposalInfo)7324_storage)dyn_storage":{"base":"t_struct(ProposalInfo)7324_storage","encoding":"dynamic_array","label":"struct Proposal.ProposalInfo[]","numberOfBytes":"32"},"t_array(t_struct(VoteInfo)7329_storage)dyn_storage":{"base":"t_struct(VoteInfo)7329_storage","encoding":"dynamic_array","label":"struct Proposal.VoteInfo[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(JuryNFTSwap)6864":{"encoding":"inplace","label":"contract JuryNFTSwap","numberOfBytes":"20"},"t_contract(MelonToken)7003":{"encoding":"inplace","label":"contract MelonToken","numberOfBytes":"20"},"t_contract(Pledge)7298":{"encoding":"inplace","label":"contract Pledge","numberOfBytes":"20"},"t_int256":{"encoding":"inplace","label":"int256","numberOfBytes":"32"},"t_mapping(t_address,t_int256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => int256)","numberOfBytes":"32","value":"t_int256"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_array(t_struct(VoteInfo)7329_storage)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Proposal.VoteInfo[])","numberOfBytes":"32","value":"t_array(t_struct(VoteInfo)7329_storage)dyn_storage"},"t_mapping(t_uint256,t_mapping(t_address,t_int256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => int256))","numberOfBytes":"32","value":"t_mapping(t_address,t_int256)"},"t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(VoteInfo)7329_storage)dyn_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => struct Proposal.VoteInfo[]))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_array(t_struct(VoteInfo)7329_storage)dyn_storage)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Option)7317_storage":{"encoding":"inplace","label":"struct Proposal.Option","members":[{"astId":7312,"contract":"contracts/Proposal.sol:Proposal","label":"desc","offset":0,"slot":"0","type":"t_string_storage"},{"astId":7314,"contract":"contracts/Proposal.sol:Proposal","label":"count","offset":0,"slot":"1","type":"t_uint256"},{"astId":7316,"contract":"contracts/Proposal.sol:Proposal","label":"voters","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(ProposalInfo)7324_storage":{"encoding":"inplace","label":"struct Proposal.ProposalInfo","members":[{"astId":7319,"contract":"contracts/Proposal.sol:Proposal","label":"founder","offset":0,"slot":"0","type":"t_address"},{"astId":7323,"contract":"contracts/Proposal.sol:Proposal","label":"options","offset":0,"slot":"1","type":"t_array(t_struct(Option)7317_storage)dyn_storage"}],"numberOfBytes":"64"},"t_struct(VoteInfo)7329_storage":{"encoding":"inplace","label":"struct Proposal.VoteInfo","members":[{"astId":7326,"contract":"contracts/Proposal.sol:Proposal","label":"user","offset":0,"slot":"0","type":"t_address"},{"astId":7328,"contract":"contracts/Proposal.sol:Proposal","label":"amount","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"evm":{"assembly":"\t.text\n\t.file\t\"Proposal.sol:Proposal\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[19 + r0]\n\tptr.add\tr1, r0, r15\n\tadd\tr15, r0, r1\n\tshr.s\t96, r1, r3\n\tand\t@CPI0_0[0], r3, r1\n\tptr.add\tr15, r1, stack[@ptr_return_data]\n\tptr.add\tr15, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r1, r2\n\tjump.lt\t@.BB0_2\n\tld\tr15, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.gt\t@.BB0_25\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.gt\t@.BB0_16\n\tsub.s!\t@CPI0_32[0], r2, r3\n\tjump.le\t@.BB0_8\n\tsub.s!\t@CPI0_33[0], r2, r3\n\tjump.gt\t@.BB0_14\n\tsub.s!\t@CPI0_36[0], r2, r3\n\tjump.eq\t@.BB0_56\n\tsub.s!\t@CPI0_37[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_41[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tjump\t@.BB0_68\n.BB0_1:\n\tadd\t160, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.this\tr1\n\tst.1\t128, r1\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tadd\t1, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_25:\n\tsub.s!\t@CPI0_3[0], r2, r3\n\tjump.gt\t@.BB0_35\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.le\t@.BB0_27\n\tsub.s!\t@CPI0_14[0], r2, r3\n\tjump.gt\t@.BB0_33\n\tsub.s!\t@CPI0_17[0], r2, r3\n\tjump.eq\t@.BB0_287\n\tsub.s!\t@CPI0_18[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tjump\t@.BB0_53\n.BB0_16:\n\tsub.s!\t@CPI0_23[0], r2, r3\n\tjump.le\t@.BB0_17\n\tsub.s!\t@CPI0_24[0], r2, r3\n\tjump.gt\t@.BB0_23\n\tsub.s!\t@CPI0_27[0], r2, r3\n\tjump.eq\t@.BB0_238\n\tsub.s!\t@CPI0_28[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_41[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tnear_call\tr0, @fun_getAvailableBalance, @DEFAULT_UNWIND\n\tjump\t@.BB0_249\n.BB0_35:\n\tsub.s!\t@CPI0_4[0], r2, r3\n\tjump.le\t@.BB0_36\n\tsub.s!\t@CPI0_5[0], r2, r3\n\tjump.gt\t@.BB0_42\n\tsub.s!\t@CPI0_8[0], r2, r3\n\tjump.eq\t@.BB0_438\n\tsub.s!\t@CPI0_9[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t100, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t68, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[12], r2, r2\n\tjump.ge\t@.BB0_2\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_ProposalInfo__dyn, @DEFAULT_UNWIND\n\tsload\tr1, r2\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r1\n\tand\t@CPI0_41[0], r2, r1\n\tst.1\tr3, r1\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_58[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_8:\n\tsub.s!\t@CPI0_38[0], r2, r3\n\tjump.eq\t@.BB0_44\n\tsub.s!\t@CPI0_39[0], r2, r3\n\tjump.eq\t@.BB0_48\n\tsub.s!\t@CPI0_40[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r1\n\tjump\t@.BB0_53\n.BB0_27:\n\tsub.s!\t@CPI0_19[0], r2, r3\n\tjump.eq\t@.BB0_263\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tjump.eq\t@.BB0_265\n\tsub.s!\t@CPI0_21[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tshr.s\t16, r1, r1\n\tjump\t@.BB0_54\n.BB0_17:\n\tsub.s!\t@CPI0_29[0], r2, r3\n\tjump.eq\t@.BB0_164\n\tsub.s!\t@CPI0_30[0], r2, r3\n\tjump.eq\t@.BB0_180\n\tsub.s!\t@CPI0_31[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_86[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_87[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_106\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld\tr1, r1\n\tand\t@CPI0_41[0], r1, r1\n\tcontext.this\tr4\n\tsub!\tr4, r1, r1\n\tjump.ne\t@.BB0_236\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\tr3, r1\n\tor\t@CPI0_73[0], r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_36:\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tjump.eq\t@.BB0_407\n\tsub.s!\t@CPI0_11[0], r2, r3\n\tjump.eq\t@.BB0_430\n\tsub.s!\t@CPI0_12[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getDetails, @DEFAULT_UNWIND\n\tld.1\t64, r9\n\tadd\t32, r9, r7\n\tadd\t192, r0, r8\n\tst.1\tr7, r8\n\tadd\tr2, r0, r7\n\tadd\tr3, r0, stack-[9]\n\tadd\tr4, r0, stack-[10]\n\tadd\tr5, r0, stack-[12]\n\tadd\tr6, r0, stack-[11]\n\tand\t@CPI0_41[0], r1, r1\n\tadd\tr9, r0, stack-[13]\n\tst.1\tr9, r1\n\tadd\t192, r9, r2\n\tadd\tr7, r0, r1\n\tnear_call\tr0, @abi_encode_array_string_dyn, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tstack-[13], r0, r3\n\tsub\tr2, r3, r1\n\tadd\t64, r3, r3\n\tst.1\tr3, r1\n\tadd\tstack-[9], r0, r1\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tstack-[13], r0, r3\n\tadd\t96, r3, r1\n\tsub\tr2, r3, r3\n\tst.1\tr1, r3\n\tadd\tstack-[10], r0, r1\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r3\n\tadd\t160, r3, r2\n\tadd\tstack-[11], r0, r4\n\tst.1\tr2, r4\n\tadd\t128, r3, r2\n\tadd\tstack-[12], r0, r4\n\tst.1\tr2, r4\n\tsub\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tsub.s!\t@CPI0_34[0], r2, r3\n\tjump.eq\t@.BB0_69\n\tsub.s!\t@CPI0_35[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tsub.s!\t@CPI0_41[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t@CPI0_86[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_87[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_106\n\tld\tr1, r1\n\tand\t@CPI0_41[0], r1, r1\n\tcontext.this\tr2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_110\n.BB0_108:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_108[0], r0, r3\n\tjump\t@.BB0_109\n.BB0_33:\n\tsub.s!\t@CPI0_15[0], r2, r3\n\tjump.eq\t@.BB0_399\n\tsub.s!\t@CPI0_16[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\t5, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.ge\t@.BB0_2\n\tnear_call\tr0, @storage_array_index_access_struct_ProposalInfo__dyn_24681, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand\t@CPI0_41[0], r1, r1\n.BB0_249:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_73[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_23:\n\tsub.s!\t@CPI0_25[0], r2, r3\n\tjump.eq\t@.BB0_250\n\tsub.s!\t@CPI0_26[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tjump\t@.BB0_53\n.BB0_42:\n\tsub.s!\t@CPI0_6[0], r2, r3\n\tjump.eq\t@.BB0_501\n\tsub.s!\t@CPI0_7[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_41[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r2\n\tshr.s\t16, r2, r2\n\tand\t@CPI0_41[0], r2, r3\n\tcontext.caller\tr2\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB0_242\n\tadd\t4, r0, r2\n\tjump\t@.BB0_244\n.BB0_56:\n\tsub.s!\t68, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_41[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tptr.add\tr15, r0, stack-[13]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tptr.add\tstack-[13], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t1, r3, r3\n\tjump.eq\t@.BB0_61\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_287:\n\tsub.s!\t100, r1, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t68, r15, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_59[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r3, r2\n\tsub!\tr2, r1, r2\n\tjump.ge\t@.BB0_2\n\tadd\t4, r3, r2\n\tptr.add\tr15, r2, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_59[0], r5, r2\n\tjump.gt\t@.BB0_89\n\tshl.s\t5, r5, r4\n\tadd\t63, r4, r2\n\tand\t@CPI0_60[0], r2, r2\n\tsub.s!\t@CPI0_61[0], r2, r6\n\tjump.gt\t@.BB0_89\n\tadd\t128, r2, r2\n\tst.1\t64, r2\n\tst.1\t128, r5\n\tadd\t36, r3, r3\n\tadd\tr4, r3, r4\n\tsub!\tr4, r1, r1\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r1\n\tjump.eq\t@.BB0_298\n\tadd\t160, r0, r1\n.BB0_296:\n\tptr.add\tr15, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_41[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr1, r2, r1\n\tadd\t32, r3, r3\n\tsub!\tr3, r4, r2\n\tjump.lt\t@.BB0_296\n\tld.1\t64, r2\n.BB0_298:\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1.inc\tr2, r1, r1\n\tptr.add.s\t36, r15, r3\n\tld\tr3, r3\n\tadd\t64, r2, r4\n\tadd\t96, r0, r5\n\tst.1\tr4, r5\n\tst.1\tr1, r3\n\tadd\t96, r2, r1\n\tld.1\t128, r3\n\tst.1\tr1, r3\n\tadd\t128, r2, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_301\n\tadd\t128, r0, r4\n\tadd\tr0, r0, r5\n.BB0_300:\n\tadd\t32, r4, r4\n\tld.1\tr4, r6\n\tand\t@CPI0_41[0], r6, r6\n\tst.1.inc\tr1, r6, r1\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_300\n.BB0_301:\n\tsub\tr1, r2, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_66[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_76[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t5, r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB0_272\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_77[0], r2, r3\n\tjump.gt\t@.BB0_89\n\tadd\t64, r2, r3\n\tst.1\t64, r3\n\tshl.s\t1, r1, r1\n\tadd\t@CPI0_63[0], r1, r3\n\tsload\tr3, r3\n\tand\t@CPI0_41[0], r3, r3\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[5]\n\tadd\t@CPI0_64[0], r1, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI0_59[0], r5, r2\n\tjump.gt\t@.BB0_89\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_60[0], r2, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[4]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_59[0], r2, r4\n\tjump.gt\t@.BB0_89\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_89\n\tst.1\t64, r2\n\tadd\tr5, r0, stack-[7]\n\tadd\tstack-[4], r0, r2\n\tst.1.inc\tr2, r5, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r6\n\tsub!\tr6, r0, r2\n\tjump.ne\t@.BB0_310\n.BB0_324:\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[3], r0, r5\n\tjump.ne\t@.BB0_325\n.BB0_387:\n\tadd\t36, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tr0, r0, stack-[13]\n.BB0_389:\n\tadd\t36, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[13], r2, r2\n\tjump.ge\t@.BB0_391\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_77[0], r2, r3\n\tjump.gt\t@.BB0_89\n\tld\tr1, r1\n\tadd\t64, r2, r3\n\tst.1\t64, r3\n\tadd\tstack-[13], r0, r3\n\tshl.s\t1, r3, r3\n\tadd\tr1, r3, r1\n\tsload\tr1, r3\n\tand\t@CPI0_41[0], r3, r3\n\tst.1.inc\tr2, r3, r2\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\tr2, r1\n\tst.1\t0, r3\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[12], r0, r4\n\tsub!\tr2, r4, r3\n\tjump.lt\t@.BB0_61\n\tsub\tr2, r4, r2\n\tsstore\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tadd\t1, r1, stack-[13]\n\tjump\t@.BB0_389\n.BB0_238:\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_41[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r2\n\tshr.s\t16, r2, r2\n\tand\t@CPI0_41[0], r2, r3\n\tcontext.caller\tr2\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB0_242\n\tadd\t2, r0, r2\n\tjump\t@.BB0_244\n.BB0_438:\n\tsub.s!\t36, r1, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r15, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_59[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r3\n\tsub!\tr3, r1, r3\n\tjump.ge\t@.BB0_2\n\tadd\t4, r2, r3\n\tptr.add\tr15, r3, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI0_59[0], r6, r3\n\tjump.gt\t@.BB0_89\n\tshl.s\t5, r6, r4\n\tadd\t63, r4, r3\n\tand\t@CPI0_60[0], r3, r3\n\tsub.s!\t@CPI0_61[0], r3, r5\n\tjump.gt\t@.BB0_89\n\tadd\t128, r3, r5\n\tst.1\t64, r5\n\tst.1\t128, r6\n\tadd\t36, r2, r3\n\tadd\tr4, r3, r4\n\tsub!\tr4, r1, r7\n\tjump.gt\t@.BB0_2\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB0_446\n.BB0_461:\n\tadd\t68, r5, r1\n\tadd\t@CPI0_68[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r5, r1\n\tadd\t9, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_49[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r5, r1\n\tadd.ge\t@CPI0_0[0], r0, r5\n\tshl.s\t64, r5, r1\n\tor\t@CPI0_69[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_69:\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_getAvailableBalance, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r6\n\tcontext.caller\tr2\n\tand\t@CPI0_41[0], r2, r2\n\tld.1\t64, r10\n\tadd\t36, r10, r3\n\tadd\t4, r10, r4\n\tsub!\tr1, r6, r5\n\tjump.ge\t@.BB0_73\n\tadd\t@CPI0_112[0], r0, r5\n\tst.1\tr10, r5\n\tst.1\tr4, r2\n\tst.1\tr3, r1\n\tsub.s!\t@CPI0_0[0], r10, r1\n\tadd.ge\t@CPI0_0[0], r0, r10\n\tshl.s\t64, r10, r1\n\tor\t@CPI0_110[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_399:\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_41[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tjump\t@.BB0_68\n.BB0_250:\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_254\n\tadd\t@CPI0_49[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_85[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_71[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_501:\n\tsub.s!\t100, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tsub.s!\t@CPI0_41[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tsub.s!\t@CPI0_41[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r15, r1\n\tld\tr1, r1\n\tand\t@CPI0_41[0], r1, stack-[11]\n\tsub.s!\t@CPI0_41[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tcontext.sp\tr4\n\tsub.s\t15, r4, r4\n\tshl.s\t5, r4, r4\n\tsload\tr0, r3\n\tand!\t65280, r3, r2\n\tjump.ne\t@.BB0_508\n\tcontext.sp\tr4\n\tsub.s\t14, r4, r4\n\tshl.s\t5, r4, r4\n\tand!\t255, r3, r1\n\tjump.ne\t@.BB0_508\n.BB0_515:\n\tand\t@CPI0_51[0], r3, r1\n\tor\t257, r1, r1\n\tadd\tr0, r0, r2\n.BB0_516:\n\tadd\t2, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_44[0], r4, r4\n\tor\tstack-[13], r4, r4\n\tsstore\tr3, r4\n\tadd\t3, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_44[0], r4, r4\n\tor\tstack-[12], r4, r4\n\tsstore\tr3, r4\n\tadd\t4, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_44[0], r4, r4\n\tor\tstack-[11], r4, r4\n\tsstore\tr3, r4\n\tand\t@CPI0_52[0], r1, r4\n\tcontext.caller\tr3\n\tshl.s\t16, r3, r3\n\tand\t@CPI0_53[0], r3, r3\n\tor\tr3, r4, r4\n\tsstore\tr0, r4\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_101\n\tand\t@CPI0_54[0], r1, r1\n\tor\tr3, r1, r1\n\tsstore\tr0, r1\n\tadd\t1, r0, r3\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_56[0], r0, r4\n\tjump\t@.BB0_259\n.BB0_44:\n\tsub.s!\t68, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tsub.s!\t@CPI0_41[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t10, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r2\n\tst.1\t0, r2\n\tjump\t@.BB0_68\n.BB0_48:\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n.BB0_68:\n\tst.1\t32, r1\n\tadd\t64, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_75[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_263:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n.BB0_53:\n\tsload\tr1, r1\n.BB0_54:\n\tand\t@CPI0_41[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_75[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_265:\n\tsub.s!\t100, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t68, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_getAvailableBalance, @DEFAULT_UNWIND\n\tsub.s!\tstack-[13], r1, r1\n\tjump.ge\t@.BB0_269\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_83[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t26, r0, r3\n.BB0_94:\n\tst.1\tr2, r3\n\tadd\t@CPI0_49[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_69[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_164:\n\tsub.s!\t68, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI0_59[0], r5, r2\n\tjump.gt\t@.BB0_89\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_60[0], r2, r2\n\tld.1\t64, r6\n\tadd\tr6, r2, r2\n\tsub!\tr2, r6, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_59[0], r2, r4\n\tjump.gt\t@.BB0_89\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_89\n\tst.1\t64, r2\n\tadd\tr5, r0, stack-[12]\n\tadd\tr6, r0, stack-[11]\n\tst.1.inc\tr6, r5, r2\n\tadd\tr2, r0, stack-[13]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[12], r0, r8\n\tsub!\tr8, r0, r2\n\tadd\tstack-[13], r0, r7\n\tadd\tstack-[11], r0, r9\n\tjump.eq\t@.BB0_176\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n\tadd\tr7, r0, r3\n.BB0_174:\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_77[0], r4, r5\n\tjump.gt\t@.BB0_89\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tsload\tr1, r5\n\tand\t@CPI0_41[0], r5, r5\n\tst.1.inc\tr4, r5, r5\n\tadd\t1, r1, r6\n\tsload\tr6, r6\n\tst.1\tr5, r6\n\tst.1.inc\tr3, r4, r3\n\tadd\t2, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r8, r4\n\tjump.lt\t@.BB0_174\n.BB0_176:\n\tld.1\t64, r1\n\tadd\t32, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\tr9, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_179\n\tadd\tr0, r0, r4\n.BB0_178:\n\tld.1.inc\tr7, r5, r7\n\tld.1.inc\tr5, r5, r6\n\tand\t@CPI0_41[0], r5, r5\n\tst.1.inc\tr2, r5, r5\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t64, r2, r2\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_178\n.BB0_179:\n\tsub\tr2, r1, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_180:\n\tsub.s!\t68, r1, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_41[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r15, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_59[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r3, r2\n\tsub!\tr2, r1, r2\n\tjump.ge\t@.BB0_2\n\tadd\t4, r3, r4\n\tptr.add\tr15, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_59[0], r2, r5\n\tjump.gt\t@.BB0_89\n\tadd\t31, r2, r5\n\tand\t@CPI0_113[0], r5, r5\n\tadd\t63, r5, r5\n\tand\t@CPI0_113[0], r5, r5\n\tsub.s!\t@CPI0_61[0], r5, r6\n\tjump.gt\t@.BB0_89\n\tadd\t36, r3, r3\n\tadd\t128, r5, r5\n\tst.1\t64, r5\n\tst.1\t128, r2\n\tadd\tr2, r3, r3\n\tsub!\tr3, r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t32, r4, r1\n\tptr.add\tr15, r1, r1\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r4\n\tjump.eq\t@.BB0_190\n\tadd\t160, r0, r5\n\tshl.s\t5, r4, r6\n\tadd\t160, r6, r6\n\tptr.add\tr1, r0, r7\n.BB0_189:\n\tld.inc\tr7, r8, r7\n\tst.1.inc\tr5, r8, r5\n\tsub!\tr5, r6, r8\n\tjump.ne\t@.BB0_189\n.BB0_190:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_192\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r3, r3\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_192:\n\tadd\t160, r2, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_86[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_87[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_106\n\tld\tr1, r1\n\tand\t@CPI0_41[0], r1, r1\n\tcontext.this\tr2\n\tsub!\tr2, r1, r2\n\tjump.eq\t@.BB0_108\n\tadd\t@CPI0_90[0], r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_41[0], r2, r2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_111\n\tsload\tr0, r1\n\tshr.s\t16, r1, r1\n\tand\t@CPI0_41[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_196\n\tadd\t1, r0, r3\n\tsload\tr3, r1\n\tand\t@CPI0_44[0], r1, r1\n\tor\tstack-[13], r1, r1\n\tadd\tr3, r0, stack-[11]\n\tsstore\tr3, r1\n\tadd\t@CPI0_91[0], r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_232\n\tld.1\t64, r2\n\tadd\t@CPI0_92[0], r0, r1\n\tadd\tr2, r0, stack-[12]\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[10]\n\tcontext.gas_left\tr1\n\tadd\tstack-[13], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_200\n\tcontext.sp\tr5\n\tsub.s\t17, r5, r5\n\tshl.s\t5, r5, r5\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_206\n.BB0_407:\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t@CPI0_70[0], r0, r1\n\tst.1\t128, r1\n\tcontext.caller\tr1\n\tst.1\t132, r1\n\tcontext.this\tr1\n\tst.1\t164, r1\n\tadd\tr3, r0, stack-[13]\n\tst.1\t196, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_41[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_411\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_422\n.BB0_430:\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_41[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r2\n\tshr.s\t16, r2, r2\n\tand\t@CPI0_41[0], r2, r3\n\tcontext.caller\tr2\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB0_242\n\tadd\t3, r0, r2\n.BB0_244:\n\tsload\tr2, r3\n\tand\t@CPI0_44[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_242:\n\tadd\t@CPI0_42[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r2\n\tadd\t@CPI0_43[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_73:\n\tadd\t2, r0, r1\n\tsload\tr1, r5\n\tadd\t@CPI0_109[0], r0, r1\n\tst.1.inc\tr10, r1, r7\n\tst.1\tr4, r2\n\tst.1\tr3, r6\n\tcontext.gas_left\tr1\n\tand\t@CPI0_41[0], r5, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_75\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_87\n.BB0_254:\n\tadd\tr2, r0, stack-[13]\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[13], r0, r4\n\tadd\tr3, r4, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_61\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r4\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_84[0], r0, r4\n.BB0_257:\n.BB0_258:\n\tcontext.caller\tr5\n.BB0_259:\n.BB0_260:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_101:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_269:\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[13], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.eq\t@.BB0_271\n.BB0_61:\n\tadd\t@CPI0_78[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_79[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_411:\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_71[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_414\n\tadd\t128, r0, r7\n\tptr.add\tr1, r0, r8\n.BB0_413:\n\tld.inc\tr8, r9, r8\n\tst.1.inc\tr7, r9, r7\n\tsub.s!\t160, r7, r9\n\tjump.ne\t@.BB0_413\n.BB0_414:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_416\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_416:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_417\n.BB0_422:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tor\t128, r2, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r3\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r3\n\tsub!\tr3, r0, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB0_2\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_426\n\tadd\t@CPI0_49[0], r0, r3\n\tst.1\tr1, r3\n\tor\t132, r2, r3\n\tadd\t32, r0, r4\n\tst.1\tr3, r4\n\tadd\t196, r2, r3\n\tadd\t@CPI0_74[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t164, r2, r2\n\tadd\t15, r0, r3\n\tst.1\tr2, r3\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_69[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_236:\n\tadd\t100, r3, r1\n\tadd\t@CPI0_88[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t68, r3, r1\n\tadd\t@CPI0_89[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r3, r1\n\tadd\t56, r0, r4\n\tst.1\tr1, r4\n\tadd\t@CPI0_49[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tor\t@CPI0_50[0], r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_75:\n\tsub.s!\t@CPI0_0[0], r10, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_110[0], r1, r1\n\tadd\tr10, r0, stack-[12]\n\tadd\tr7, r0, stack-[11]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r11\n\tadd\tstack-[12], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_78\n\tptr.add\tr1, r0, r7\n\tadd\tr10, r0, r8\n.BB0_77:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r11, r9\n\tjump.ne\t@.BB0_77\n.BB0_78:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_80\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_80:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n.BB0_87:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_59[0], r1, r4\n\tjump.gt\t@.BB0_89\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_89\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\tr10, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_96\n\tadd\t68, r1, r2\n\tadd\t@CPI0_74[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t15, r0, r3\n\tjump\t@.BB0_94\n.BB0_417:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_420\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_419:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_419\n.BB0_420:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_86\n\tshl.s\t5, r5, r5\n\tjump\t@.BB0_85\n.BB0_110:\n\tadd\t@CPI0_90[0], r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_41[0], r2, r2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_111\n\tld.1\t64, r4\n\tsload\tr0, r1\n\tshr.s\t16, r1, r1\n\tand\t@CPI0_41[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_113\n\tadd\t1, r0, r3\n\tsload\tr3, r1\n\tand\t@CPI0_44[0], r1, r1\n\tor\tstack-[13], r1, r1\n\tadd\tr3, r0, stack-[12]\n\tsstore\tr3, r1\n\tsub.s!\t@CPI0_102[0], r4, r1\n\tjump.le\t@.BB0_115\n.BB0_89:\n\tadd\t@CPI0_78[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_79[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_271:\n\tsstore\tr1, r2\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_272\n\tshl.s\t1, r2, r1\n\tadd\t@CPI0_64[0], r1, r3\n\tsload\tr3, r1\n\tsub.s!\tstack-[11], r1, r1\n\tjump.le\t@.BB0_272\n\tadd\tr3, r0, stack-[10]\n\tst.1\t0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tmul\t3, r2, stack-[9], r2\n\tadd\tstack-[9], r1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r3\n\tadd\tstack-[13], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_61\n\tsstore\tr1, r2\n\tadd\tstack-[10], r0, r3\n\tsload\tr3, r1\n\tsub.s!\tstack-[11], r1, r1\n\tjump.le\t@.BB0_272\n\tst.1\t0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[9], r1, r1\n\tadd\t2, r1, r1\n\tsload\tr1, r2\n\tsub.s!\t@CPI0_114[0], r2, r3\n\tjump.eq\t@.BB0_61\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[10]\n\tsub.s!\t@CPI0_77[0], r2, r2\n\tjump.gt\t@.BB0_89\n\tadd\tstack-[10], r0, r3\n\tadd\t64, r3, r2\n\tst.1\t64, r2\n\tcontext.caller\tr2\n\tst.1.inc\tr3, r2, r3\n\tadd\tstack-[13], r0, r2\n\tadd\tr3, r0, stack-[8]\n\tst.1\tr3, r2\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[9]\n\tsub.s!\t@CPI0_59[0], r2, r2\n\tjump.gt\t@.BB0_89\n\tadd\tstack-[9], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tsload\tr1, r2\n\tand\t@CPI0_44[0], r2, r2\n\tadd\tstack-[10], r0, r3\n\tld.1\tr3, r3\n\tand\t@CPI0_41[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t1, r1, r1\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_82[0], r0, r4\n\tcontext.caller\tr5\n\tadd\tstack-[12], r0, r6\n\tadd\tstack-[11], r0, r7\n\tjump\t@.BB0_260\n.BB0_81:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_84\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_83:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_83\n.BB0_84:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_86\n.BB0_85:\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_86:\n\tshl.s\t96, r3, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_508:\n\tadd\tr4, r0, stack-[10]\n\tadd\tr2, r0, stack-[8]\n\tadd\tr3, r0, stack-[9]\n\tadd\t@CPI0_45[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_106\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_510\n\tadd\tstack-[9], r0, r3\n\tand\t255, r3, r1\n\tsub.s!\t1, r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tadd\tstack-[10], r0, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r0, stack[r2]\n\tjump.ne\t@.BB0_512\n\tsub!\tstack-[8], r0, r1\n\tjump.eq\t@.BB0_515\n\tand\t@CPI0_115[0], r3, r1\n\tadd\t1, r0, r2\n\tor\t1, r1, r1\n\tjump\t@.BB0_516\n.BB0_426:\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[13], r0, r4\n\tadd\tr3, r4, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_61\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r4\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_72[0], r0, r4\n\tcontext.caller\tr5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tjump\t@.BB0_249\n.BB0_111:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_100[0], r0, r3\n.BB0_109:\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_101[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t44, r0, r3\n.BB0_135:\n\tst.1\tr2, r3\n\tadd\t@CPI0_49[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_50[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_446:\n\tadd\t160, r0, r5\n\tjump\t@.BB0_447\n.BB0_460:\n\tadd\tr8, r6, r6\n\tst.1\tr6, r0\n\tst.1.inc\tr5, r7, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r4, r6\n\tjump.ge\t@.BB0_448\n.BB0_447:\n\tptr.add\tr15, r3, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI0_59[0], r6, r7\n\tjump.gt\t@.BB0_2\n\tadd\tr6, r2, r8\n\tadd\t67, r8, r6\n\tsub!\tr6, r1, r7\n\tadd\tr0, r0, r7\n\tadd.ge\t@CPI0_62[0], r0, r7\n\tand\t@CPI0_62[0], r6, r6\n\tsub!\tr6, r0, r9\n\tadd\tr0, r0, r9\n\tadd.lt\t@CPI0_62[0], r0, r9\n\tsub.s!\t@CPI0_62[0], r6, r6\n\tadd.ne\tr7, r0, r9\n\tsub!\tr9, r0, r6\n\tjump.ne\t@.BB0_2\n\tadd\t36, r8, r9\n\tptr.add\tr15, r9, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI0_59[0], r6, r7\n\tjump.gt\t@.BB0_89\n\tadd\t31, r6, r7\n\tand\t@CPI0_113[0], r7, r7\n\tadd\t63, r7, r7\n\tand\t@CPI0_113[0], r7, r10\n\tld.1\t64, r7\n\tadd\tr7, r10, r10\n\tsub!\tr10, r7, r11\n\tadd\t0, r0, r11\n\tadd.lt\t1, r0, r11\n\tsub.s!\t@CPI0_59[0], r10, r12\n\tjump.gt\t@.BB0_89\n\tand!\t1, r11, r11\n\tjump.ne\t@.BB0_89\n\tadd\t68, r8, r11\n\tst.1\t64, r10\n\tst.1.inc\tr7, r6, r8\n\tadd\tr6, r11, r10\n\tsub!\tr10, r1, r10\n\tjump.gt\t@.BB0_2\n\tadd\t32, r9, r9\n\tptr.add\tr15, r9, r9\n\tshr.s!\t5, r6, r10\n\tshl.s\t5, r10, r10\n\tjump.eq\t@.BB0_458\n\tadd\tr8, r10, r11\n\tptr.add\tr9, r0, r12\n\tadd\tr8, r0, r13\n.BB0_457:\n\tld.inc\tr12, r14, r12\n\tst.1.inc\tr13, r14, r13\n\tsub!\tr13, r11, r14\n\tjump.ne\t@.BB0_457\n.BB0_458:\n\tand!\t31, r6, r11\n\tjump.eq\t@.BB0_460\n\tptr.add\tr9, r10, r9\n\tadd\tr8, r10, r10\n\tshl.s\t3, r11, r11\n\tld.1\tr10, r12\n\tshl\tr12, r11, r12\n\tshr\tr12, r11, r12\n\tld\tr9, r9\n\tsub\t256, r11, r11\n\tshr\tr9, r11, r9\n\tshl\tr9, r11, r9\n\tor\tr9, r12, r9\n\tst.1\tr10, r9\n\tjump\t@.BB0_460\n.BB0_113:\n\tadd\t@CPI0_42[0], r0, r2\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_0[0], r4, r1\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_79[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_96:\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[13], r2, r3\n\tjump.lt\t@.BB0_61\n\tsub.s\tstack-[13], r2, r2\n\tsstore\tr1, r2\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_111[0], r0, r4\n\tjump\t@.BB0_257\n.BB0_510:\n\tadd\tstack-[10], r0, r1\n\tshr.s\t5, r1, r1\n\tadd\t0, r0, stack[r1]\n.BB0_512:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_47[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_48[0], r0, r3\n.BB0_134:\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tjump\t@.BB0_135\n.BB0_115:\n\tadd\t32, r4, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t64, r1\n\tadd\tr4, r0, stack-[10]\n\tst.1\tr4, r0\n\tadd\t@CPI0_91[0], r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_161\n\tld.1\t64, r2\n\tadd\t@CPI0_92[0], r0, r1\n\tadd\tr2, r0, stack-[11]\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[8]\n\tcontext.gas_left\tr1\n\tadd\tstack-[13], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_118\n\tcontext.sp\tr5\n\tsub.s\t19, r5, r5\n\tshl.s\t5, r5, r5\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_124\n.BB0_161:\n\tadd\t@CPI0_45[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n.BB0_162:\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_106\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_100\n.BB0_131:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_106[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_107[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tjump\t@.BB0_135\n.BB0_448:\n\tld.1\t128, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_462\n\tld.1\t64, r5\n\tjump\t@.BB0_461\n.BB0_118:\n\tadd\tstack-[11], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_93[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[8], r0, r10\n\tjump.eq\t@.BB0_121\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[11], r0, r8\n.BB0_120:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB0_120\n.BB0_121:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_123\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[11], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_123:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr5\n\tsub.s\t18, r5, r5\n\tshl.s\t5, r5, r5\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_133\n.BB0_124:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[11], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_59[0], r1, r4\n\tjump.gt\t@.BB0_89\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_89\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.ge\t@.BB0_127\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_462:\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tsub.s!\t@CPI0_59[0], r1, r2\n\tjump.gt\t@.BB0_89\n\tadd\t1, r1, r2\n\tadd\t5, r0, r3\n\tsstore\tr3, r2\n\tst.1\t0, r3\n\tshl.s\t1, r1, r1\n\tadd\t@CPI0_63[0], r1, r2\n\tsload\tr2, r3\n\tand\t@CPI0_44[0], r3, r3\n\tcontext.caller\tr4\n\tor\tr3, r4, r3\n\tsstore\tr2, r3\n\tadd\t@CPI0_64[0], r1, stack-[12]\n\tadd\tr0, r0, stack-[13]\n\tjump\t@.BB0_465\n.BB0_483:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[11], r0, r4\n.BB0_475:\n\tsstore\tr4, r1\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tadd\t1, r4, r2\n\tsstore\tr2, r1\n\tadd\t2, r4, r1\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[13], r0, r2\n\tadd\t1, r2, stack-[13]\n\tld.1\t128, r1\n\tsub!\tstack-[13], r1, r1\n\tjump.ge\t@.BB0_464\n.BB0_465:\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_65[0], r3, r1\n\tjump.gt\t@.BB0_89\n\tadd\tstack-[13], r0, r1\n\tshl.s\t5, r1, r1\n\tadd\t160, r1, r1\n\tld.1\tr1, r1\n\tadd\t96, r3, r2\n\tst.1\t64, r2\n\tst.1.inc\tr3, r1, r2\n\tadd\t64, r3, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\tr1, r0\n\tadd\tr2, r0, stack-[8]\n\tst.1\tr2, r0\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r2\n\tsub.s!\t@CPI0_59[0], r2, r1\n\tjump.gt\t@.BB0_89\n\tadd\tr3, r0, stack-[11]\n\tadd\tr2, r0, stack-[10]\n\tadd\t1, r2, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr2, r1\n\tst.1\t0, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r6\n\tld.1.inc\tr6, r5, r7\n\tsub.s!\t@CPI0_59[0], r5, r2\n\tadd\tstack-[10], r0, r2\n\tjump.gt\t@.BB0_89\n\tmul\t3, r2, r2, r3\n\tadd\tr1, r2, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_313\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[11]\n\tadd\tr5, r0, stack-[7]\n\tadd\tr6, r0, stack-[6]\n\tjump.lt\t@.BB0_473\n\tadd\tr3, r0, stack-[5]\n\tadd\tr7, r0, stack-[10]\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[5], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[11], r0, r4\n\tadd\tstack-[10], r0, r7\n\tjump.ge\t@.BB0_473\n.BB0_474:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_474\n.BB0_473:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB0_484\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r6\n\tand!\t@CPI0_113[0], r6, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_478\n\tsub.s\t1, r2, r3\n\tshr.s\t5, r3, r3\n\tadd\tr1, r3, r3\n\tadd\t1, r3, r4\n\tadd\t32, r0, r3\n\tadd\tstack-[6], r0, r7\n.BB0_480:\n\tadd\tr3, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r3, r3\n\tadd\t1, r1, r1\n\tsub!\tr1, r4, r5\n\tjump.ne\t@.BB0_480\n\tsub!\tr2, r6, r2\n\tjump.ge\t@.BB0_483\n\tjump\t@.BB0_482\n.BB0_484:\n\tsub!\tr5, r0, r1\n\tjump.eq\t@.BB0_485\n\tld.1\tr7, r1\n\tjump\t@.BB0_487\n.BB0_485:\n\tadd\tr0, r0, r1\n.BB0_487:\n\tshl.s\t3, r5, r2\n\tshr\t@CPI0_114[0], r2, r2\n\txor\t@CPI0_114[0], r2, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_475\n.BB0_478:\n\tadd\t32, r0, r3\n\tadd\tstack-[6], r0, r7\n\tsub!\tr2, r6, r2\n\tjump.ge\t@.BB0_483\n.BB0_482:\n\tshl.s\t3, r6, r2\n\tand\t248, r2, r2\n\tshr\t@CPI0_114[0], r2, r2\n\txor\t@CPI0_114[0], r2, r2\n\tadd\tr3, r7, r3\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_483\n.BB0_100:\n\tadd\t@CPI0_90[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_44[0], r2, r2\n\tor\tstack-[13], r2, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_196:\n\tld.1\t64, r2\n\tadd\t@CPI0_42[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_79[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_127:\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tshr.s\t5, r5, r3\n\tadd\tr2, r0, stack[r3]\n\tsub.s!\t@CPI0_90[0], r2, r2\n\tjump.ne\t@.BB0_128\n\tadd\t@CPI0_45[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_106\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_131\n\tadd\t@CPI0_90[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_44[0], r2, r2\n\tadd\tstack-[13], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_66[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_96[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_101\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[11]\n\tsub.s!\t@CPI0_65[0], r1, r1\n\tadd\tstack-[10], r0, r3\n\tjump.gt\t@.BB0_89\n\tadd\tstack-[11], r0, r4\n\tadd\t96, r4, r1\n\tst.1\t64, r1\n\tadd\t64, r4, r1\n\tadd\t@CPI0_97[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r4, r1\n\tadd\t@CPI0_98[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t39, r0, r1\n\tst.1\tr4, r1\n\tld.1\tr3, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[13], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_139\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_141\n.BB0_232:\n\tadd\t@CPI0_45[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tjump\t@.BB0_162\n.BB0_200:\n\tadd\tstack-[12], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_93[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[10], r0, r10\n\tjump.eq\t@.BB0_203\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[12], r0, r8\n.BB0_202:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB0_202\n.BB0_203:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_205\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[12], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_205:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr5\n\tsub.s\t16, r5, r5\n\tshl.s\t5, r5, r5\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_133\n.BB0_206:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[12], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_59[0], r1, r4\n\tjump.gt\t@.BB0_89\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_89\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tshr.s\t5, r5, r3\n\tadd\tr2, r0, stack[r3]\n\tsub.s!\t@CPI0_90[0], r2, r2\n\tjump.ne\t@.BB0_128\n\tadd\t@CPI0_45[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_106\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_131\n\tadd\t@CPI0_90[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_44[0], r2, r2\n\tadd\tstack-[13], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_66[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_96[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[12]\n\tsub.s!\t@CPI0_65[0], r1, r1\n\tjump.gt\t@.BB0_89\n\tadd\tstack-[12], r0, r3\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tadd\t64, r3, r1\n\tadd\t@CPI0_97[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r1\n\tadd\t@CPI0_98[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t39, r0, r1\n\tst.1\tr3, r1\n\tld.1\t128, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[13], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_215\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_217\n.BB0_133:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_103[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_104[0], r0, r3\n\tjump\t@.BB0_134\n.BB0_128:\n\tadd\t100, r1, r2\n\tadd\t@CPI0_94[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_95[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tjump\t@.BB0_135\n.BB0_310:\n\tld\tr1, r7\n\tsub.s\t32, r0, r8\n\tadd\tr0, r0, r9\n\tadd\tstack-[4], r0, r10\n.BB0_311:\n\tld.1\t64, r11\n\tsub.s!\t@CPI0_65[0], r11, r1\n\tjump.gt\t@.BB0_89\n\tadd\t96, r11, r12\n\tst.1\t64, r12\n\tsload\tr7, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_313\n\tst.1\tr12, r4\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_317\n\tadd\tr4, r0, stack-[11]\n\tadd\tr12, r0, stack-[8]\n\tadd\tr11, r0, stack-[9]\n\tadd\tr10, r0, stack-[12]\n\tadd\tr9, r0, stack-[13]\n\tadd\tr7, r0, stack-[10]\n\tst.1\t0, r7\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r13\n\tsub!\tr13, r0, r2\n\tsub.s\t32, r0, r8\n\tadd\tstack-[13], r0, r9\n\tadd\tstack-[12], r0, r10\n\tjump.eq\t@.BB0_320\n\tadd\tstack-[9], r0, r11\n\tadd\t128, r11, r2\n\tld\tr1, r3\n\tadd\tr0, r0, r1\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[10], r0, r7\n\tadd\tstack-[8], r0, r12\n.BB0_322:\n\tadd\tr2, r1, r4\n\tsload\tr3, r5\n\tst.1\tr4, r5\n\tadd\t1, r3, r3\n\tadd\t32, r1, r1\n\tsub!\tr1, r13, r4\n\tjump.lt\t@.BB0_322\n\tjump\t@.BB0_315\n.BB0_317:\n\tand\t@CPI0_115[0], r1, r1\n\tadd\t128, r11, r2\n\tst.1\tr2, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_315\n.BB0_320:\n\tadd\tr0, r0, r1\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[10], r0, r7\n\tadd\tstack-[9], r0, r11\n\tadd\tstack-[8], r0, r12\n.BB0_315:\n\tadd\t63, r1, r1\n\tand\tr1, r8, r2\n\tadd\tr2, r12, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_59[0], r1, r3\n\tjump.gt\t@.BB0_89\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_89\n\tadd\t32, r10, r10\n\tst.1\t64, r1\n\tst.1.inc\tr11, r12, r1\n\tadd\t1, r7, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t2, r7, r1\n\tsload\tr1, r1\n\tadd\t64, r11, r2\n\tst.1\tr2, r1\n\tst.1\tr10, r11\n\tadd\t3, r7, r7\n\tadd\t1, r9, r9\n\tsub!\tr9, r6, r1\n\tjump.lt\t@.BB0_311\n\tjump\t@.BB0_324\n.BB0_313:\n\tadd\t@CPI0_78[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_79[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_325:\n\tadd\tr0, r0, r2\n\tjump\t@.BB0_326\n.BB0_328:\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_387\n.BB0_326:\n\tsub!\tr2, r4, r3\n\tjump.eq\t@.BB0_328\n\tshl.s\t5, r2, r3\n\tadd\tr5, r3, r3\n\tld.1\tr3, r3\n\tadd\t32, r3, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_328\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getDetails, @DEFAULT_UNWIND\n\tshl.s\t1, r5, r1\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_332\n\tdiv\tr1, r5, r2, r3\n\tsub.s!\t2, r2, r2\n\tjump.ne\t@.BB0_61\n.BB0_332:\n\tld.1\t128, r2\n\tsub!\tr2, r0, r3\n\tjump.ne\t@.BB0_334\n.BB0_333:\n\tadd\t@CPI0_78[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_79[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_464:\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_61\n\tsub.s\t1, r1, r6\n\tld.1\t64, r1\n\tadd\t32, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\t128, r3\n\tshl.s\t5, r3, r4\n\tadd\tr1, r4, r4\n\tst.1\tr2, r3\n\tadd\t64, r4, r5\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_489\n.BB0_494:\n\tsub\tr5, r1, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_66[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_67[0], r0, r4\n\tjump\t@.BB0_258\n.BB0_489:\n\tadd\tr0, r0, r4\n\tadd\t128, r0, r12\n\tjump\t@.BB0_490\n.BB0_493:\n\tadd\tr5, r7, r8\n\tst.1\tr8, r0\n\tadd\t31, r7, r7\n\tand\t@CPI0_113[0], r7, r7\n\tadd\tr5, r7, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r7\n\tjump.ge\t@.BB0_494\n.BB0_490:\n\tsub\tr5, r1, r7\n\tsub.s\t64, r7, r7\n\tadd\t32, r2, r2\n\tst.1\tr2, r7\n\tadd\t32, r12, r12\n\tld.1\tr12, r7\n\tld.1.inc\tr7, r7, r8\n\tst.1.inc\tr5, r7, r5\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB0_493\n\tadd\tr0, r0, r9\n.BB0_492:\n\tadd\tr9, r5, r10\n\tadd\tr8, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB0_492\n\tjump\t@.BB0_493\n.BB0_391:\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tld.1\t64, r3\n\tst.1\tr3, r2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r5\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_81[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_329:\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tst.1\t0, r2\n\tadd\t9, r0, r2\n\tst.1\t32, r2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t64, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_334:\n\tdiv.s\t100, r1, stack-[10], r1\n\tdiv\tstack-[10], r2, r2, r1\n\tadd\tr2, r0, stack-[12]\n\tadd\tr0, r0, r2\n.BB0_339:\n\tadd\tr2, r0, stack-[13]\n\tshl.s\t5, r2, r1\n\tadd\t160, r1, r1\n\tadd\tr1, r0, stack-[11]\n\tld.1\tr1, r1\n\tand\t@CPI0_41[0], r1, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[12], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_61\n\tsstore\tr1, r2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t10, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t128, r2\n\tsub.s!\tstack-[13], r2, r2\n\tjump.le\t@.BB0_272\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_41[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[13], r0, r2\n\tadd\t1, r2, r2\n\tld.1\t128, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB0_339\n\tld.1\t64, r1\n\tadd\t96, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\t96, r1, r3\n\tld.1\t128, r4\n\tst.1\tr3, r4\n\tadd\t128, r1, r3\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_338\n\tadd\t128, r0, r5\n\tadd\tr0, r0, r6\n.BB0_337:\n\tadd\t32, r5, r5\n\tld.1\tr5, r7\n\tand\t@CPI0_41[0], r7, r7\n\tst.1.inc\tr3, r7, r3\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_337\n.BB0_338:\n\tadd\t64, r1, r4\n\tadd\tstack-[12], r0, r5\n\tst.1\tr4, r5\n\tadd\tstack-[10], r0, r4\n\tst.1\tr2, r4\n\tsub\tr3, r1, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\tr2, r1, r1\n\tadd\t4, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r5\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_66[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_80[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\t5, r0, r3\n\tsload\tr3, r3\n\tsub!\tr3, r2, r3\n\tjump.le\t@.BB0_272\n\tshl.s\t1, r2, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\t@CPI0_64[0], r2, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[4]\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r3\n\tadd\t@CPI0_63[0], r3, stack-[13]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getDetails, @DEFAULT_UNWIND\n\tadd\tr3, r0, stack-[3]\n\tmul\t5, r5, stack-[12], r1\n\tadd\tr5, r0, stack-[11]\n\tsub!\tr5, r0, r1\n\tjump.eq\t@.BB0_349\n\tadd\tstack-[12], r0, r2\n\tdiv.s\tstack-[11], r2, r1, r2\n\tsub.s!\t5, r1, r1\n\tjump.ne\t@.BB0_61\n.BB0_349:\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_41[0], r1, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[12], r0, r2\n\tdiv.s\t100, r2, r2, r3\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_61\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r3\n\tmul\t88, r3, r1, r2\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB0_353\n\tdiv.s\tstack-[11], r1, r2, r3\n\tsub.s!\t88, r2, r2\n\tjump.ne\t@.BB0_61\n.BB0_353:\n\tsub!\tstack-[4], r0, r2\n\tjump.eq\t@.BB0_329\n\tdiv.s\t100, r1, stack-[5], r1\n\tadd\tstack-[3], r0, r1\n\tadd\t32, r1, stack-[1]\n\tadd\tr0, r0, stack-[8]\n\tjump\t@.BB0_355\n.BB0_367:\n\tadd\tstack-[8], r0, r2\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\tstack-[4], r2, r1\n\tjump.ge\t@.BB0_329\n.BB0_355:\n\tadd\t36, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB0_272\n\tshl.s\t5, r1, r1\n\tadd\tstack-[1], r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_59[0], r2, r2\n\tjump.gt\t@.BB0_89\n\tadd\tstack-[13], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_60[0], r2, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[9]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_59[0], r2, r4\n\tjump.gt\t@.BB0_89\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_89\n\tst.1\t64, r2\n\tadd\tstack-[9], r0, r2\n\tadd\tstack-[13], r0, r3\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[7]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub!\tstack-[13], r0, r2\n\tjump.eq\t@.BB0_363\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n\tadd\tstack-[7], r0, r3\n.BB0_365:\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_77[0], r4, r5\n\tjump.gt\t@.BB0_89\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tsload\tr1, r5\n\tand\t@CPI0_41[0], r5, r5\n\tst.1.inc\tr4, r5, r5\n\tadd\t1, r1, r6\n\tsload\tr6, r6\n\tst.1\tr5, r6\n\tst.1.inc\tr3, r4, r3\n\tadd\t2, r1, r1\n\tadd\t1, r2, r2\n\tsub.s!\tstack-[13], r2, r4\n\tjump.lt\t@.BB0_365\n.BB0_363:\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_367\n\tadd\tr0, r0, stack-[12]\n.BB0_368:\n\tadd\tstack-[12], r0, r1\n\tshl.s\t5, r1, r1\n\tadd\tstack-[7], r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tld.1.inc\tr1, r1, r2\n\tand\t@CPI0_41[0], r1, r1\n\tadd\tr2, r0, stack-[10]\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[13]\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[13], r2, r3\n\tjump.lt\t@.BB0_61\n\tsub.s\tstack-[13], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t36, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub!\tstack-[8], r1, r1\n\tjump.ne\t@.BB0_372\n\tadd\tstack-[13], r0, r3\n\tmul\tstack-[5], r3, r1, r2\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB0_381\n\tdiv.s\tstack-[13], r1, r2, r3\n\tsub!\tstack-[5], r2, r2\n\tjump.ne\t@.BB0_61\n.BB0_381:\n\tsub!\tstack-[6], r0, r2\n\tjump.eq\t@.BB0_333\n\tdiv.s\tstack-[6], r1, r2, r1\n\tadd\tr2, r0, stack-[10]\n\tsub.s!\tstack-[13], r2, r1\n\tjump.lt\t@.BB0_61\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_41[0], r1, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r3\n\tsub.s\tstack-[13], r3, stack-[13]\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[13], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_61\n\tsstore\tr1, r2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t10, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_41[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tjump\t@.BB0_378\n.BB0_372:\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_41[0], r1, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[13], r2, r3\n\tjump.lt\t@.BB0_61\n\tsub.s\tstack-[13], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tsub\t0, r1, stack-[13]\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_376\n\tdiv.s!\t@CPI0_62[0], r1, r1, r2\n\tsub\t@CPI0_62[0], r2, r3\n\tadd.eq\tr2, r0, r3\n\tadd\tstack-[13], r0, r2\n\tdiv.s!\t@CPI0_62[0], r2, r2, r4\n\txor\tr2, r1, r1\n\tsub\t@CPI0_62[0], r4, r2\n\tadd.eq\tr4, r0, r2\n\tdiv\tr2, r3, r3, r2\n\tshl.s!\t255, r1, r1\n\tsub\tr1, r3, r2\n\tor\tr2, r1, r1\n\tadd.eq\tr3, r0, r1\n\tsub!\tr3, r0, r2\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t@CPI0_114[0], r3, r1\n\tjump.ne\t@.BB0_61\n.BB0_376:\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t10, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_41[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n.BB0_378:\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[12], r0, r2\n\tadd\t1, r2, stack-[12]\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tsub!\tstack-[12], r1, r1\n\tjump.lt\t@.BB0_368\n\tjump\t@.BB0_367\n.BB0_272:\n\tadd\t@CPI0_78[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_79[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_139:\n\tadd\tstack-[9], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t64, r4, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tand\t1, r2, stack-[12]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_141:\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_153\n\tadd\t96, r0, r1\n\tadd\t128, r0, r2\n.BB0_143:\n\tld.1\tr1, r1\n\tsub!\tstack-[12], r0, r3\n\tjump.ne\t@.BB0_148\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_147\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[13]\n\tadd\t@CPI0_49[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r2\n\tadd\tstack-[11], r0, r1\n\tjump\t@.BB0_146\n.BB0_153:\n\tsub.s!\t@CPI0_59[0], r3, r1\n\tjump.gt\t@.BB0_89\n\tadd\t31, r3, r1\n\tand\t@CPI0_113[0], r1, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_113[0], r1, r2\n\tld.1\t64, r1\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_59[0], r2, r5\n\tjump.gt\t@.BB0_89\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_89\n\tst.1\t64, r2\n\tand\t31, r3, r4\n\tst.1.inc\tr1, r3, r2\n\tptr.add\tstack[@ptr_return_data], r0, r5\n\tshr.s!\t5, r3, r3\n\tshl.s\t5, r3, r3\n\tjump.eq\t@.BB0_159\n\tadd\tr2, r3, r6\n\tptr.add\tr5, r0, r7\n\tadd\tr2, r0, r8\n.BB0_158:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_158\n.BB0_159:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_143\n\tptr.add\tr5, r3, r5\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n\tjump\t@.BB0_143\n.BB0_148:\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_101\n\tadd\t@CPI0_45[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tjump\t@.BB0_150\n.BB0_215:\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_99[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tand\t1, r2, stack-[11]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_217:\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_224\n\tadd\t96, r0, r1\n\tadd\t128, r0, r2\n.BB0_219:\n\tld.1\tr1, r1\n\tsub!\tstack-[11], r0, r3\n\tjump.ne\t@.BB0_222\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_147\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[13]\n\tadd\t@CPI0_49[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r2\n\tadd\tstack-[12], r0, r1\n.BB0_146:\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r3\n\tsub\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_147:\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_224:\n\tsub.s!\t@CPI0_59[0], r3, r1\n\tjump.gt\t@.BB0_89\n\tadd\t31, r3, r1\n\tand\t@CPI0_113[0], r1, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_113[0], r1, r2\n\tld.1\t64, r1\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_59[0], r2, r5\n\tjump.gt\t@.BB0_89\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_89\n\tst.1\t64, r2\n\tand\t31, r3, r4\n\tst.1.inc\tr1, r3, r2\n\tptr.add\tstack[@ptr_return_data], r0, r5\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_230\n\tshl.s\t5, r3, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr5, r0, r7\n\tadd\tr2, r0, r8\n.BB0_229:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_229\n.BB0_230:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_219\n\tshl.s\t5, r3, r3\n\tptr.add\tr5, r3, r5\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n\tjump\t@.BB0_219\n.BB0_222:\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_101\n\tadd\t@CPI0_45[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n.BB0_150:\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_106\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_101\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_105[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tjump\t@.BB0_94\n.BB0_106:\n\trevert\n.func_end0:\n\nstorage_array_index_access_struct_ProposalInfo__dyn_24681:\n.func_begin1:\n\tadd\t5, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB1_1\n\tst.1\t0, r2\n\tshl.s\t1, r1, r1\n\tadd\t@CPI1_2[0], r1, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nstorage_array_index_access_struct_ProposalInfo__dyn:\n.func_begin2:\n\tnop\tstack+=[1 + r0]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB2_1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_2[0], r1, r2\n\tadd.ge\t@CPI2_2[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_3\n\tadd\tstack-[1], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tret\n.BB2_1:\n\tadd\t@CPI2_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_encode_string:\n.func_begin3:\n\tld.1.inc\tr1, r3, r4\n\tst.1.inc\tr2, r3, r1\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB3_3\n\tadd\tr0, r0, r2\n.BB3_2:\n\tadd\tr1, r2, r5\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r2, r2\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB3_2\n.BB3_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tand\t@CPI3_0[0], r2, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end3:\n\nabi_encode_array_string_dyn:\n.func_begin4:\n\tld.1\tr1, r4\n\tst.1\tr2, r4\n\tshl.s\t5, r4, r3\n\tadd\tr2, r3, r3\n\tadd\t32, r3, r3\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB4_6\n\tadd\tr0, r0, r6\n\tadd\tr2, r0, r7\n\tjump\t@.BB4_2\n.BB4_5:\n\tadd\tr3, r8, r9\n\tst.1\tr9, r0\n\tadd\t31, r8, r8\n\tand\t@CPI4_0[0], r8, r8\n\tadd\tr3, r8, r3\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r8\n\tjump.ge\t@.BB4_6\n.BB4_2:\n\tsub\tr3, r2, r8\n\tsub.s\t32, r8, r8\n\tadd\t32, r7, r7\n\tst.1\tr7, r8\n\tadd\t32, r1, r1\n\tld.1\tr1, r8\n\tld.1.inc\tr8, r8, r9\n\tst.1.inc\tr3, r8, r3\n\tsub!\tr8, r0, r10\n\tjump.eq\t@.BB4_5\n\tadd\tr0, r0, r10\n.BB4_4:\n\tadd\tr10, r3, r11\n\tadd\tr9, r10, r12\n\tld.1\tr12, r12\n\tst.1\tr11, r12\n\tadd\t32, r10, r10\n\tsub!\tr10, r8, r11\n\tjump.lt\t@.BB4_4\n\tjump\t@.BB4_5\n.BB4_6:\n\tadd\tr3, r0, r1\n\tret\n.func_end4:\n\nabi_encode_array_uint256_dyn:\n.func_begin5:\n\tadd\tr1, r0, r3\n\tld.1\tr3, r4\n\tst.1.inc\tr2, r4, r1\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB5_3\n\tadd\tr0, r0, r2\n.BB5_2:\n\tadd\t32, r3, r3\n\tld.1\tr3, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB5_2\n.BB5_3:\n\tret\n.func_end5:\n\nfun_getAvailableBalance:\n.func_begin6:\n\tnop\tstack+=[4 + r0]\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tld.1\t64, r11\n\tadd\t@CPI6_0[0], r0, r3\n\tst.1.inc\tr11, r3, r5\n\tand\t@CPI6_1[0], r1, r3\n\tadd\t4, r11, r1\n\tadd\tr3, r0, stack-[4]\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI6_1[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB6_2\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB6_14\n.BB6_2:\n\tsub.s!\t@CPI6_2[0], r11, r3\n\tadd\t@CPI6_2[0], r0, r3\n\tadd.lt\tr11, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI6_2[0], r1, r4\n\tadd.ge\t@CPI6_2[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI6_3[0], r1, r1\n\tadd\tr11, r0, stack-[3]\n\tadd\tr5, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r10\n\tadd\tstack-[3], r0, r11\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI6_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB6_5\n\tptr.add\tr1, r0, r7\n\tadd\tr11, r0, r8\n.BB6_4:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB6_4\n.BB6_5:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB6_7\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr11, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB6_7:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_8\n.BB6_14:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r11, r10\n\tsub!\tr10, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI6_4[0], r10, r4\n\tjump.gt\t@.BB6_16\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB6_16\n\tst.1\t64, r10\n\tsub.s!\t31, r3, r2\n\tjump.le\t@.BB6_19\n\tld.1\tr11, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tadd\t@CPI6_5[0], r0, r4\n\tst.1.inc\tr10, r4, r6\n\tadd\t4, r10, r4\n\tadd\tstack-[4], r0, r5\n\tst.1\tr4, r5\n\tcontext.gas_left\tr4\n\tand\t@CPI6_1[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.eq\t@.BB6_34\n\tsub.s!\t@CPI6_2[0], r10, r1\n\tadd\t@CPI6_2[0], r0, r1\n\tadd.lt\tr10, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI6_2[0], r4, r3\n\tadd.ge\t@CPI6_2[0], r0, r4\n\tshl.s\t192, r4, r3\n\tor\tr3, r1, r1\n\tor\t@CPI6_3[0], r1, r1\n\tadd\tr10, r0, stack-[2]\n\tadd\tr6, r0, stack-[1]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r11\n\tadd\tstack-[2], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI6_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB6_24\n\tptr.add\tr1, r0, r7\n\tadd\tr10, r0, r8\n.BB6_23:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r11, r9\n\tjump.ne\t@.BB6_23\n.BB6_24:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB6_26\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB6_26:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_28\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n.BB6_34:\n\tadd\tr1, r10, r1\n\tsub.s!\t@CPI6_4[0], r1, r2\n\tjump.gt\t@.BB6_16\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB6_19\n\tld.1\tr10, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI6_2[0], r1, r2\n\tadd.ge\t@CPI6_2[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_19\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[2], r1, r1\n\tsub.s!\tstack-[2], r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t1, r2, r2\n\tjump.eq\t@.BB6_38\n\tadd\tstack-[3], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB6_38\n\tadd\tr2, r0, stack-[3]\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI6_2[0], r1, r2\n\tadd.ge\t@CPI6_2[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_19\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[3], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.lt\t@.BB6_38\n\tsub\tr1, r3, r1\n\tret\n.BB6_19:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_38:\n\tadd\t@CPI6_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_16:\n\tadd\t@CPI6_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_8:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB6_11\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB6_10:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB6_10\n.BB6_11:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB6_13\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB6_13:\n\tshl.s\t96, r3, r1\n\tsub.s!\t@CPI6_2[0], r2, r3\n\tadd.ge\t@CPI6_2[0], r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_28:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB6_31\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB6_30:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB6_30\n.BB6_31:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB6_33\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB6_33:\n\tshl.s\t96, r3, r1\n\tsub.s!\t@CPI6_2[0], r2, r3\n\tadd.ge\t@CPI6_2[0], r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_getDetails:\n.func_begin7:\n\tnop\tstack+=[16 + r0]\n\tadd\t5, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB7_1\n\tst.1\t0, r2\n\tshl.s\t1, r1, r2\n\tadd\t@CPI7_0[0], r2, r1\n\tadd\t@CPI7_1[0], r2, r11\n\tsload\tr11, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI7_2[0], r2, r2\n\tjump.ge\t@.BB7_4\n\tadd\tstack-[8], r0, r2\n\tshl.s\t5, r2, r5\n\tadd\t63, r5, r2\n\tand\t@CPI7_3[0], r2, r2\n\tld.1\t64, r4\n\tadd\tr4, r2, r3\n\tadd\tr4, r0, stack-[12]\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI7_4[0], r3, r6\n\tjump.gt\t@.BB7_4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB7_4\n\tst.1\t64, r3\n\tadd\tstack-[12], r0, r3\n\tadd\tstack-[8], r0, r4\n\tst.1.inc\tr3, r4, r7\n\tsub!\tr4, r0, r3\n\tjump.eq\t@.BB7_10\n\tadd\t96, r0, r3\n\tadd\tr0, r0, r4\n.BB7_9:\n\tadd\tr7, r4, r6\n\tst.1\tr6, r3\n\tadd\t32, r4, r4\n\tsub!\tr4, r5, r6\n\tjump.lt\t@.BB7_9\n.BB7_10:\n\tadd\tr7, r0, stack-[3]\n\tld.1\t64, r4\n\tadd\tr4, r2, r3\n\tadd\tr4, r0, stack-[7]\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI7_4[0], r3, r6\n\tjump.gt\t@.BB7_4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB7_4\n\tst.1\t64, r3\n\tadd\tstack-[8], r0, r3\n\tadd\tstack-[7], r0, r4\n\tst.1.inc\tr4, r3, r3\n\tadd\tr3, r0, stack-[5]\n\tand\t31, r5, r3\n\tadd\tstack[@calldatasize], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r5, r6\n\tshl.s\t5, r6, r5\n\tjump.eq\t@.BB7_15\n\tadd\tstack-[5], r0, r9\n\tadd\tr9, r5, r7\n\tptr.add\tr4, r0, r8\n.BB7_14:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB7_14\n.BB7_15:\n\tsub!\tr3, r0, r7\n\tjump.eq\t@.BB7_17\n.BB7_17:\n\tld.1\t64, r7\n\tadd\tr7, r2, r2\n\tadd\tr7, r0, stack-[6]\n\tsub!\tr2, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI7_4[0], r2, r8\n\tjump.gt\t@.BB7_4\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB7_4\n\tst.1\t64, r2\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[6], r0, r7\n\tst.1.inc\tr7, r2, r2\n\tadd\tr2, r0, stack-[4]\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB7_22\n\tadd\tstack-[4], r5, r2\n\tadd\tstack-[4], r0, r5\n.BB7_21:\n\tld.inc\tr4, r6, r4\n\tst.1.inc\tr5, r6, r5\n\tsub!\tr5, r2, r6\n\tjump.ne\t@.BB7_21\n.BB7_22:\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB7_24\n.BB7_24:\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tsub!\tstack-[8], r0, r1\n\tjump.eq\t@.BB7_25\n\tadd\tr0, r0, stack-[11]\n\tadd\tr0, r0, stack-[10]\n\tadd\tr0, r0, r2\n\tadd\tr11, r0, stack-[15]\n.BB7_28:\n\tsload\tr11, r1\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB7_1\n\tadd\tr2, r0, stack-[16]\n\tst.1\t0, r11\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_5[0], r1, r2\n\tadd.ge\t@CPI7_5[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_30\n\tadd\tstack-[16], r0, r6\n\tmul\t3, r6, stack-[14], r2\n\tld\tr1, r1\n\tadd\tstack-[14], r1, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r5\n\tadd.ne\tr4, r0, r5\n\tsub.s!\t31, r5, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB7_32\n\tld.1\t64, r7\n\tst.1.inc\tr7, r5, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB7_36\n\tadd\tr4, r0, stack-[2]\n\tadd\tr5, r0, stack-[13]\n\tadd\tr7, r0, stack-[9]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_5[0], r1, r2\n\tadd.ge\t@CPI7_5[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_30\n\tadd\tstack-[13], r0, r8\n\tsub!\tr8, r0, r2\n\tadd\tstack-[16], r0, r6\n\tjump.eq\t@.BB7_39\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[15], r0, r5\n\tadd\tstack-[9], r0, r7\n\tadd\tstack-[2], r0, r9\n.BB7_41:\n\tadd\tr9, r1, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB7_41\n\tjump\t@.BB7_34\n.BB7_36:\n\tand\t@CPI7_10[0], r2, r1\n\tst.1\tr4, r1\n\tsub!\tr5, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tadd\tstack-[15], r0, r5\n\tjump\t@.BB7_34\n.BB7_39:\n\tadd\tr0, r0, r1\n\tadd\tstack-[15], r0, r5\n\tadd\tstack-[9], r0, r7\n.BB7_34:\n\tadd\t63, r1, r1\n\tand\t@CPI7_11[0], r1, r2\n\tadd\tr2, r7, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI7_4[0], r1, r3\n\tjump.gt\t@.BB7_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB7_4\n\tst.1\t64, r1\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r6, r1\n\tjump.le\t@.BB7_1\n\tshl.s\t5, r6, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\tstack-[3], r2, r1\n\tst.1\tr1, r7\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r6, r1\n\tjump.le\t@.BB7_1\n\tsload\tr5, r1\n\tsub!\tr1, r6, r1\n\tjump.le\t@.BB7_1\n\tst.1\t0, r5\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_5[0], r1, r2\n\tadd.ge\t@CPI7_5[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_30\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[16], r0, r4\n\tsub!\tr2, r4, r2\n\tadd\tstack-[15], r0, r3\n\tjump.le\t@.BB7_1\n\tadd\tstack-[13], r0, r5\n\tadd\tstack-[5], r5, r2\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r5\n\tadd\t1, r5, stack-[9]\n\tadd\tstack-[9], r1, r1\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tsload\tr3, r1\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB7_1\n\tst.1\t0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_5[0], r1, r2\n\tadd.ge\t@CPI7_5[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_30\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[16], r0, r4\n\tsub!\tr2, r4, r2\n\tadd\tstack-[15], r0, r3\n\tjump.le\t@.BB7_1\n\tadd\tstack-[13], r0, r5\n\tadd\tstack-[4], r5, r2\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r5\n\tadd\t2, r5, stack-[14]\n\tadd\tstack-[14], r1, r1\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tsload\tr3, r1\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB7_1\n\tst.1\t0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_5[0], r1, r2\n\tadd.ge\t@CPI7_5[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_30\n\tld\tr1, r1\n\tadd\tstack-[14], r1, r1\n\tsload\tr1, r1\n\tadd\tstack-[11], r1, stack-[11]\n\tsub!\tstack-[11], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t1, r1, r1\n\tadd\tstack-[16], r0, r3\n\tjump.eq\t@.BB7_53\n\tadd\tstack-[15], r0, r2\n\tsload\tr2, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB7_1\n\tst.1\t0, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_5[0], r1, r2\n\tadd.ge\t@CPI7_5[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_30\n\tld\tr1, r1\n\tadd\tstack-[9], r1, r1\n\tsload\tr1, r1\n\tadd\tstack-[10], r1, stack-[10]\n\tsub!\tstack-[10], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tadd\tstack-[16], r0, r2\n\tjump.ne\t@.BB7_53\n\tadd\t1, r2, r2\n\tsub.s!\tstack-[8], r2, r1\n\tadd\tstack-[15], r0, r11\n\tjump.lt\t@.BB7_28\n\tjump\t@.BB7_57\n.BB7_25:\n\tadd\tr0, r0, stack-[10]\n\tadd\tr0, r0, stack-[11]\n.BB7_57:\n\tadd\tstack-[1], r0, r1\n\tand\t@CPI7_9[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tadd\tstack-[7], r0, r3\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[11], r0, r6\n\tret\n.BB7_1:\n\tadd\t@CPI7_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_30:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_53:\n\tadd\t@CPI7_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_4:\n\tadd\t@CPI7_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_32:\n\tadd\t@CPI7_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\n__cxa_throw:\n.func_begin8:\n\trevert\n.func_end8:\n\n__sha3:\n.func_begin9:\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.ge\t@CPI9_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tret\n.BB9_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\n__farcall:\n.func_begin10:\n.tmp0:\n\tfar_call\tr1, r2, @.BB10_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB10_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end10:\n\n__staticcall:\n.func_begin11:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB11_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB11_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end11:\n\n__delegatecall:\n.func_begin12:\n.tmp6:\n\tfar_call.delegate\tr1, r2, @.BB12_2\n.tmp7:\n\tadd\t1, r0, r2\n\tret\n.BB12_2:\n.tmp8:\n\tadd\tr0, r0, r2\n\tret\n.func_end12:\n\n\t.data\n\t.p2align\t5, 0x0\ncalldatasize:\n\t.cell\t0\n\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell\t0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n\t.cell\t0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n\t.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_2:\nCPI6_2:\nCPI7_5:\nCPI9_0:\n\t.cell\t4294967295\nCPI0_1:\n\t.cell\t53919893334301279589334030174039261357415493651629346657050491355136\nCPI0_2:\n\t.cell\t2319916536\nCPI0_3:\n\t.cell\t3065339684\nCPI0_4:\n\t.cell\t3184955541\nCPI0_5:\n\t.cell\t3234151306\nCPI0_6:\n\t.cell\t3234151307\nCPI0_7:\n\t.cell\t4215203109\nCPI0_8:\n\t.cell\t3184955542\nCPI0_9:\n\t.cell\t3185108782\nCPI0_10:\n\t.cell\t3065339685\nCPI0_11:\n\t.cell\t3079752283\nCPI0_12:\n\t.cell\t3107621367\nCPI0_13:\n\t.cell\t2607769533\nCPI0_14:\n\t.cell\t2953212859\nCPI0_15:\n\t.cell\t2953212860\nCPI0_16:\n\t.cell\t3037803149\nCPI0_17:\n\t.cell\t2607769534\nCPI0_18:\n\t.cell\t2619329612\nCPI0_19:\n\t.cell\t2319916537\nCPI0_20:\n\t.cell\t2321962454\nCPI0_21:\n\t.cell\t2376452955\nCPI0_22:\n\t.cell\t1184945417\nCPI0_23:\n\t.cell\t1590956516\nCPI0_24:\n\t.cell\t2088462070\nCPI0_25:\n\t.cell\t2088462071\nCPI0_26:\n\t.cell\t2298472551\nCPI0_27:\n\t.cell\t1590956517\nCPI0_28:\n\t.cell\t1814341487\nCPI0_29:\n\t.cell\t1184945418\nCPI0_30:\n\t.cell\t1327428230\nCPI0_31:\n\t.cell\t1389465645\nCPI0_32:\n\t.cell\t557527026\nCPI0_33:\n\t.cell\t773487948\nCPI0_34:\n\t.cell\t773487949\nCPI0_35:\n\t.cell\t911855590\nCPI0_36:\n\t.cell\t557527027\nCPI0_37:\n\t.cell\t669136355\nCPI0_38:\n\t.cell\t208884704\nCPI0_39:\n\t.cell\t231374552\nCPI0_40:\n\t.cell\t334144628\nCPI0_41:\nCPI6_1:\nCPI7_9:\n\t.cell\t1461501637330902918203684832716283019655932542975\nCPI0_42:\n\t.cell\t7938186097999196165550678859506685896924014503924332068426884830790147899392\nCPI0_43:\n\t.cell\t2852213852874699394802404818944\nCPI0_44:\n\t.cell\t-1461501637330902918203684832716283019655932542976\nCPI0_45:\n\t.cell\t10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_46:\n\t.cell\t904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_47:\n\t.cell\t45445297051470054334538976711054531813460623115156291166328260229624781340672\nCPI0_48:\n\t.cell\t33213918945522163348297488160619434111254143694905912425159868126486596838753\nCPI0_49:\n\t.cell\t3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_50:\n\t.cell\t10458117451882892562347801444352\nCPI0_51:\n\t.cell\t-65536\nCPI0_52:\n\t.cell\t-95780971304118053647396689196894323976171195136409601\nCPI0_53:\n\t.cell\t95780971304118053647396689196894323976171195136409600\nCPI0_54:\n\t.cell\t-95780971304118053647396689196894323976171195136474881\nCPI0_55:\nCPI2_3:\nCPI7_6:\n\t.cell\t904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_56:\n\t.cell\t57512143604608921510564439283751233207941214245504845198923540334447261918360\nCPI0_57:\nCPI6_6:\n\t.cell\t904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_58:\n\t.cell\t5070602400912917605986812821504\nCPI0_59:\nCPI6_4:\nCPI7_4:\n\t.cell\t18446744073709551615\nCPI0_60:\nCPI7_3:\n\t.cell\t57896044618658097711785492504343953926634992332820282019728792003956564819936\nCPI0_61:\n\t.cell\t18446744073709551487\nCPI0_62:\n\t.cell\t-57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_63:\nCPI1_2:\nCPI7_0:\n\t.cell\t1546678032441257452667456735582814959992782782816731922691272282333561699760\nCPI0_64:\nCPI7_1:\n\t.cell\t1546678032441257452667456735582814959992782782816731922691272282333561699761\nCPI0_65:\n\t.cell\t18446744073709551519\nCPI0_66:\nCPI9_1:\n\t.cell\t904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_67:\n\t.cell\t46419076093724414490178301494061312062227912383242009810536638522858719328150\nCPI0_68:\n\t.cell\t49028999266035449301342553848648074417975177832487347009785180748193841807360\nCPI0_69:\n\t.cell\t7922816251426433759354395033600\nCPI0_70:\n\t.cell\t16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI0_71:\n\t.cell\t7922816253787617000789217640448\nCPI0_72:\n\t.cell\t20644549604082266639320257001935285394590065917650136896563126397825491550916\nCPI0_73:\n\t.cell\t2535301200456458802993406410752\nCPI0_74:\n\t.cell\t38196372293521921433411762994267191979435640421026993835185098046675554926592\nCPI0_75:\n\t.cell\t2535301202817642044428229017600\nCPI0_76:\n\t.cell\t-47653088947595947423240341744310739022206201366799277887117616097886874646394\nCPI0_77:\n\t.cell\t18446744073709551551\nCPI0_78:\nCPI1_0:\nCPI2_0:\nCPI6_7:\nCPI7_7:\n\t.cell\t35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_79:\nCPI1_1:\nCPI2_1:\nCPI6_3:\nCPI7_8:\n\t.cell\t2852213850513516153367582212096\nCPI0_80:\n\t.cell\t7330184513308653976301909379189642925371393504458530269697811456251121443565\nCPI0_81:\n\t.cell\t-32676116808334770670289374676198157334260471302875827956403144357841604328279\nCPI0_82:\n\t.cell\t-27514650628698614327385758459027185577806530076164398494097370979218518502413\nCPI0_83:\n\t.cell\t33213987989631693067883787898815262639149058089589072814951568724554042834944\nCPI0_84:\n\t.cell\t-43067023955033480567853467081775867294279059859270083075164962988079633625764\nCPI0_85:\n\t.cell\t36381875572075844324894750588325429381126206888783052179668393946721502458479\nCPI0_86:\n\t.cell\t22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_87:\n\t.cell\t904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_88:\n\t.cell\t49028930250147552009423198470819527052274638315267462323702687215708847210496\nCPI0_89:\n\t.cell\t38597328516464907450381791897611812109118893678090996085186089136390337159532\nCPI0_90:\n\t.cell\t24440054405305269366569402256811496959409073762505157381672968839269610695612\nCPI0_91:\n\t.cell\t33048860383849004559742813297059419343339852917517107368639918720169455489347\nCPI0_92:\n\t.cell\t37459919685038064034459671678110462261607019371023489081125878126755520184320\nCPI0_93:\n\t.cell\t316912650057057350374175801344\nCPI0_94:\n\t.cell\t47664912560014345066685778438402563143956901868464129892614585335817688842240\nCPI0_95:\n\t.cell\t31354931755624933825474123435272379398210001229669056050698106585324926955384\nCPI0_96:\n\t.cell\t-30536698362301869620703524882028299911890425965968411027149867401609008632517\nCPI0_97:\n\t.cell\t14654901866877395549149391597484105336708473837108585137082493300548441210880\nCPI0_98:\n\t.cell\t29577713123142787666065354962605974352286555015652805685687967870311454567532\nCPI0_99:\n\t.cell\t2951479051793528258560\nCPI0_100:\n\t.cell\t44050067617828979011878578625180248225014146853756292052128471792154780368896\nCPI0_101:\n\t.cell\t31869382380800184552205435258528072406063111974373436732989712343482266773536\nCPI0_102:\n\t.cell\t18446744073709551583\nCPI0_103:\n\t.cell\t50401303068669943775684736735757017138977288973911071831392451021110784294912\nCPI0_104:\n\t.cell\t31354931755624933825474123435272379398200649977419909409797735310156391085161\nCPI0_105:\n\t.cell\t29577713123142787666064487680123823951345158729797978021083438401868913442816\nCPI0_106:\n\t.cell\t50411903926665684337970802942352511357568373430877458990420567558264874598400\nCPI0_107:\n\t.cell\t31354931755624933654031447922210259146857421806447843296373930569683382247534\nCPI0_108:\n\t.cell\t45410484534316578986337634331317446511511056819483496063341795534749768351744\nCPI0_109:\n\t.cell\t-39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI0_110:\n\t.cell\t5387515050969974956360988622848\nCPI0_111:\n\t.cell\t-6116999617221423143306666619552877372318735432152700305865106915521926679192\nCPI0_112:\n\t.cell\t-4129715032733121498119326469572296047599217967821350468211647745089658159104\nCPI0_113:\nCPI3_0:\nCPI4_0:\nCPI7_11:\n\t.cell\t-32\nCPI0_114:\n\t.cell\t-1\nCPI0_115:\nCPI7_10:\n\t.cell\t-256\nCPI6_0:\n\t.cell\t-52298863265944019569128077808447796817948664510297933339057252782024633090048\nCPI6_5:\n\t.cell\t-43751834599412613729049840152485536935085370131884728028120224391560523939840\nCPI7_2:\n\t.cell\t18446744073709551616\n","bytecode":{"object":""},"methodIdentifiers":{"addInterest(address,uint256)":"213b2ff3","balances(address)":"27e235e3","create(string[])":"bdd69096","deposit(uint256)":"b6b55f25","exchangePoints(uint256)":"7c7b66f7","getAvailableBalance(address)":"6c24a76f","getDetails(uint256)":"b93a89f7","getVoting(uint256,uint256)":"46a0d50a","initialize(address,address,address)":"c0c53b8b","juryNFTSwap()":"13eaa474","logicAddress()":"9c1fcc4c","mlnToken()":"8a471df9","owner()":"8da5cb5b","pledge()":"88ffe867","proposalInfos(uint256)":"b511328d","proxiableUUID()":"52d1902d","setNewJuryNFTSwap(address)":"b7914a5b","setNewPledge(address)":"fb3ee525","setNewToken(address)":"5ed411e5","settle(uint256,uint256,address[])":"9b6f67be","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","userProposalResults(uint256,address)":"0c7353e0","vote(uint256,uint256,uint256)":"8a6655d6","voting(uint256,uint256,uint256)":"bdd8e72e","votingLock(address)":"b00673bc","winningOption(uint256)":"0dca7ed8","withdraw(uint256)":"2e1a7d4d"}},"irOptimized":"/// @use-src 2:\"@openzeppelin/contracts/interfaces/IERC1967.sol\", 6:\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\", 7:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\", 9:\"@openzeppelin/contracts/proxy/utils/Initializable.sol\", 10:\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\", 40:\"contracts/Proposal.sol\"\nobject \"Proposal_8450\" {\n    code {\n        {\n            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n            let _1 := memoryguard(0xa0)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            /// @src 10:1080:1093  \"address(this)\"\n            mstore(128, /** @src 10:1088:1092  \"this\" */ address())\n            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n            let _2 := datasize(\"Proposal_8450_deployed\")\n            codecopy(_1, dataoffset(\"Proposal_8450_deployed\"), _2)\n            setimmutable(_1, \"695\", mload(/** @src 10:1080:1093  \"address(this)\" */ 128))\n            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n            return(_1, _2)\n        }\n    }\n    /// @use-src 7:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\", 9:\"@openzeppelin/contracts/proxy/utils/Initializable.sol\", 10:\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\", 23:\"@openzeppelin/contracts/utils/Address.sol\", 27:\"@openzeppelin/contracts/utils/StorageSlot.sol\", 40:\"contracts/Proposal.sol\"\n    object \"Proposal_8450_deployed\" {\n        code {\n            {\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x0c7353e0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1 := abi_decode_address()\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 40:2082:2155  \"mapping(uint256 => mapping(address => int256)) public userProposalResults\" */ 10)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let _2 := keccak256(0, 64)\n                        mstore(0, and(value1, sub(shl(160, 1), 1)))\n                        mstore(32, _2)\n                        mstore(_1, sload(keccak256(0, 64)))\n                        return(_1, 32)\n                    }\n                    case 0x0dca7ed8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 40:1975:2023  \"mapping(uint256 => uint256) public winningOption\" */ 9)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let _3 := sload(keccak256(0, 64))\n                        let memPos := mload(64)\n                        mstore(memPos, _3)\n                        return(memPos, 32)\n                    }\n                    case 0x13eaa474 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value := and(sload(/** @src 40:1646:1676  \"JuryNFTSwap public juryNFTSwap\" */ 3), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, value)\n                        return(memPos_1, 32)\n                    }\n                    case 0x213b2ff3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_24670(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 40:3167:3175  \"balances\" */ 0x06)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let dataSlot := keccak256(0, 64)\n                        sstore(dataSlot, /** @src 40:3167:3199  \"balances[user] += interestAmount\" */ checked_add_uint256(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:3167:3199  \"balances[user] += interestAmount\" */ dataSlot), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ calldataload(36)))\n                        return(0, 0)\n                    }\n                    case 0x27e235e3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_24670(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 40:1770:1813  \"mapping(address => uint256) public balances\" */ 6)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let _4 := sload(keccak256(0, 64))\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, _4)\n                        return(memPos_2, 32)\n                    }\n                    case 0x2e1a7d4d {\n                        if callvalue() { revert(0, 0) }\n                        let _5 := 32\n                        if slt(add(calldatasize(), not(3)), _5) { revert(0, 0) }\n                        let value_1 := calldataload(4)\n                        /// @src 40:5556:5587  \"getAvailableBalance(msg.sender)\"\n                        let expr := fun_getAvailableBalance(/** @src 40:5576:5586  \"msg.sender\" */ caller())\n                        /// @src 40:5598:5710  \"if (availableBalance < amount) {...\"\n                        if /** @src 40:5602:5627  \"availableBalance < amount\" */ lt(expr, value_1)\n                        /// @src 40:5598:5710  \"if (availableBalance < amount) {...\"\n                        {\n                            /// @src 40:5650:5699  \"InsufficientBalance(msg.sender, availableBalance)\"\n                            let _6 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                            /// @src 40:5650:5699  \"InsufficientBalance(msg.sender, availableBalance)\"\n                            mstore(_6, shl(226, 0x3db7aa81))\n                            revert(_6, sub(abi_encode_address_uint256(add(_6, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 4), /** @src 40:5576:5586  \"msg.sender\" */ caller(), /** @src 40:5650:5699  \"InsufficientBalance(msg.sender, availableBalance)\" */ expr), _6))\n                        }\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let cleaned := and(sload(/** @src 40:5728:5736  \"mlnToken\" */ 0x02), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 40:5728:5765  \"mlnToken.transfer(msg.sender, amount)\"\n                        let _7 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                        /// @src 40:5728:5765  \"mlnToken.transfer(msg.sender, amount)\"\n                        mstore(_7, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ shl(224, 0xa9059cbb))\n                        /// @src 40:5728:5765  \"mlnToken.transfer(msg.sender, amount)\"\n                        let _8 := call(gas(), cleaned, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0, /** @src 40:5728:5765  \"mlnToken.transfer(msg.sender, amount)\" */ _7, sub(abi_encode_address_uint256(add(_7, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 4), /** @src 40:5576:5586  \"msg.sender\" */ caller(), /** @src 40:5728:5765  \"mlnToken.transfer(msg.sender, amount)\" */ value_1), _7), _7, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _5)\n                        /// @src 40:5728:5765  \"mlnToken.transfer(msg.sender, amount)\"\n                        if iszero(_8)\n                        {\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 40:5728:5765  \"mlnToken.transfer(msg.sender, amount)\"\n                        let expr_1 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0\n                        /// @src 40:5728:5765  \"mlnToken.transfer(msg.sender, amount)\"\n                        if _8\n                        {\n                            let _9 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _5\n                            /// @src 40:5728:5765  \"mlnToken.transfer(msg.sender, amount)\"\n                            if gt(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _5, /** @src 40:5728:5765  \"mlnToken.transfer(msg.sender, amount)\" */ returndatasize()) { _9 := returndatasize() }\n                            finalize_allocation(_7, _9)\n                            expr_1 := abi_decode_bool_fromMemory(_7, add(_7, _9))\n                        }\n                        /// @src 40:5720:5785  \"require(mlnToken.transfer(msg.sender, amount), \\\"Transfer failed\\\")\"\n                        require_helper_stringliteral_25ad(expr_1)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        mstore(0, /** @src 40:5576:5586  \"msg.sender\" */ caller())\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        mstore(_5, /** @src 40:5796:5804  \"balances\" */ 0x06)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let dataSlot_1 := keccak256(0, 64)\n                        sstore(dataSlot_1, /** @src 40:5796:5826  \"balances[msg.sender] -= amount\" */ checked_sub_uint256(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:5796:5826  \"balances[msg.sender] -= amount\" */ dataSlot_1), value_1))\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        mstore(0, /** @src 40:5576:5586  \"msg.sender\" */ caller())\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        mstore(_5, /** @src 40:5796:5804  \"balances\" */ 0x06)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let _10 := sload(keccak256(0, 64))\n                        /// @src 40:5841:5891  \"Withdraw(msg.sender, amount, balances[msg.sender])\"\n                        let _11 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                        mstore(_11, value_1)\n                        mstore(add(_11, _5), _10)\n                        /// @src 40:5841:5891  \"Withdraw(msg.sender, amount, balances[msg.sender])\"\n                        log2(_11, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 64, /** @src 40:5841:5891  \"Withdraw(msg.sender, amount, balances[msg.sender])\" */ 0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568, /** @src 40:5576:5586  \"msg.sender\" */ caller())\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        return(0, 0)\n                    }\n                    case 0x3659cfe6 {\n                        if callvalue() { revert(0, 0) }\n                        let _12 := 32\n                        if slt(add(calldatasize(), not(3)), _12) { revert(0, 0) }\n                        let value0 := abi_decode_address_24670()\n                        let _13 := sub(shl(160, 1), 1)\n                        /// @src 10:1637:1660  \"address(this) != __self\"\n                        let _14 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ and(/** @src 10:1654:1660  \"__self\" */ loadimmutable(\"695\"), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _13)\n                        /// @src 10:1629:1709  \"require(address(this) != __self, \\\"Function must be called through delegatecall\\\")\"\n                        require_helper_stringliteral_36e1(/** @src 10:1637:1660  \"address(this) != __self\" */ iszero(eq(/** @src 10:1645:1649  \"this\" */ address(), /** @src 10:1637:1660  \"address(this) != __self\" */ _14)))\n                        /// @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                        let _15 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                        /// @src 10:1719:1806  \"require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\")\"\n                        require_helper_stringliteral_52f1(/** @src 10:1727:1757  \"_getImplementation() == __self\" */ eq(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ and(sload(/** @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _15), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _13), /** @src 10:1727:1757  \"_getImplementation() == __self\" */ _14))\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let value_2 := and(shr(16, sload(0)), _13)\n                        /// @src 40:2272:2367  \"if (owner != msg.sender) {...\"\n                        if /** @src 40:2276:2295  \"owner != msg.sender\" */ iszero(eq(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ value_2, /** @src 40:2285:2295  \"msg.sender\" */ caller()))\n                        /// @src 40:2272:2367  \"if (owner != msg.sender) {...\"\n                        {\n                            /// @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\"\n                            let _16 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                            /// @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\"\n                            mstore(_16, shl(224, 0x118cdaa7))\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            mstore(/** @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\" */ add(_16, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 4), /** @src 40:2285:2295  \"msg.sender\" */ caller())\n                            /// @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\"\n                            revert(_16, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 36)\n                        }\n                        let _17 := and(value0, _13)\n                        sstore(/** @src 40:11241:11273  \"logicAddress = newImplementation\" */ 0x01, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ or(and(sload(/** @src 40:11241:11273  \"logicAddress = newImplementation\" */ 0x01), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ shl(160, 0xffffffffffffffffffffffff)), _17))\n                        let memPtr := mload(64)\n                        let newFreePtr := add(memPtr, _12)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        mstore(memPtr, 0)\n                        /// @src 7:2906:3410  \"if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {...\"\n                        switch /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ and(/** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ sload(0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0xff)\n                        case /** @src 7:2906:3410  \"if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {...\" */ 0 {\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            let _18 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            mstore(_18, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ shl(224, 0x52d1902d))\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            let trySuccessCondition := staticcall(gas(), _17, _18, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 4, /** @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _18, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _12)\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            let expr_2 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            if trySuccessCondition\n                            {\n                                let _19 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _12\n                                /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                if gt(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _12, /** @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ returndatasize()) { _19 := returndatasize() }\n                                finalize_allocation(_18, _19)\n                                /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                if slt(sub(/** @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ add(_18, _19), /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ _18), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _12)\n                                /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                {\n                                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                    revert(0, 0)\n                                }\n                                /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                expr_2 := /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ mload(_18)\n                            }\n                            /// @src 7:3042:3333  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                            switch iszero(trySuccessCondition)\n                            case 0 {\n                                /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                if iszero(/** @src 7:3148:3176  \"slot == _IMPLEMENTATION_SLOT\" */ eq(expr_2, /** @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _15))\n                                /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                {\n                                    let memPtr_1 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                                    /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                    mstore(memPtr_1, shl(229, 4594637))\n                                    mstore(add(memPtr_1, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 4), _12)\n                                    mstore(/** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ add(memPtr_1, 36), 41)\n                                    mstore(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ add(/** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ memPtr_1, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 68), /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ \"ERC1967Upgrade: unsupported prox\")\n                                    mstore(add(memPtr_1, 100), \"iableUUID\")\n                                    revert(memPtr_1, 132)\n                                }\n                            }\n                            default /// @src 7:3042:3333  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                            {\n                                /// @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                let _20 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                                /// @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                mstore(_20, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                                mstore(/** @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ add(_20, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 4), _12)\n                                mstore(/** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ add(/** @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _20, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 36), 46)\n                                mstore(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ add(/** @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _20, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 68), /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ \"ERC1967Upgrade: new implementati\")\n                                mstore(add(/** @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _20, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 100), \"on is not UUPS\")\n                                /// @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                revert(_20, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 132)\n                            }\n                            /// @src 7:1856:1873  \"newImplementation\"\n                            fun_setImplementation(value0)\n                            /// @src 7:1889:1916  \"Upgraded(newImplementation)\"\n                            log2(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0, 0, /** @src 7:1889:1916  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _17)\n                            /// @src 7:2208:2223  \"data.length > 0\"\n                            let _21 := iszero(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 7:2208:2219  \"data.length\" */ memPtr))\n                            /// @src 7:2208:2236  \"data.length > 0 || forceCall\"\n                            let expr_3 := /** @src 7:2208:2223  \"data.length > 0\" */ iszero(_21)\n                            /// @src 7:2208:2236  \"data.length > 0 || forceCall\"\n                            if _21\n                            {\n                                expr_3 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0\n                            }\n                            /// @src 7:2204:2316  \"if (data.length > 0 || forceCall) {...\"\n                            if expr_3\n                            {\n                                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                let memPtr_2 := mload(64)\n                                finalize_allocation_24688(memPtr_2)\n                                mstore(memPtr_2, 39)\n                                mstore(add(memPtr_2, _12), \"Address: low-level delegate call\")\n                                mstore(add(memPtr_2, 64), \" failed\")\n                                /// @src 23:7265:7290  \"target.delegatecall(data)\"\n                                let expr_component := delegatecall(gas(), value0, newFreePtr, mload(memPtr), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0, 0)\n                                /// @src 23:7265:7290  \"target.delegatecall(data)\"\n                                let data := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _22 := returndatasize()\n                                    let _23 := array_allocation_size_bytes(_22)\n                                    let memPtr_3 := mload(64)\n                                    finalize_allocation(memPtr_3, _23)\n                                    mstore(memPtr_3, _22)\n                                    data := memPtr_3\n                                    returndatacopy(add(memPtr_3, _12), 0, returndatasize())\n                                }\n                                /// @src 23:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\"\n                                pop(fun_verifyCallResultFromTarget(value0, expr_component, /** @src 23:7265:7290  \"target.delegatecall(data)\" */ data, /** @src 23:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ memPtr_2))\n                            }\n                        }\n                        default /// @src 7:2906:3410  \"if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {...\"\n                        {\n                            /// @src 7:2993:3010  \"newImplementation\"\n                            fun_setImplementation(value0)\n                        }\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        return(0, 0)\n                    }\n                    case 0x46a0d50a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        let _24 := 32\n                        mstore(_24, /** @src 40:3350:3356  \"voting\" */ 0x08)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        mstore(0, calldataload(36))\n                        mstore(_24, dataSlot_2)\n                        let dataSlot_3 := keccak256(0, 64)\n                        let length := sload(dataSlot_3)\n                        let _25 := array_allocation_size_array_address_dyn(length)\n                        let memPtr_4 := mload(64)\n                        finalize_allocation(memPtr_4, _25)\n                        mstore(memPtr_4, length)\n                        let mpos := memPtr_4\n                        mpos := add(memPtr_4, _24)\n                        let mpos_1 := mpos\n                        mstore(0, dataSlot_3)\n                        let spos := keccak256(0, _24)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            mstore(mpos, read_from_storage_reference_type_struct_VoteInfo(spos))\n                            mpos := add(mpos, _24)\n                            spos := add(spos, 2)\n                        }\n                        let memPos_3 := mload(64)\n                        let tail := add(memPos_3, _24)\n                        mstore(memPos_3, _24)\n                        let pos_1 := tail\n                        let length_1 := mload(memPtr_4)\n                        mstore(tail, length_1)\n                        pos_1 := add(memPos_3, 64)\n                        let srcPtr := mpos_1\n                        let i_1 := 0\n                        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n                        {\n                            let _26 := mload(srcPtr)\n                            mstore(pos_1, and(mload(_26), sub(shl(160, 1), 1)))\n                            mstore(add(pos_1, _24), mload(add(_26, _24)))\n                            pos_1 := add(pos_1, 64)\n                            srcPtr := add(srcPtr, _24)\n                        }\n                        return(memPos_3, sub(pos_1, memPos_3))\n                    }\n                    case 0x4f1ef286 {\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_1 := abi_decode_address_24670()\n                        let offset := calldataload(36)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                        let array := abi_decode_available_length_bytes(add(offset, 36), calldataload(add(4, offset)), calldatasize())\n                        let _27 := sub(shl(160, 1), 1)\n                        /// @src 10:1637:1660  \"address(this) != __self\"\n                        let _28 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ and(/** @src 10:1654:1660  \"__self\" */ loadimmutable(\"695\"), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _27)\n                        /// @src 10:1629:1709  \"require(address(this) != __self, \\\"Function must be called through delegatecall\\\")\"\n                        require_helper_stringliteral_36e1(/** @src 10:1637:1660  \"address(this) != __self\" */ iszero(eq(/** @src 10:1645:1649  \"this\" */ address(), /** @src 10:1637:1660  \"address(this) != __self\" */ _28)))\n                        /// @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                        let _29 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                        /// @src 10:1719:1806  \"require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\")\"\n                        require_helper_stringliteral_52f1(/** @src 10:1727:1757  \"_getImplementation() == __self\" */ eq(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ and(sload(/** @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _29), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _27), /** @src 10:1727:1757  \"_getImplementation() == __self\" */ _28))\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let value_3 := and(shr(16, sload(0)), _27)\n                        /// @src 40:2272:2367  \"if (owner != msg.sender) {...\"\n                        if /** @src 40:2276:2295  \"owner != msg.sender\" */ iszero(eq(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ value_3, /** @src 40:2285:2295  \"msg.sender\" */ caller()))\n                        /// @src 40:2272:2367  \"if (owner != msg.sender) {...\"\n                        {\n                            /// @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\"\n                            let _30 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                            /// @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\"\n                            mstore(_30, shl(224, 0x118cdaa7))\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            mstore(/** @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\" */ add(_30, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 4), /** @src 40:2285:2295  \"msg.sender\" */ caller())\n                            /// @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\"\n                            revert(_30, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 36)\n                        }\n                        let _31 := and(value0_1, _27)\n                        sstore(/** @src 40:11241:11273  \"logicAddress = newImplementation\" */ 0x01, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ or(and(sload(/** @src 40:11241:11273  \"logicAddress = newImplementation\" */ 0x01), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ shl(160, 0xffffffffffffffffffffffff)), _31))\n                        /// @src 7:2906:3410  \"if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {...\"\n                        switch /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ and(/** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ sload(0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0xff)\n                        case /** @src 7:2906:3410  \"if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {...\" */ 0 {\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            let _32 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            mstore(_32, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ shl(224, 0x52d1902d))\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            let _33 := 32\n                            let trySuccessCondition_1 := staticcall(gas(), _31, _32, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 4, /** @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _32, _33)\n                            let expr_4 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0\n                            /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            if trySuccessCondition_1\n                            {\n                                let _34 := _33\n                                if gt(_33, returndatasize()) { _34 := returndatasize() }\n                                finalize_allocation(_32, _34)\n                                /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                if slt(sub(/** @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ add(_32, _34), /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ _32), /** @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _33)\n                                /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                {\n                                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                    revert(0, 0)\n                                }\n                                /// @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                                expr_4 := /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ mload(_32)\n                            }\n                            /// @src 7:3042:3333  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                            switch iszero(trySuccessCondition_1)\n                            case 0 {\n                                /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                if iszero(/** @src 7:3148:3176  \"slot == _IMPLEMENTATION_SLOT\" */ eq(expr_4, /** @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _29))\n                                /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                {\n                                    let memPtr_5 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                                    /// @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                    mstore(memPtr_5, shl(229, 4594637))\n                                    mstore(add(memPtr_5, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 4), /** @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _33)\n                                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                    mstore(/** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ add(memPtr_5, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 36), /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 41)\n                                    mstore(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ add(/** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ memPtr_5, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 68), /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ \"ERC1967Upgrade: unsupported prox\")\n                                    mstore(add(memPtr_5, 100), \"iableUUID\")\n                                    revert(memPtr_5, 132)\n                                }\n                            }\n                            default /// @src 7:3042:3333  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                            {\n                                /// @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                let _35 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                                /// @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                mstore(_35, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                                mstore(/** @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ add(_35, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 4), /** @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _33)\n                                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                mstore(/** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ add(/** @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _35, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 36), /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 46)\n                                mstore(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ add(/** @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _35, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 68), /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ \"ERC1967Upgrade: new implementati\")\n                                mstore(add(/** @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _35, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 100), \"on is not UUPS\")\n                                /// @src 7:3262:3318  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                revert(_35, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 132)\n                            }\n                            /// @src 7:1856:1873  \"newImplementation\"\n                            fun_setImplementation(value0_1)\n                            /// @src 7:1889:1916  \"Upgraded(newImplementation)\"\n                            log2(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0, 0, /** @src 7:1889:1916  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _31)\n                            /// @src 7:2208:2223  \"data.length > 0\"\n                            let _36 := iszero(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 7:2208:2219  \"data.length\" */ array))\n                            /// @src 7:2208:2236  \"data.length > 0 || forceCall\"\n                            let expr_5 := /** @src 7:2208:2223  \"data.length > 0\" */ iszero(_36)\n                            /// @src 7:2208:2236  \"data.length > 0 || forceCall\"\n                            if _36\n                            {\n                                expr_5 := /** @src 40:11241:11273  \"logicAddress = newImplementation\" */ 0x01\n                            }\n                            /// @src 7:2204:2316  \"if (data.length > 0 || forceCall) {...\"\n                            if expr_5\n                            {\n                                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                let memPtr_6 := mload(64)\n                                finalize_allocation_24688(memPtr_6)\n                                mstore(memPtr_6, 39)\n                                mstore(add(memPtr_6, /** @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _33), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ \"Address: low-level delegate call\")\n                                mstore(add(memPtr_6, 64), \" failed\")\n                                /// @src 23:7265:7290  \"target.delegatecall(data)\"\n                                let expr_component_1 := delegatecall(gas(), value0_1, add(array, /** @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _33), /** @src 23:7265:7290  \"target.delegatecall(data)\" */ mload(array), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0, 0)\n                                /// @src 23:7265:7290  \"target.delegatecall(data)\"\n                                let data_1 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0\n                                switch returndatasize()\n                                case 0 { data_1 := 96 }\n                                default {\n                                    let _37 := returndatasize()\n                                    let _38 := array_allocation_size_bytes(_37)\n                                    let memPtr_7 := mload(64)\n                                    finalize_allocation(memPtr_7, _38)\n                                    mstore(memPtr_7, _37)\n                                    data_1 := memPtr_7\n                                    returndatacopy(add(memPtr_7, /** @src 7:3046:3098  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _33), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0, returndatasize())\n                                }\n                                /// @src 23:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\"\n                                pop(fun_verifyCallResultFromTarget(value0_1, expr_component_1, /** @src 23:7265:7290  \"target.delegatecall(data)\" */ data_1, /** @src 23:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ memPtr_6))\n                            }\n                        }\n                        default /// @src 7:2906:3410  \"if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {...\"\n                        {\n                            /// @src 7:2993:3010  \"newImplementation\"\n                            fun_setImplementation(value0_1)\n                        }\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        return(0, 0)\n                    }\n                    case 0x52d1902d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        if iszero(/** @src 10:2072:2095  \"address(this) == __self\" */ eq(/** @src 10:2080:2084  \"this\" */ address(), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ and(/** @src 10:2089:2095  \"__self\" */ loadimmutable(\"695\"), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1))))\n                        {\n                            let memPtr_8 := mload(64)\n                            mstore(memPtr_8, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            mstore(add(memPtr_8, 4), 32)\n                            mstore(add(memPtr_8, 36), 56)\n                            mstore(add(memPtr_8, 68), \"UUPSUpgradeable: must not be cal\")\n                            mstore(add(memPtr_8, 100), \"led through delegatecall\")\n                            revert(memPtr_8, 132)\n                        }\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, /** @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        return(memPos_4, 32)\n                    }\n                    case 0x5ed411e5 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_2 := abi_decode_address_24670()\n                        let _39 := sub(shl(160, 1), 1)\n                        let value_4 := and(shr(16, sload(0)), _39)\n                        /// @src 40:2272:2367  \"if (owner != msg.sender) {...\"\n                        if /** @src 40:2276:2295  \"owner != msg.sender\" */ iszero(eq(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ value_4, /** @src 40:2285:2295  \"msg.sender\" */ caller()))\n                        /// @src 40:2272:2367  \"if (owner != msg.sender) {...\"\n                        {\n                            /// @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\"\n                            let _40 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                            /// @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\"\n                            mstore(_40, shl(224, 0x118cdaa7))\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            mstore(/** @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\" */ add(_40, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 4), /** @src 40:2285:2295  \"msg.sender\" */ caller())\n                            /// @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\"\n                            revert(_40, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 36)\n                        }\n                        sstore(/** @src 40:2790:2823  \"mlnToken = MelonToken(_tokenAddr)\" */ 0x02, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ or(and(sload(/** @src 40:2790:2823  \"mlnToken = MelonToken(_tokenAddr)\" */ 0x02), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(/** @src 40:2801:2823  \"MelonToken(_tokenAddr)\" */ value0_2, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _39)))\n                        return(0, 0)\n                    }\n                    case 0x6c24a76f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let ret := fun_getAvailableBalance(abi_decode_address_24670())\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, ret)\n                        return(memPos_5, 32)\n                    }\n                    case 0x7c7b66f7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_5 := calldataload(4)\n                        if /** @src 40:5327:5337  \"points > 0\" */ iszero(value_5)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        {\n                            let memPtr_9 := mload(64)\n                            mstore(memPtr_9, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            mstore(add(memPtr_9, 4), 32)\n                            mstore(add(memPtr_9, 36), 32)\n                            mstore(add(memPtr_9, 68), \"Points must be greater than zero\")\n                            revert(memPtr_9, 100)\n                        }\n                        mstore(0, /** @src 40:5393:5403  \"msg.sender\" */ caller())\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        mstore(32, /** @src 40:5384:5392  \"balances\" */ 0x06)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let dataSlot_4 := keccak256(0, 64)\n                        sstore(dataSlot_4, /** @src 40:5384:5414  \"balances[msg.sender] += points\" */ checked_add_uint256(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:5384:5414  \"balances[msg.sender] += points\" */ dataSlot_4), value_5))\n                        /// @src 40:5429:5463  \"ExchangePoints(msg.sender, points)\"\n                        let _41 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                        mstore(_41, value_5)\n                        /// @src 40:5429:5463  \"ExchangePoints(msg.sender, points)\"\n                        log2(_41, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 32, /** @src 40:5429:5463  \"ExchangePoints(msg.sender, points)\" */ 0xa0c8eda28ab82fe28c2bcaa48a1ce2b5eac8dbed005a6e8eb62398577e908d5c, /** @src 40:5393:5403  \"msg.sender\" */ caller())\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        return(0, 0)\n                    }\n                    case 0x88ffe867 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_6 := and(sload(4), sub(shl(160, 1), 1))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, value_6)\n                        return(memPos_6, 32)\n                    }\n                    case 0x8a471df9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_7 := and(sload(/** @src 40:1596:1622  \"MelonToken public mlnToken\" */ 2), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, value_7)\n                        return(memPos_7, 32)\n                    }\n                    case 0x8a6655d6 {\n                        if callvalue() { revert(0, 0) }\n                        let param, param_1, param_2 := abi_decode_uint256t_uint256t_uint256(calldatasize())\n                        if /** @src 40:6042:6083  \"getAvailableBalance(msg.sender) >= amount\" */ lt(/** @src 40:6042:6073  \"getAvailableBalance(msg.sender)\" */ fun_getAvailableBalance(/** @src 40:6062:6072  \"msg.sender\" */ caller()), /** @src 40:6042:6083  \"getAvailableBalance(msg.sender) >= amount\" */ param_2)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        {\n                            let memPtr_10 := mload(64)\n                            mstore(memPtr_10, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            mstore(add(memPtr_10, 4), 32)\n                            mstore(add(memPtr_10, 36), 26)\n                            mstore(add(memPtr_10, 68), \"Insufficient voting rights\")\n                            revert(memPtr_10, 100)\n                        }\n                        mstore(0, /** @src 40:6062:6072  \"msg.sender\" */ caller())\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        mstore(0x20, /** @src 40:6145:6155  \"votingLock\" */ 0x07)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        sstore(dataSlot_5, /** @src 40:6145:6177  \"votingLock[msg.sender] += amount\" */ checked_add_uint256(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:6145:6177  \"votingLock[msg.sender] += amount\" */ dataSlot_5), param_2))\n                        /// @src 40:6220:6245  \"proposalInfos[proposalId]\"\n                        let _42, _43 := storage_array_index_access_struct_ProposalInfo__dyn_24681(param)\n                        /// @src 40:6255:6271  \"proposal.options\"\n                        let _44 := add(/** @src 40:6188:6245  \"ProposalInfo storage proposal = proposalInfos[proposalId]\" */ _42, /** @src 40:6255:6271  \"proposal.options\" */ 1)\n                        /// @src 40:6255:6281  \"proposal.options[optionId]\"\n                        let _45, _46 := storage_array_index_access_struct_Option__dyn(_44, param_1)\n                        /// @src 40:6255:6287  \"proposal.options[optionId].count\"\n                        let _47 := add(_45, /** @src 40:6255:6271  \"proposal.options\" */ 1)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        sstore(_47, /** @src 40:6255:6297  \"proposal.options[optionId].count += amount\" */ checked_add_uint256(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:6255:6297  \"proposal.options[optionId].count += amount\" */ _47), param_2))\n                        /// @src 40:6307:6333  \"proposal.options[optionId]\"\n                        let _48, _49 := storage_array_index_access_struct_Option__dyn(_44, param_1)\n                        /// @src 40:6307:6340  \"proposal.options[optionId].voters\"\n                        let _50 := add(_48, 2)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let _51 := sload(/** @src 40:6307:6345  \"proposal.options[optionId].voters += 1\" */ _50)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let sum := add(_51, /** @src 40:6255:6271  \"proposal.options\" */ 1)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        if gt(_51, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        sstore(_50, sum)\n                        mstore(0, param)\n                        mstore(0x20, /** @src 40:6356:6362  \"voting\" */ 0x08)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let dataSlot_6 := keccak256(0, 64)\n                        mstore(0, param_1)\n                        mstore(0x20, dataSlot_6)\n                        let dataSlot_7 := keccak256(0, 64)\n                        let memPtr_11 := mload(64)\n                        finalize_allocation_24682(memPtr_11)\n                        mstore(memPtr_11, /** @src 40:6062:6072  \"msg.sender\" */ caller())\n                        /// @src 40:6390:6418  \"VoteInfo(msg.sender, amount)\"\n                        let _52 := add(memPtr_11, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0x20)\n                        mstore(_52, param_2)\n                        let oldLen := sload(dataSlot_7)\n                        if iszero(lt(oldLen, 18446744073709551616))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        sstore(dataSlot_7, add(oldLen, /** @src 40:6255:6271  \"proposal.options\" */ 1))\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let slot, offset_1 := storage_array_index_access_struct_ProposalInfo__dyn(dataSlot_7, oldLen)\n                        if offset_1\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0)\n                            revert(0, 0x24)\n                        }\n                        sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(mload(memPtr_11), sub(shl(160, 1), 1))))\n                        sstore(add(slot, /** @src 40:6255:6271  \"proposal.options\" */ 1), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(_52))\n                        /// @src 40:6435:6482  \"Voted(msg.sender, proposalId, optionId, amount)\"\n                        let _53 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                        mstore(_53, param_2)\n                        /// @src 40:6435:6482  \"Voted(msg.sender, proposalId, optionId, amount)\"\n                        log4(_53, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0x20, /** @src 40:6435:6482  \"Voted(msg.sender, proposalId, optionId, amount)\" */ 0xc32b42768a47a585121e9b8d7a2ab9d3f34c326a192dee11ee1732e3d18313f3, /** @src 40:6062:6072  \"msg.sender\" */ caller(), /** @src 40:6435:6482  \"Voted(msg.sender, proposalId, optionId, amount)\" */ param, param_1)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_8 := and(shr(16, sload(0)), sub(shl(160, 1), 1))\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, value_8)\n                        return(memPos_8, 32)\n                    }\n                    case 0x9b6f67be {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let offset_2 := calldataload(68)\n                        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset_2, 35), calldatasize())) { revert(0, 0) }\n                        let _54 := calldataload(add(4, offset_2))\n                        let _55 := array_allocation_size_array_address_dyn(_54)\n                        let memPtr_12 := mload(64)\n                        finalize_allocation(memPtr_12, _55)\n                        let dst := memPtr_12\n                        mstore(memPtr_12, _54)\n                        dst := add(memPtr_12, 32)\n                        let srcEnd := add(add(offset_2, shl(5, _54)), 36)\n                        if gt(srcEnd, calldatasize()) { revert(0, 0) }\n                        let src := add(offset_2, 36)\n                        for { } lt(src, srcEnd) { src := add(src, 32) }\n                        {\n                            let value_9 := calldataload(src)\n                            if iszero(eq(value_9, and(value_9, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                            mstore(dst, value_9)\n                            dst := add(dst, 32)\n                        }\n                        /// @src 40:6631:6670  \"Settle(proposalId, winOptionId, jurors)\"\n                        let _56 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                        mstore(_56, calldataload(4))\n                        mstore(add(_56, 32), calldataload(36))\n                        mstore(add(_56, 64), 96)\n                        /// @src 40:6631:6670  \"Settle(proposalId, winOptionId, jurors)\"\n                        log1(_56, sub(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ abi_encode_array_address_dyn(memPtr_12, add(_56, 96)), /** @src 40:6631:6670  \"Settle(proposalId, winOptionId, jurors)\" */ _56), 0x96a54eb5c3629a7082316372c06617c472b5958a748182a70c0ba0b1c7e3c886)\n                        /// @src 40:6801:7047  \"if (isSingleOptionStatus) {...\"\n                        switch /** @src 40:6709:6790  \"isSingleOptionProposal(...\" */ fun_isSingleOptionProposal(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ calldataload(4), calldataload(36))\n                        case /** @src 40:6801:7047  \"if (isSingleOptionStatus) {...\" */ 0 {\n                            /// @src 40:8166:8188  \"getDetails(proposalId)\"\n                            let expr_component_2, expr_component_mpos, expr_component_mpos_1, expr_component_mpos_2, expr_component_3, expr_component_4 := fun_getDetails(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ calldataload(4))\n                            let product := shl(1, expr_component_3)\n                            if iszero(or(iszero(expr_component_3), eq(/** @src 40:8232:8233  \"2\" */ 0x02, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ div(product, expr_component_3))))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 36)\n                            }\n                            let r := div(product, /** @src 40:8237:8240  \"100\" */ 0x64)\n                            /// @src 40:8275:8297  \"reward / jurors.length\"\n                            let expr_6 := checked_div_uint256(r, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 40:8284:8297  \"jurors.length\" */ memPtr_12))\n                            /// @src 40:8313:8326  \"uint256 i = 0\"\n                            let var_i := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0\n                            /// @src 40:8308:8495  \"for (uint256 i = 0; i < jurors.length; i++) {...\"\n                            for { }\n                            /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 1\n                            /// @src 40:8313:8326  \"uint256 i = 0\"\n                            {\n                                /// @src 40:8347:8350  \"i++\"\n                                var_i := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ add(/** @src 40:8347:8350  \"i++\" */ var_i, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 1)\n                            }\n                            /// @src 40:8347:8350  \"i++\"\n                            {\n                                /// @src 40:8328:8345  \"i < jurors.length\"\n                                if iszero(lt(var_i, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 40:8332:8345  \"jurors.length\" */ memPtr_12)))\n                                /// @src 40:8328:8345  \"i < jurors.length\"\n                                { break }\n                                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                let _57 := sub(shl(160, 1), 1)\n                                mstore(0, and(mload(/** @src 40:8375:8384  \"jurors[i]\" */ memory_array_index_access_string_dyn(memPtr_12, var_i)), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _57))\n                                mstore(32, /** @src 40:8366:8374  \"balances\" */ 0x06)\n                                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                let dataSlot_8 := keccak256(0, 64)\n                                sstore(dataSlot_8, /** @src 40:8366:8403  \"balances[jurors[i]] += rewardPerJuror\" */ checked_add_uint256(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:8366:8403  \"balances[jurors[i]] += rewardPerJuror\" */ dataSlot_8), expr_6))\n                                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                mstore(0, calldataload(4))\n                                mstore(32, /** @src 40:8417:8436  \"userProposalResults\" */ 0x0a)\n                                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                let dataSlot_9 := keccak256(0, 64)\n                                mstore(0, and(mload(/** @src 40:8449:8458  \"jurors[i]\" */ memory_array_index_access_string_dyn(memPtr_12, var_i)), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _57))\n                                mstore(32, dataSlot_9)\n                                sstore(keccak256(0, 64), expr_6)\n                            }\n                            /// @src 40:8510:8635  \"JurorsDistributeRewards(...\"\n                            let _58 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                            mstore(_58, 96)\n                            let tail_1 := abi_encode_array_address_dyn(memPtr_12, add(_58, 96))\n                            mstore(add(_58, 32), r)\n                            mstore(add(_58, 64), expr_6)\n                            /// @src 40:8510:8635  \"JurorsDistributeRewards(...\"\n                            log2(_58, sub(tail_1, _58), 0x1034bcc6d30aa91c93d14ce14f959d5d304d6b8a76f50f026934b85d4e4122ed, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ calldataload(4))\n                            /// @src 40:9283:9308  \"proposalInfos[proposalId]\"\n                            let _59, _60 := storage_array_index_access_struct_ProposalInfo__dyn_24681(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ calldataload(4))\n                            /// @src 40:9340:9367  \"proposalInfo.options.length\"\n                            let expr_7 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:9340:9360  \"proposalInfo.options\" */ add(_59, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 1))\n                            mstore(0, calldataload(36))\n                            mstore(32, /** @src 40:9431:9437  \"voting\" */ 0x08)\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            let dataSlot_10 := keccak256(0, 64)\n                            /// @src 40:9541:9585  \"getDetails(...\"\n                            let expr_component_5, expr_component_mpos_3, expr_component_mpos_4, expr_component_mpos_5, expr_component_6, expr_component_7 := fun_getDetails(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ calldataload(4))\n                            let product_1 := mul(expr_component_6, 5)\n                            let _61 := iszero(expr_component_6)\n                            if iszero(or(_61, eq(5, div(product_1, expr_component_6))))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 36)\n                            }\n                            mstore(0, and(sload(/** @src 40:9604:9624  \"proposalInfo.founder\" */ _59), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                            mstore(32, /** @src 40:8366:8374  \"balances\" */ 0x06)\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            let dataSlot_11 := keccak256(0, 64)\n                            sstore(dataSlot_11, /** @src 40:9595:9653  \"balances[proposalInfo.founder] += (allVotesCast * 5) / 100\" */ checked_add_uint256(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:9595:9653  \"balances[proposalInfo.founder] += (allVotesCast * 5) / 100\" */ dataSlot_11), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ div(product_1, /** @src 40:8237:8240  \"100\" */ 0x64)))\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            let product_2 := mul(expr_component_6, /** @src 40:9710:9712  \"88\" */ 0x58)\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            if iszero(or(_61, eq(/** @src 40:9710:9712  \"88\" */ 0x58, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ div(product_2, expr_component_6))))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 36)\n                            }\n                            /// @src 40:9735:9748  \"uint256 i = 0\"\n                            let var_i_1 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0\n                            /// @src 40:9730:10023  \"for (uint256 i = 0; i < optionCount; i++) {...\"\n                            for { }\n                            /** @src 40:9750:9765  \"i < optionCount\" */ lt(var_i_1, expr_7)\n                            /// @src 40:9735:9748  \"uint256 i = 0\"\n                            {\n                                /// @src 40:9767:9770  \"i++\"\n                                var_i_1 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ add(/** @src 40:9767:9770  \"i++\" */ var_i_1, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 1)\n                            }\n                            /// @src 40:9767:9770  \"i++\"\n                            {\n                                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                let _62 := mload(/** @src 40:9928:9947  \"counts[winOptionId]\" */ memory_array_index_access_string_dyn(expr_component_mpos_4, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ calldataload(36)))\n                                mstore(0, var_i_1)\n                                mstore(32, dataSlot_10)\n                                let dataSlot_12 := keccak256(0, 64)\n                                let length_2 := sload(dataSlot_12)\n                                let _63 := array_allocation_size_array_address_dyn(length_2)\n                                let memPtr_13 := mload(64)\n                                finalize_allocation(memPtr_13, _63)\n                                mstore(memPtr_13, length_2)\n                                let mpos_2 := memPtr_13\n                                mpos_2 := add(memPtr_13, 32)\n                                mstore(0, dataSlot_12)\n                                let spos_1 := keccak256(0, 32)\n                                let i_2 := 0\n                                for { } lt(i_2, length_2) { i_2 := add(i_2, 1) }\n                                {\n                                    mstore(mpos_2, read_from_storage_reference_type_struct_VoteInfo(spos_1))\n                                    mpos_2 := add(mpos_2, 32)\n                                    spos_1 := add(spos_1, /** @src 40:8232:8233  \"2\" */ 0x02)\n                                }\n                                /// @src 40:10292:10305  \"uint256 j = 0\"\n                                let var_j := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0\n                                /// @src 40:10287:11123  \"for (uint256 j = 0; j < voteInfos.length; j++) {...\"\n                                for { }\n                                /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 1\n                                /// @src 40:10292:10305  \"uint256 j = 0\"\n                                {\n                                    /// @src 40:10329:10332  \"j++\"\n                                    var_j := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ add(/** @src 40:10329:10332  \"j++\" */ var_j, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 1)\n                                }\n                                /// @src 40:10329:10332  \"j++\"\n                                {\n                                    /// @src 40:10307:10327  \"j < voteInfos.length\"\n                                    if iszero(lt(var_j, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 40:10311:10327  \"voteInfos.length\" */ memPtr_13)))\n                                    /// @src 40:10307:10327  \"j < voteInfos.length\"\n                                    { break }\n                                    /// @src 40:10375:10387  \"voteInfos[j]\"\n                                    let _mpos := mload(memory_array_index_access_string_dyn(memPtr_13, var_j))\n                                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                    let _64 := mload(/** @src 40:10430:10445  \"voteInfo.amount\" */ add(_mpos, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 32))\n                                    mstore(0, and(mload(/** @src 40:10412:10425  \"voteInfo.user\" */ _mpos), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                                    mstore(32, /** @src 40:10401:10411  \"votingLock\" */ 0x07)\n                                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                    let dataSlot_13 := keccak256(0, 64)\n                                    sstore(dataSlot_13, /** @src 40:10401:10445  \"votingLock[voteInfo.user] -= voteInfo.amount\" */ checked_sub_uint256(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:10401:10445  \"votingLock[voteInfo.user] -= voteInfo.amount\" */ dataSlot_13), _64))\n                                    /// @src 40:10460:11113  \"if (optionId == winOptionId) {...\"\n                                    switch /** @src 40:10464:10487  \"optionId == winOptionId\" */ eq(var_i_1, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ calldataload(36))\n                                    case /** @src 40:10460:11113  \"if (optionId == winOptionId) {...\" */ 0 {\n                                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                        let _65 := mload(/** @src 40:10430:10445  \"voteInfo.amount\" */ add(_mpos, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 32))\n                                        mstore(0, and(mload(/** @src 40:10930:10943  \"voteInfo.user\" */ _mpos), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                                        mstore(32, /** @src 40:8366:8374  \"balances\" */ 0x06)\n                                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                        let dataSlot_14 := keccak256(0, 64)\n                                        sstore(dataSlot_14, /** @src 40:10921:10963  \"balances[voteInfo.user] -= voteInfo.amount\" */ checked_sub_uint256(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:10921:10963  \"balances[voteInfo.user] -= voteInfo.amount\" */ dataSlot_14), _65))\n                                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                        let _66 := mload(/** @src 40:10430:10445  \"voteInfo.amount\" */ add(_mpos, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 32))\n                                        if iszero(or(iszero(_66), eq(/** @src 40:11096:11098  \"-1\" */ not(0), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sdiv(sub(0, _66), _66))))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x11)\n                                            revert(0, 36)\n                                        }\n                                        mstore(0, calldataload(4))\n                                        mstore(32, /** @src 40:8417:8436  \"userProposalResults\" */ 0x0a)\n                                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                        let dataSlot_15 := keccak256(0, 64)\n                                        mstore(0, and(mload(/** @src 40:11013:11026  \"voteInfo.user\" */ _mpos), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                                        mstore(32, dataSlot_15)\n                                        sstore(keccak256(0, 64), sub(0, _66))\n                                    }\n                                    default /// @src 40:10460:11113  \"if (optionId == winOptionId) {...\"\n                                    {\n                                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                        let _67 := mload(/** @src 40:10430:10445  \"voteInfo.amount\" */ add(_mpos, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 32))\n                                        if iszero(or(iszero(_67), eq(div(product_2, /** @src 40:8237:8240  \"100\" */ 0x64), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ div(mul(_67, div(product_2, /** @src 40:8237:8240  \"100\" */ 0x64)), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _67))))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x11)\n                                            revert(0, 36)\n                                        }\n                                        /// @src 40:10524:10599  \"(voteInfo.amount * totalStakeExtractFee) /...\"\n                                        let expr_8 := checked_div_uint256(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mul(_67, div(product_2, /** @src 40:8237:8240  \"100\" */ 0x64)), /** @src 40:10524:10599  \"(voteInfo.amount * totalStakeExtractFee) /...\" */ _62)\n                                        /// @src 40:10652:10676  \"reward - voteInfo.amount\"\n                                        let expr_9 := checked_sub_uint256(expr_8, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 40:10430:10445  \"voteInfo.amount\" */ add(_mpos, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 32)))\n                                        mstore(0, and(mload(/** @src 40:10703:10716  \"voteInfo.user\" */ _mpos), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                                        mstore(32, /** @src 40:8366:8374  \"balances\" */ 0x06)\n                                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                        let dataSlot_16 := keccak256(0, 64)\n                                        sstore(dataSlot_16, /** @src 40:10694:10745  \"balances[voteInfo.user] += rewardExcludingPrincipal\" */ checked_add_uint256(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:10694:10745  \"balances[voteInfo.user] += rewardExcludingPrincipal\" */ dataSlot_16), expr_9))\n                                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                        mstore(0, calldataload(4))\n                                        mstore(32, /** @src 40:8417:8436  \"userProposalResults\" */ 0x0a)\n                                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                        let dataSlot_17 := keccak256(0, 64)\n                                        mstore(0, and(mload(/** @src 40:10795:10808  \"voteInfo.user\" */ _mpos), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                                        mstore(32, dataSlot_17)\n                                        sstore(keccak256(0, 64), expr_9)\n                                    }\n                                }\n                            }\n                        }\n                        default /// @src 40:6801:7047  \"if (isSingleOptionStatus) {...\"\n                        {\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            mstore(0, calldataload(36))\n                            mstore(32, /** @src 40:8819:8825  \"voting\" */ 0x08)\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            let dataSlot_18 := keccak256(0, 64)\n                            /// @src 40:8876:8889  \"uint256 i = 0\"\n                            let var_i_2 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0\n                            /// @src 40:8871:9070  \"for (uint256 i = 0; i < voteRecords[winOptionId].length; i++) {...\"\n                            for { }\n                            /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 1\n                            /// @src 40:8876:8889  \"uint256 i = 0\"\n                            {\n                                /// @src 40:8928:8931  \"i++\"\n                                var_i_2 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ add(/** @src 40:8928:8931  \"i++\" */ var_i_2, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 1)\n                            }\n                            /// @src 40:8928:8931  \"i++\"\n                            {\n                                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                mstore(0, calldataload(36))\n                                mstore(32, dataSlot_18)\n                                let dataSlot_19 := keccak256(0, 64)\n                                /// @src 40:8891:8926  \"i < voteRecords[winOptionId].length\"\n                                if iszero(lt(var_i_2, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(dataSlot_19)))\n                                /// @src 40:8891:8926  \"i < voteRecords[winOptionId].length\"\n                                { break }\n                                /// @src 40:8974:9001  \"voteRecords[winOptionId][i]\"\n                                let _68, _69 := storage_array_index_access_struct_ProposalInfo__dyn(/** @src 40:8974:8998  \"voteRecords[winOptionId]\" */ dataSlot_19, /** @src 40:8974:9001  \"voteRecords[winOptionId][i]\" */ var_i_2)\n                                /// @src 40:8947:9001  \"VoteInfo memory voteInfo = voteRecords[winOptionId][i]\"\n                                let var_voteInfo_mpos := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ read_from_storage_reference_type_struct_VoteInfo(/** @src 40:8947:9001  \"VoteInfo memory voteInfo = voteRecords[winOptionId][i]\" */ _68)\n                                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                let _70 := mload(/** @src 40:9044:9059  \"voteInfo.amount\" */ add(var_voteInfo_mpos, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 32))\n                                mstore(0, and(mload(/** @src 40:9026:9039  \"voteInfo.user\" */ var_voteInfo_mpos), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 40:9015:9025  \"votingLock\" */ 0x07)\n                                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                let dataSlot_20 := keccak256(0, 64)\n                                sstore(dataSlot_20, /** @src 40:9015:9059  \"votingLock[voteInfo.user] -= voteInfo.amount\" */ checked_sub_uint256(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:9015:9059  \"votingLock[voteInfo.user] -= voteInfo.amount\" */ dataSlot_20), _70))\n                            }\n                            /// @src 40:9084:9117  \"Refunded(proposalId, winOptionId)\"\n                            let _71 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                            mstore(_71, calldataload(36))\n                            /// @src 40:9084:9117  \"Refunded(proposalId, winOptionId)\"\n                            log2(_71, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 32, /** @src 40:9084:9117  \"Refunded(proposalId, winOptionId)\" */ 0xb7c1f9298a18c36af08bd57eabbfbeb04695f24d0438f67614741ec15fb5c4a9, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ calldataload(4))\n                        }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 40:7056:7069  \"winningOption\" */ 0x09)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        sstore(keccak256(0, 64), calldataload(36))\n                        return(0, 0)\n                    }\n                    case 0x9c1fcc4c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_10 := and(sload(/** @src 40:1562:1589  \"address public logicAddress\" */ 1), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, value_10)\n                        return(memPos_9, 32)\n                    }\n                    case 0xb00673bc {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_24670(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 40:1820:1865  \"mapping(address => uint256) public votingLock\" */ 7)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let _72 := sload(keccak256(0, 64))\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, _72)\n                        return(memPos_10, 32)\n                    }\n                    case 0xb511328d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_11 := calldataload(4)\n                        /// @src 40:1710:1745  \"ProposalInfo[] public proposalInfos\"\n                        if iszero(lt(value_11, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:1710:1745  \"ProposalInfo[] public proposalInfos\" */ 5)))\n                        {\n                            revert(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0, 0)\n                        }\n                        /// @src 40:1710:1745  \"ProposalInfo[] public proposalInfos\"\n                        let slot_1, offset_3 := storage_array_index_access_struct_ProposalInfo__dyn_24681(value_11)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let cleaned_1 := and(sload(/** @src 40:1710:1745  \"ProposalInfo[] public proposalInfos\" */ slot_1), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, cleaned_1)\n                        return(memPos_11, 32)\n                    }\n                    case 0xb6b55f25 {\n                        if callvalue() { revert(0, 0) }\n                        let _73 := 32\n                        if slt(add(calldatasize(), not(3)), _73) { revert(0, 0) }\n                        let value_12 := calldataload(4)\n                        let cleaned_2 := and(sload(/** @src 40:3482:3490  \"mlnToken\" */ 0x02), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 40:3482:3538  \"mlnToken.transferFrom(msg.sender, address(this), amount)\"\n                        let _74 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                        /// @src 40:3482:3538  \"mlnToken.transferFrom(msg.sender, address(this), amount)\"\n                        mstore(_74, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ shl(224, 0x23b872dd))\n                        mstore(/** @src 40:3482:3538  \"mlnToken.transferFrom(msg.sender, address(this), amount)\" */ add(_74, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 4), /** @src 40:3504:3514  \"msg.sender\" */ caller())\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        mstore(add(/** @src 40:3482:3538  \"mlnToken.transferFrom(msg.sender, address(this), amount)\" */ _74, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 36), /** @src 40:3524:3528  \"this\" */ address())\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        mstore(add(/** @src 40:3482:3538  \"mlnToken.transferFrom(msg.sender, address(this), amount)\" */ _74, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 68), value_12)\n                        /// @src 40:3482:3538  \"mlnToken.transferFrom(msg.sender, address(this), amount)\"\n                        let _75 := call(gas(), cleaned_2, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0, /** @src 40:3482:3538  \"mlnToken.transferFrom(msg.sender, address(this), amount)\" */ _74, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 100, /** @src 40:3482:3538  \"mlnToken.transferFrom(msg.sender, address(this), amount)\" */ _74, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _73)\n                        /// @src 40:3482:3538  \"mlnToken.transferFrom(msg.sender, address(this), amount)\"\n                        if iszero(_75)\n                        {\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, 0, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 40:3482:3538  \"mlnToken.transferFrom(msg.sender, address(this), amount)\"\n                        let expr_10 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0\n                        /// @src 40:3482:3538  \"mlnToken.transferFrom(msg.sender, address(this), amount)\"\n                        if _75\n                        {\n                            let _76 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _73\n                            /// @src 40:3482:3538  \"mlnToken.transferFrom(msg.sender, address(this), amount)\"\n                            if gt(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _73, /** @src 40:3482:3538  \"mlnToken.transferFrom(msg.sender, address(this), amount)\" */ returndatasize()) { _76 := returndatasize() }\n                            finalize_allocation(_74, _76)\n                            expr_10 := abi_decode_bool_fromMemory(_74, add(_74, _76))\n                        }\n                        /// @src 40:3461:3579  \"require(...\"\n                        require_helper_stringliteral_25ad(expr_10)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        mstore(0, /** @src 40:3504:3514  \"msg.sender\" */ caller())\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        mstore(_73, /** @src 40:3589:3597  \"balances\" */ 0x06)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let dataSlot_21 := keccak256(0, 64)\n                        sstore(dataSlot_21, /** @src 40:3589:3619  \"balances[msg.sender] += amount\" */ checked_add_uint256(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:3589:3619  \"balances[msg.sender] += amount\" */ dataSlot_21), value_12))\n                        /// @src 40:3634:3663  \"Deposited(msg.sender, amount)\"\n                        let _77 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                        mstore(_77, value_12)\n                        /// @src 40:3634:3663  \"Deposited(msg.sender, amount)\"\n                        log2(_77, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _73, /** @src 40:3634:3663  \"Deposited(msg.sender, amount)\" */ 0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4, /** @src 40:3504:3514  \"msg.sender\" */ caller())\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        mstore(0, /** @src 40:3504:3514  \"msg.sender\" */ caller())\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        mstore(_73, /** @src 40:3589:3597  \"balances\" */ 0x06)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let _78 := sload(keccak256(0, 64))\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, _78)\n                        return(memPos_12, _73)\n                    }\n                    case 0xb7914a5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_3 := abi_decode_address_24670()\n                        let _79 := sub(shl(160, 1), 1)\n                        let value_13 := and(shr(16, sload(0)), _79)\n                        /// @src 40:2272:2367  \"if (owner != msg.sender) {...\"\n                        if /** @src 40:2276:2295  \"owner != msg.sender\" */ iszero(eq(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ value_13, /** @src 40:2285:2295  \"msg.sender\" */ caller()))\n                        /// @src 40:2272:2367  \"if (owner != msg.sender) {...\"\n                        {\n                            /// @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\"\n                            let _80 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                            /// @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\"\n                            mstore(_80, shl(224, 0x118cdaa7))\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            mstore(/** @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\" */ add(_80, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 4), /** @src 40:2285:2295  \"msg.sender\" */ caller())\n                            /// @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\"\n                            revert(_80, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 36)\n                        }\n                        sstore(/** @src 40:2918:2961  \"juryNFTSwap = JuryNFTSwap(_juryNFTSwapAddr)\" */ 0x03, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ or(and(sload(/** @src 40:2918:2961  \"juryNFTSwap = JuryNFTSwap(_juryNFTSwapAddr)\" */ 0x03), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(/** @src 40:2932:2961  \"JuryNFTSwap(_juryNFTSwapAddr)\" */ value0_3, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _79)))\n                        return(0, 0)\n                    }\n                    case 0xb93a89f7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let ret_1, ret_2, ret_3, ret_4, ret_5, ret_6 := fun_getDetails(calldataload(4))\n                        let memPos_13 := mload(64)\n                        mstore(memPos_13, and(ret_1, sub(shl(160, 1), 1)))\n                        mstore(add(memPos_13, 32), 192)\n                        let tail_2 := abi_encode_array_string_dyn(ret_2, add(memPos_13, 192))\n                        mstore(add(memPos_13, 64), sub(tail_2, memPos_13))\n                        let tail_3 := abi_encode_array_uint256_dyn(ret_3, tail_2)\n                        mstore(add(memPos_13, 96), sub(tail_3, memPos_13))\n                        let tail_4 := abi_encode_array_uint256_dyn(ret_4, tail_3)\n                        mstore(add(memPos_13, 128), ret_5)\n                        mstore(add(memPos_13, 160), ret_6)\n                        return(memPos_13, sub(tail_4, memPos_13))\n                    }\n                    case 0xbdd69096 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let offset_4 := calldataload(4)\n                        if gt(offset_4, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset_4, 35), calldatasize())) { revert(0, 0) }\n                        let _81 := calldataload(add(4, offset_4))\n                        let _82 := array_allocation_size_array_address_dyn(_81)\n                        let memPtr_14 := mload(64)\n                        finalize_allocation(memPtr_14, _82)\n                        let dst_1 := memPtr_14\n                        mstore(memPtr_14, _81)\n                        dst_1 := add(memPtr_14, 32)\n                        let srcEnd_1 := add(add(offset_4, shl(5, _81)), 36)\n                        if gt(srcEnd_1, calldatasize()) { revert(0, 0) }\n                        let src_1 := add(offset_4, 36)\n                        for { } lt(src_1, srcEnd_1) { src_1 := add(src_1, 32) }\n                        {\n                            let innerOffset := calldataload(src_1)\n                            if gt(innerOffset, 0xffffffffffffffff) { revert(0, 0) }\n                            let _83 := add(offset_4, innerOffset)\n                            if iszero(slt(add(_83, 67), calldatasize())) { revert(0, 0) }\n                            mstore(dst_1, abi_decode_available_length_bytes(add(_83, 68), calldataload(add(_83, 36)), calldatasize()))\n                            dst_1 := add(dst_1, 32)\n                        }\n                        if /** @src 40:4770:4792  \"optionDescs.length > 0\" */ iszero(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 40:4770:4788  \"optionDescs.length\" */ memPtr_14))\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        {\n                            let memPtr_15 := mload(64)\n                            mstore(memPtr_15, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            mstore(add(memPtr_15, 4), 32)\n                            mstore(add(memPtr_15, 36), 9)\n                            mstore(add(memPtr_15, 68), \"len error\")\n                            revert(memPtr_15, 100)\n                        }\n                        let oldLen_1 := sload(5)\n                        if iszero(lt(oldLen_1, 18446744073709551616))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        sstore(5, add(oldLen_1, 1))\n                        let slot_2, offset_5 := storage_array_index_access_struct_ProposalInfo__dyn_24681(oldLen_1)\n                        sstore(slot_2, or(and(sload(slot_2), shl(160, 0xffffffffffffffffffffffff)), /** @src 40:4948:4958  \"msg.sender\" */ caller()))\n                        /// @src 40:4974:4987  \"uint256 i = 0\"\n                        let var_i_3 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0\n                        /// @src 40:4969:5097  \"for (uint256 i = 0; i < optionDescs.length; i++) {...\"\n                        for { }\n                        /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 1\n                        /// @src 40:4974:4987  \"uint256 i = 0\"\n                        {\n                            /// @src 40:5013:5016  \"i++\"\n                            var_i_3 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ add(/** @src 40:5013:5016  \"i++\" */ var_i_3, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 1)\n                        }\n                        /// @src 40:5013:5016  \"i++\"\n                        {\n                            /// @src 40:4989:5011  \"i < optionDescs.length\"\n                            if iszero(lt(var_i_3, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 40:4993:5011  \"optionDescs.length\" */ memPtr_14)))\n                            /// @src 40:4989:5011  \"i < optionDescs.length\"\n                            { break }\n                            /// @src 40:5064:5078  \"optionDescs[i]\"\n                            let _mpos_1 := mload(memory_array_index_access_string_dyn(memPtr_14, var_i_3))\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            let memPtr_16 := mload(64)\n                            finalize_allocation_24688(memPtr_16)\n                            mstore(memPtr_16, _mpos_1)\n                            mstore(/** @src 40:5057:5085  \"Option(optionDescs[i], 0, 0)\" */ add(memPtr_16, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 32), 0)\n                            mstore(/** @src 40:5057:5085  \"Option(optionDescs[i], 0, 0)\" */ add(memPtr_16, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 64), 0)\n                            let oldLen_2 := sload(/** @src 40:5032:5051  \"newProposal.options\" */ add(slot_2, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 1))\n                            if iszero(lt(oldLen_2, 18446744073709551616))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 36)\n                            }\n                            sstore(/** @src 40:5032:5051  \"newProposal.options\" */ add(slot_2, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 1), add(oldLen_2, 1))\n                            let slot_3, offset_6 := storage_array_index_access_struct_Option__dyn(/** @src 40:5032:5051  \"newProposal.options\" */ add(slot_2, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 1), oldLen_2)\n                            if offset_6\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0)\n                                revert(0, 36)\n                            }\n                            let _84 := mload(memPtr_16)\n                            let newLen := mload(_84)\n                            if gt(newLen, 0xffffffffffffffff)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 36)\n                            }\n                            let _85 := extract_byte_array_length(sload(slot_3))\n                            if gt(_85, 0x1f)\n                            {\n                                mstore(0, slot_3)\n                                let data_2 := keccak256(0, 32)\n                                let deleteStart := add(data_2, shr(5, add(newLen, 0x1f)))\n                                if lt(newLen, 32) { deleteStart := data_2 }\n                                let start := deleteStart\n                                for { }\n                                lt(start, add(data_2, shr(5, add(_85, 0x1f))))\n                                { start := add(start, 1) }\n                                { sstore(start, 0) }\n                            }\n                            let srcOffset := 0\n                            srcOffset := 32\n                            switch gt(newLen, 0x1f)\n                            case 1 {\n                                mstore(0, slot_3)\n                                let dstPtr := keccak256(0, 32)\n                                let i_3 := 0\n                                for { } lt(i_3, and(newLen, not(31))) { i_3 := add(i_3, 32) }\n                                {\n                                    sstore(dstPtr, mload(add(_84, srcOffset)))\n                                    dstPtr := add(dstPtr, 1)\n                                    srcOffset := add(srcOffset, 32)\n                                }\n                                if lt(and(newLen, not(31)), newLen)\n                                {\n                                    let lastValue := mload(add(_84, srcOffset))\n                                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), /** @src 40:11096:11098  \"-1\" */ not(0)))))\n                                }\n                                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                                sstore(slot_3, add(shl(1, newLen), 1))\n                            }\n                            default {\n                                let value_14 := 0\n                                if newLen\n                                {\n                                    value_14 := mload(add(_84, srcOffset))\n                                }\n                                sstore(slot_3, or(and(value_14, not(shr(shl(3, newLen), /** @src 40:11096:11098  \"-1\" */ not(0)))), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ shl(1, newLen)))\n                            }\n                            sstore(add(slot_3, 1), mload(/** @src 40:5057:5085  \"Option(optionDescs[i], 0, 0)\" */ add(memPtr_16, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 32)))\n                            sstore(add(slot_3, 2), mload(/** @src 40:5057:5085  \"Option(optionDescs[i], 0, 0)\" */ add(memPtr_16, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 64)))\n                        }\n                        /// @src 40:5171:5191  \"proposalInfos.length\"\n                        let expr_11 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(5)\n                        let diff := add(expr_11, /** @src 40:11096:11098  \"-1\" */ not(0))\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        if gt(diff, expr_11)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        /// @src 40:5211:5247  \"Create(msg.sender, len, optionDescs)\"\n                        let _86 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                        mstore(_86, 32)\n                        /// @src 40:5211:5247  \"Create(msg.sender, len, optionDescs)\"\n                        log3(_86, sub(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ abi_encode_array_string_dyn(memPtr_14, add(_86, 32)), /** @src 40:5211:5247  \"Create(msg.sender, len, optionDescs)\" */ _86), 0x66a044198f8a0fc35ed879be5d27c3d6ca15787c13093f47e3ba8a94c78eb796, /** @src 40:4948:4958  \"msg.sender\" */ caller(), /** @src 40:5211:5247  \"Create(msg.sender, len, optionDescs)\" */ diff)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        return(0, 0)\n                    }\n                    case 0xbdd8e72e {\n                        if callvalue() { revert(0, 0) }\n                        let param_3, param_4, param_5 := abi_decode_uint256t_uint256t_uint256(calldatasize())\n                        mstore(0, param_3)\n                        mstore(0x20, /** @src 40:1904:1968  \"mapping(uint256 => mapping(uint256 => VoteInfo[])) public voting\" */ 8)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let dataSlot_22 := keccak256(0, 64)\n                        mstore(0, param_4)\n                        mstore(0x20, dataSlot_22)\n                        let dataSlot_23 := keccak256(0, 64)\n                        /// @src 40:1904:1968  \"mapping(uint256 => mapping(uint256 => VoteInfo[])) public voting\"\n                        if iszero(lt(param_5, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:1904:1968  \"mapping(uint256 => mapping(uint256 => VoteInfo[])) public voting\" */ dataSlot_23)))\n                        {\n                            revert(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0, 0)\n                        }\n                        /// @src 40:1904:1968  \"mapping(uint256 => mapping(uint256 => VoteInfo[])) public voting\"\n                        let slot_4, offset_7 := storage_array_index_access_struct_ProposalInfo__dyn(dataSlot_23, param_5)\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let cleaned_3 := and(sload(/** @src 40:1904:1968  \"mapping(uint256 => mapping(uint256 => VoteInfo[])) public voting\" */ slot_4), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1))\n                        let _87 := sload(/** @src 40:1904:1968  \"mapping(uint256 => mapping(uint256 => VoteInfo[])) public voting\" */ add(slot_4, 1))\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        let memPos_14 := mload(64)\n                        return(memPos_14, sub(abi_encode_address_uint256(memPos_14, cleaned_3, _87), memPos_14))\n                    }\n                    case 0xc0c53b8b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_4 := abi_decode_address_24670()\n                        let value1_1 := abi_decode_address()\n                        let value_15 := calldataload(68)\n                        let _88 := sub(shl(160, 1), 1)\n                        let _89 := and(value_15, _88)\n                        if iszero(eq(value_15, _89)) { revert(0, 0) }\n                        let _90 := sload(0)\n                        /// @src 9:3336:3370  \"isTopLevelCall && _initialized < 1\"\n                        let expr_12 := /** @src 9:3290:3304  \"!_initializing\" */ iszero(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ and(shr(8, _90), 0xff))\n                        /// @src 9:3336:3370  \"isTopLevelCall && _initialized < 1\"\n                        let expr_13 := expr_12\n                        if expr_12\n                        {\n                            expr_12 := /** @src 9:3354:3370  \"_initialized < 1\" */ lt(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ and(_90, 0xff), /** @src 9:3369:3370  \"1\" */ 0x01)\n                        }\n                        /// @src 9:3335:3432  \"(isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1)\"\n                        let expr_14 := expr_12\n                        if iszero(expr_12)\n                        {\n                            /// @src 9:3376:3431  \"!Address.isContract(address(this)) && _initialized == 1\"\n                            let expr_15 := /** @src 23:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 23:1702:1721  \"account.code.length\" */ extcodesize(/** @src 9:3404:3408  \"this\" */ address()))\n                            /// @src 9:3376:3431  \"!Address.isContract(address(this)) && _initialized == 1\"\n                            if expr_15\n                            {\n                                expr_15 := /** @src 9:3414:3431  \"_initialized == 1\" */ eq(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ and(_90, 0xff), /** @src 9:3430:3431  \"1\" */ 0x01)\n                            }\n                            /// @src 9:3335:3432  \"(isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1)\"\n                            expr_14 := expr_15\n                        }\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        if iszero(expr_14)\n                        {\n                            let memPtr_17 := mload(64)\n                            mstore(memPtr_17, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            mstore(add(memPtr_17, 4), 32)\n                            mstore(add(memPtr_17, 36), 46)\n                            mstore(add(memPtr_17, 68), \"Initializable: contract is alrea\")\n                            mstore(add(memPtr_17, 100), \"dy initialized\")\n                            revert(memPtr_17, 132)\n                        }\n                        sstore(0, or(and(_90, not(255)), /** @src 9:3529:3530  \"1\" */ 0x01))\n                        /// @src 9:3540:3605  \"if (isTopLevelCall) {...\"\n                        if expr_13\n                        {\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            sstore(0, or(and(_90, not(65535)), 257))\n                        }\n                        let _91 := shl(160, 0xffffffffffffffffffffffff)\n                        sstore(/** @src 40:2554:2587  \"mlnToken = MelonToken(_tokenAddr)\" */ 0x02, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ or(and(sload(/** @src 40:2554:2587  \"mlnToken = MelonToken(_tokenAddr)\" */ 0x02), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _91), and(/** @src 40:2565:2587  \"MelonToken(_tokenAddr)\" */ value0_4, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _88)))\n                        sstore(/** @src 40:2597:2640  \"juryNFTSwap = JuryNFTSwap(_juryNFTSwapAddr)\" */ 0x03, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ or(and(sload(/** @src 40:2597:2640  \"juryNFTSwap = JuryNFTSwap(_juryNFTSwapAddr)\" */ 0x03), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _91), and(/** @src 40:2611:2640  \"JuryNFTSwap(_juryNFTSwapAddr)\" */ value1_1, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _88)))\n                        sstore(4, or(and(sload(4), _91), _89))\n                        let _92 := sload(0)\n                        let _93 := and(shl(16, /** @src 40:2697:2707  \"msg.sender\" */ caller()), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sub(shl(176, 1), 65536))\n                        sstore(0, or(and(_92, not(sub(shl(176, 1), 65536))), _93))\n                        /// @src 9:3625:3724  \"if (isTopLevelCall) {...\"\n                        if expr_13\n                        {\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            sstore(0, or(and(_92, not(sub(shl(176, 1), 256))), _93))\n                            /// @src 9:3699:3713  \"Initialized(1)\"\n                            let _94 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                            mstore(_94, /** @src 9:3529:3530  \"1\" */ 0x01)\n                            /// @src 9:3699:3713  \"Initialized(1)\"\n                            log1(_94, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 32, /** @src 9:3699:3713  \"Initialized(1)\" */ 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498)\n                        }\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        return(0, 0)\n                    }\n                    case 0xfb3ee525 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_5 := abi_decode_address_24670()\n                        let _95 := sub(shl(160, 1), 1)\n                        let value_16 := and(shr(16, sload(0)), _95)\n                        /// @src 40:2272:2367  \"if (owner != msg.sender) {...\"\n                        if /** @src 40:2276:2295  \"owner != msg.sender\" */ iszero(eq(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ value_16, /** @src 40:2285:2295  \"msg.sender\" */ caller()))\n                        /// @src 40:2272:2367  \"if (owner != msg.sender) {...\"\n                        {\n                            /// @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\"\n                            let _96 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                            /// @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\"\n                            mstore(_96, shl(224, 0x118cdaa7))\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            mstore(/** @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\" */ add(_96, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 4), /** @src 40:2285:2295  \"msg.sender\" */ caller())\n                            /// @src 40:2318:2356  \"OwnableUnauthorizedAccount(msg.sender)\"\n                            revert(_96, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 36)\n                        }\n                        sstore(4, or(and(sload(4), shl(160, 0xffffffffffffffffffffffff)), and(/** @src 40:3055:3074  \"Pledge(_pledgeAddr)\" */ value0_5, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _95)))\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_24670() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation_24682(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_24688(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_decode_available_length_bytes(src, length, end) -> array\n            {\n                let _1 := array_allocation_size_bytes(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                array := memPtr\n                mstore(memPtr, length)\n                if gt(add(src, length), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                calldatacopy(add(memPtr, 0x20), src, length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n            function abi_decode_uint256t_uint256t_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n                value2 := calldataload(68)\n            }\n            function array_allocation_size_array_address_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function storage_array_index_access_struct_ProposalInfo__dyn_24681(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 40:6220:6233  \"proposalInfos\" */ 0x05)))\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 40:6220:6233  \"proposalInfos\" */ 0x05)\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                slot := add(1546678032441257452667456735582814959992782782816731922691272282333561699760, shl(1, index))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n            function storage_array_index_access_struct_ProposalInfo__dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ array)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0x20)\n                slot := add(data, shl(1, index))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_array_string_dyn(value, pos) -> end\n            {\n                let pos_1 := pos\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                let tail := add(add(pos_1, shl(5, length)), 0x20)\n                let srcPtr := add(value, 0x20)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail, pos_1), not(31)))\n                    tail := abi_encode_string(mload(srcPtr), tail)\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                end := tail\n            }\n            function abi_encode_array_uint256_dyn(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                let srcPtr := add(value, 0x20)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                end := pos\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                value0 := value\n            }\n            function require_helper_stringliteral_25ad(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 15)\n                    mstore(add(memPtr, 68), \"Transfer failed\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function require_helper_stringliteral_36e1(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 44)\n                    mstore(add(memPtr, 68), \"Function must be called through \")\n                    mstore(add(memPtr, 100), \"delegatecall\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_52f1(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 44)\n                    mstore(add(memPtr, 68), \"Function must be called through \")\n                    mstore(add(memPtr, 100), \"active proxy\")\n                    revert(memPtr, 132)\n                }\n            }\n            function read_from_storage_reference_type_struct_VoteInfo(slot) -> value\n            {\n                let memPtr := mload(64)\n                finalize_allocation_24682(memPtr)\n                value := memPtr\n                mstore(memPtr, and(sload(slot), sub(shl(160, 1), 1)))\n                mstore(add(memPtr, 32), sload(add(slot, 1)))\n            }\n            /// @ast-id 8055 @src 40:7108:7547  \"function getAvailableBalance(address user) public view returns (uint256) {...\"\n            function fun_getAvailableBalance(var_user) -> var\n            {\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let cleaned := and(sload(/** @src 40:7238:7244  \"pledge\" */ 0x04), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _1)\n                let _2 := 64\n                /// @src 40:7238:7261  \"pledge.pledgeLock(user)\"\n                let _3 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(_2)\n                /// @src 40:7238:7261  \"pledge.pledgeLock(user)\"\n                mstore(_3, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ shl(224, 0x8c5fe473))\n                let _4 := and(var_user, _1)\n                mstore(/** @src 40:7238:7261  \"pledge.pledgeLock(user)\" */ add(_3, /** @src 40:7238:7244  \"pledge\" */ 0x04), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _4)\n                /// @src 40:7238:7261  \"pledge.pledgeLock(user)\"\n                let _5 := 32\n                let _6 := staticcall(gas(), cleaned, _3, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 36, /** @src 40:7238:7261  \"pledge.pledgeLock(user)\" */ _3, _5)\n                if iszero(_6)\n                {\n                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                    let pos := mload(_2)\n                    returndatacopy(pos, /** @src 40:7208:7209  \"0\" */ 0x00, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 40:7238:7261  \"pledge.pledgeLock(user)\"\n                let expr := /** @src 40:7208:7209  \"0\" */ 0x00\n                /// @src 40:7238:7261  \"pledge.pledgeLock(user)\"\n                if _6\n                {\n                    let _7 := _5\n                    if gt(_5, returndatasize()) { _7 := returndatasize() }\n                    finalize_allocation(_3, _7)\n                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                    if slt(sub(/** @src 40:7238:7261  \"pledge.pledgeLock(user)\" */ add(_3, _7), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _3), /** @src 40:7238:7261  \"pledge.pledgeLock(user)\" */ _5)\n                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                    {\n                        revert(/** @src 40:7208:7209  \"0\" */ 0x00, 0x00)\n                    }\n                    /// @src 40:7238:7261  \"pledge.pledgeLock(user)\"\n                    expr := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(_3)\n                }\n                let cleaned_1 := and(sload(/** @src 40:7286:7297  \"juryNFTSwap\" */ 0x03), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _1)\n                /// @src 40:7286:7311  \"juryNFTSwap.nftLock(user)\"\n                let _8 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(_2)\n                /// @src 40:7286:7311  \"juryNFTSwap.nftLock(user)\"\n                mstore(_8, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ shl(226, 0x27d155b5))\n                mstore(/** @src 40:7286:7311  \"juryNFTSwap.nftLock(user)\" */ add(_8, /** @src 40:7238:7244  \"pledge\" */ 0x04), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _4)\n                /// @src 40:7286:7311  \"juryNFTSwap.nftLock(user)\"\n                let _9 := staticcall(gas(), cleaned_1, _8, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 36, /** @src 40:7286:7311  \"juryNFTSwap.nftLock(user)\" */ _8, /** @src 40:7238:7261  \"pledge.pledgeLock(user)\" */ _5)\n                /// @src 40:7286:7311  \"juryNFTSwap.nftLock(user)\"\n                if iszero(_9)\n                {\n                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                    let pos_1 := mload(_2)\n                    returndatacopy(pos_1, /** @src 40:7208:7209  \"0\" */ 0x00, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                /// @src 40:7286:7311  \"juryNFTSwap.nftLock(user)\"\n                let expr_1 := /** @src 40:7208:7209  \"0\" */ 0x00\n                /// @src 40:7286:7311  \"juryNFTSwap.nftLock(user)\"\n                if _9\n                {\n                    let _10 := /** @src 40:7238:7261  \"pledge.pledgeLock(user)\" */ _5\n                    /// @src 40:7286:7311  \"juryNFTSwap.nftLock(user)\"\n                    if gt(/** @src 40:7238:7261  \"pledge.pledgeLock(user)\" */ _5, /** @src 40:7286:7311  \"juryNFTSwap.nftLock(user)\" */ returndatasize()) { _10 := returndatasize() }\n                    finalize_allocation(_8, _10)\n                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                    if slt(sub(/** @src 40:7286:7311  \"juryNFTSwap.nftLock(user)\" */ add(_8, _10), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _8), /** @src 40:7238:7261  \"pledge.pledgeLock(user)\" */ _5)\n                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                    {\n                        revert(/** @src 40:7208:7209  \"0\" */ 0x00, 0x00)\n                    }\n                    /// @src 40:7286:7311  \"juryNFTSwap.nftLock(user)\"\n                    expr_1 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(_8)\n                }\n                mstore(/** @src 40:7208:7209  \"0\" */ 0x00, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _4)\n                mstore(/** @src 40:7238:7261  \"pledge.pledgeLock(user)\" */ _5, /** @src 40:7340:7350  \"votingLock\" */ 0x07)\n                /// @src 40:7428:7451  \"totalLock += pledgeLock\"\n                let _11 := checked_add_uint256(/** @src 40:7397:7418  \"totalLock += voteLock\" */ checked_add_uint256(/** @src 40:7367:7387  \"totalLock += nftLock\" */ expr_1, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(keccak256(/** @src 40:7208:7209  \"0\" */ 0x00, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _2))), /** @src 40:7428:7451  \"totalLock += pledgeLock\" */ expr)\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                mstore(/** @src 40:7208:7209  \"0\" */ 0x00, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _4)\n                mstore(/** @src 40:7238:7261  \"pledge.pledgeLock(user)\" */ _5, /** @src 40:7485:7493  \"balances\" */ 0x06)\n                /// @src 40:7509:7540  \"return totalBalance - totalLock\"\n                var := /** @src 40:7516:7540  \"totalBalance - totalLock\" */ checked_sub_uint256(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(keccak256(/** @src 40:7208:7209  \"0\" */ 0x00, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _2)), /** @src 40:7428:7451  \"totalLock += pledgeLock\" */ _11)\n            }\n            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n            function storage_array_index_access_struct_Option__dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ array)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0x20)\n                slot := add(data, mul(index, 3))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n            function abi_encode_array_address_dyn(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                let srcPtr := add(value, 0x20)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                end := pos\n            }\n            function allocate_and_zero_memory_array_array_uint256_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_address_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_address_dyn(length), not(31)))\n            }\n            function memory_array_index_access_string_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _1)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            /// @ast-id 7732 @src 40:3713:4692  \"function getDetails(...\"\n            function fun_getDetails(var_proposalId) -> var_founder, var_optionDescription_mpos, var_counts_mpos, var_voters_mpos, var_allVotesCast, var_allVoters\n            {\n                /// @src 40:3975:3995  \"uint256 allVotesCast\"\n                var_allVotesCast := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0\n                /// @src 40:4009:4026  \"uint256 allVoters\"\n                var_allVoters := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0\n                /// @src 40:4083:4108  \"proposalInfos[proposalId]\"\n                let _1, _2 := storage_array_index_access_struct_ProposalInfo__dyn_24681(var_proposalId)\n                /// @src 40:4141:4157  \"proposal.options\"\n                let _3 := 1\n                let _4 := add(_1, 1)\n                /// @src 40:4141:4164  \"proposal.options.length\"\n                let expr := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:4141:4164  \"proposal.options.length\" */ _4)\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                let _5 := array_allocation_size_array_address_dyn(expr)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _5)\n                mstore(memPtr, expr)\n                let _6 := add(array_allocation_size_array_address_dyn(expr), not(31))\n                let i := 0\n                for { } lt(i, _6) { i := add(i, 32) }\n                {\n                    mstore(add(add(memPtr, i), 32), 96)\n                }\n                /// @src 40:4175:4221  \"optionDescription = new string[](optionLength)\"\n                var_optionDescription_mpos := memPtr\n                /// @src 40:4231:4267  \"counts = new uint256[](optionLength)\"\n                var_counts_mpos := /** @src 40:4240:4267  \"new uint256[](optionLength)\" */ allocate_and_zero_memory_array_array_uint256_dyn(expr)\n                /// @src 40:4277:4313  \"voters = new uint256[](optionLength)\"\n                var_voters_mpos := /** @src 40:4286:4313  \"new uint256[](optionLength)\" */ allocate_and_zero_memory_array_array_uint256_dyn(expr)\n                /// @src 40:4323:4349  \"founder = proposal.founder\"\n                var_founder := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ and(sload(/** @src 40:4333:4349  \"proposal.founder\" */ _1), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sub(shl(160, 1), 1))\n                /// @src 40:4365:4378  \"uint256 i = 0\"\n                let var_i := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 0\n                /// @src 40:4360:4686  \"for (uint256 i = 0; i < optionLength; i++) {...\"\n                for { }\n                /** @src 40:4380:4396  \"i < optionLength\" */ lt(var_i, expr)\n                /// @src 40:4365:4378  \"uint256 i = 0\"\n                {\n                    /// @src 40:4398:4401  \"i++\"\n                    var_i := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ add(/** @src 40:4398:4401  \"i++\" */ var_i, /** @src 40:4141:4157  \"proposal.options\" */ _3)\n                }\n                /// @src 40:4398:4401  \"i++\"\n                {\n                    /// @src 40:4440:4459  \"proposal.options[i]\"\n                    let _7, _8 := storage_array_index_access_struct_Option__dyn(_4, var_i)\n                    /// @src 40:4417:4464  \"optionDescription[i] = proposal.options[i].desc\"\n                    mstore(memory_array_index_access_string_dyn(memPtr, var_i), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ copy_array_from_storage_to_memory_string(/** @src 40:4417:4464  \"optionDescription[i] = proposal.options[i].desc\" */ _7))\n                    pop(memory_array_index_access_string_dyn(memPtr, var_i))\n                    /// @src 40:4490:4509  \"proposal.options[i]\"\n                    let _9, _10 := storage_array_index_access_struct_Option__dyn(_4, var_i)\n                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                    mstore(/** @src 40:4478:4515  \"counts[i] = proposal.options[i].count\" */ memory_array_index_access_string_dyn(var_counts_mpos, var_i), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:4490:4515  \"proposal.options[i].count\" */ add(_9, /** @src 40:4141:4157  \"proposal.options\" */ _3)))\n                    /// @src 40:4541:4560  \"proposal.options[i]\"\n                    let _11, _12 := storage_array_index_access_struct_Option__dyn(_4, var_i)\n                    /// @src 40:4541:4567  \"proposal.options[i].voters\"\n                    let _13 := 2\n                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                    mstore(/** @src 40:4529:4567  \"voters[i] = proposal.options[i].voters\" */ memory_array_index_access_string_dyn(var_voters_mpos, var_i), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:4541:4567  \"proposal.options[i].voters\" */ add(_11, _13)))\n                    /// @src 40:4594:4613  \"proposal.options[i]\"\n                    let _14, _15 := storage_array_index_access_struct_Option__dyn(_4, var_i)\n                    /// @src 40:4581:4620  \"allVoters += proposal.options[i].voters\"\n                    var_allVoters := checked_add_uint256(var_allVoters, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:4594:4620  \"proposal.options[i].voters\" */ add(_14, /** @src 40:4541:4567  \"proposal.options[i].voters\" */ _13)))\n                    /// @src 40:4650:4669  \"proposal.options[i]\"\n                    let _16, _17 := storage_array_index_access_struct_Option__dyn(_4, var_i)\n                    /// @src 40:4634:4675  \"allVotesCast += proposal.options[i].count\"\n                    var_allVotesCast := checked_add_uint256(var_allVotesCast, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(/** @src 40:4650:4675  \"proposal.options[i].count\" */ add(_16, /** @src 40:4141:4157  \"proposal.options\" */ _3)))\n                }\n            }\n            /// @ast-id 8109 @src 40:7553:8000  \"function isSingleOptionProposal(...\"\n            function fun_isSingleOptionProposal(var_proposalId, var_winOptionId) -> var\n            {\n                /// @src 40:7722:7747  \"proposalInfos[proposalId]\"\n                let _1, _2 := storage_array_index_access_struct_ProposalInfo__dyn_24681(var_proposalId)\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                let _3 := 64\n                let memPtr := mload(64)\n                finalize_allocation_24682(memPtr)\n                mstore(memPtr, and(sload(_1), sub(shl(160, 1), 1)))\n                let _4 := 1\n                let _5 := add(_1, _4)\n                let length := sload(_5)\n                let _6 := array_allocation_size_array_address_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _6)\n                mstore(memPtr_1, length)\n                let mpos := memPtr_1\n                /// @src 40:7783:7803  \"proposalInfo.options\"\n                let _7 := 32\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                mpos := add(memPtr_1, /** @src 40:7783:7803  \"proposalInfo.options\" */ _7)\n                /// @src -1:-1:-1\n                let _8 := 0\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _5)\n                let spos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 40:7783:7803  \"proposalInfo.options\" */ _7)\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                for { } lt(i, length) { i := add(i, _4) }\n                {\n                    let memPtr_2 := mload(_3)\n                    finalize_allocation_24688(memPtr_2)\n                    mstore(memPtr_2, copy_array_from_storage_to_memory_string(spos))\n                    mstore(add(memPtr_2, /** @src 40:7783:7803  \"proposalInfo.options\" */ _7), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ sload(add(spos, _4)))\n                    mstore(add(memPtr_2, _3), sload(add(spos, 2)))\n                    mstore(mpos, memPtr_2)\n                    mpos := add(mpos, /** @src 40:7783:7803  \"proposalInfo.options\" */ _7)\n                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                    spos := add(spos, 3)\n                }\n                mstore(add(memPtr, /** @src 40:7783:7803  \"proposalInfo.options\" */ _7), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ memPtr_1)\n                /// @src 40:7818:7831  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 40:7813:7973  \"for (uint256 i = 0; i < options.length; i++) {...\"\n                for { }\n                /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _4\n                /// @src 40:7818:7831  \"uint256 i = 0\"\n                {\n                    /// @src 40:7853:7856  \"i++\"\n                    var_i := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ add(/** @src 40:7853:7856  \"i++\" */ var_i, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _4)\n                }\n                /// @src 40:7853:7856  \"i++\"\n                {\n                    /// @src 40:7833:7851  \"i < options.length\"\n                    if iszero(lt(var_i, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 40:7837:7851  \"options.length\" */ memPtr_1)))\n                    /// @src 40:7833:7851  \"i < options.length\"\n                    { break }\n                    /// @src 40:7876:7916  \"i != winOptionId && options[i].count > 0\"\n                    let expr := /** @src 40:7876:7892  \"i != winOptionId\" */ iszero(eq(var_i, var_winOptionId))\n                    /// @src 40:7876:7916  \"i != winOptionId && options[i].count > 0\"\n                    if expr\n                    {\n                        expr := /** @src 40:7896:7916  \"options[i].count > 0\" */ iszero(iszero(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 40:7896:7912  \"options[i].count\" */ add(/** @src 40:7896:7906  \"options[i]\" */ mload(memory_array_index_access_string_dyn(memPtr_1, var_i)), /** @src 40:7783:7803  \"proposalInfo.options\" */ _7))))\n                    }\n                    /// @src 40:7872:7963  \"if (i != winOptionId && options[i].count > 0) {...\"\n                    if expr\n                    {\n                        /// @src 40:7936:7948  \"return false\"\n                        var := /** @src -1:-1:-1 */ _8\n                        /// @src 40:7936:7948  \"return false\"\n                        leave\n                    }\n                }\n                /// @src 40:7982:7993  \"return true\"\n                var := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ _4\n            }\n            function checked_div_uint256(x, y) -> r\n            {\n                if iszero(y)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x12)\n                    revert(0, 0x24)\n                }\n                r := div(x, y)\n            }\n            /// @ast-id 250 @src 7:1406:1665  \"function _setImplementation(address newImplementation) private {...\"\n            function fun_setImplementation(var_newImplementation)\n            {\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                if /** @src 23:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 23:1702:1721  \"account.code.length\" */ extcodesize(var_newImplementation))\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                    /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 45)\n                    mstore(add(memPtr, 68), \"ERC1967: new implementation is n\")\n                    mstore(add(memPtr, 100), \"ot a contract\")\n                    revert(memPtr, 132)\n                }\n                /// @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                let _1 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                sstore(/** @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _1, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ or(and(sload(/** @src 7:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _1), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(var_newImplementation, sub(shl(160, 1), 1))))\n            }\n            /// @ast-id 3367 @src 23:7671:8299  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos, var_errorMessage_mpos) -> var_mpos\n            {\n                /// @src 23:7875:8293  \"if (success) {...\"\n                switch var_success\n                case 0 {\n                    /// @src 23:8976:9355  \"if (returndata.length > 0) {...\"\n                    switch /** @src 23:8980:9001  \"returndata.length > 0\" */ iszero(iszero(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 23:8980:8997  \"returndata.length\" */ var_returndata_mpos)))\n                    case /** @src 23:8976:9355  \"if (returndata.length > 0) {...\" */ 0 {\n                        /// @src 23:9324:9344  \"revert(errorMessage)\"\n                        let _1 := /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(64)\n                        /// @src 23:9324:9344  \"revert(errorMessage)\"\n                        mstore(_1, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        mstore(/** @src 23:9324:9344  \"revert(errorMessage)\" */ add(_1, 4), /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 32)\n                        /// @src 23:9324:9344  \"revert(errorMessage)\"\n                        revert(_1, sub(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ abi_encode_string(var_errorMessage_mpos, add(/** @src 23:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ 36)), /** @src 23:9324:9344  \"revert(errorMessage)\" */ _1))\n                    }\n                    default /// @src 23:8976:9355  \"if (returndata.length > 0) {...\"\n                    {\n                        /// @src 23:9152:9294  \"assembly {...\"\n                        revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                    }\n                }\n                default /// @src 23:7875:8293  \"if (success) {...\"\n                {\n                    /// @src 23:7902:8188  \"if (returndata.length == 0) {...\"\n                    if /** @src 23:7906:7928  \"returndata.length == 0\" */ iszero(/** @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\" */ mload(/** @src 23:7906:7923  \"returndata.length\" */ var_returndata_mpos))\n                    /// @src 23:7902:8188  \"if (returndata.length == 0) {...\"\n                    {\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        if /** @src 23:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 23:1702:1721  \"account.code.length\" */ extcodesize(var_target))\n                        /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, /** @src 7:689:755  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                            /// @src 40:323:11282  \"contract Proposal is Initializable, UUPSUpgradeable {...\"\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 29)\n                            mstore(add(memPtr, 68), \"Address: call to non-contract\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    /// @src 23:8201:8218  \"return returndata\"\n                    var_mpos := var_returndata_mpos\n                    leave\n                }\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122096787be5ba6d0782299ee77fe891655cef768ed4d8b6266305e3eda264a998e464736f6c63430008180033\"\n    }\n}\n","hash":"01000485cd0e9071f6de4f602347e635695ebe1772a0d6ab62237a011f309860","factoryDependencies":{}}}}}}